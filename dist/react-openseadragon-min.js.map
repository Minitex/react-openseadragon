{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///react-openseadragon-min.js","webpack:///webpack/bootstrap 1697f7a7f724a4c92ee4","webpack:///./src/react-openseadragon.js","webpack:///./src/react-openseadragon-controls.js","webpack:///./~/react/react.js","webpack:///./~/react/lib/React.js","webpack:///./~/process/browser.js","webpack:///./~/object-assign/index.js","webpack:///./~/react/lib/ReactChildren.js","webpack:///./~/react/lib/PooledClass.js","webpack:///./~/react/lib/reactProdInvariant.js","webpack:///./~/fbjs/lib/invariant.js","webpack:///./~/react/lib/ReactElement.js","webpack:///./~/react/lib/ReactCurrentOwner.js","webpack:///./~/fbjs/lib/warning.js","webpack:///./~/fbjs/lib/emptyFunction.js","webpack:///./~/react/lib/canDefineProperty.js","webpack:///./~/react/lib/ReactElementSymbol.js","webpack:///./~/react/lib/traverseAllChildren.js","webpack:///./~/react/lib/getIteratorFn.js","webpack:///./~/react/lib/KeyEscapeUtils.js","webpack:///./~/react/lib/ReactComponent.js","webpack:///./~/react/lib/ReactNoopUpdateQueue.js","webpack:///./~/fbjs/lib/emptyObject.js","webpack:///./~/react/lib/ReactPureComponent.js","webpack:///./~/react/lib/ReactClass.js","webpack:///./~/react/lib/ReactPropTypeLocationNames.js","webpack:///./~/react/lib/ReactDOMFactories.js","webpack:///./~/react/lib/ReactElementValidator.js","webpack:///./~/react/lib/ReactComponentTreeHook.js","webpack:///./~/react/lib/checkReactTypeSpec.js","webpack:///./~/react/lib/ReactPropTypesSecret.js","webpack:///./~/react/lib/ReactPropTypes.js","webpack:///./~/react/lib/ReactVersion.js","webpack:///./~/react/lib/onlyChild.js","webpack:///./~/react-active-item/lib/react-active-item.js","webpack:///./~/immutable/dist/immutable.js","webpack:///./src/react-openseadragon-nav.js","webpack:///./src/react-openseadragon-viewer.js","webpack:///./~/openseadragon/build/openseadragon/openseadragon.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","OpenSeadragonControls","undefined","_extends","assign","target","i","arguments","length","source","key","hasOwnProperty","_createClass","defineProperties","props","descriptor","protoProps","staticProps","_reactOpenseadragonControls","get","_react","_react2","_reactActiveItem","_reactActiveItem2","_reactOpenseadragonNav","_reactOpenseadragonNav2","_reactOpenseadragonViewer","_reactOpenseadragonViewer2","ReactOpenSeadragon","_React$Component","_this","getPrototypeOf","viewer","bind","page_handler","state","text","last_page","items","setState","page","_props$getActiveItem","getActiveItem","type","createElement","config","include_controls","className","Component","propTypes","PropTypes","array","isRequired","process","_assign","ReactChildren","ReactComponent","ReactPureComponent","ReactClass","ReactDOMFactories","ReactElement","ReactPropTypes","ReactVersion","onlyChild","warning","createFactory","cloneElement","env","NODE_ENV","ReactElementValidator","__spread","warned","apply","React","Children","map","forEach","count","toArray","only","PureComponent","isValidElement","createClass","createMixin","mixin","DOM","version","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","setTimeout","e","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","timeout","len","run","Item","noop","nextTick","args","Array","push","title","browser","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","name","cwd","chdir","dir","umask","toObject","val","shouldUseNative","test1","String","getOwnPropertyNames","test2","fromCharCode","order2","n","join","test3","split","letter","keys","propIsEnumerable","propertyIsEnumerable","from","symbols","to","s","getOwnPropertySymbols","escapeUserProvidedKey","replace","userProvidedKeyEscapeRegex","ForEachBookKeeping","forEachFunction","forEachContext","func","context","forEachSingleChild","bookKeeping","child","forEachChildren","children","forEachFunc","traverseContext","getPooled","traverseAllChildren","release","MapBookKeeping","mapResult","keyPrefix","mapFunction","mapContext","result","mapSingleChildIntoContext","childKey","mappedChild","isArray","mapIntoWithKeyPrefixInternal","emptyFunction","thatReturnsArgument","cloneAndReplaceKey","prefix","escapedPrefix","mapChildren","forEachSingleChildDummy","countChildren","PooledClass","twoArgumentPooler","fourArgumentPooler","destructor","addPoolingTo","_prodInvariant","invariant","oneArgumentPooler","copyFieldsFrom","Klass","instancePool","pop","a1","a2","threeArgumentPooler","a3","a4","fiveArgumentPooler","a5","standardReleaser","poolSize","DEFAULT_POOL_SIZE","DEFAULT_POOLER","CopyConstructor","pooler","NewKlass","reactProdInvariant","code","argCount","message","argIdx","encodeURIComponent","error","framesToPop","condition","format","a","b","d","f","validateFormat","argIndex","hasValidRef","getter","getOwnPropertyDescriptor","isReactWarning","ref","hasValidKey","defineKeyPropWarningGetter","displayName","warnAboutAccessingKey","specialPropKeyWarningShown","defineRefPropWarningGetter","warnAboutAccessingRef","specialPropRefWarningShown","ReactCurrentOwner","canDefineProperty","REACT_ELEMENT_TYPE","RESERVED_PROPS","__self","__source","owner","element","$$typeof","_owner","_store","validated","_self","_source","freeze","propName","childrenLength","childArray","defaultProps","current","oldElement","newKey","newElement","object","printWarning","_len","_key","console","x","indexOf","_len2","_key2","makeEmptyFunction","arg","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","Symbol","getComponentKey","component","index","KeyEscapeUtils","escape","toString","traverseAllChildrenImpl","nameSoFar","callback","SEPARATOR","nextName","subtreeCount","nextNamePrefix","SUBSEPARATOR","iteratorFn","getIteratorFn","step","iterator","entries","ii","next","done","mapsAsChildrenAddendum","mapsAsChildrenOwnerName","getName","didWarnAboutMaps","entry","addendum","_isReactElement","childrenString","maybeIterable","ITERATOR_SYMBOL","FAUX_ITERATOR_SYMBOL","escapeRegex","escaperLookup","=",":","escapedString","match","unescape","unescapeRegex","unescaperLookup","=0","=2","keySubstring","substring","updater","refs","emptyObject","ReactNoopUpdateQueue","isReactComponent","partialState","enqueueSetState","enqueueCallback","forceUpdate","enqueueForceUpdate","deprecatedAPIs","isMounted","replaceState","defineDeprecationWarning","methodName","info","fnName","warnNoop","publicInstance","callerName","enqueueReplaceState","completeState","ComponentDummy","isPureReactComponent","identity","fn","validateTypeDef","typeDef","location","ReactPropTypeLocationNames","validateMethodOverride","isAlreadyDefined","specPolicy","ReactClassInterface","ReactClassMixin","mixSpecIntoComponent","spec","proto","autoBindPairs","__reactAutoBindPairs","MIXINS_KEY","RESERVED_SPEC_KEYS","mixins","property","isReactClassMethod","isFunction","shouldAutoBind","autobind","createMergedResultFunction","createChainedFunction","typeofSpec","isMixinValid","mixStaticSpecIntoComponent","statics","isReserved","isInherited","mergeIntoWithNoDuplicateKeys","one","two","bindAutoBindMethod","method","boundMethod","__reactBoundContext","__reactBoundMethod","__reactBoundArguments","componentName","_bind","newThis","reboundMethod","bindAutoBindMethods","pairs","autoBindKey","injectedMixins","contextTypes","childContextTypes","getDefaultProps","getInitialState","getChildContext","render","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","componentDidUpdate","componentWillUnmount","updateComponent","newState","ReactClassComponent","initialState","_isMockFunction","isReactClassApproved","componentShouldUpdate","componentWillRecieveProps","injection","injectMixin","prop","childContext","createDOMFactory","abbr","address","area","article","aside","audio","base","bdi","bdo","big","blockquote","body","br","button","canvas","caption","cite","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","mark","menu","menuitem","meta","meter","nav","noscript","ol","optgroup","option","output","param","picture","pre","progress","q","rp","rt","ruby","samp","script","section","select","small","span","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","tr","track","u","ul","var","video","wbr","circle","clipPath","defs","ellipse","g","image","line","linearGradient","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","svg","tspan","getDeclarationErrorAddendum","getCurrentComponentErrorInfo","parentType","parentName","validateExplicitKey","memoizer","ownerHasKeyUseWarning","uniqueKey","currentComponentErrorInfo","childOwner","ReactComponentTreeHook","getCurrentStackAddendum","validateChildKeys","node","validatePropTypes","componentClass","checkReactTypeSpec","validType","validatedFactory","isNative","funcToString","Function","reIsNative","RegExp","test","err","purgeDeep","item","getItem","childIDs","removeItem","describeComponentFrame","ownerName","fileName","lineNumber","getDisplayName","describeID","getElement","ownerID","getOwnerID","setItem","getItemIDs","addRoot","removeRoot","getRootIDs","canUseCollections","Map","Set","itemMap","rootIDSet","set","add","itemByKey","rootByKey","getKeyFromID","getIDFromKey","parseInt","substr","unmountedIDs","onSetChildren","nextChildIDs","nextChildID","nextChild","parentID","onBeforeMountComponent","updateCount","onBeforeUpdateComponent","onMountComponent","isRoot","onUpdateComponent","onUnmountComponent","purgeUnmountedComponents","_preventPurging","topElement","currentOwner","_debugID","getStackAddendumByID","getParentID","getChildIDs","getSource","getText","getUpdateCount","getRegisteredIDs","typeSpecs","values","debugID","typeSpecName","ReactPropTypesSecret","ex","loggedTypeFailures","componentStackInfo","is","y","PropTypeError","stack","createChainableTypeChecker","validate","checkType","propFullName","secret","ANONYMOUS","cacheKey","manualPropTypeCallCache","locationName","chainedCheckType","createPrimitiveTypeChecker","expectedType","propValue","propType","getPropType","preciseType","getPreciseType","createAnyTypeChecker","createArrayOfTypeChecker","typeChecker","createElementTypeChecker","createInstanceTypeChecker","expectedClass","expectedClassName","actualClassName","getClassName","createEnumTypeChecker","expectedValues","valuesString","JSON","stringify","createObjectOfTypeChecker","createUnionTypeChecker","arrayOfTypeCheckers","checker","createNodeChecker","isNode","createShapeTypeChecker","shapeTypes","every","isSymbol","Date","bool","number","string","symbol","any","arrayOf","instanceOf","objectOf","oneOf","oneOfType","shape","activeItem","WrappedComponent","ActiveItem","_bindInit","setActiveItem","getActiveItemIndex","_hasFocus","_updateFocus","_immutableAssets","_unFocused","_handlers","preventDefault","toJS","find","findIndex","focus","list","status","update","_immutable2","fromJS","_immutable","global","ctor","Iterable","isIterable","Seq","KeyedIterable","isKeyed","KeyedSeq","IndexedIterable","isIndexed","IndexedSeq","SetIterable","isAssociative","SetSeq","IS_ITERABLE_SENTINEL","maybeKeyed","IS_KEYED_SENTINEL","maybeIndexed","IS_INDEXED_SENTINEL","maybeAssociative","isOrdered","maybeOrdered","IS_ORDERED_SENTINEL","MakeRef","SetRef","OwnerID","arrCopy","arr","offset","Math","max","newArr","ensureSize","iter","size","__iterate","returnTrue","wrapIndex","uint32Index","NaN","wholeSlice","begin","end","resolveBegin","resolveIndex","resolveEnd","defaultIndex","min","Iterator","iteratorValue","k","v","iteratorResult","iteratorDone","hasIterator","isIterator","maybeIterator","getIterator","iterable","REAL_ITERATOR_SYMBOL","isArrayLike","emptySequence","toSeq","seqFromValue","toKeyedSeq","fromEntrySeq","keyedSeqFromValue","entrySeq","toIndexedSeq","indexedSeqFromValue","toSetSeq","ArraySeq","_array","ObjectSeq","_object","_keys","IterableSeq","_iterable","IteratorSeq","_iterator","_iteratorCache","isSeq","maybeSeq","IS_SEQ_SENTINEL","EMPTY_SEQ","seq","maybeIndexedSeqFromValue","seqIterate","reverse","useKeys","cache","_cache","maxIndex","__iterateUncached","seqIterator","__iteratorUncached","json","converter","fromJSWith","","fromJSDefault","parentJSON","isPlainObj","toList","toMap","valueA","valueB","valueOf","equals","deepEqual","__hash","notAssociative","flipped","cacheResult","_","allEqual","bSize","has","NOT_SET","Repeat","times","_value","Infinity","EMPTY_REPEAT","Range","start","abs","_start","_end","_step","ceil","EMPTY_RANGE","Collection","KeyedCollection","IndexedCollection","SetCollection","smi","i32","hash","o","h","STRING_HASH_CACHE_MIN_STRLEN","cachedHashString","hashString","hashCode","hashJSObj","stringHashCache","STRING_HASH_CACHE_SIZE","STRING_HASH_CACHE_MAX_SIZE","charCodeAt","usingWeakMap","weakMap","UID_HASH_KEY","getIENodeHash","objHashUID","isExtensible","nodeType","uniqueID","documentElement","assertNotInfinite","emptyMap","isMap","withMutations","maybeMap","IS_MAP_SENTINEL","ArrayMapNode","BitmapIndexedNode","bitmap","nodes","HashArrayMapNode","HashCollisionNode","keyHash","ValueNode","MapIterator","_type","_reverse","_stack","_root","mapIteratorFrame","mapIteratorValue","prev","__prev","makeMap","MapPrototype","__ownerID","__altered","EMPTY_MAP","updateMap","newRoot","newSize","didChangeSize","CHANGE_LENGTH","didAlter","DID_ALTER","updateNode","shift","isLeafNode","mergeIntoNode","newNode","idx1","MASK","idx2","SHIFT","createNodes","packNodes","excluding","packedII","packedNodes","bit","expandNodes","including","expandedNodes","SIZE","mergeIntoMapWith","merger","iterables","iters","mergeIntoCollectionWith","deepMerger","existing","mergeDeep","deepMergerWith","mergeDeepWith","nextValue","collection","filter","mergeIntoMap","updateInDeepMap","keyPathIter","notSetValue","isNotSet","existingValue","newValue","nextExisting","nextUpdated","remove","popCount","setIn","idx","canEdit","newArray","spliceIn","newLen","after","spliceOut","List","empty","emptyList","isList","makeList","VNode","setSize","maybeList","IS_LIST_SENTINEL","iterateList","iterateNodeOrLeaf","level","iterateLeaf","iterateNode","tailPos","tail","left","right","DONE","_origin","_capacity","getTailOffset","_tail","_level","origin","capacity","ListPrototype","EMPTY_LIST","updateList","setListBounds","newTail","updateVNode","nodeHas","lowerNode","newLowerNode","editableVNode","slice","listNodeFor","rawIndex","oldOrigin","oldCapacity","newOrigin","newCapacity","clear","newLevel","offsetShift","oldTailOffset","newTailOffset","oldTail","removeAfter","removeBefore","beginIndex","mergeIntoListWith","maxSize","OrderedMap","emptyOrderedMap","isOrderedMap","maybeOrderedMap","makeOrderedMap","omap","_map","_list","EMPTY_ORDERED_MAP","updateOrderedMap","newMap","newList","flip","ToKeyedSequence","indexed","_iter","_useKeys","ToIndexedSequence","ToSetSequence","FromEntriesSequence","flipFactory","flipSequence","makeSequence","reversedSequence","includes","cacheResultThrough","this$0","ITERATE_ENTRIES","__iterator","ITERATE_VALUES","ITERATE_KEYS","mapFactory","mapper","mappedSequence","reverseFactory","filterFactory","predicate","filterSequence","iterations","countByFactory","grouper","groups","asMutable","asImmutable","groupByFactory","isKeyedIter","coerce","iterableClass","reify","sliceFactory","originalSize","resolvedBegin","resolvedEnd","sliceSize","resolvedSize","sliceSeq","skipped","isSkipping","takeWhileFactory","takeSequence","iterating","skipWhileFactory","skipSequence","skipping","concatFactory","isKeyedIterable","singleton","concatSeq","flatten","reduce","sum","flattenFactory","depth","flatSequence","flatDeep","currentDepth","stopped","flatMapFactory","interposeFactory","separator","interposedSequence","sortFactory","comparator","defaultComparator","sort","maxFactory","maxCompare","comp","zipWithFactory","keyIter","zipper","zipSequence","iterators","isDone","steps","some","validateEntry","resolveSize","forceIterator","keyPath","Record","defaultValues","hasInitialized","RecordType","setProps","RecordTypePrototype","_name","_defaultValues","RecordPrototype","makeRecord","likeRecord","record","recordName","names","setProp","emptySet","isSet","maybeSet","IS_SET_SENTINEL","updateSet","__empty","__make","makeSet","SetPrototype","EMPTY_SET","OrderedSet","emptyOrderedSet","isOrderedSet","maybeOrderedSet","makeOrderedSet","OrderedSetPrototype","EMPTY_ORDERED_SET","Stack","emptyStack","isStack","unshiftAll","maybeStack","IS_STACK_SENTINEL","makeStack","StackPrototype","_head","EMPTY_STACK","methods","keyCopier","keyMapper","entryMapper","not","neg","quoteString","defaultZipper","defaultNegComparator","hashIterable","ordered","keyed","hashMerge","murmurHashOfSize","imul","SLICE$0","Keyed","Indexed","DELETE","KEYS","VALUES","ENTRIES","inspect","toSource","of","__toString","searchValue","lastIndexOf","other","possibleIndex","floor","offsetValue","WeakMap","keyValues","updateIn","deleteIn","updatedValue","merge","mergeWith","mergeIn","mergeDeepIn","sortBy","mutable","wasAltered","__ensureOwner","iterate","removeIn","removed","exists","MAX_ARRAY_MAP_SIZE","isEditable","newEntries","keyHashFrag","MAX_BITMAP_INDEXED_SIZE","newBitmap","newNodes","newCount","MIN_HASH_ARRAY_MAP_SIZE","keyMatch","subNode","splice","insert","oldSize","unshift","originIndex","newChild","removingFirst","oldChild","editable","sizeIndex","valueSeq","indexedIterable","defaultVal","_empty","fromKeys","keySeq","union","intersect","originalSet","subtract","peek","pushAll","__toJS","toJSON","toOrderedMap","toOrderedSet","toSet","toStack","__toStringMapper","returnValue","findEntry","sideEffect","joined","isFirst","reducer","initialReduction","reduction","useFirst","reduceRight","reversed","butLast","isEmpty","countBy","entriesSequence","filterNot","found","findKey","findLast","findLastEntry","findLastKey","first","flatMap","searchKey","getIn","searchKeyPath","nested","groupBy","hasIn","isSubset","isSuperset","keyOf","last","lastKeyOf","maxBy","minBy","rest","skip","amount","skipLast","skipWhile","skipUntil","take","takeLast","takeWhile","takeUntil","IterablePrototype","chain","contains","mapEntries","mapKeys","KeyedIterablePrototype","removeNum","numArgs","spliced","findLastIndex","interpose","interleave","zipped","interleaved","zip","zipWith","Immutable","OpenSeadragonNav","active_index","active_class","handleChange","goToPage","_props","class_name","tocs","role","onClick","href","htmlFor","onChange","toc","_openseadragon","_reactOpenseadragonControls2","OpenSeadragonViewer","_config","window","OPENSEADRAGONVIEWER","OpenSeadragon","addHandler","default_config","controls","include_navigator","showNavigator","visibilityRatio","constrainDuringPan","defaultZoomLevel","minZoomLevel","maxZoomLevel","zoomInButton","zoomOutButton","homeButton","fullPageButton","nextButton","previousButton","__WEBPACK_AMD_DEFINE_RESULT__","options","Viewer","$","versionStr","major","minor","revision","class2type","[object Boolean]","[object Number]","[object String]","[object Function]","[object Array]","[object Date]","[object RegExp]","[object Object]","hasOwn","isWindow","isPlainObject","lastKey","isEmptyObject","freezeObject","supportsCanvas","canvasElement","document","getContext","isCanvasTainted","isTainted","getImageData","pixelDensityRatio","devicePixelRatio","backingStoreRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","getOffsetParent","isFixed","offsetParent","extend","src","copy","copyIsArray","clone","deep","isIOSDevice","navigator","userAgent","DEFAULT_SETTINGS","xmlPath","tileSources","tileHost","initialPage","crossOriginPolicy","ajaxWithCredentials","panHorizontal","panVertical","wrapHorizontal","wrapVertical","minPixelRatio","homeFillsViewer","clickTimeThreshold","clickDistThreshold","dblClickTimeThreshold","dblClickDistThreshold","springStiffness","animationTime","gestureSettingsMouse","scrollToZoom","clickToZoom","dblClickToZoom","pinchToZoom","flickEnabled","flickMinSpeed","flickMomentum","pinchRotate","gestureSettingsTouch","gestureSettingsPen","gestureSettingsUnknown","zoomPerClick","zoomPerScroll","zoomPerSecond","blendTime","alwaysBlend","autoHideControls","immediateRender","minZoomImageRatio","maxZoomPixelRatio","smoothTileEdgesMinZoom","iOSDevice","pixelsPerWheelLine","autoResize","preserveImageSizeOnResize","minScrollDeltaTime","showSequenceControl","sequenceControlAnchor","preserveViewport","preserveOverlays","navPrevNextWrap","showNavigationControl","navigationControlAnchor","showZoomControl","showHomeControl","showFullPageControl","showRotationControl","controlsFadeDelay","controlsFadeLength","mouseNavEnabled","navigatorId","navigatorPosition","navigatorSizeRatio","navigatorMaintainSizeRatio","navigatorTop","navigatorLeft","navigatorHeight","navigatorWidth","navigatorAutoResize","navigatorAutoFade","navigatorRotate","degrees","opacity","compositeOperation","placeholderFillStyle","showReferenceStrip","referenceStripScroll","referenceStripElement","referenceStripHeight","referenceStripWidth","referenceStripPosition","referenceStripSizeRatio","collectionRows","collectionColumns","collectionLayout","collectionMode","collectionTileSize","collectionTileMargin","imageLoaderLimit","maxImageCacheCount","useCanvas","prefixUrl","navImages","zoomIn","REST","GROUP","HOVER","DOWN","zoomOut","home","fullpage","rotateleft","rotateright","previous","debugMode","debugGridColor","SIGNAL","delegate","BROWSERS","UNKNOWN","IE","FIREFOX","SAFARI","CHROME","OPERA","getElementById","getElementPosition","Point","getElementStyle","position","offsetLeft","offsetTop","plus","getPageScroll","getElementOffset","docElement","win","doc","ownerDocument","boundingRect","top","getBoundingClientRect","defaultView","parentWindow","pageXOffset","scrollLeft","clientLeft","pageYOffset","scrollTop","clientTop","getElementSize","clientWidth","clientHeight","currentStyle","getComputedStyle","getCssPropertyWithVendorPrefix","memo","prefixes","suffix","capitalizeFirstLetter","charAt","toUpperCase","pointInElement","point","getEvent","event","getMousePosition","pageX","pageY","clientX","clientY","setPageScroll","scroll","scrollTo","originalScroll","currentScroll","getWindowSize","innerWidth","innerHeight","makeCenteredNode","wrappers","makeNeutralElement","display","height","width","verticalAlign","textAlign","appendChild","tagName","background","border","margin","padding","now","getTime","makeTransparentImage","Browser","vendor","onload","setElementOpacity","usesAlpha","ieOpacity","ieFilter","alpha","round","setElementTouchActionNone","touchAction","msTouchAction","addClass","searchElement","fromIndex","pivot","removeClass","oldClasses","newClasses","addEvent","addEventListener","eventName","handler","useCapture","attachEvent","removeEvent","removeEventListener","detachEvent","cancelEvent","cancel","stopEvent","stopPropagation","cancelBubble","createCallback","initialArgs","getUrlParameter","URLPARAMS","getUrlProtocol","url","protocol","toLowerCase","createAjaxRequest","local","supportActiveX","ActiveXObject","XMLHttpRequest","makeAjaxRequest","onSuccess","onError","withCredentials","success","request","onreadystatechange","readyState","log","open","send","msg","oldIE","XDomainRequest","xdr","responseText","statusText","onerror","e2","jsonp","getElementsByTagName","jsonpCallback","callbackName","callbackParam","response","async","scriptCharset","charset","isAbort","parentNode","removeChild","insertBefore","firstChild","createFromDZI","parseXml","DOMParser","parser","xmlDoc","parseFromString","loadXML","parseJSON","parse","eval","imageFormatSupported","extension","FILEFORMATS","bmp","jpeg","jpg","png","tif","wdp","regex","ver","appName","appVersion","ua","parseFloat","exec","$1","part","sep","query","search","parts","decodeURIComponent","nullfunction","debug","warn","assert","w","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","msRequestAnimationFrame","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","msCancelAnimationFrame","iIntervalId","aAnimQueue","processing","iRequestId","setInterval","temp","clearInterval","requestId","j","fullScreenApi","supportsFullScreen","isFullScreen","getFullScreenElement","requestFullScreen","exitFullScreen","cancelFullScreen","fullScreenEventName","fullScreenErrorEventName","exitFullscreen","fullscreenElement","requestFullscreen","msExitFullscreen","msFullscreenElement","msRequestFullscreen","webkitExitFullscreen","webkitFullscreenElement","webkitRequestFullscreen","webkitCancelFullScreen","webkitCurrentFullScreenElement","webkitRequestFullScreen","mozCancelFullScreen","mozFullScreenElement","mozRequestFullScreen","EventSource","events","addOnceHandler","userData","onceHandler","removeHandler","handlers","removeAllHandlers","eventType","getHandler","eventSource","raiseEvent","eventArgs","clearTrackedPointers","tracker","THIS","pointerListCount","activePointersLists","captureCount","MouseTracker","captureElement","mousemovecaptured","mouseupcaptured","unprefixedPointerEvents","pointermovecaptured","pointerupcaptured","touchmovecaptured","touchendcaptured","startTracking","tracking","subscribeEvents","stopTracking","getCaptureEventParams","pointerType","upName","upHandler","moveName","moveHandler","capturePointer","pointerCount","eventParams","pointsList","getActivePointersListByType","setCapture","havePointerEvents","isInIframe","canAccessEvents","releasePointer","releaseCapture","getPointerType","pointerTypeStr","getMouseAbsolute","getMouseRelative","getPointRelativeToAbsolute","minus","getCenterPoint","point1","point2","clickHandler","onDblClick","dblClickHandler","onKeyDown","propagate","keyDownHandler","keyCode","charCode","ctrl","ctrlKey","shiftKey","alt","altKey","metaKey","originalEvent","preventDefaultAction","onKeyUp","keyUpHandler","onKeyPress","keyHandler","onFocus","focusHandler","onBlur","blurHandler","onWheel","handleWheelEvent","onMouseWheel","simulatedEvent","srcElement","deltaMode","deltaX","deltaZ","wheelEventName","deltaY","wheelDelta","detail","nDelta","scrollHandler","isTouchEvent","isParentChild","parent","onMouseEnter","handleMouseEnter","onMouseOver","currentTarget","relatedTarget","gPoint","mousePointerId","isPrimary","currentPos","currentTime","updatePointersEnter","onMouseLeave","handleMouseExit","onMouseOut","updatePointersExit","getStandardizedButton","onMouseDown","updatePointersDown","pressHandler","dragHandler","dragEndHandler","onMouseUp","handleMouseUp","onMouseUpCaptured","updatePointersUp","onMouseMove","handleMouseMove","onMouseMoveCaptured","updatePointersMove","abortTouchContacts","gPointCount","getLength","abortGPoints","getByIndex","onTouchStart","parentGPoints","touchCount","changedTouches","gPoints","touches","identifier","MOUSETRACKERS","isTracking","onTouchEnd","handleTouchEnd","onTouchEndCaptured","onTouchMove","handleTouchMove","onTouchMoveCaptured","onTouchCancel","onGestureStart","onGestureChange","onPointerOver","pointerId","onPointerOut","onPointerDown","pinchHandler","onPointerUp","handlePointerUp","onPointerUpCaptured","getById","onPointerMove","handlePointerMove","onPointerMoveCaptured","onPointerCancel","updatePointersCancel","startTrackingPointer","speed","direction","contactPos","contactTime","lastPos","lastTime","stopTrackingPointer","listLength","primaryPoint","removeById","getPrimary","curGPoint","updateGPoint","insideElement","captured","insideElementPressed","enterHandler","buttons","pointers","getActivePointerCount","buttonDownAny","exitHandler","buttonChanged","nonPrimaryPressHandler","contacts","gesturePointVelocityTracker","addPoint","pinchGPoints","asArray","lastPinchDist","currentPinchDist","distanceTo","lastPinchCenter","currentPinchCenter","releasePoint","releaseTime","quick","wasCaptured","nonPrimaryReleaseHandler","removePoint","releaseHandler","insideElementReleased","clicks","lastClickPos","dblClickTimeOut","gPointArray","delta","stopHandler","stopTimeOut","handlePointerStop","stopDelay","gesturePoints","lastCenter","center","lastDistance","distance","originalMoveEvent","random","click","dblclick","keydown","keyup","keypress","blur","wheel","mousewheel","DOMMouseScroll","MozMousePixelScroll","mouseenter","mouseleave","mouseover","mouseout","mousedown","mouseup","mousemove","touchstart","touchend","touchmove","touchcancel","gesturestart","gesturechange","pointerover","MSPointerOver","pointerout","MSPointerOut","pointerdown","MSPointerDown","pointerup","MSPointerUp","pointermove","MSPointerMove","pointercancel","MSPointerCancel","startDisabled","setTracking","destroy","GesturePointList","trackerPoints","intervalId","_generateGuid","_doTracking","trackPoint","elapsedTime","atan2","guid","onmousewheel","supportsMouseCapture","divElement","PointerEvent","pointerEnabled","maxTouchPoints","haveMouseEnter","MSPointerEvent","msPointerEnabled","msMaxTouchPoints","_gPoints","gp","ControlAnchor","NONE","TOP_LEFT","TOP_RIGHT","BOTTOM_RIGHT","BOTTOM_LEFT","ABSOLUTE","Control","container","anchor","attachToViewer","autoFade","wrapper","isVisible","setVisible","visible","setOpacity","getControlIndex","dock","ControlDock","layout","layouts","onsubmit","bottom","topleft","topright","bottomright","bottomleft","addControl","controlOptions","paddingRight","paddingTop","paddingBottom","paddingLeft","removeControl","clearControls","areControlsEnabled","setControlsEnabled","enabled","Placement","CENTER","TOP","RIGHT","BOTTOM","LEFT","properties","0","isLeft","isHorizontallyCentered","isRight","isTop","isVerticallyCentered","isBottom","1","2","3","4","5","6","7","8","_getSafeElemSize","oElement","getTileSourceImplementation","tileSource","successCallback","failCallback","waitUntilReady","originalTileSource","ready","TileSource","getTileUrl","customTileSource","$TileSource","determineType","configure","getOverlayObject","overlay","Overlay","px","viewport","imageToViewportRectangle","Rect","py","placement","onDraw","checkResize","rotationMode","getOverlayIndex","overlays","scheduleUpdate","updateFunc","scheduleControlsFade","updateControlsFade","beginControlsAutoHide","controlsShouldFade","controlsFadeBeginTime","deltaTime","abortControlsAutoHide","onCanvasKeyDown","zoomBy","panBy","deltaPointsFromPixels","applyConstraints","onCanvasKeyPress","goHome","onCanvasClick","gestureSettings","haveKeyboardFocus","activeElement","gestureSettingsByDeviceType","pointFromPixel","onCanvasDblClick","onCanvasDrag","negate","onCanvasDragEnd","amplitudeX","cos","amplitudeY","sin","pixelFromPoint","getCenter","panTo","onCanvasEnter","onCanvasExit","onCanvasPress","onCanvasRelease","onCanvasNonPrimaryPress","onCanvasNonPrimaryRelease","onCanvasPinch","centerPt","lastCenterPt","panByPt","angle1","angle2","setRotation","getRotation","PI","onCanvasScroll","factor","thisScrollTime","deltaScrollTime","_lastScrollTime","pow","onContainerEnter","mouseInside","onContainerExit","animating","updateMulti","updateOnce","isOpen","_updateRequestId","_opening","containerSize","prevContainerSize","resizeRatio","zoom","getZoom","resize","zoomTo","oldBounds","getBounds","fitBoundsWithConstraints","forceRedraw","viewportChange","animated","world","referenceStrip","needsDraw","drawWorld","_drawOverlays","imageLoader","drawer","draw","resolveUrl","beginZoomingIn","lastZoomTime","zoomFactor","zooming","scheduleZoom","beginZoomingOut","endZooming","doZoom","adjustedFactor","doSingleZoomIn","doSingleZoomOut","lightUp","emulateEnter","emulateExit","onHome","onFullScreen","isFullPage","setFullPage","setFullScreen","onRotateLeft","currRotation","onRotateRight","onPrevious","_sequenceIndex","onNext","nextHash","overlaysContainer","previousBody","customControls","collectionViewport","collectionDrawer","profiler","fsBoundsDelta","group","fullPage","onfullscreenchange","_firstOpen","_loadQueue","currentOverlays","getString","_showMessage","overflow","tabIndex","bodyWidth","bodyHeight","bodyOverflow","docOverflow","innerTracker","outerTracker","toolbar","bindStandardControls","World","getItemAt","getItemCount","_setContentBounds","getHomeBounds","getContentFactor","Viewport","margins","viewportMargins","ImageLoader","jobLimit","tileCache","TileCache","Drawer","canRotate","rotateLeft","rotateRight","Navigator","sizeRatio","maintainSizeRatio","sequenceMode","bindSequenceControls","openDzi","dzi","openTileSource","close","ReferenceStrip","_updateSequenceButtons","failEvent","expected","successes","failures","checkCompletion","doOne","collectionImmediately","originalSuccess","addOverlay","originalError","addTiledImage","clearOverlays","innerHTML","removeAll","isMouseNavEnabled","setMouseNavEnabled","isVisibile","bodyStyle","docStyle","fullPageEventArgs","elementSize","pageScroll","elementMargin","elementPadding","bodyMargin","docMargin","bodyPadding","docPadding","docWidth","docHeight","prevElementParent","prevNextSibling","nextSibling","prevElementWidth","prevElementHeight","childNodes","restoreScrollCounter","restoreScroll","fullScreen","fullScreeEventArgs","fullPageStyleWidth","fullPageStyleHeight","onFullScreenChange","visibility","raiseAddItemFailed","myQueueItem","refreshWorld","theItem","arrange","immediately","rows","columns","tileSize","tileMargin","setAutoRefigureSizes","replaceItem","_hideMessage","queueItem","tiledImage","optionsClone","newIndex","getIndexOfItem","TiledImage","fitBounds","fitBoundsPlacement","clip","addItem","originalTiledImage","addSimpleImage","opts","addLayer","getLayerAtLevel","getLevelOfLayer","getLayersCount","setLayerLevel","setItemIndex","removeLayer","onFocusHandler","onBlurHandler","onNextHandler","onPreviousHandler","useGroup","Button","tooltip","srcRest","srcGroup","srcHover","srcDown","onRelease","disable","paging","ButtonGroup","pagingControl","beginZoomingInHandler","endZoomingHandler","doSingleZoomInHandler","beginZoomingOutHandler","doSingleZoomOutHandler","onHomeHandler","onFullScreenHandler","onRotateLeftHandler","onRotateRightHandler","rotateLeftButton","rotateRightButton","onPress","onEnter","onExit","navControl","currentPage","setFocus","drawHTML","updateOverlay","removeOverlay","getOverlayById","enable","createTextNode","messageDiv","_cancelPendingImages","_setTransformRotate","webkitTransform","mozTransform","msTransform","oTransform","transform","rotate","displayRegionContainer","displayRegion","viewerSize","navigatorSize","borderWidth","fudge","totalBorderWidths","fontSize","cssFloat","styleFloat","zIndex","cursor","_resizeWithViewer","oldViewerSize","elementArea","oldContainerSize","previousIndex","theirItem","myItem","_getMatchingItem","updateSize","newWidth","newHeight","bounds","sqrt","getBoundsNoRotate","pixelFromPointNoRotate","getTopLeft","getBottomRight","original","_originalForNavigator","_matchBounds","setPosition","setWidth","I18N","Errors","Dzc","Dzi","Xml","ImageFormat","Security","Status","OpenFailed","Tooltips","FullPage","Home","ZoomIn","ZoomOut","NextPage","PreviousPage","RotateLeft","RotateRight","capture","setString","divide","angle","processResponse","xhr","responseXML","tileOverlap","minLevel","maxLevel","aspectRatio","dimensions","_tileWidth","_tileHeight","getImageInfo","tileWidth","tileHeight","getTileSize","getTileWidth","getTileHeight","getLevelScale","levelScaleCache","getNumTiles","scale","getPixelRatio","imageSizeScaled","rx","ry","getClosestLevel","tilesPerSide","tiles","getTileAtPoint","pixel","tx","ty","getTileBounds","dimensionsScaled","sx","sy","readySource","urlParts","filename","lastDot","exc","formattedExc","supports","tileExists","numTiles","configureFromXML","dispRectNodes","dispRectNode","rectNode","sizeNode","rootName","localName","ns","namespaceURI","configuration","displayRects","getElementsByTagNameNS","Image","xmlns","Url","getAttribute","Format","DisplayRect","Overlap","TileSize","Size","Height","Width","X","Y","MinLevel","MaxLevel","configureFromObject","messageNode","nodeValue","rectData","imageData","tilesUrl","fileFormat","sizeData","dispRectData","DziTileSource","_levelRects","queryParams","xMin","yMin","xMax","yMax","rects","canBeTiled","profile","level0Profiles","isLevel0","constructLevels","levels","sizes","configureFromXml10","parseXML10","trim","Number","nodeName","IIIFTileSource","tileSizePerScaleFactor","tile_width","tile_height","scale_factors","scaleFactors","t","sf","scaleFactor","shortDim","tileOptions","smallerTiles","emulateLegacyImagePyramid","levelScale","iiifTileSizeWidth","iiifTileSizeHeight","iiifRegion","iiifTileX","iiifTileY","iiifTileW","iiifTileH","iiifSize","iiifQuality","uri","IIIF_ROTATION","levelWidth","levelHeight","OsmTileSource","TmsTileSource","bufferedWidth","bufferedHeight","yTiles","filterFiles","files","file","filtered","mimetype","conf","LegacyTileSource","dataUrl","ImageTileSource","buildPyramid","_image","crossOrigin","useCredentials","naturalWidth","naturalHeight","_buildLevels","getContext2D","context2D","currentWidth","currentHeight","bigCanvas","bigContext","drawImage","smallCanvas","smallContext","TileSourceCollection","scheduleFade","updateFade","shouldFade","fadeBeginTime","fadeLength","imgGroup","beginFading","fadeDelay","stopFading","inTo","disabled","ButtonState","currentState","imgHover","imgDown","outTo","imgRest","notifyGroupEnter","notifyGroupExit","labelText","newTopLeft","getTopRight","getBottomLeft","fromSummits","topLeft","topRight","bottomLeft","diff","radians","atan","getAspectRatio","getSize","translate","thisBoundingBox","getBoundingBox","otherBoundingBox","intersection","getIntersection","abVector","cdVector","denom","EPSILON","intersectionPoints","thisTopLeft","containsPoint","thisTopRight","thisBottomLeft","thisBottomRight","rectTopLeft","rectTopRight","rectBottomLeft","rectBottomRight","thisSegments","_getSegments","rectSegments","thisSegment","rectSegment","minX","maxX","minY","maxY","bottomRight","newTopRight","getIntegerBoundingBox","boundingBox","epsilon","topDiff","leftDiff","onStripDrag","marginLeft","marginTop","scrollWidth","scrollHeight","dragging","loadPanels","onStripScroll","strip","panelSize","activePanelsStart","activePanelsEnd","miniViewer","panelWidth","panelHeight","panels","activePanel","float","onStripEnter","marginBottom","onStripExit","marginRight","currentSelected","stiffness","exp","Spring","initial","exponential","_exponential","_logValue","resetTo","springTo","shiftBy","setExponential","startValue","targetValue","currentValue","isAtTargetValue","ImageJob","jobId","completeJob","loader","job","nextJob","jobsInProgress","jobQueue","errorMsg","finish","onabort","successful","addJob","complete","jobOptions","abort","newJob","Tile","loading","imgElement","blendStart","beingDrawn","lastTouchTime","_hasTransparencyChannel","cacheImageRecord","getImage","cloneNode","msInterpolationMode","drawCanvas","drawingHandler","rendered","getRenderedContext","save","globalAlpha","clearRect","tile","restore","getScaleForEdgeSmoothing","getTranslationForEdgeSmoothing","canvasSize","sketchCanvasSize","unload","OverlayPlacement","OverlayRotationMode","NO_ROTATION","EXACT","BOUNDING_BOX","_init","scales","adjust","transformOriginProp","transformProp","positionAndSize","_getOverlayPositionAndSize","_getTransformOrigin","_getSizeInPixels","_getBoundingBox","scaledSize","deltaPixelsFromPointsNoRotate","eltSize","refPoint","_getPlacementPoint","deltaPointsFromPixelsNoRotate","_adjustBoundsForRotation","viewerElementToViewportRectangle","sketchCanvas","sketchContext","viewportSize","_calculateCanvasSize","getOpacity","maxOpacity","needsUpdate","numTilesLoaded","reset","resetItems","_calculateSketchCanvasSize","_clear","useSketch","_getContext","viewportToDrawerRectangle","rectangle","drawTile","resizeSketchCanvas","saveContext","restoreContext","setClip","beginPath","drawRectangle","fillStyle","fillRect","blendSketch","globalCompositeOperation","widthExt","heightExt","widthDiff","heightDiff","drawDebugInfo","lineWidth","font","strokeStyle","_offsetForRotation","strokeRect","tileCenterX","tileCenterY","fillText","_restoreRotationChanges","debugRect","getCanvasSize","sketch","cx","cy","getContainerSize","contentSize","_margins","zoomPoint","_updateContainerInnerSize","centerSpringX","centerSpringY","zoomSpring","_oldCenterX","_oldCenterY","_oldZoom","resetContentSize","setHomeBounds","contentFactor","_contentBoundsNoRotate","_contentSizeNoRotate","_contentBounds","_contentSize","_contentAspectRatio","homeBounds","contentBounds","getHomeZoom","aspectFactor","getHomeBoundsNoRotate","getMinZoom","homeZoom","getMaxZoom","_containerInnerSize","getMargins","setMargins","getBoundsWithMargins","getBoundsNoRotateWithMargins","oldZoomPixel","newZoomPixel","deltaZoomPixels","deltaZoomPoints","centerCurrent","centerTarget","_pixelFromPoint","_applyZoomConstraints","_applyBoundaryConstraints","newBounds","horizontalThreshold","boundsRight","contentRight","leftDx","rightDx","verticalThreshold","boundsBottom","contentBottom","topDy","bottomDy","actualZoom","constrainedZoom","constrainedBounds","ensureVisible","_fitBounds","constraints","aspect","newZoom","newBoundsAspectRatio","newConstrainedZoom","oldZoom","referencePoint","fitVertically","box","fitHorizontally","isNaN","newContainerSize","maintain","widthDeltaFactor","changed","deltaPoints","deltaPixelsFromPoints","deltaPixels","_pixelFromPointNoRotate","pointFromPixelNoRotate","_viewportToImageDelta","viewerX","viewerY","viewportToImageCoordinates","_imageToViewportDelta","imageX","imageY","imageToViewportCoordinates","pixelWidth","pixelHeight","coordA","coordB","viewportToImageRectangle","pointWidth","pointHeight","viewerElementToImageCoordinates","imageToViewerElementCoordinates","windowToImageCoordinates","viewerCoordinates","imageToWindowCoordinates","viewerElementToViewportCoordinates","viewportToViewerElementCoordinates","viewportToViewerElementRectangle","windowToViewportCoordinates","viewportToWindowCoordinates","viewportToImageZoom","viewportZoom","imageWidth","containerWidth","viewportToImageZoomRatio","imageToViewportZoom","imageZoom","updateViewport","_needsDraw","renderPixelRatioC","renderPixelRatioT","zeroRatioT","optimalRatio","levelOpacity","levelVisibility","best","haveDrawn","viewportBounds","zeroRatioC","_scaleSpring","lowestLevel","highestLevel","lastDrawn","tiledImageBounds","getClippedBounds","_xSpring","_ySpring","viewportTL","viewportBR","_worldWidthCurrent","_worldHeightCurrent","drawLevel","updateLevel","providesCoverage","coverage","drawTiles","loadTile","tileTL","tileBR","numberOfTiles","viewportCenter","havedrawn","currenttime","resetCoverage","updateTile","getTile","tilesMatrix","setCoverage","isCovered","positionTile","setTileLoaded","imageRecord","_tileCache","getImageRecord","blendTile","compareTiles","worldWidth","worldHeight","xMod","yMod","_imageLoader","onTileLoad","lastResetTime","cutoff","_midDraw","getCompletionCallback","increment","completionCallback","cacheTile","overlap","boundsTL","boundsSize","positionC","positionT","sizeC","sizeT","tileCenter","tileDistance","blendTimeMillis","_hasOpaqueTile","cols","covers","previousBest","sketchScale","sketchTranslate","_isBottomItem","_drawer","usedClip","_clip","clipRect","placeholderRect","_drawingHandler","offsetForRotation","normHeight","contentAspectX","_updateForScale","clearTilesFor","oldX","oldY","oldScale","_worldWidthTarget","_worldHeightTarget","getWorldBounds","ratio","getContentSize","sameTarget","_raiseBoundsChange","_setScale","setHeight","anchorProperties","xOffset","yOffset","displayedWidthRatio","displayedHeightRatio","getClip","newClip","getCompositeOperation","setCompositeOperation","TileRecord","ImageRecord","_tiles","_renderedContext","setRenderedContext","renderedContext","addTile","removeTile","getTileCount","_maxImageCacheCount","_tilesLoaded","_imagesLoaded","_imagesLoadedCount","insertionIndex","prevTile","worstTime","worstLevel","prevTime","prevLevel","prevTileRecord","worstTile","worstTileIndex","worstTileRecord","_unloadTile","tileRecord","_items","_autoRefigureSizes","_needsSizesFigured","_delegatedFigureSizes","_figureSizes","oldIndex","_raiseRemoveItem","removedItems","_homeBounds","_contentFactor","wrap","oldHomeBounds","oldContentSize","oldContentFactor","clippedBounds"],"mappings":"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","file":"react-openseadragon-min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"react-openseadragon\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"react-openseadragon\"] = factory();\n\telse\n\t\troot[\"react-openseadragon\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"react-openseadragon\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"react-openseadragon\"] = factory();\n\telse\n\t\troot[\"react-openseadragon\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.OpenSeadragonControls = undefined;\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _reactOpenseadragonControls = __webpack_require__(1);\n\t\n\tObject.defineProperty(exports, 'OpenSeadragonControls', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _reactOpenseadragonControls.OpenSeadragonControls;\n\t  }\n\t});\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactActiveItem = __webpack_require__(33);\n\t\n\tvar _reactActiveItem2 = _interopRequireDefault(_reactActiveItem);\n\t\n\tvar _reactOpenseadragonNav = __webpack_require__(35);\n\t\n\tvar _reactOpenseadragonNav2 = _interopRequireDefault(_reactOpenseadragonNav);\n\t\n\tvar _reactOpenseadragonViewer = __webpack_require__(36);\n\t\n\tvar _reactOpenseadragonViewer2 = _interopRequireDefault(_reactOpenseadragonViewer);\n\t\n\t__webpack_require__(38);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar ReactOpenSeadragon = function (_React$Component) {\n\t  _inherits(ReactOpenSeadragon, _React$Component);\n\t\n\t  function ReactOpenSeadragon(props) {\n\t    _classCallCheck(this, ReactOpenSeadragon);\n\t\n\t    var _this = _possibleConstructorReturn(this, (ReactOpenSeadragon.__proto__ || Object.getPrototypeOf(ReactOpenSeadragon)).call(this, props));\n\t\n\t    _this.viewer = _this.viewer.bind(_this);\n\t    _this.page_handler = _this.page_handler.bind(_this);\n\t    _this.state = { text: _this.text(0), viewer: {}, last_page: 0 };\n\t    return _this;\n\t  }\n\t\n\t  _createClass(ReactOpenSeadragon, [{\n\t    key: 'text',\n\t    value: function text(i) {\n\t      return this.props.items[1]['texts'][i];\n\t    }\n\t  }, {\n\t    key: 'page_handler',\n\t    value: function page_handler(p, viewer) {\n\t      this.setState({ last_page: p.page });\n\t      this.setState({ text: this.text(p.page) });\n\t      this.setState({ viewer: viewer });\n\t    }\n\t  }, {\n\t    key: 'viewer',\n\t    value: function viewer() {\n\t      var _props$getActiveItem = this.props.getActiveItem(),\n\t          type = _props$getActiveItem.type,\n\t          text = _props$getActiveItem.text;\n\t\n\t      switch (type) {\n\t        case 'image':\n\t          return _react2.default.createElement(_reactOpenseadragonViewer2.default, { last_page: this.state.last_page, page_handler: this.page_handler, config: this.props.getActiveItem() });\n\t          break;\n\t        case 'transcript':\n\t          return _react2.default.createElement(\n\t            'div',\n\t            null,\n\t            this.state.text\n\t          );\n\t          break;\n\t        default:\n\t          return _react2.default.createElement(\n\t            'div',\n\t            null,\n\t            'No Viewer Avaialable for type: \"',\n\t            type,\n\t            '\"'\n\t          );\n\t      }\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var include_controls = this.props.include_controls;\n\t\n\t      if (this.state != null) {\n\t        var viewer = this.state.viewer;\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          null,\n\t          _react2.default.createElement(\n\t            'div',\n\t            { className: 'row' },\n\t            _react2.default.createElement(_reactOpenseadragonNav2.default, _extends({ viewer: this.state.viewer }, this.props))\n\t          ),\n\t          _react2.default.createElement(\n\t            'div',\n\t            { className: 'row' },\n\t            this.viewer()\n\t          )\n\t        );\n\t      } else {\n\t        return _react2.default.createElement(\n\t          'div',\n\t          null,\n\t          _react2.default.createElement(\n\t            'div',\n\t            { className: 'row' },\n\t            _react2.default.createElement(_reactOpenseadragonNav2.default, _extends({ viewer: this.state.viewer }, this.props))\n\t          ),\n\t          _react2.default.createElement(\n\t            'div',\n\t            { className: 'row' },\n\t            this.viewer()\n\t          )\n\t        );\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return ReactOpenSeadragon;\n\t}(_react2.default.Component);\n\t\n\tvar propTypes = {\n\t  items: _react2.default.PropTypes.array.isRequired\n\t};\n\t\n\tReactOpenSeadragon.propTypes = propTypes;\n\t\n\texports.default = (0, _reactActiveItem2.default)(ReactOpenSeadragon);\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar OpenSeadragonControls = function OpenSeadragonControls(props) {\n\t  return _react2.default.createElement(\n\t    \"ul\",\n\t    { className: \"osd-toolbar\" },\n\t    _react2.default.createElement(\n\t      \"li\",\n\t      null,\n\t      _react2.default.createElement(\n\t        \"a\",\n\t        { id: \"zoom-in\" },\n\t        _react2.default.createElement(\"i\", { className: \"glyphicon glyphicon-zoom-in\" })\n\t      )\n\t    ),\n\t    _react2.default.createElement(\n\t      \"li\",\n\t      null,\n\t      _react2.default.createElement(\n\t        \"a\",\n\t        { id: \"zoom-out\" },\n\t        _react2.default.createElement(\"i\", { className: \"glyphicon glyphicon-zoom-out\" })\n\t      )\n\t    ),\n\t    _react2.default.createElement(\n\t      \"li\",\n\t      null,\n\t      _react2.default.createElement(\n\t        \"a\",\n\t        { id: \"reset\" },\n\t        _react2.default.createElement(\"i\", { className: \"glyphicon glyphicon-home\" })\n\t      )\n\t    ),\n\t    _react2.default.createElement(\n\t      \"li\",\n\t      null,\n\t      _react2.default.createElement(\n\t        \"a\",\n\t        { id: \"full-page\" },\n\t        _react2.default.createElement(\"i\", { className: \"glyphicon glyphicon-resize-full\" })\n\t      )\n\t    ),\n\t    _react2.default.createElement(\n\t      \"li\",\n\t      null,\n\t      _react2.default.createElement(\n\t        \"a\",\n\t        { id: \"previous\" },\n\t        _react2.default.createElement(\"i\", { className: \"glyphicon glyphicon-arrow-left\" })\n\t      )\n\t    ),\n\t    _react2.default.createElement(\n\t      \"li\",\n\t      null,\n\t      _react2.default.createElement(\n\t        \"a\",\n\t        { id: \"next\" },\n\t        _react2.default.createElement(\"i\", { className: \"glyphicon glyphicon-arrow-right\" })\n\t      )\n\t    )\n\t  );\n\t};\n\t\n\texports.default = OpenSeadragonControls;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports = __webpack_require__(3);\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(5);\n\t\n\tvar ReactChildren = __webpack_require__(6);\n\tvar ReactComponent = __webpack_require__(19);\n\tvar ReactPureComponent = __webpack_require__(22);\n\tvar ReactClass = __webpack_require__(23);\n\tvar ReactDOMFactories = __webpack_require__(25);\n\tvar ReactElement = __webpack_require__(10);\n\tvar ReactPropTypes = __webpack_require__(30);\n\tvar ReactVersion = __webpack_require__(31);\n\t\n\tvar onlyChild = __webpack_require__(32);\n\tvar warning = __webpack_require__(12);\n\t\n\tvar createElement = ReactElement.createElement;\n\tvar createFactory = ReactElement.createFactory;\n\tvar cloneElement = ReactElement.cloneElement;\n\t\n\tif (process.env.NODE_ENV !== 'production') {\n\t  var ReactElementValidator = __webpack_require__(26);\n\t  createElement = ReactElementValidator.createElement;\n\t  createFactory = ReactElementValidator.createFactory;\n\t  cloneElement = ReactElementValidator.cloneElement;\n\t}\n\t\n\tvar __spread = _assign;\n\t\n\tif (process.env.NODE_ENV !== 'production') {\n\t  var warned = false;\n\t  __spread = function () {\n\t    process.env.NODE_ENV !== 'production' ? warning(warned, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.') : void 0;\n\t    warned = true;\n\t    return _assign.apply(null, arguments);\n\t  };\n\t}\n\t\n\tvar React = {\n\t\n\t  // Modern\n\t\n\t  Children: {\n\t    map: ReactChildren.map,\n\t    forEach: ReactChildren.forEach,\n\t    count: ReactChildren.count,\n\t    toArray: ReactChildren.toArray,\n\t    only: onlyChild\n\t  },\n\t\n\t  Component: ReactComponent,\n\t  PureComponent: ReactPureComponent,\n\t\n\t  createElement: createElement,\n\t  cloneElement: cloneElement,\n\t  isValidElement: ReactElement.isValidElement,\n\t\n\t  // Classic\n\t\n\t  PropTypes: ReactPropTypes,\n\t  createClass: ReactClass.createClass,\n\t  createFactory: createFactory,\n\t  createMixin: function (mixin) {\n\t    // Currently a noop. Will be used to validate and trace mixins.\n\t    return mixin;\n\t  },\n\t\n\t  // This looks DOM specific but these are actually isomorphic helpers\n\t  // since they are just generating DOM strings.\n\t  DOM: ReactDOMFactories,\n\t\n\t  version: ReactVersion,\n\t\n\t  // Deprecated hook for JSX spread, don't use this for anything.\n\t  __spread: __spread\n\t};\n\t\n\tmodule.exports = React;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\tfunction defaultSetTimout() {\n\t    throw new Error('setTimeout has not been defined');\n\t}\n\tfunction defaultClearTimeout () {\n\t    throw new Error('clearTimeout has not been defined');\n\t}\n\t(function () {\n\t    try {\n\t        if (typeof setTimeout === 'function') {\n\t            cachedSetTimeout = setTimeout;\n\t        } else {\n\t            cachedSetTimeout = defaultSetTimout;\n\t        }\n\t    } catch (e) {\n\t        cachedSetTimeout = defaultSetTimout;\n\t    }\n\t    try {\n\t        if (typeof clearTimeout === 'function') {\n\t            cachedClearTimeout = clearTimeout;\n\t        } else {\n\t            cachedClearTimeout = defaultClearTimeout;\n\t        }\n\t    } catch (e) {\n\t        cachedClearTimeout = defaultClearTimeout;\n\t    }\n\t} ())\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        //normal enviroments in sane situations\n\t        return setTimeout(fun, 0);\n\t    }\n\t    // if setTimeout wasn't available but was latter defined\n\t    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n\t        cachedSetTimeout = setTimeout;\n\t        return setTimeout(fun, 0);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedSetTimeout(fun, 0);\n\t    } catch(e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t            return cachedSetTimeout.call(null, fun, 0);\n\t        } catch(e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t            return cachedSetTimeout.call(this, fun, 0);\n\t        }\n\t    }\n\t\n\t\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        //normal enviroments in sane situations\n\t        return clearTimeout(marker);\n\t    }\n\t    // if clearTimeout wasn't available but was latter defined\n\t    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n\t        cachedClearTimeout = clearTimeout;\n\t        return clearTimeout(marker);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedClearTimeout(marker);\n\t    } catch (e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t            return cachedClearTimeout.call(null, marker);\n\t        } catch (e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t            return cachedClearTimeout.call(this, marker);\n\t        }\n\t    }\n\t\n\t\n\t\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t/* eslint-disable no-unused-vars */\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\tvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\t\n\tfunction toObject(val) {\n\t\tif (val === null || val === undefined) {\n\t\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t\t}\n\t\n\t\treturn Object(val);\n\t}\n\t\n\tfunction shouldUseNative() {\n\t\ttry {\n\t\t\tif (!Object.assign) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// Detect buggy property enumeration order in older V8 versions.\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\t\tvar test1 = new String('abc');  // eslint-disable-line\n\t\t\ttest1[5] = 'de';\n\t\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test2 = {};\n\t\t\tfor (var i = 0; i < 10; i++) {\n\t\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t\t}\n\t\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\t\treturn test2[n];\n\t\t\t});\n\t\t\tif (order2.join('') !== '0123456789') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test3 = {};\n\t\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\t\ttest3[letter] = letter;\n\t\t\t});\n\t\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\t\tvar from;\n\t\tvar to = toObject(target);\n\t\tvar symbols;\n\t\n\t\tfor (var s = 1; s < arguments.length; s++) {\n\t\t\tfrom = Object(arguments[s]);\n\t\n\t\t\tfor (var key in from) {\n\t\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\t\tto[key] = from[key];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (Object.getOwnPropertySymbols) {\n\t\t\t\tsymbols = Object.getOwnPropertySymbols(from);\n\t\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn to;\n\t};\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar PooledClass = __webpack_require__(7);\n\tvar ReactElement = __webpack_require__(10);\n\t\n\tvar emptyFunction = __webpack_require__(13);\n\tvar traverseAllChildren = __webpack_require__(16);\n\t\n\tvar twoArgumentPooler = PooledClass.twoArgumentPooler;\n\tvar fourArgumentPooler = PooledClass.fourArgumentPooler;\n\t\n\tvar userProvidedKeyEscapeRegex = /\\/+/g;\n\tfunction escapeUserProvidedKey(text) {\n\t  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');\n\t}\n\t\n\t/**\n\t * PooledClass representing the bookkeeping associated with performing a child\n\t * traversal. Allows avoiding binding callbacks.\n\t *\n\t * @constructor ForEachBookKeeping\n\t * @param {!function} forEachFunction Function to perform traversal with.\n\t * @param {?*} forEachContext Context to perform context with.\n\t */\n\tfunction ForEachBookKeeping(forEachFunction, forEachContext) {\n\t  this.func = forEachFunction;\n\t  this.context = forEachContext;\n\t  this.count = 0;\n\t}\n\tForEachBookKeeping.prototype.destructor = function () {\n\t  this.func = null;\n\t  this.context = null;\n\t  this.count = 0;\n\t};\n\tPooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);\n\t\n\tfunction forEachSingleChild(bookKeeping, child, name) {\n\t  var func = bookKeeping.func,\n\t      context = bookKeeping.context;\n\t\n\t  func.call(context, child, bookKeeping.count++);\n\t}\n\t\n\t/**\n\t * Iterates through children that are typically specified as `props.children`.\n\t *\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach\n\t *\n\t * The provided forEachFunc(child, index) will be called for each\n\t * leaf child.\n\t *\n\t * @param {?*} children Children tree container.\n\t * @param {function(*, int)} forEachFunc\n\t * @param {*} forEachContext Context for forEachContext.\n\t */\n\tfunction forEachChildren(children, forEachFunc, forEachContext) {\n\t  if (children == null) {\n\t    return children;\n\t  }\n\t  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);\n\t  traverseAllChildren(children, forEachSingleChild, traverseContext);\n\t  ForEachBookKeeping.release(traverseContext);\n\t}\n\t\n\t/**\n\t * PooledClass representing the bookkeeping associated with performing a child\n\t * mapping. Allows avoiding binding callbacks.\n\t *\n\t * @constructor MapBookKeeping\n\t * @param {!*} mapResult Object containing the ordered map of results.\n\t * @param {!function} mapFunction Function to perform mapping with.\n\t * @param {?*} mapContext Context to perform mapping with.\n\t */\n\tfunction MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {\n\t  this.result = mapResult;\n\t  this.keyPrefix = keyPrefix;\n\t  this.func = mapFunction;\n\t  this.context = mapContext;\n\t  this.count = 0;\n\t}\n\tMapBookKeeping.prototype.destructor = function () {\n\t  this.result = null;\n\t  this.keyPrefix = null;\n\t  this.func = null;\n\t  this.context = null;\n\t  this.count = 0;\n\t};\n\tPooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);\n\t\n\tfunction mapSingleChildIntoContext(bookKeeping, child, childKey) {\n\t  var result = bookKeeping.result,\n\t      keyPrefix = bookKeeping.keyPrefix,\n\t      func = bookKeeping.func,\n\t      context = bookKeeping.context;\n\t\n\t\n\t  var mappedChild = func.call(context, child, bookKeeping.count++);\n\t  if (Array.isArray(mappedChild)) {\n\t    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);\n\t  } else if (mappedChild != null) {\n\t    if (ReactElement.isValidElement(mappedChild)) {\n\t      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,\n\t      // Keep both the (mapped) and old keys if they differ, just as\n\t      // traverseAllChildren used to do for objects as children\n\t      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);\n\t    }\n\t    result.push(mappedChild);\n\t  }\n\t}\n\t\n\tfunction mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {\n\t  var escapedPrefix = '';\n\t  if (prefix != null) {\n\t    escapedPrefix = escapeUserProvidedKey(prefix) + '/';\n\t  }\n\t  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);\n\t  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\n\t  MapBookKeeping.release(traverseContext);\n\t}\n\t\n\t/**\n\t * Maps children that are typically specified as `props.children`.\n\t *\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map\n\t *\n\t * The provided mapFunction(child, key, index) will be called for each\n\t * leaf child.\n\t *\n\t * @param {?*} children Children tree container.\n\t * @param {function(*, int)} func The map function.\n\t * @param {*} context Context for mapFunction.\n\t * @return {object} Object containing the ordered map of results.\n\t */\n\tfunction mapChildren(children, func, context) {\n\t  if (children == null) {\n\t    return children;\n\t  }\n\t  var result = [];\n\t  mapIntoWithKeyPrefixInternal(children, result, null, func, context);\n\t  return result;\n\t}\n\t\n\tfunction forEachSingleChildDummy(traverseContext, child, name) {\n\t  return null;\n\t}\n\t\n\t/**\n\t * Count the number of children that are typically specified as\n\t * `props.children`.\n\t *\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count\n\t *\n\t * @param {?*} children Children tree container.\n\t * @return {number} The number of children.\n\t */\n\tfunction countChildren(children, context) {\n\t  return traverseAllChildren(children, forEachSingleChildDummy, null);\n\t}\n\t\n\t/**\n\t * Flatten a children object (typically specified as `props.children`) and\n\t * return an array with appropriately re-keyed children.\n\t *\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray\n\t */\n\tfunction toArray(children) {\n\t  var result = [];\n\t  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);\n\t  return result;\n\t}\n\t\n\tvar ReactChildren = {\n\t  forEach: forEachChildren,\n\t  map: mapChildren,\n\t  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,\n\t  count: countChildren,\n\t  toArray: toArray\n\t};\n\t\n\tmodule.exports = ReactChildren;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(8);\n\t\n\tvar invariant = __webpack_require__(9);\n\t\n\t/**\n\t * Static poolers. Several custom versions for each potential number of\n\t * arguments. A completely generic pooler is easy to implement, but would\n\t * require accessing the `arguments` object. In each of these, `this` refers to\n\t * the Class itself, not an instance. If any others are needed, simply add them\n\t * here, or in their own files.\n\t */\n\tvar oneArgumentPooler = function (copyFieldsFrom) {\n\t  var Klass = this;\n\t  if (Klass.instancePool.length) {\n\t    var instance = Klass.instancePool.pop();\n\t    Klass.call(instance, copyFieldsFrom);\n\t    return instance;\n\t  } else {\n\t    return new Klass(copyFieldsFrom);\n\t  }\n\t};\n\t\n\tvar twoArgumentPooler = function (a1, a2) {\n\t  var Klass = this;\n\t  if (Klass.instancePool.length) {\n\t    var instance = Klass.instancePool.pop();\n\t    Klass.call(instance, a1, a2);\n\t    return instance;\n\t  } else {\n\t    return new Klass(a1, a2);\n\t  }\n\t};\n\t\n\tvar threeArgumentPooler = function (a1, a2, a3) {\n\t  var Klass = this;\n\t  if (Klass.instancePool.length) {\n\t    var instance = Klass.instancePool.pop();\n\t    Klass.call(instance, a1, a2, a3);\n\t    return instance;\n\t  } else {\n\t    return new Klass(a1, a2, a3);\n\t  }\n\t};\n\t\n\tvar fourArgumentPooler = function (a1, a2, a3, a4) {\n\t  var Klass = this;\n\t  if (Klass.instancePool.length) {\n\t    var instance = Klass.instancePool.pop();\n\t    Klass.call(instance, a1, a2, a3, a4);\n\t    return instance;\n\t  } else {\n\t    return new Klass(a1, a2, a3, a4);\n\t  }\n\t};\n\t\n\tvar fiveArgumentPooler = function (a1, a2, a3, a4, a5) {\n\t  var Klass = this;\n\t  if (Klass.instancePool.length) {\n\t    var instance = Klass.instancePool.pop();\n\t    Klass.call(instance, a1, a2, a3, a4, a5);\n\t    return instance;\n\t  } else {\n\t    return new Klass(a1, a2, a3, a4, a5);\n\t  }\n\t};\n\t\n\tvar standardReleaser = function (instance) {\n\t  var Klass = this;\n\t  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;\n\t  instance.destructor();\n\t  if (Klass.instancePool.length < Klass.poolSize) {\n\t    Klass.instancePool.push(instance);\n\t  }\n\t};\n\t\n\tvar DEFAULT_POOL_SIZE = 10;\n\tvar DEFAULT_POOLER = oneArgumentPooler;\n\t\n\t/**\n\t * Augments `CopyConstructor` to be a poolable class, augmenting only the class\n\t * itself (statically) not adding any prototypical fields. Any CopyConstructor\n\t * you give this may have a `poolSize` property, and will look for a\n\t * prototypical `destructor` on instances.\n\t *\n\t * @param {Function} CopyConstructor Constructor that can be used to reset.\n\t * @param {Function} pooler Customizable pooler.\n\t */\n\tvar addPoolingTo = function (CopyConstructor, pooler) {\n\t  // Casting as any so that flow ignores the actual implementation and trusts\n\t  // it to match the type we declared\n\t  var NewKlass = CopyConstructor;\n\t  NewKlass.instancePool = [];\n\t  NewKlass.getPooled = pooler || DEFAULT_POOLER;\n\t  if (!NewKlass.poolSize) {\n\t    NewKlass.poolSize = DEFAULT_POOL_SIZE;\n\t  }\n\t  NewKlass.release = standardReleaser;\n\t  return NewKlass;\n\t};\n\t\n\tvar PooledClass = {\n\t  addPoolingTo: addPoolingTo,\n\t  oneArgumentPooler: oneArgumentPooler,\n\t  twoArgumentPooler: twoArgumentPooler,\n\t  threeArgumentPooler: threeArgumentPooler,\n\t  fourArgumentPooler: fourArgumentPooler,\n\t  fiveArgumentPooler: fiveArgumentPooler\n\t};\n\t\n\tmodule.exports = PooledClass;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t'use strict';\n\t\n\t/**\n\t * WARNING: DO NOT manually require this module.\n\t * This is a replacement for `invariant(...)` used by the error code system\n\t * and will _only_ be required by the corresponding babel pass.\n\t * It always throws.\n\t */\n\t\n\tfunction reactProdInvariant(code) {\n\t  var argCount = arguments.length - 1;\n\t\n\t  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;\n\t\n\t  for (var argIdx = 0; argIdx < argCount; argIdx++) {\n\t    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);\n\t  }\n\t\n\t  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';\n\t\n\t  var error = new Error(message);\n\t  error.name = 'Invariant Violation';\n\t  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame\n\t\n\t  throw error;\n\t}\n\t\n\tmodule.exports = reactProdInvariant;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Use invariant() to assert state which your program assumes to be true.\n\t *\n\t * Provide sprintf-style format (only %s is supported) and arguments\n\t * to provide information about what broke and what you were\n\t * expecting.\n\t *\n\t * The invariant message will be stripped in production, but the invariant\n\t * will remain to ensure logic does not differ in production.\n\t */\n\t\n\tvar validateFormat = function validateFormat(format) {};\n\t\n\tif (process.env.NODE_ENV !== 'production') {\n\t  validateFormat = function validateFormat(format) {\n\t    if (format === undefined) {\n\t      throw new Error('invariant requires an error message argument');\n\t    }\n\t  };\n\t}\n\t\n\tfunction invariant(condition, format, a, b, c, d, e, f) {\n\t  validateFormat(format);\n\t\n\t  if (!condition) {\n\t    var error;\n\t    if (format === undefined) {\n\t      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n\t    } else {\n\t      var args = [a, b, c, d, e, f];\n\t      var argIndex = 0;\n\t      error = new Error(format.replace(/%s/g, function () {\n\t        return args[argIndex++];\n\t      }));\n\t      error.name = 'Invariant Violation';\n\t    }\n\t\n\t    error.framesToPop = 1; // we don't care about invariant's own frame\n\t    throw error;\n\t  }\n\t}\n\t\n\tmodule.exports = invariant;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {/**\n\t * Copyright 2014-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(5);\n\t\n\tvar ReactCurrentOwner = __webpack_require__(11);\n\t\n\tvar warning = __webpack_require__(12);\n\tvar canDefineProperty = __webpack_require__(14);\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t\n\tvar REACT_ELEMENT_TYPE = __webpack_require__(15);\n\t\n\tvar RESERVED_PROPS = {\n\t  key: true,\n\t  ref: true,\n\t  __self: true,\n\t  __source: true\n\t};\n\t\n\tvar specialPropKeyWarningShown, specialPropRefWarningShown;\n\t\n\tfunction hasValidRef(config) {\n\t  if (process.env.NODE_ENV !== 'production') {\n\t    if (hasOwnProperty.call(config, 'ref')) {\n\t      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\t      if (getter && getter.isReactWarning) {\n\t        return false;\n\t      }\n\t    }\n\t  }\n\t  return config.ref !== undefined;\n\t}\n\t\n\tfunction hasValidKey(config) {\n\t  if (process.env.NODE_ENV !== 'production') {\n\t    if (hasOwnProperty.call(config, 'key')) {\n\t      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\t      if (getter && getter.isReactWarning) {\n\t        return false;\n\t      }\n\t    }\n\t  }\n\t  return config.key !== undefined;\n\t}\n\t\n\tfunction defineKeyPropWarningGetter(props, displayName) {\n\t  var warnAboutAccessingKey = function () {\n\t    if (!specialPropKeyWarningShown) {\n\t      specialPropKeyWarningShown = true;\n\t      process.env.NODE_ENV !== 'production' ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;\n\t    }\n\t  };\n\t  warnAboutAccessingKey.isReactWarning = true;\n\t  Object.defineProperty(props, 'key', {\n\t    get: warnAboutAccessingKey,\n\t    configurable: true\n\t  });\n\t}\n\t\n\tfunction defineRefPropWarningGetter(props, displayName) {\n\t  var warnAboutAccessingRef = function () {\n\t    if (!specialPropRefWarningShown) {\n\t      specialPropRefWarningShown = true;\n\t      process.env.NODE_ENV !== 'production' ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;\n\t    }\n\t  };\n\t  warnAboutAccessingRef.isReactWarning = true;\n\t  Object.defineProperty(props, 'ref', {\n\t    get: warnAboutAccessingRef,\n\t    configurable: true\n\t  });\n\t}\n\t\n\t/**\n\t * Factory method to create a new React element. This no longer adheres to\n\t * the class pattern, so do not use new to call it. Also, no instanceof check\n\t * will work. Instead test $$typeof field against Symbol.for('react.element') to check\n\t * if something is a React Element.\n\t *\n\t * @param {*} type\n\t * @param {*} key\n\t * @param {string|object} ref\n\t * @param {*} self A *temporary* helper to detect places where `this` is\n\t * different from the `owner` when React.createElement is called, so that we\n\t * can warn. We want to get rid of owner and replace string `ref`s with arrow\n\t * functions, and as long as `this` and owner are the same, there will be no\n\t * change in behavior.\n\t * @param {*} source An annotation object (added by a transpiler or otherwise)\n\t * indicating filename, line number, and/or other information.\n\t * @param {*} owner\n\t * @param {*} props\n\t * @internal\n\t */\n\tvar ReactElement = function (type, key, ref, self, source, owner, props) {\n\t  var element = {\n\t    // This tag allow us to uniquely identify this as a React Element\n\t    $$typeof: REACT_ELEMENT_TYPE,\n\t\n\t    // Built-in properties that belong on the element\n\t    type: type,\n\t    key: key,\n\t    ref: ref,\n\t    props: props,\n\t\n\t    // Record the component responsible for creating this element.\n\t    _owner: owner\n\t  };\n\t\n\t  if (process.env.NODE_ENV !== 'production') {\n\t    // The validation flag is currently mutative. We put it on\n\t    // an external backing store so that we can freeze the whole object.\n\t    // This can be replaced with a WeakMap once they are implemented in\n\t    // commonly used development environments.\n\t    element._store = {};\n\t\n\t    // To make comparing ReactElements easier for testing purposes, we make\n\t    // the validation flag non-enumerable (where possible, which should\n\t    // include every environment we run tests in), so the test framework\n\t    // ignores it.\n\t    if (canDefineProperty) {\n\t      Object.defineProperty(element._store, 'validated', {\n\t        configurable: false,\n\t        enumerable: false,\n\t        writable: true,\n\t        value: false\n\t      });\n\t      // self and source are DEV only properties.\n\t      Object.defineProperty(element, '_self', {\n\t        configurable: false,\n\t        enumerable: false,\n\t        writable: false,\n\t        value: self\n\t      });\n\t      // Two elements created in two different places should be considered\n\t      // equal for testing purposes and therefore we hide it from enumeration.\n\t      Object.defineProperty(element, '_source', {\n\t        configurable: false,\n\t        enumerable: false,\n\t        writable: false,\n\t        value: source\n\t      });\n\t    } else {\n\t      element._store.validated = false;\n\t      element._self = self;\n\t      element._source = source;\n\t    }\n\t    if (Object.freeze) {\n\t      Object.freeze(element.props);\n\t      Object.freeze(element);\n\t    }\n\t  }\n\t\n\t  return element;\n\t};\n\t\n\t/**\n\t * Create and return a new ReactElement of the given type.\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement\n\t */\n\tReactElement.createElement = function (type, config, children) {\n\t  var propName;\n\t\n\t  // Reserved names are extracted\n\t  var props = {};\n\t\n\t  var key = null;\n\t  var ref = null;\n\t  var self = null;\n\t  var source = null;\n\t\n\t  if (config != null) {\n\t    if (hasValidRef(config)) {\n\t      ref = config.ref;\n\t    }\n\t    if (hasValidKey(config)) {\n\t      key = '' + config.key;\n\t    }\n\t\n\t    self = config.__self === undefined ? null : config.__self;\n\t    source = config.__source === undefined ? null : config.__source;\n\t    // Remaining properties are added to a new props object\n\t    for (propName in config) {\n\t      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n\t        props[propName] = config[propName];\n\t      }\n\t    }\n\t  }\n\t\n\t  // Children can be more than one argument, and those are transferred onto\n\t  // the newly allocated props object.\n\t  var childrenLength = arguments.length - 2;\n\t  if (childrenLength === 1) {\n\t    props.children = children;\n\t  } else if (childrenLength > 1) {\n\t    var childArray = Array(childrenLength);\n\t    for (var i = 0; i < childrenLength; i++) {\n\t      childArray[i] = arguments[i + 2];\n\t    }\n\t    if (process.env.NODE_ENV !== 'production') {\n\t      if (Object.freeze) {\n\t        Object.freeze(childArray);\n\t      }\n\t    }\n\t    props.children = childArray;\n\t  }\n\t\n\t  // Resolve default props\n\t  if (type && type.defaultProps) {\n\t    var defaultProps = type.defaultProps;\n\t    for (propName in defaultProps) {\n\t      if (props[propName] === undefined) {\n\t        props[propName] = defaultProps[propName];\n\t      }\n\t    }\n\t  }\n\t  if (process.env.NODE_ENV !== 'production') {\n\t    if (key || ref) {\n\t      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {\n\t        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\t        if (key) {\n\t          defineKeyPropWarningGetter(props, displayName);\n\t        }\n\t        if (ref) {\n\t          defineRefPropWarningGetter(props, displayName);\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n\t};\n\t\n\t/**\n\t * Return a function that produces ReactElements of a given type.\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory\n\t */\n\tReactElement.createFactory = function (type) {\n\t  var factory = ReactElement.createElement.bind(null, type);\n\t  // Expose the type on the factory and the prototype so that it can be\n\t  // easily accessed on elements. E.g. `<Foo />.type === Foo`.\n\t  // This should not be named `constructor` since this may not be the function\n\t  // that created the element, and it may not even be a constructor.\n\t  // Legacy hook TODO: Warn if this is accessed\n\t  factory.type = type;\n\t  return factory;\n\t};\n\t\n\tReactElement.cloneAndReplaceKey = function (oldElement, newKey) {\n\t  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n\t\n\t  return newElement;\n\t};\n\t\n\t/**\n\t * Clone and return a new ReactElement using element as the starting point.\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement\n\t */\n\tReactElement.cloneElement = function (element, config, children) {\n\t  var propName;\n\t\n\t  // Original props are copied\n\t  var props = _assign({}, element.props);\n\t\n\t  // Reserved names are extracted\n\t  var key = element.key;\n\t  var ref = element.ref;\n\t  // Self is preserved since the owner is preserved.\n\t  var self = element._self;\n\t  // Source is preserved since cloneElement is unlikely to be targeted by a\n\t  // transpiler, and the original source is probably a better indicator of the\n\t  // true owner.\n\t  var source = element._source;\n\t\n\t  // Owner will be preserved, unless ref is overridden\n\t  var owner = element._owner;\n\t\n\t  if (config != null) {\n\t    if (hasValidRef(config)) {\n\t      // Silently steal the ref from the parent.\n\t      ref = config.ref;\n\t      owner = ReactCurrentOwner.current;\n\t    }\n\t    if (hasValidKey(config)) {\n\t      key = '' + config.key;\n\t    }\n\t\n\t    // Remaining properties override existing props\n\t    var defaultProps;\n\t    if (element.type && element.type.defaultProps) {\n\t      defaultProps = element.type.defaultProps;\n\t    }\n\t    for (propName in config) {\n\t      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n\t        if (config[propName] === undefined && defaultProps !== undefined) {\n\t          // Resolve default props\n\t          props[propName] = defaultProps[propName];\n\t        } else {\n\t          props[propName] = config[propName];\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  // Children can be more than one argument, and those are transferred onto\n\t  // the newly allocated props object.\n\t  var childrenLength = arguments.length - 2;\n\t  if (childrenLength === 1) {\n\t    props.children = children;\n\t  } else if (childrenLength > 1) {\n\t    var childArray = Array(childrenLength);\n\t    for (var i = 0; i < childrenLength; i++) {\n\t      childArray[i] = arguments[i + 2];\n\t    }\n\t    props.children = childArray;\n\t  }\n\t\n\t  return ReactElement(element.type, key, ref, self, source, owner, props);\n\t};\n\t\n\t/**\n\t * Verifies the object is a ReactElement.\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement\n\t * @param {?object} object\n\t * @return {boolean} True if `object` is a valid component.\n\t * @final\n\t */\n\tReactElement.isValidElement = function (object) {\n\t  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n\t};\n\t\n\tmodule.exports = ReactElement;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Keeps track of the current owner.\n\t *\n\t * The current owner is the component who should own any components that are\n\t * currently being constructed.\n\t */\n\tvar ReactCurrentOwner = {\n\t\n\t  /**\n\t   * @internal\n\t   * @type {ReactComponent}\n\t   */\n\t  current: null\n\t\n\t};\n\t\n\tmodule.exports = ReactCurrentOwner;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {/**\n\t * Copyright 2014-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar emptyFunction = __webpack_require__(13);\n\t\n\t/**\n\t * Similar to invariant but only logs a warning if the condition is not met.\n\t * This can be used to log issues in development environments in critical\n\t * paths. Removing the logging code for production environments will keep the\n\t * same logic and follow the same code paths.\n\t */\n\t\n\tvar warning = emptyFunction;\n\t\n\tif (process.env.NODE_ENV !== 'production') {\n\t  (function () {\n\t    var printWarning = function printWarning(format) {\n\t      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t        args[_key - 1] = arguments[_key];\n\t      }\n\t\n\t      var argIndex = 0;\n\t      var message = 'Warning: ' + format.replace(/%s/g, function () {\n\t        return args[argIndex++];\n\t      });\n\t      if (typeof console !== 'undefined') {\n\t        console.error(message);\n\t      }\n\t      try {\n\t        // --- Welcome to debugging React ---\n\t        // This error was thrown as a convenience so that you can use this stack\n\t        // to find the callsite that caused this warning to fire.\n\t        throw new Error(message);\n\t      } catch (x) {}\n\t    };\n\t\n\t    warning = function warning(condition, format) {\n\t      if (format === undefined) {\n\t        throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n\t      }\n\t\n\t      if (format.indexOf('Failed Composite propType: ') === 0) {\n\t        return; // Ignore CompositeComponent proptype check.\n\t      }\n\t\n\t      if (!condition) {\n\t        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n\t          args[_key2 - 2] = arguments[_key2];\n\t        }\n\t\n\t        printWarning.apply(undefined, [format].concat(args));\n\t      }\n\t    };\n\t  })();\n\t}\n\t\n\tmodule.exports = warning;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\tfunction makeEmptyFunction(arg) {\n\t  return function () {\n\t    return arg;\n\t  };\n\t}\n\t\n\t/**\n\t * This function accepts and discards inputs; it has no side effects. This is\n\t * primarily useful idiomatically for overridable function endpoints which\n\t * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n\t */\n\tvar emptyFunction = function emptyFunction() {};\n\t\n\temptyFunction.thatReturns = makeEmptyFunction;\n\temptyFunction.thatReturnsFalse = makeEmptyFunction(false);\n\temptyFunction.thatReturnsTrue = makeEmptyFunction(true);\n\temptyFunction.thatReturnsNull = makeEmptyFunction(null);\n\temptyFunction.thatReturnsThis = function () {\n\t  return this;\n\t};\n\temptyFunction.thatReturnsArgument = function (arg) {\n\t  return arg;\n\t};\n\t\n\tmodule.exports = emptyFunction;\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar canDefineProperty = false;\n\tif (process.env.NODE_ENV !== 'production') {\n\t  try {\n\t    // $FlowFixMe https://github.com/facebook/flow/issues/285\n\t    Object.defineProperty({}, 'x', { get: function () {} });\n\t    canDefineProperty = true;\n\t  } catch (x) {\n\t    // IE will fail on defineProperty\n\t  }\n\t}\n\t\n\tmodule.exports = canDefineProperty;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2014-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\t// The Symbol used to tag the ReactElement type. If there is no native Symbol\n\t// nor polyfill, then a plain number is used for performance.\n\t\n\tvar REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;\n\t\n\tmodule.exports = REACT_ELEMENT_TYPE;\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(8);\n\t\n\tvar ReactCurrentOwner = __webpack_require__(11);\n\tvar REACT_ELEMENT_TYPE = __webpack_require__(15);\n\t\n\tvar getIteratorFn = __webpack_require__(17);\n\tvar invariant = __webpack_require__(9);\n\tvar KeyEscapeUtils = __webpack_require__(18);\n\tvar warning = __webpack_require__(12);\n\t\n\tvar SEPARATOR = '.';\n\tvar SUBSEPARATOR = ':';\n\t\n\t/**\n\t * This is inlined from ReactElement since this file is shared between\n\t * isomorphic and renderers. We could extract this to a\n\t *\n\t */\n\t\n\t/**\n\t * TODO: Test that a single child and an array with one item have the same key\n\t * pattern.\n\t */\n\t\n\tvar didWarnAboutMaps = false;\n\t\n\t/**\n\t * Generate a key string that identifies a component within a set.\n\t *\n\t * @param {*} component A component that could contain a manual key.\n\t * @param {number} index Index that is used if a manual key is not provided.\n\t * @return {string}\n\t */\n\tfunction getComponentKey(component, index) {\n\t  // Do some typechecking here since we call this blindly. We want to ensure\n\t  // that we don't block potential future ES APIs.\n\t  if (component && typeof component === 'object' && component.key != null) {\n\t    // Explicit key\n\t    return KeyEscapeUtils.escape(component.key);\n\t  }\n\t  // Implicit key determined by the index in the set\n\t  return index.toString(36);\n\t}\n\t\n\t/**\n\t * @param {?*} children Children tree container.\n\t * @param {!string} nameSoFar Name of the key path so far.\n\t * @param {!function} callback Callback to invoke with each child found.\n\t * @param {?*} traverseContext Used to pass information throughout the traversal\n\t * process.\n\t * @return {!number} The number of children in this subtree.\n\t */\n\tfunction traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\n\t  var type = typeof children;\n\t\n\t  if (type === 'undefined' || type === 'boolean') {\n\t    // All of the above are perceived as null.\n\t    children = null;\n\t  }\n\t\n\t  if (children === null || type === 'string' || type === 'number' ||\n\t  // The following is inlined from ReactElement. This means we can optimize\n\t  // some checks. React Fiber also inlines this logic for similar purposes.\n\t  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {\n\t    callback(traverseContext, children,\n\t    // If it's the only child, treat the name as if it was wrapped in an array\n\t    // so that it's consistent if the number of children grows.\n\t    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\n\t    return 1;\n\t  }\n\t\n\t  var child;\n\t  var nextName;\n\t  var subtreeCount = 0; // Count of children found in the current subtree.\n\t  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\t\n\t  if (Array.isArray(children)) {\n\t    for (var i = 0; i < children.length; i++) {\n\t      child = children[i];\n\t      nextName = nextNamePrefix + getComponentKey(child, i);\n\t      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n\t    }\n\t  } else {\n\t    var iteratorFn = getIteratorFn(children);\n\t    if (iteratorFn) {\n\t      var iterator = iteratorFn.call(children);\n\t      var step;\n\t      if (iteratorFn !== children.entries) {\n\t        var ii = 0;\n\t        while (!(step = iterator.next()).done) {\n\t          child = step.value;\n\t          nextName = nextNamePrefix + getComponentKey(child, ii++);\n\t          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n\t        }\n\t      } else {\n\t        if (process.env.NODE_ENV !== 'production') {\n\t          var mapsAsChildrenAddendum = '';\n\t          if (ReactCurrentOwner.current) {\n\t            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();\n\t            if (mapsAsChildrenOwnerName) {\n\t              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';\n\t            }\n\t          }\n\t          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;\n\t          didWarnAboutMaps = true;\n\t        }\n\t        // Iterator will provide entry [k,v] tuples rather than values.\n\t        while (!(step = iterator.next()).done) {\n\t          var entry = step.value;\n\t          if (entry) {\n\t            child = entry[1];\n\t            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);\n\t            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n\t          }\n\t        }\n\t      }\n\t    } else if (type === 'object') {\n\t      var addendum = '';\n\t      if (process.env.NODE_ENV !== 'production') {\n\t        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';\n\t        if (children._isReactElement) {\n\t          addendum = ' It looks like you\\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';\n\t        }\n\t        if (ReactCurrentOwner.current) {\n\t          var name = ReactCurrentOwner.current.getName();\n\t          if (name) {\n\t            addendum += ' Check the render method of `' + name + '`.';\n\t          }\n\t        }\n\t      }\n\t      var childrenString = String(children);\n\t       true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;\n\t    }\n\t  }\n\t\n\t  return subtreeCount;\n\t}\n\t\n\t/**\n\t * Traverses children that are typically specified as `props.children`, but\n\t * might also be specified through attributes:\n\t *\n\t * - `traverseAllChildren(this.props.children, ...)`\n\t * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n\t *\n\t * The `traverseContext` is an optional argument that is passed through the\n\t * entire traversal. It can be used to store accumulations or anything else that\n\t * the callback might find relevant.\n\t *\n\t * @param {?*} children Children tree object.\n\t * @param {!function} callback To invoke upon traversing each child.\n\t * @param {?*} traverseContext Context for traversal.\n\t * @return {!number} The number of children in this subtree.\n\t */\n\tfunction traverseAllChildren(children, callback, traverseContext) {\n\t  if (children == null) {\n\t    return 0;\n\t  }\n\t\n\t  return traverseAllChildrenImpl(children, '', callback, traverseContext);\n\t}\n\t\n\tmodule.exports = traverseAllChildren;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\t/* global Symbol */\n\t\n\tvar ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n\tvar FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\t\n\t/**\n\t * Returns the iterator method function contained on the iterable object.\n\t *\n\t * Be sure to invoke the function with the iterable as context:\n\t *\n\t *     var iteratorFn = getIteratorFn(myIterable);\n\t *     if (iteratorFn) {\n\t *       var iterator = iteratorFn.call(myIterable);\n\t *       ...\n\t *     }\n\t *\n\t * @param {?object} maybeIterable\n\t * @return {?function}\n\t */\n\tfunction getIteratorFn(maybeIterable) {\n\t  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n\t  if (typeof iteratorFn === 'function') {\n\t    return iteratorFn;\n\t  }\n\t}\n\t\n\tmodule.exports = getIteratorFn;\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Escape and wrap key so it is safe to use as a reactid\n\t *\n\t * @param {string} key to be escaped.\n\t * @return {string} the escaped key.\n\t */\n\t\n\tfunction escape(key) {\n\t  var escapeRegex = /[=:]/g;\n\t  var escaperLookup = {\n\t    '=': '=0',\n\t    ':': '=2'\n\t  };\n\t  var escapedString = ('' + key).replace(escapeRegex, function (match) {\n\t    return escaperLookup[match];\n\t  });\n\t\n\t  return '$' + escapedString;\n\t}\n\t\n\t/**\n\t * Unescape and unwrap key for human-readable display\n\t *\n\t * @param {string} key to unescape.\n\t * @return {string} the unescaped key.\n\t */\n\tfunction unescape(key) {\n\t  var unescapeRegex = /(=0|=2)/g;\n\t  var unescaperLookup = {\n\t    '=0': '=',\n\t    '=2': ':'\n\t  };\n\t  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);\n\t\n\t  return ('' + keySubstring).replace(unescapeRegex, function (match) {\n\t    return unescaperLookup[match];\n\t  });\n\t}\n\t\n\tvar KeyEscapeUtils = {\n\t  escape: escape,\n\t  unescape: unescape\n\t};\n\t\n\tmodule.exports = KeyEscapeUtils;\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(8);\n\t\n\tvar ReactNoopUpdateQueue = __webpack_require__(20);\n\t\n\tvar canDefineProperty = __webpack_require__(14);\n\tvar emptyObject = __webpack_require__(21);\n\tvar invariant = __webpack_require__(9);\n\tvar warning = __webpack_require__(12);\n\t\n\t/**\n\t * Base class helpers for the updating state of a component.\n\t */\n\tfunction ReactComponent(props, context, updater) {\n\t  this.props = props;\n\t  this.context = context;\n\t  this.refs = emptyObject;\n\t  // We initialize the default updater but the real one gets injected by the\n\t  // renderer.\n\t  this.updater = updater || ReactNoopUpdateQueue;\n\t}\n\t\n\tReactComponent.prototype.isReactComponent = {};\n\t\n\t/**\n\t * Sets a subset of the state. Always use this to mutate\n\t * state. You should treat `this.state` as immutable.\n\t *\n\t * There is no guarantee that `this.state` will be immediately updated, so\n\t * accessing `this.state` after calling this method may return the old value.\n\t *\n\t * There is no guarantee that calls to `setState` will run synchronously,\n\t * as they may eventually be batched together.  You can provide an optional\n\t * callback that will be executed when the call to setState is actually\n\t * completed.\n\t *\n\t * When a function is provided to setState, it will be called at some point in\n\t * the future (not synchronously). It will be called with the up to date\n\t * component arguments (state, props, context). These values can be different\n\t * from this.* because your function may be called after receiveProps but before\n\t * shouldComponentUpdate, and this new state, props, and context will not yet be\n\t * assigned to this.\n\t *\n\t * @param {object|function} partialState Next partial state or function to\n\t *        produce next partial state to be merged with current state.\n\t * @param {?function} callback Called after state is updated.\n\t * @final\n\t * @protected\n\t */\n\tReactComponent.prototype.setState = function (partialState, callback) {\n\t  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;\n\t  this.updater.enqueueSetState(this, partialState);\n\t  if (callback) {\n\t    this.updater.enqueueCallback(this, callback, 'setState');\n\t  }\n\t};\n\t\n\t/**\n\t * Forces an update. This should only be invoked when it is known with\n\t * certainty that we are **not** in a DOM transaction.\n\t *\n\t * You may want to call this when you know that some deeper aspect of the\n\t * component's state has changed but `setState` was not called.\n\t *\n\t * This will not invoke `shouldComponentUpdate`, but it will invoke\n\t * `componentWillUpdate` and `componentDidUpdate`.\n\t *\n\t * @param {?function} callback Called after update is complete.\n\t * @final\n\t * @protected\n\t */\n\tReactComponent.prototype.forceUpdate = function (callback) {\n\t  this.updater.enqueueForceUpdate(this);\n\t  if (callback) {\n\t    this.updater.enqueueCallback(this, callback, 'forceUpdate');\n\t  }\n\t};\n\t\n\t/**\n\t * Deprecated APIs. These APIs used to exist on classic React classes but since\n\t * we would like to deprecate them, we're not going to move them over to this\n\t * modern base class. Instead, we define a getter that warns if it's accessed.\n\t */\n\tif (process.env.NODE_ENV !== 'production') {\n\t  var deprecatedAPIs = {\n\t    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n\t    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n\t  };\n\t  var defineDeprecationWarning = function (methodName, info) {\n\t    if (canDefineProperty) {\n\t      Object.defineProperty(ReactComponent.prototype, methodName, {\n\t        get: function () {\n\t          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : void 0;\n\t          return undefined;\n\t        }\n\t      });\n\t    }\n\t  };\n\t  for (var fnName in deprecatedAPIs) {\n\t    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n\t      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n\t    }\n\t  }\n\t}\n\t\n\tmodule.exports = ReactComponent;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {/**\n\t * Copyright 2015-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar warning = __webpack_require__(12);\n\t\n\tfunction warnNoop(publicInstance, callerName) {\n\t  if (process.env.NODE_ENV !== 'production') {\n\t    var constructor = publicInstance.constructor;\n\t    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;\n\t  }\n\t}\n\t\n\t/**\n\t * This is the abstract API for an update queue.\n\t */\n\tvar ReactNoopUpdateQueue = {\n\t\n\t  /**\n\t   * Checks whether or not this composite component is mounted.\n\t   * @param {ReactClass} publicInstance The instance we want to test.\n\t   * @return {boolean} True if mounted, false otherwise.\n\t   * @protected\n\t   * @final\n\t   */\n\t  isMounted: function (publicInstance) {\n\t    return false;\n\t  },\n\t\n\t  /**\n\t   * Enqueue a callback that will be executed after all the pending updates\n\t   * have processed.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance to use as `this` context.\n\t   * @param {?function} callback Called after state is updated.\n\t   * @internal\n\t   */\n\t  enqueueCallback: function (publicInstance, callback) {},\n\t\n\t  /**\n\t   * Forces an update. This should only be invoked when it is known with\n\t   * certainty that we are **not** in a DOM transaction.\n\t   *\n\t   * You may want to call this when you know that some deeper aspect of the\n\t   * component's state has changed but `setState` was not called.\n\t   *\n\t   * This will not invoke `shouldComponentUpdate`, but it will invoke\n\t   * `componentWillUpdate` and `componentDidUpdate`.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance that should rerender.\n\t   * @internal\n\t   */\n\t  enqueueForceUpdate: function (publicInstance) {\n\t    warnNoop(publicInstance, 'forceUpdate');\n\t  },\n\t\n\t  /**\n\t   * Replaces all of the state. Always use this or `setState` to mutate state.\n\t   * You should treat `this.state` as immutable.\n\t   *\n\t   * There is no guarantee that `this.state` will be immediately updated, so\n\t   * accessing `this.state` after calling this method may return the old value.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance that should rerender.\n\t   * @param {object} completeState Next state.\n\t   * @internal\n\t   */\n\t  enqueueReplaceState: function (publicInstance, completeState) {\n\t    warnNoop(publicInstance, 'replaceState');\n\t  },\n\t\n\t  /**\n\t   * Sets a subset of the state. This only exists because _pendingState is\n\t   * internal. This provides a merging strategy that is not available to deep\n\t   * properties which is confusing. TODO: Expose pendingState or don't use it\n\t   * during the merge.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance that should rerender.\n\t   * @param {object} partialState Next partial state to be merged with state.\n\t   * @internal\n\t   */\n\t  enqueueSetState: function (publicInstance, partialState) {\n\t    warnNoop(publicInstance, 'setState');\n\t  }\n\t};\n\t\n\tmodule.exports = ReactNoopUpdateQueue;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar emptyObject = {};\n\t\n\tif (process.env.NODE_ENV !== 'production') {\n\t  Object.freeze(emptyObject);\n\t}\n\t\n\tmodule.exports = emptyObject;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(5);\n\t\n\tvar ReactComponent = __webpack_require__(19);\n\tvar ReactNoopUpdateQueue = __webpack_require__(20);\n\t\n\tvar emptyObject = __webpack_require__(21);\n\t\n\t/**\n\t * Base class helpers for the updating state of a component.\n\t */\n\tfunction ReactPureComponent(props, context, updater) {\n\t  // Duplicated from ReactComponent.\n\t  this.props = props;\n\t  this.context = context;\n\t  this.refs = emptyObject;\n\t  // We initialize the default updater but the real one gets injected by the\n\t  // renderer.\n\t  this.updater = updater || ReactNoopUpdateQueue;\n\t}\n\t\n\tfunction ComponentDummy() {}\n\tComponentDummy.prototype = ReactComponent.prototype;\n\tReactPureComponent.prototype = new ComponentDummy();\n\tReactPureComponent.prototype.constructor = ReactPureComponent;\n\t// Avoid an extra prototype jump for these methods.\n\t_assign(ReactPureComponent.prototype, ReactComponent.prototype);\n\tReactPureComponent.prototype.isPureReactComponent = true;\n\t\n\tmodule.exports = ReactPureComponent;\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(8),\n\t    _assign = __webpack_require__(5);\n\t\n\tvar ReactComponent = __webpack_require__(19);\n\tvar ReactElement = __webpack_require__(10);\n\tvar ReactPropTypeLocationNames = __webpack_require__(24);\n\tvar ReactNoopUpdateQueue = __webpack_require__(20);\n\t\n\tvar emptyObject = __webpack_require__(21);\n\tvar invariant = __webpack_require__(9);\n\tvar warning = __webpack_require__(12);\n\t\n\tvar MIXINS_KEY = 'mixins';\n\t\n\t// Helper function to allow the creation of anonymous functions which do not\n\t// have .name set to the name of the variable being assigned to.\n\tfunction identity(fn) {\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Policies that describe methods in `ReactClassInterface`.\n\t */\n\t\n\t\n\tvar injectedMixins = [];\n\t\n\t/**\n\t * Composite components are higher-level components that compose other composite\n\t * or host components.\n\t *\n\t * To create a new type of `ReactClass`, pass a specification of\n\t * your new class to `React.createClass`. The only requirement of your class\n\t * specification is that you implement a `render` method.\n\t *\n\t *   var MyComponent = React.createClass({\n\t *     render: function() {\n\t *       return <div>Hello World</div>;\n\t *     }\n\t *   });\n\t *\n\t * The class specification supports a specific protocol of methods that have\n\t * special meaning (e.g. `render`). See `ReactClassInterface` for\n\t * more the comprehensive protocol. Any other properties and methods in the\n\t * class specification will be available on the prototype.\n\t *\n\t * @interface ReactClassInterface\n\t * @internal\n\t */\n\tvar ReactClassInterface = {\n\t\n\t  /**\n\t   * An array of Mixin objects to include when defining your component.\n\t   *\n\t   * @type {array}\n\t   * @optional\n\t   */\n\t  mixins: 'DEFINE_MANY',\n\t\n\t  /**\n\t   * An object containing properties and methods that should be defined on\n\t   * the component's constructor instead of its prototype (static methods).\n\t   *\n\t   * @type {object}\n\t   * @optional\n\t   */\n\t  statics: 'DEFINE_MANY',\n\t\n\t  /**\n\t   * Definition of prop types for this component.\n\t   *\n\t   * @type {object}\n\t   * @optional\n\t   */\n\t  propTypes: 'DEFINE_MANY',\n\t\n\t  /**\n\t   * Definition of context types for this component.\n\t   *\n\t   * @type {object}\n\t   * @optional\n\t   */\n\t  contextTypes: 'DEFINE_MANY',\n\t\n\t  /**\n\t   * Definition of context types this component sets for its children.\n\t   *\n\t   * @type {object}\n\t   * @optional\n\t   */\n\t  childContextTypes: 'DEFINE_MANY',\n\t\n\t  // ==== Definition methods ====\n\t\n\t  /**\n\t   * Invoked when the component is mounted. Values in the mapping will be set on\n\t   * `this.props` if that prop is not specified (i.e. using an `in` check).\n\t   *\n\t   * This method is invoked before `getInitialState` and therefore cannot rely\n\t   * on `this.state` or use `this.setState`.\n\t   *\n\t   * @return {object}\n\t   * @optional\n\t   */\n\t  getDefaultProps: 'DEFINE_MANY_MERGED',\n\t\n\t  /**\n\t   * Invoked once before the component is mounted. The return value will be used\n\t   * as the initial value of `this.state`.\n\t   *\n\t   *   getInitialState: function() {\n\t   *     return {\n\t   *       isOn: false,\n\t   *       fooBaz: new BazFoo()\n\t   *     }\n\t   *   }\n\t   *\n\t   * @return {object}\n\t   * @optional\n\t   */\n\t  getInitialState: 'DEFINE_MANY_MERGED',\n\t\n\t  /**\n\t   * @return {object}\n\t   * @optional\n\t   */\n\t  getChildContext: 'DEFINE_MANY_MERGED',\n\t\n\t  /**\n\t   * Uses props from `this.props` and state from `this.state` to render the\n\t   * structure of the component.\n\t   *\n\t   * No guarantees are made about when or how often this method is invoked, so\n\t   * it must not have side effects.\n\t   *\n\t   *   render: function() {\n\t   *     var name = this.props.name;\n\t   *     return <div>Hello, {name}!</div>;\n\t   *   }\n\t   *\n\t   * @return {ReactComponent}\n\t   * @nosideeffects\n\t   * @required\n\t   */\n\t  render: 'DEFINE_ONCE',\n\t\n\t  // ==== Delegate methods ====\n\t\n\t  /**\n\t   * Invoked when the component is initially created and about to be mounted.\n\t   * This may have side effects, but any external subscriptions or data created\n\t   * by this method must be cleaned up in `componentWillUnmount`.\n\t   *\n\t   * @optional\n\t   */\n\t  componentWillMount: 'DEFINE_MANY',\n\t\n\t  /**\n\t   * Invoked when the component has been mounted and has a DOM representation.\n\t   * However, there is no guarantee that the DOM node is in the document.\n\t   *\n\t   * Use this as an opportunity to operate on the DOM when the component has\n\t   * been mounted (initialized and rendered) for the first time.\n\t   *\n\t   * @param {DOMElement} rootNode DOM element representing the component.\n\t   * @optional\n\t   */\n\t  componentDidMount: 'DEFINE_MANY',\n\t\n\t  /**\n\t   * Invoked before the component receives new props.\n\t   *\n\t   * Use this as an opportunity to react to a prop transition by updating the\n\t   * state using `this.setState`. Current props are accessed via `this.props`.\n\t   *\n\t   *   componentWillReceiveProps: function(nextProps, nextContext) {\n\t   *     this.setState({\n\t   *       likesIncreasing: nextProps.likeCount > this.props.likeCount\n\t   *     });\n\t   *   }\n\t   *\n\t   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop\n\t   * transition may cause a state change, but the opposite is not true. If you\n\t   * need it, you are probably looking for `componentWillUpdate`.\n\t   *\n\t   * @param {object} nextProps\n\t   * @optional\n\t   */\n\t  componentWillReceiveProps: 'DEFINE_MANY',\n\t\n\t  /**\n\t   * Invoked while deciding if the component should be updated as a result of\n\t   * receiving new props, state and/or context.\n\t   *\n\t   * Use this as an opportunity to `return false` when you're certain that the\n\t   * transition to the new props/state/context will not require a component\n\t   * update.\n\t   *\n\t   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {\n\t   *     return !equal(nextProps, this.props) ||\n\t   *       !equal(nextState, this.state) ||\n\t   *       !equal(nextContext, this.context);\n\t   *   }\n\t   *\n\t   * @param {object} nextProps\n\t   * @param {?object} nextState\n\t   * @param {?object} nextContext\n\t   * @return {boolean} True if the component should update.\n\t   * @optional\n\t   */\n\t  shouldComponentUpdate: 'DEFINE_ONCE',\n\t\n\t  /**\n\t   * Invoked when the component is about to update due to a transition from\n\t   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`\n\t   * and `nextContext`.\n\t   *\n\t   * Use this as an opportunity to perform preparation before an update occurs.\n\t   *\n\t   * NOTE: You **cannot** use `this.setState()` in this method.\n\t   *\n\t   * @param {object} nextProps\n\t   * @param {?object} nextState\n\t   * @param {?object} nextContext\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @optional\n\t   */\n\t  componentWillUpdate: 'DEFINE_MANY',\n\t\n\t  /**\n\t   * Invoked when the component's DOM representation has been updated.\n\t   *\n\t   * Use this as an opportunity to operate on the DOM when the component has\n\t   * been updated.\n\t   *\n\t   * @param {object} prevProps\n\t   * @param {?object} prevState\n\t   * @param {?object} prevContext\n\t   * @param {DOMElement} rootNode DOM element representing the component.\n\t   * @optional\n\t   */\n\t  componentDidUpdate: 'DEFINE_MANY',\n\t\n\t  /**\n\t   * Invoked when the component is about to be removed from its parent and have\n\t   * its DOM representation destroyed.\n\t   *\n\t   * Use this as an opportunity to deallocate any external resources.\n\t   *\n\t   * NOTE: There is no `componentDidUnmount` since your component will have been\n\t   * destroyed by that point.\n\t   *\n\t   * @optional\n\t   */\n\t  componentWillUnmount: 'DEFINE_MANY',\n\t\n\t  // ==== Advanced methods ====\n\t\n\t  /**\n\t   * Updates the component's currently mounted DOM representation.\n\t   *\n\t   * By default, this implements React's rendering and reconciliation algorithm.\n\t   * Sophisticated clients may wish to override this.\n\t   *\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @internal\n\t   * @overridable\n\t   */\n\t  updateComponent: 'OVERRIDE_BASE'\n\t\n\t};\n\t\n\t/**\n\t * Mapping from class specification keys to special processing functions.\n\t *\n\t * Although these are declared like instance properties in the specification\n\t * when defining classes using `React.createClass`, they are actually static\n\t * and are accessible on the constructor instead of the prototype. Despite\n\t * being static, they must be defined outside of the \"statics\" key under\n\t * which all other static methods are defined.\n\t */\n\tvar RESERVED_SPEC_KEYS = {\n\t  displayName: function (Constructor, displayName) {\n\t    Constructor.displayName = displayName;\n\t  },\n\t  mixins: function (Constructor, mixins) {\n\t    if (mixins) {\n\t      for (var i = 0; i < mixins.length; i++) {\n\t        mixSpecIntoComponent(Constructor, mixins[i]);\n\t      }\n\t    }\n\t  },\n\t  childContextTypes: function (Constructor, childContextTypes) {\n\t    if (process.env.NODE_ENV !== 'production') {\n\t      validateTypeDef(Constructor, childContextTypes, 'childContext');\n\t    }\n\t    Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, childContextTypes);\n\t  },\n\t  contextTypes: function (Constructor, contextTypes) {\n\t    if (process.env.NODE_ENV !== 'production') {\n\t      validateTypeDef(Constructor, contextTypes, 'context');\n\t    }\n\t    Constructor.contextTypes = _assign({}, Constructor.contextTypes, contextTypes);\n\t  },\n\t  /**\n\t   * Special case getDefaultProps which should move into statics but requires\n\t   * automatic merging.\n\t   */\n\t  getDefaultProps: function (Constructor, getDefaultProps) {\n\t    if (Constructor.getDefaultProps) {\n\t      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);\n\t    } else {\n\t      Constructor.getDefaultProps = getDefaultProps;\n\t    }\n\t  },\n\t  propTypes: function (Constructor, propTypes) {\n\t    if (process.env.NODE_ENV !== 'production') {\n\t      validateTypeDef(Constructor, propTypes, 'prop');\n\t    }\n\t    Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);\n\t  },\n\t  statics: function (Constructor, statics) {\n\t    mixStaticSpecIntoComponent(Constructor, statics);\n\t  },\n\t  autobind: function () {} };\n\t\n\tfunction validateTypeDef(Constructor, typeDef, location) {\n\t  for (var propName in typeDef) {\n\t    if (typeDef.hasOwnProperty(propName)) {\n\t      // use a warning instead of an invariant so components\n\t      // don't show up in prod but only in __DEV__\n\t      process.env.NODE_ENV !== 'production' ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : void 0;\n\t    }\n\t  }\n\t}\n\t\n\tfunction validateMethodOverride(isAlreadyDefined, name) {\n\t  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;\n\t\n\t  // Disallow overriding of base class methods unless explicitly allowed.\n\t  if (ReactClassMixin.hasOwnProperty(name)) {\n\t    !(specPolicy === 'OVERRIDE_BASE') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.', name) : _prodInvariant('73', name) : void 0;\n\t  }\n\t\n\t  // Disallow defining methods more than once unless explicitly allowed.\n\t  if (isAlreadyDefined) {\n\t    !(specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('74', name) : void 0;\n\t  }\n\t}\n\t\n\t/**\n\t * Mixin helper which handles policy validation and reserved\n\t * specification keys when building React classes.\n\t */\n\tfunction mixSpecIntoComponent(Constructor, spec) {\n\t  if (!spec) {\n\t    if (process.env.NODE_ENV !== 'production') {\n\t      var typeofSpec = typeof spec;\n\t      var isMixinValid = typeofSpec === 'object' && spec !== null;\n\t\n\t      process.env.NODE_ENV !== 'production' ? warning(isMixinValid, '%s: You\\'re attempting to include a mixin that is either null ' + 'or not an object. Check the mixins included by the component, ' + 'as well as any mixins they include themselves. ' + 'Expected object but got %s.', Constructor.displayName || 'ReactClass', spec === null ? null : typeofSpec) : void 0;\n\t    }\n\t\n\t    return;\n\t  }\n\t\n\t  !(typeof spec !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\\'re attempting to use a component class or function as a mixin. Instead, just use a regular object.') : _prodInvariant('75') : void 0;\n\t  !!ReactElement.isValidElement(spec) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\\'re attempting to use a component as a mixin. Instead, just use a regular object.') : _prodInvariant('76') : void 0;\n\t\n\t  var proto = Constructor.prototype;\n\t  var autoBindPairs = proto.__reactAutoBindPairs;\n\t\n\t  // By handling mixins before any other properties, we ensure the same\n\t  // chaining order is applied to methods with DEFINE_MANY policy, whether\n\t  // mixins are listed before or after these methods in the spec.\n\t  if (spec.hasOwnProperty(MIXINS_KEY)) {\n\t    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);\n\t  }\n\t\n\t  for (var name in spec) {\n\t    if (!spec.hasOwnProperty(name)) {\n\t      continue;\n\t    }\n\t\n\t    if (name === MIXINS_KEY) {\n\t      // We have already handled mixins in a special case above.\n\t      continue;\n\t    }\n\t\n\t    var property = spec[name];\n\t    var isAlreadyDefined = proto.hasOwnProperty(name);\n\t    validateMethodOverride(isAlreadyDefined, name);\n\t\n\t    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {\n\t      RESERVED_SPEC_KEYS[name](Constructor, property);\n\t    } else {\n\t      // Setup methods on prototype:\n\t      // The following member methods should not be automatically bound:\n\t      // 1. Expected ReactClass methods (in the \"interface\").\n\t      // 2. Overridden methods (that were mixed in).\n\t      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);\n\t      var isFunction = typeof property === 'function';\n\t      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;\n\t\n\t      if (shouldAutoBind) {\n\t        autoBindPairs.push(name, property);\n\t        proto[name] = property;\n\t      } else {\n\t        if (isAlreadyDefined) {\n\t          var specPolicy = ReactClassInterface[name];\n\t\n\t          // These cases should already be caught by validateMethodOverride.\n\t          !(isReactClassMethod && (specPolicy === 'DEFINE_MANY_MERGED' || specPolicy === 'DEFINE_MANY')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.', specPolicy, name) : _prodInvariant('77', specPolicy, name) : void 0;\n\t\n\t          // For methods which are defined more than once, call the existing\n\t          // methods before calling the new property, merging if appropriate.\n\t          if (specPolicy === 'DEFINE_MANY_MERGED') {\n\t            proto[name] = createMergedResultFunction(proto[name], property);\n\t          } else if (specPolicy === 'DEFINE_MANY') {\n\t            proto[name] = createChainedFunction(proto[name], property);\n\t          }\n\t        } else {\n\t          proto[name] = property;\n\t          if (process.env.NODE_ENV !== 'production') {\n\t            // Add verbose displayName to the function, which helps when looking\n\t            // at profiling tools.\n\t            if (typeof property === 'function' && spec.displayName) {\n\t              proto[name].displayName = spec.displayName + '_' + name;\n\t            }\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tfunction mixStaticSpecIntoComponent(Constructor, statics) {\n\t  if (!statics) {\n\t    return;\n\t  }\n\t  for (var name in statics) {\n\t    var property = statics[name];\n\t    if (!statics.hasOwnProperty(name)) {\n\t      continue;\n\t    }\n\t\n\t    var isReserved = name in RESERVED_SPEC_KEYS;\n\t    !!isReserved ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\\'t be on the \"statics\" key. Define it as an instance property instead; it will still be accessible on the constructor.', name) : _prodInvariant('78', name) : void 0;\n\t\n\t    var isInherited = name in Constructor;\n\t    !!isInherited ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('79', name) : void 0;\n\t    Constructor[name] = property;\n\t  }\n\t}\n\t\n\t/**\n\t * Merge two objects, but throw if both contain the same key.\n\t *\n\t * @param {object} one The first object, which is mutated.\n\t * @param {object} two The second object\n\t * @return {object} one after it has been mutated to contain everything in two.\n\t */\n\tfunction mergeIntoWithNoDuplicateKeys(one, two) {\n\t  !(one && two && typeof one === 'object' && typeof two === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : _prodInvariant('80') : void 0;\n\t\n\t  for (var key in two) {\n\t    if (two.hasOwnProperty(key)) {\n\t      !(one[key] === undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.', key) : _prodInvariant('81', key) : void 0;\n\t      one[key] = two[key];\n\t    }\n\t  }\n\t  return one;\n\t}\n\t\n\t/**\n\t * Creates a function that invokes two functions and merges their return values.\n\t *\n\t * @param {function} one Function to invoke first.\n\t * @param {function} two Function to invoke second.\n\t * @return {function} Function that invokes the two argument functions.\n\t * @private\n\t */\n\tfunction createMergedResultFunction(one, two) {\n\t  return function mergedResult() {\n\t    var a = one.apply(this, arguments);\n\t    var b = two.apply(this, arguments);\n\t    if (a == null) {\n\t      return b;\n\t    } else if (b == null) {\n\t      return a;\n\t    }\n\t    var c = {};\n\t    mergeIntoWithNoDuplicateKeys(c, a);\n\t    mergeIntoWithNoDuplicateKeys(c, b);\n\t    return c;\n\t  };\n\t}\n\t\n\t/**\n\t * Creates a function that invokes two functions and ignores their return vales.\n\t *\n\t * @param {function} one Function to invoke first.\n\t * @param {function} two Function to invoke second.\n\t * @return {function} Function that invokes the two argument functions.\n\t * @private\n\t */\n\tfunction createChainedFunction(one, two) {\n\t  return function chainedFunction() {\n\t    one.apply(this, arguments);\n\t    two.apply(this, arguments);\n\t  };\n\t}\n\t\n\t/**\n\t * Binds a method to the component.\n\t *\n\t * @param {object} component Component whose method is going to be bound.\n\t * @param {function} method Method to be bound.\n\t * @return {function} The bound method.\n\t */\n\tfunction bindAutoBindMethod(component, method) {\n\t  var boundMethod = method.bind(component);\n\t  if (process.env.NODE_ENV !== 'production') {\n\t    boundMethod.__reactBoundContext = component;\n\t    boundMethod.__reactBoundMethod = method;\n\t    boundMethod.__reactBoundArguments = null;\n\t    var componentName = component.constructor.displayName;\n\t    var _bind = boundMethod.bind;\n\t    boundMethod.bind = function (newThis) {\n\t      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t        args[_key - 1] = arguments[_key];\n\t      }\n\t\n\t      // User is trying to bind() an autobound method; we effectively will\n\t      // ignore the value of \"this\" that the user is trying to use, so\n\t      // let's warn.\n\t      if (newThis !== component && newThis !== null) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : void 0;\n\t      } else if (!args.length) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : void 0;\n\t        return boundMethod;\n\t      }\n\t      var reboundMethod = _bind.apply(boundMethod, arguments);\n\t      reboundMethod.__reactBoundContext = component;\n\t      reboundMethod.__reactBoundMethod = method;\n\t      reboundMethod.__reactBoundArguments = args;\n\t      return reboundMethod;\n\t    };\n\t  }\n\t  return boundMethod;\n\t}\n\t\n\t/**\n\t * Binds all auto-bound methods in a component.\n\t *\n\t * @param {object} component Component whose method is going to be bound.\n\t */\n\tfunction bindAutoBindMethods(component) {\n\t  var pairs = component.__reactAutoBindPairs;\n\t  for (var i = 0; i < pairs.length; i += 2) {\n\t    var autoBindKey = pairs[i];\n\t    var method = pairs[i + 1];\n\t    component[autoBindKey] = bindAutoBindMethod(component, method);\n\t  }\n\t}\n\t\n\t/**\n\t * Add more to the ReactClass base class. These are all legacy features and\n\t * therefore not already part of the modern ReactComponent.\n\t */\n\tvar ReactClassMixin = {\n\t\n\t  /**\n\t   * TODO: This will be deprecated because state should always keep a consistent\n\t   * type signature and the only use case for this, is to avoid that.\n\t   */\n\t  replaceState: function (newState, callback) {\n\t    this.updater.enqueueReplaceState(this, newState);\n\t    if (callback) {\n\t      this.updater.enqueueCallback(this, callback, 'replaceState');\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Checks whether or not this composite component is mounted.\n\t   * @return {boolean} True if mounted, false otherwise.\n\t   * @protected\n\t   * @final\n\t   */\n\t  isMounted: function () {\n\t    return this.updater.isMounted(this);\n\t  }\n\t};\n\t\n\tvar ReactClassComponent = function () {};\n\t_assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);\n\t\n\t/**\n\t * Module for creating composite components.\n\t *\n\t * @class ReactClass\n\t */\n\tvar ReactClass = {\n\t\n\t  /**\n\t   * Creates a composite component class given a class specification.\n\t   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass\n\t   *\n\t   * @param {object} spec Class specification (which must define `render`).\n\t   * @return {function} Component constructor function.\n\t   * @public\n\t   */\n\t  createClass: function (spec) {\n\t    // To keep our warnings more understandable, we'll use a little hack here to\n\t    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't\n\t    // unnecessarily identify a class without displayName as 'Constructor'.\n\t    var Constructor = identity(function (props, context, updater) {\n\t      // This constructor gets overridden by mocks. The argument is used\n\t      // by mocks to assert on what gets mounted.\n\t\n\t      if (process.env.NODE_ENV !== 'production') {\n\t        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : void 0;\n\t      }\n\t\n\t      // Wire up auto-binding\n\t      if (this.__reactAutoBindPairs.length) {\n\t        bindAutoBindMethods(this);\n\t      }\n\t\n\t      this.props = props;\n\t      this.context = context;\n\t      this.refs = emptyObject;\n\t      this.updater = updater || ReactNoopUpdateQueue;\n\t\n\t      this.state = null;\n\t\n\t      // ReactClasses doesn't have constructors. Instead, they use the\n\t      // getInitialState and componentWillMount methods for initialization.\n\t\n\t      var initialState = this.getInitialState ? this.getInitialState() : null;\n\t      if (process.env.NODE_ENV !== 'production') {\n\t        // We allow auto-mocks to proceed as if they're returning null.\n\t        if (initialState === undefined && this.getInitialState._isMockFunction) {\n\t          // This is probably bad practice. Consider warning here and\n\t          // deprecating this convenience.\n\t          initialState = null;\n\t        }\n\t      }\n\t      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : _prodInvariant('82', Constructor.displayName || 'ReactCompositeComponent') : void 0;\n\t\n\t      this.state = initialState;\n\t    });\n\t    Constructor.prototype = new ReactClassComponent();\n\t    Constructor.prototype.constructor = Constructor;\n\t    Constructor.prototype.__reactAutoBindPairs = [];\n\t\n\t    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));\n\t\n\t    mixSpecIntoComponent(Constructor, spec);\n\t\n\t    // Initialize the defaultProps property after all mixins have been merged.\n\t    if (Constructor.getDefaultProps) {\n\t      Constructor.defaultProps = Constructor.getDefaultProps();\n\t    }\n\t\n\t    if (process.env.NODE_ENV !== 'production') {\n\t      // This is a tag to indicate that the use of these method names is ok,\n\t      // since it's used with createClass. If it's not, then it's likely a\n\t      // mistake so we'll warn you to use the static property, property\n\t      // initializer or constructor respectively.\n\t      if (Constructor.getDefaultProps) {\n\t        Constructor.getDefaultProps.isReactClassApproved = {};\n\t      }\n\t      if (Constructor.prototype.getInitialState) {\n\t        Constructor.prototype.getInitialState.isReactClassApproved = {};\n\t      }\n\t    }\n\t\n\t    !Constructor.prototype.render ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : _prodInvariant('83') : void 0;\n\t\n\t    if (process.env.NODE_ENV !== 'production') {\n\t      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : void 0;\n\t      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : void 0;\n\t    }\n\t\n\t    // Reduce time spent doing lookups by setting these on the prototype.\n\t    for (var methodName in ReactClassInterface) {\n\t      if (!Constructor.prototype[methodName]) {\n\t        Constructor.prototype[methodName] = null;\n\t      }\n\t    }\n\t\n\t    return Constructor;\n\t  },\n\t\n\t  injection: {\n\t    injectMixin: function (mixin) {\n\t      injectedMixins.push(mixin);\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ReactClass;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactPropTypeLocationNames = {};\n\t\n\tif (process.env.NODE_ENV !== 'production') {\n\t  ReactPropTypeLocationNames = {\n\t    prop: 'prop',\n\t    context: 'context',\n\t    childContext: 'child context'\n\t  };\n\t}\n\t\n\tmodule.exports = ReactPropTypeLocationNames;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactElement = __webpack_require__(10);\n\t\n\t/**\n\t * Create a factory that creates HTML tag elements.\n\t *\n\t * @private\n\t */\n\tvar createDOMFactory = ReactElement.createFactory;\n\tif (process.env.NODE_ENV !== 'production') {\n\t  var ReactElementValidator = __webpack_require__(26);\n\t  createDOMFactory = ReactElementValidator.createFactory;\n\t}\n\t\n\t/**\n\t * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.\n\t * This is also accessible via `React.DOM`.\n\t *\n\t * @public\n\t */\n\tvar ReactDOMFactories = {\n\t  a: createDOMFactory('a'),\n\t  abbr: createDOMFactory('abbr'),\n\t  address: createDOMFactory('address'),\n\t  area: createDOMFactory('area'),\n\t  article: createDOMFactory('article'),\n\t  aside: createDOMFactory('aside'),\n\t  audio: createDOMFactory('audio'),\n\t  b: createDOMFactory('b'),\n\t  base: createDOMFactory('base'),\n\t  bdi: createDOMFactory('bdi'),\n\t  bdo: createDOMFactory('bdo'),\n\t  big: createDOMFactory('big'),\n\t  blockquote: createDOMFactory('blockquote'),\n\t  body: createDOMFactory('body'),\n\t  br: createDOMFactory('br'),\n\t  button: createDOMFactory('button'),\n\t  canvas: createDOMFactory('canvas'),\n\t  caption: createDOMFactory('caption'),\n\t  cite: createDOMFactory('cite'),\n\t  code: createDOMFactory('code'),\n\t  col: createDOMFactory('col'),\n\t  colgroup: createDOMFactory('colgroup'),\n\t  data: createDOMFactory('data'),\n\t  datalist: createDOMFactory('datalist'),\n\t  dd: createDOMFactory('dd'),\n\t  del: createDOMFactory('del'),\n\t  details: createDOMFactory('details'),\n\t  dfn: createDOMFactory('dfn'),\n\t  dialog: createDOMFactory('dialog'),\n\t  div: createDOMFactory('div'),\n\t  dl: createDOMFactory('dl'),\n\t  dt: createDOMFactory('dt'),\n\t  em: createDOMFactory('em'),\n\t  embed: createDOMFactory('embed'),\n\t  fieldset: createDOMFactory('fieldset'),\n\t  figcaption: createDOMFactory('figcaption'),\n\t  figure: createDOMFactory('figure'),\n\t  footer: createDOMFactory('footer'),\n\t  form: createDOMFactory('form'),\n\t  h1: createDOMFactory('h1'),\n\t  h2: createDOMFactory('h2'),\n\t  h3: createDOMFactory('h3'),\n\t  h4: createDOMFactory('h4'),\n\t  h5: createDOMFactory('h5'),\n\t  h6: createDOMFactory('h6'),\n\t  head: createDOMFactory('head'),\n\t  header: createDOMFactory('header'),\n\t  hgroup: createDOMFactory('hgroup'),\n\t  hr: createDOMFactory('hr'),\n\t  html: createDOMFactory('html'),\n\t  i: createDOMFactory('i'),\n\t  iframe: createDOMFactory('iframe'),\n\t  img: createDOMFactory('img'),\n\t  input: createDOMFactory('input'),\n\t  ins: createDOMFactory('ins'),\n\t  kbd: createDOMFactory('kbd'),\n\t  keygen: createDOMFactory('keygen'),\n\t  label: createDOMFactory('label'),\n\t  legend: createDOMFactory('legend'),\n\t  li: createDOMFactory('li'),\n\t  link: createDOMFactory('link'),\n\t  main: createDOMFactory('main'),\n\t  map: createDOMFactory('map'),\n\t  mark: createDOMFactory('mark'),\n\t  menu: createDOMFactory('menu'),\n\t  menuitem: createDOMFactory('menuitem'),\n\t  meta: createDOMFactory('meta'),\n\t  meter: createDOMFactory('meter'),\n\t  nav: createDOMFactory('nav'),\n\t  noscript: createDOMFactory('noscript'),\n\t  object: createDOMFactory('object'),\n\t  ol: createDOMFactory('ol'),\n\t  optgroup: createDOMFactory('optgroup'),\n\t  option: createDOMFactory('option'),\n\t  output: createDOMFactory('output'),\n\t  p: createDOMFactory('p'),\n\t  param: createDOMFactory('param'),\n\t  picture: createDOMFactory('picture'),\n\t  pre: createDOMFactory('pre'),\n\t  progress: createDOMFactory('progress'),\n\t  q: createDOMFactory('q'),\n\t  rp: createDOMFactory('rp'),\n\t  rt: createDOMFactory('rt'),\n\t  ruby: createDOMFactory('ruby'),\n\t  s: createDOMFactory('s'),\n\t  samp: createDOMFactory('samp'),\n\t  script: createDOMFactory('script'),\n\t  section: createDOMFactory('section'),\n\t  select: createDOMFactory('select'),\n\t  small: createDOMFactory('small'),\n\t  source: createDOMFactory('source'),\n\t  span: createDOMFactory('span'),\n\t  strong: createDOMFactory('strong'),\n\t  style: createDOMFactory('style'),\n\t  sub: createDOMFactory('sub'),\n\t  summary: createDOMFactory('summary'),\n\t  sup: createDOMFactory('sup'),\n\t  table: createDOMFactory('table'),\n\t  tbody: createDOMFactory('tbody'),\n\t  td: createDOMFactory('td'),\n\t  textarea: createDOMFactory('textarea'),\n\t  tfoot: createDOMFactory('tfoot'),\n\t  th: createDOMFactory('th'),\n\t  thead: createDOMFactory('thead'),\n\t  time: createDOMFactory('time'),\n\t  title: createDOMFactory('title'),\n\t  tr: createDOMFactory('tr'),\n\t  track: createDOMFactory('track'),\n\t  u: createDOMFactory('u'),\n\t  ul: createDOMFactory('ul'),\n\t  'var': createDOMFactory('var'),\n\t  video: createDOMFactory('video'),\n\t  wbr: createDOMFactory('wbr'),\n\t\n\t  // SVG\n\t  circle: createDOMFactory('circle'),\n\t  clipPath: createDOMFactory('clipPath'),\n\t  defs: createDOMFactory('defs'),\n\t  ellipse: createDOMFactory('ellipse'),\n\t  g: createDOMFactory('g'),\n\t  image: createDOMFactory('image'),\n\t  line: createDOMFactory('line'),\n\t  linearGradient: createDOMFactory('linearGradient'),\n\t  mask: createDOMFactory('mask'),\n\t  path: createDOMFactory('path'),\n\t  pattern: createDOMFactory('pattern'),\n\t  polygon: createDOMFactory('polygon'),\n\t  polyline: createDOMFactory('polyline'),\n\t  radialGradient: createDOMFactory('radialGradient'),\n\t  rect: createDOMFactory('rect'),\n\t  stop: createDOMFactory('stop'),\n\t  svg: createDOMFactory('svg'),\n\t  text: createDOMFactory('text'),\n\t  tspan: createDOMFactory('tspan')\n\t};\n\t\n\tmodule.exports = ReactDOMFactories;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {/**\n\t * Copyright 2014-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t/**\n\t * ReactElementValidator provides a wrapper around a element factory\n\t * which validates the props passed to the element. This is intended to be\n\t * used only in DEV and could be replaced by a static type checker for languages\n\t * that support it.\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactCurrentOwner = __webpack_require__(11);\n\tvar ReactComponentTreeHook = __webpack_require__(27);\n\tvar ReactElement = __webpack_require__(10);\n\t\n\tvar checkReactTypeSpec = __webpack_require__(28);\n\t\n\tvar canDefineProperty = __webpack_require__(14);\n\tvar getIteratorFn = __webpack_require__(17);\n\tvar warning = __webpack_require__(12);\n\t\n\tfunction getDeclarationErrorAddendum() {\n\t  if (ReactCurrentOwner.current) {\n\t    var name = ReactCurrentOwner.current.getName();\n\t    if (name) {\n\t      return ' Check the render method of `' + name + '`.';\n\t    }\n\t  }\n\t  return '';\n\t}\n\t\n\t/**\n\t * Warn if there's no key explicitly set on dynamic arrays of children or\n\t * object keys are not valid. This allows us to keep track of children between\n\t * updates.\n\t */\n\tvar ownerHasKeyUseWarning = {};\n\t\n\tfunction getCurrentComponentErrorInfo(parentType) {\n\t  var info = getDeclarationErrorAddendum();\n\t\n\t  if (!info) {\n\t    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\t    if (parentName) {\n\t      info = ' Check the top-level render call using <' + parentName + '>.';\n\t    }\n\t  }\n\t  return info;\n\t}\n\t\n\t/**\n\t * Warn if the element doesn't have an explicit key assigned to it.\n\t * This element is in an array. The array could grow and shrink or be\n\t * reordered. All children that haven't already been validated are required to\n\t * have a \"key\" property assigned to it. Error statuses are cached so a warning\n\t * will only be shown once.\n\t *\n\t * @internal\n\t * @param {ReactElement} element Element that requires a key.\n\t * @param {*} parentType element's parent's type.\n\t */\n\tfunction validateExplicitKey(element, parentType) {\n\t  if (!element._store || element._store.validated || element.key != null) {\n\t    return;\n\t  }\n\t  element._store.validated = true;\n\t\n\t  var memoizer = ownerHasKeyUseWarning.uniqueKey || (ownerHasKeyUseWarning.uniqueKey = {});\n\t\n\t  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\t  if (memoizer[currentComponentErrorInfo]) {\n\t    return;\n\t  }\n\t  memoizer[currentComponentErrorInfo] = true;\n\t\n\t  // Usually the current owner is the offender, but if it accepts children as a\n\t  // property, it may be the creator of the child that's responsible for\n\t  // assigning it a key.\n\t  var childOwner = '';\n\t  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n\t    // Give the component that originally created this child.\n\t    childOwner = ' It was passed a child from ' + element._owner.getName() + '.';\n\t  }\n\t\n\t  process.env.NODE_ENV !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique \"key\" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, ReactComponentTreeHook.getCurrentStackAddendum(element)) : void 0;\n\t}\n\t\n\t/**\n\t * Ensure that every element either is passed in a static location, in an\n\t * array with an explicit keys property defined, or in an object literal\n\t * with valid key property.\n\t *\n\t * @internal\n\t * @param {ReactNode} node Statically passed child of any type.\n\t * @param {*} parentType node's parent's type.\n\t */\n\tfunction validateChildKeys(node, parentType) {\n\t  if (typeof node !== 'object') {\n\t    return;\n\t  }\n\t  if (Array.isArray(node)) {\n\t    for (var i = 0; i < node.length; i++) {\n\t      var child = node[i];\n\t      if (ReactElement.isValidElement(child)) {\n\t        validateExplicitKey(child, parentType);\n\t      }\n\t    }\n\t  } else if (ReactElement.isValidElement(node)) {\n\t    // This element was passed in a valid location.\n\t    if (node._store) {\n\t      node._store.validated = true;\n\t    }\n\t  } else if (node) {\n\t    var iteratorFn = getIteratorFn(node);\n\t    // Entry iterators provide implicit keys.\n\t    if (iteratorFn) {\n\t      if (iteratorFn !== node.entries) {\n\t        var iterator = iteratorFn.call(node);\n\t        var step;\n\t        while (!(step = iterator.next()).done) {\n\t          if (ReactElement.isValidElement(step.value)) {\n\t            validateExplicitKey(step.value, parentType);\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Given an element, validate that its props follow the propTypes definition,\n\t * provided by the type.\n\t *\n\t * @param {ReactElement} element\n\t */\n\tfunction validatePropTypes(element) {\n\t  var componentClass = element.type;\n\t  if (typeof componentClass !== 'function') {\n\t    return;\n\t  }\n\t  var name = componentClass.displayName || componentClass.name;\n\t  if (componentClass.propTypes) {\n\t    checkReactTypeSpec(componentClass.propTypes, element.props, 'prop', name, element, null);\n\t  }\n\t  if (typeof componentClass.getDefaultProps === 'function') {\n\t    process.env.NODE_ENV !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;\n\t  }\n\t}\n\t\n\tvar ReactElementValidator = {\n\t\n\t  createElement: function (type, props, children) {\n\t    var validType = typeof type === 'string' || typeof type === 'function';\n\t    // We warn in this case but don't throw. We expect the element creation to\n\t    // succeed and there will likely be errors in render.\n\t    if (!validType) {\n\t      process.env.NODE_ENV !== 'production' ? warning(false, 'React.createElement: type should not be null, undefined, boolean, or ' + 'number. It should be a string (for DOM elements) or a ReactClass ' + '(for composite components).%s', getDeclarationErrorAddendum()) : void 0;\n\t    }\n\t\n\t    var element = ReactElement.createElement.apply(this, arguments);\n\t\n\t    // The result can be nullish if a mock or a custom function is used.\n\t    // TODO: Drop this when these are no longer allowed as the type argument.\n\t    if (element == null) {\n\t      return element;\n\t    }\n\t\n\t    // Skip key warning if the type isn't valid since our key validation logic\n\t    // doesn't expect a non-string/function type and can throw confusing errors.\n\t    // We don't want exception behavior to differ between dev and prod.\n\t    // (Rendering will throw with a helpful message and as soon as the type is\n\t    // fixed, the key warnings will appear.)\n\t    if (validType) {\n\t      for (var i = 2; i < arguments.length; i++) {\n\t        validateChildKeys(arguments[i], type);\n\t      }\n\t    }\n\t\n\t    validatePropTypes(element);\n\t\n\t    return element;\n\t  },\n\t\n\t  createFactory: function (type) {\n\t    var validatedFactory = ReactElementValidator.createElement.bind(null, type);\n\t    // Legacy hook TODO: Warn if this is accessed\n\t    validatedFactory.type = type;\n\t\n\t    if (process.env.NODE_ENV !== 'production') {\n\t      if (canDefineProperty) {\n\t        Object.defineProperty(validatedFactory, 'type', {\n\t          enumerable: false,\n\t          get: function () {\n\t            process.env.NODE_ENV !== 'production' ? warning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.') : void 0;\n\t            Object.defineProperty(this, 'type', {\n\t              value: type\n\t            });\n\t            return type;\n\t          }\n\t        });\n\t      }\n\t    }\n\t\n\t    return validatedFactory;\n\t  },\n\t\n\t  cloneElement: function (element, props, children) {\n\t    var newElement = ReactElement.cloneElement.apply(this, arguments);\n\t    for (var i = 2; i < arguments.length; i++) {\n\t      validateChildKeys(arguments[i], newElement.type);\n\t    }\n\t    validatePropTypes(newElement);\n\t    return newElement;\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ReactElementValidator;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {/**\n\t * Copyright 2016-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(8);\n\t\n\tvar ReactCurrentOwner = __webpack_require__(11);\n\t\n\tvar invariant = __webpack_require__(9);\n\tvar warning = __webpack_require__(12);\n\t\n\tfunction isNative(fn) {\n\t  // Based on isNative() from Lodash\n\t  var funcToString = Function.prototype.toString;\n\t  var hasOwnProperty = Object.prototype.hasOwnProperty;\n\t  var reIsNative = RegExp('^' + funcToString\n\t  // Take an example native function source for comparison\n\t  .call(hasOwnProperty)\n\t  // Strip regex characters so we can use it for regex\n\t  .replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n\t  // Remove hasOwnProperty from the template to make it generic\n\t  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n\t  try {\n\t    var source = funcToString.call(fn);\n\t    return reIsNative.test(source);\n\t  } catch (err) {\n\t    return false;\n\t  }\n\t}\n\t\n\tvar canUseCollections =\n\t// Array.from\n\ttypeof Array.from === 'function' &&\n\t// Map\n\ttypeof Map === 'function' && isNative(Map) &&\n\t// Map.prototype.keys\n\tMap.prototype != null && typeof Map.prototype.keys === 'function' && isNative(Map.prototype.keys) &&\n\t// Set\n\ttypeof Set === 'function' && isNative(Set) &&\n\t// Set.prototype.keys\n\tSet.prototype != null && typeof Set.prototype.keys === 'function' && isNative(Set.prototype.keys);\n\t\n\tvar setItem;\n\tvar getItem;\n\tvar removeItem;\n\tvar getItemIDs;\n\tvar addRoot;\n\tvar removeRoot;\n\tvar getRootIDs;\n\t\n\tif (canUseCollections) {\n\t  var itemMap = new Map();\n\t  var rootIDSet = new Set();\n\t\n\t  setItem = function (id, item) {\n\t    itemMap.set(id, item);\n\t  };\n\t  getItem = function (id) {\n\t    return itemMap.get(id);\n\t  };\n\t  removeItem = function (id) {\n\t    itemMap['delete'](id);\n\t  };\n\t  getItemIDs = function () {\n\t    return Array.from(itemMap.keys());\n\t  };\n\t\n\t  addRoot = function (id) {\n\t    rootIDSet.add(id);\n\t  };\n\t  removeRoot = function (id) {\n\t    rootIDSet['delete'](id);\n\t  };\n\t  getRootIDs = function () {\n\t    return Array.from(rootIDSet.keys());\n\t  };\n\t} else {\n\t  var itemByKey = {};\n\t  var rootByKey = {};\n\t\n\t  // Use non-numeric keys to prevent V8 performance issues:\n\t  // https://github.com/facebook/react/pull/7232\n\t  var getKeyFromID = function (id) {\n\t    return '.' + id;\n\t  };\n\t  var getIDFromKey = function (key) {\n\t    return parseInt(key.substr(1), 10);\n\t  };\n\t\n\t  setItem = function (id, item) {\n\t    var key = getKeyFromID(id);\n\t    itemByKey[key] = item;\n\t  };\n\t  getItem = function (id) {\n\t    var key = getKeyFromID(id);\n\t    return itemByKey[key];\n\t  };\n\t  removeItem = function (id) {\n\t    var key = getKeyFromID(id);\n\t    delete itemByKey[key];\n\t  };\n\t  getItemIDs = function () {\n\t    return Object.keys(itemByKey).map(getIDFromKey);\n\t  };\n\t\n\t  addRoot = function (id) {\n\t    var key = getKeyFromID(id);\n\t    rootByKey[key] = true;\n\t  };\n\t  removeRoot = function (id) {\n\t    var key = getKeyFromID(id);\n\t    delete rootByKey[key];\n\t  };\n\t  getRootIDs = function () {\n\t    return Object.keys(rootByKey).map(getIDFromKey);\n\t  };\n\t}\n\t\n\tvar unmountedIDs = [];\n\t\n\tfunction purgeDeep(id) {\n\t  var item = getItem(id);\n\t  if (item) {\n\t    var childIDs = item.childIDs;\n\t\n\t    removeItem(id);\n\t    childIDs.forEach(purgeDeep);\n\t  }\n\t}\n\t\n\tfunction describeComponentFrame(name, source, ownerName) {\n\t  return '\\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');\n\t}\n\t\n\tfunction getDisplayName(element) {\n\t  if (element == null) {\n\t    return '#empty';\n\t  } else if (typeof element === 'string' || typeof element === 'number') {\n\t    return '#text';\n\t  } else if (typeof element.type === 'string') {\n\t    return element.type;\n\t  } else {\n\t    return element.type.displayName || element.type.name || 'Unknown';\n\t  }\n\t}\n\t\n\tfunction describeID(id) {\n\t  var name = ReactComponentTreeHook.getDisplayName(id);\n\t  var element = ReactComponentTreeHook.getElement(id);\n\t  var ownerID = ReactComponentTreeHook.getOwnerID(id);\n\t  var ownerName;\n\t  if (ownerID) {\n\t    ownerName = ReactComponentTreeHook.getDisplayName(ownerID);\n\t  }\n\t  process.env.NODE_ENV !== 'production' ? warning(element, 'ReactComponentTreeHook: Missing React element for debugID %s when ' + 'building stack', id) : void 0;\n\t  return describeComponentFrame(name, element && element._source, ownerName);\n\t}\n\t\n\tvar ReactComponentTreeHook = {\n\t  onSetChildren: function (id, nextChildIDs) {\n\t    var item = getItem(id);\n\t    !item ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;\n\t    item.childIDs = nextChildIDs;\n\t\n\t    for (var i = 0; i < nextChildIDs.length; i++) {\n\t      var nextChildID = nextChildIDs[i];\n\t      var nextChild = getItem(nextChildID);\n\t      !nextChild ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected hook events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('140') : void 0;\n\t      !(nextChild.childIDs != null || typeof nextChild.element !== 'object' || nextChild.element == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().') : _prodInvariant('141') : void 0;\n\t      !nextChild.isMounted ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;\n\t      if (nextChild.parentID == null) {\n\t        nextChild.parentID = id;\n\t        // TODO: This shouldn't be necessary but mounting a new root during in\n\t        // componentWillMount currently causes not-yet-mounted components to\n\t        // be purged from our tree data so their parent id is missing.\n\t      }\n\t      !(nextChild.parentID === id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('142', nextChildID, nextChild.parentID, id) : void 0;\n\t    }\n\t  },\n\t  onBeforeMountComponent: function (id, element, parentID) {\n\t    var item = {\n\t      element: element,\n\t      parentID: parentID,\n\t      text: null,\n\t      childIDs: [],\n\t      isMounted: false,\n\t      updateCount: 0\n\t    };\n\t    setItem(id, item);\n\t  },\n\t  onBeforeUpdateComponent: function (id, element) {\n\t    var item = getItem(id);\n\t    if (!item || !item.isMounted) {\n\t      // We may end up here as a result of setState() in componentWillUnmount().\n\t      // In this case, ignore the element.\n\t      return;\n\t    }\n\t    item.element = element;\n\t  },\n\t  onMountComponent: function (id) {\n\t    var item = getItem(id);\n\t    !item ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;\n\t    item.isMounted = true;\n\t    var isRoot = item.parentID === 0;\n\t    if (isRoot) {\n\t      addRoot(id);\n\t    }\n\t  },\n\t  onUpdateComponent: function (id) {\n\t    var item = getItem(id);\n\t    if (!item || !item.isMounted) {\n\t      // We may end up here as a result of setState() in componentWillUnmount().\n\t      // In this case, ignore the element.\n\t      return;\n\t    }\n\t    item.updateCount++;\n\t  },\n\t  onUnmountComponent: function (id) {\n\t    var item = getItem(id);\n\t    if (item) {\n\t      // We need to check if it exists.\n\t      // `item` might not exist if it is inside an error boundary, and a sibling\n\t      // error boundary child threw while mounting. Then this instance never\n\t      // got a chance to mount, but it still gets an unmounting event during\n\t      // the error boundary cleanup.\n\t      item.isMounted = false;\n\t      var isRoot = item.parentID === 0;\n\t      if (isRoot) {\n\t        removeRoot(id);\n\t      }\n\t    }\n\t    unmountedIDs.push(id);\n\t  },\n\t  purgeUnmountedComponents: function () {\n\t    if (ReactComponentTreeHook._preventPurging) {\n\t      // Should only be used for testing.\n\t      return;\n\t    }\n\t\n\t    for (var i = 0; i < unmountedIDs.length; i++) {\n\t      var id = unmountedIDs[i];\n\t      purgeDeep(id);\n\t    }\n\t    unmountedIDs.length = 0;\n\t  },\n\t  isMounted: function (id) {\n\t    var item = getItem(id);\n\t    return item ? item.isMounted : false;\n\t  },\n\t  getCurrentStackAddendum: function (topElement) {\n\t    var info = '';\n\t    if (topElement) {\n\t      var name = getDisplayName(topElement);\n\t      var owner = topElement._owner;\n\t      info += describeComponentFrame(name, topElement._source, owner && owner.getName());\n\t    }\n\t\n\t    var currentOwner = ReactCurrentOwner.current;\n\t    var id = currentOwner && currentOwner._debugID;\n\t\n\t    info += ReactComponentTreeHook.getStackAddendumByID(id);\n\t    return info;\n\t  },\n\t  getStackAddendumByID: function (id) {\n\t    var info = '';\n\t    while (id) {\n\t      info += describeID(id);\n\t      id = ReactComponentTreeHook.getParentID(id);\n\t    }\n\t    return info;\n\t  },\n\t  getChildIDs: function (id) {\n\t    var item = getItem(id);\n\t    return item ? item.childIDs : [];\n\t  },\n\t  getDisplayName: function (id) {\n\t    var element = ReactComponentTreeHook.getElement(id);\n\t    if (!element) {\n\t      return null;\n\t    }\n\t    return getDisplayName(element);\n\t  },\n\t  getElement: function (id) {\n\t    var item = getItem(id);\n\t    return item ? item.element : null;\n\t  },\n\t  getOwnerID: function (id) {\n\t    var element = ReactComponentTreeHook.getElement(id);\n\t    if (!element || !element._owner) {\n\t      return null;\n\t    }\n\t    return element._owner._debugID;\n\t  },\n\t  getParentID: function (id) {\n\t    var item = getItem(id);\n\t    return item ? item.parentID : null;\n\t  },\n\t  getSource: function (id) {\n\t    var item = getItem(id);\n\t    var element = item ? item.element : null;\n\t    var source = element != null ? element._source : null;\n\t    return source;\n\t  },\n\t  getText: function (id) {\n\t    var element = ReactComponentTreeHook.getElement(id);\n\t    if (typeof element === 'string') {\n\t      return element;\n\t    } else if (typeof element === 'number') {\n\t      return '' + element;\n\t    } else {\n\t      return null;\n\t    }\n\t  },\n\t  getUpdateCount: function (id) {\n\t    var item = getItem(id);\n\t    return item ? item.updateCount : 0;\n\t  },\n\t\n\t\n\t  getRootIDs: getRootIDs,\n\t  getRegisteredIDs: getItemIDs\n\t};\n\t\n\tmodule.exports = ReactComponentTreeHook;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(8);\n\t\n\tvar ReactPropTypeLocationNames = __webpack_require__(24);\n\tvar ReactPropTypesSecret = __webpack_require__(29);\n\t\n\tvar invariant = __webpack_require__(9);\n\tvar warning = __webpack_require__(12);\n\t\n\tvar ReactComponentTreeHook;\n\t\n\tif (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {\n\t  // Temporary hack.\n\t  // Inline requires don't work well with Jest:\n\t  // https://github.com/facebook/react/issues/7240\n\t  // Remove the inline requires when we don't need them anymore:\n\t  // https://github.com/facebook/react/pull/7178\n\t  ReactComponentTreeHook = __webpack_require__(27);\n\t}\n\t\n\tvar loggedTypeFailures = {};\n\t\n\t/**\n\t * Assert that the values match with the type specs.\n\t * Error messages are memorized and will only be shown once.\n\t *\n\t * @param {object} typeSpecs Map of name to a ReactPropType\n\t * @param {object} values Runtime values that need to be type-checked\n\t * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n\t * @param {string} componentName Name of the component for error messages.\n\t * @param {?object} element The React element that is being type-checked\n\t * @param {?number} debugID The React component instance that is being type-checked\n\t * @private\n\t */\n\tfunction checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {\n\t  for (var typeSpecName in typeSpecs) {\n\t    if (typeSpecs.hasOwnProperty(typeSpecName)) {\n\t      var error;\n\t      // Prop type validation may throw. In case they do, we don't want to\n\t      // fail the render phase where it didn't fail before. So we log it.\n\t      // After these have been cleaned up, we'll let them throw.\n\t      try {\n\t        // This is intentionally an invariant that gets caught. It's the same\n\t        // behavior as without this statement except with a better message.\n\t        !(typeof typeSpecs[typeSpecName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;\n\t        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n\t      } catch (ex) {\n\t        error = ex;\n\t      }\n\t      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;\n\t      if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n\t        // Only monitor this failure once because there tends to be a lot of the\n\t        // same error.\n\t        loggedTypeFailures[error.message] = true;\n\t\n\t        var componentStackInfo = '';\n\t\n\t        if (process.env.NODE_ENV !== 'production') {\n\t          if (!ReactComponentTreeHook) {\n\t            ReactComponentTreeHook = __webpack_require__(27);\n\t          }\n\t          if (debugID !== null) {\n\t            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);\n\t          } else if (element !== null) {\n\t            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);\n\t          }\n\t        }\n\t\n\t        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tmodule.exports = checkReactTypeSpec;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))\n\n/***/ },\n/* 29 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\t\n\tmodule.exports = ReactPropTypesSecret;\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactElement = __webpack_require__(10);\n\tvar ReactPropTypeLocationNames = __webpack_require__(24);\n\tvar ReactPropTypesSecret = __webpack_require__(29);\n\t\n\tvar emptyFunction = __webpack_require__(13);\n\tvar getIteratorFn = __webpack_require__(17);\n\tvar warning = __webpack_require__(12);\n\t\n\t/**\n\t * Collection of methods that allow declaration and validation of props that are\n\t * supplied to React components. Example usage:\n\t *\n\t *   var Props = require('ReactPropTypes');\n\t *   var MyArticle = React.createClass({\n\t *     propTypes: {\n\t *       // An optional string prop named \"description\".\n\t *       description: Props.string,\n\t *\n\t *       // A required enum prop named \"category\".\n\t *       category: Props.oneOf(['News','Photos']).isRequired,\n\t *\n\t *       // A prop named \"dialog\" that requires an instance of Dialog.\n\t *       dialog: Props.instanceOf(Dialog).isRequired\n\t *     },\n\t *     render: function() { ... }\n\t *   });\n\t *\n\t * A more formal specification of how these methods are used:\n\t *\n\t *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n\t *   decl := ReactPropTypes.{type}(.isRequired)?\n\t *\n\t * Each and every declaration produces a function with the same signature. This\n\t * allows the creation of custom validation functions. For example:\n\t *\n\t *  var MyLink = React.createClass({\n\t *    propTypes: {\n\t *      // An optional string or URI prop named \"href\".\n\t *      href: function(props, propName, componentName) {\n\t *        var propValue = props[propName];\n\t *        if (propValue != null && typeof propValue !== 'string' &&\n\t *            !(propValue instanceof URI)) {\n\t *          return new Error(\n\t *            'Expected a string or an URI for ' + propName + ' in ' +\n\t *            componentName\n\t *          );\n\t *        }\n\t *      }\n\t *    },\n\t *    render: function() {...}\n\t *  });\n\t *\n\t * @internal\n\t */\n\t\n\tvar ANONYMOUS = '<<anonymous>>';\n\t\n\tvar ReactPropTypes = {\n\t  array: createPrimitiveTypeChecker('array'),\n\t  bool: createPrimitiveTypeChecker('boolean'),\n\t  func: createPrimitiveTypeChecker('function'),\n\t  number: createPrimitiveTypeChecker('number'),\n\t  object: createPrimitiveTypeChecker('object'),\n\t  string: createPrimitiveTypeChecker('string'),\n\t  symbol: createPrimitiveTypeChecker('symbol'),\n\t\n\t  any: createAnyTypeChecker(),\n\t  arrayOf: createArrayOfTypeChecker,\n\t  element: createElementTypeChecker(),\n\t  instanceOf: createInstanceTypeChecker,\n\t  node: createNodeChecker(),\n\t  objectOf: createObjectOfTypeChecker,\n\t  oneOf: createEnumTypeChecker,\n\t  oneOfType: createUnionTypeChecker,\n\t  shape: createShapeTypeChecker\n\t};\n\t\n\t/**\n\t * inlined Object.is polyfill to avoid requiring consumers ship their own\n\t * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n\t */\n\t/*eslint-disable no-self-compare*/\n\tfunction is(x, y) {\n\t  // SameValue algorithm\n\t  if (x === y) {\n\t    // Steps 1-5, 7-10\n\t    // Steps 6.b-6.e: +0 != -0\n\t    return x !== 0 || 1 / x === 1 / y;\n\t  } else {\n\t    // Step 6.a: NaN == NaN\n\t    return x !== x && y !== y;\n\t  }\n\t}\n\t/*eslint-enable no-self-compare*/\n\t\n\t/**\n\t * We use an Error-like object for backward compatibility as people may call\n\t * PropTypes directly and inspect their output. However we don't use real\n\t * Errors anymore. We don't inspect their stack anyway, and creating them\n\t * is prohibitively expensive if they are created too often, such as what\n\t * happens in oneOfType() for any type before the one that matched.\n\t */\n\tfunction PropTypeError(message) {\n\t  this.message = message;\n\t  this.stack = '';\n\t}\n\t// Make `instanceof Error` still work for returned errors.\n\tPropTypeError.prototype = Error.prototype;\n\t\n\tfunction createChainableTypeChecker(validate) {\n\t  if (process.env.NODE_ENV !== 'production') {\n\t    var manualPropTypeCallCache = {};\n\t  }\n\t  function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n\t    componentName = componentName || ANONYMOUS;\n\t    propFullName = propFullName || propName;\n\t    if (process.env.NODE_ENV !== 'production') {\n\t      if (secret !== ReactPropTypesSecret && typeof console !== 'undefined') {\n\t        var cacheKey = componentName + ':' + propName;\n\t        if (!manualPropTypeCallCache[cacheKey]) {\n\t          process.env.NODE_ENV !== 'production' ? warning(false, 'You are manually calling a React.PropTypes validation ' + 'function for the `%s` prop on `%s`. This is deprecated ' + 'and will not work in production with the next major version. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.', propFullName, componentName) : void 0;\n\t          manualPropTypeCallCache[cacheKey] = true;\n\t        }\n\t      }\n\t    }\n\t    if (props[propName] == null) {\n\t      var locationName = ReactPropTypeLocationNames[location];\n\t      if (isRequired) {\n\t        if (props[propName] === null) {\n\t          return new PropTypeError('The ' + locationName + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n\t        }\n\t        return new PropTypeError('The ' + locationName + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n\t      }\n\t      return null;\n\t    } else {\n\t      return validate(props, propName, componentName, location, propFullName);\n\t    }\n\t  }\n\t\n\t  var chainedCheckType = checkType.bind(null, false);\n\t  chainedCheckType.isRequired = checkType.bind(null, true);\n\t\n\t  return chainedCheckType;\n\t}\n\t\n\tfunction createPrimitiveTypeChecker(expectedType) {\n\t  function validate(props, propName, componentName, location, propFullName, secret) {\n\t    var propValue = props[propName];\n\t    var propType = getPropType(propValue);\n\t    if (propType !== expectedType) {\n\t      var locationName = ReactPropTypeLocationNames[location];\n\t      // `propValue` being instance of, say, date/regexp, pass the 'object'\n\t      // check, but we can offer a more precise error message here rather than\n\t      // 'of type `object`'.\n\t      var preciseType = getPreciseType(propValue);\n\t\n\t      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n\t    }\n\t    return null;\n\t  }\n\t  return createChainableTypeChecker(validate);\n\t}\n\t\n\tfunction createAnyTypeChecker() {\n\t  return createChainableTypeChecker(emptyFunction.thatReturns(null));\n\t}\n\t\n\tfunction createArrayOfTypeChecker(typeChecker) {\n\t  function validate(props, propName, componentName, location, propFullName) {\n\t    if (typeof typeChecker !== 'function') {\n\t      return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n\t    }\n\t    var propValue = props[propName];\n\t    if (!Array.isArray(propValue)) {\n\t      var locationName = ReactPropTypeLocationNames[location];\n\t      var propType = getPropType(propValue);\n\t      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n\t    }\n\t    for (var i = 0; i < propValue.length; i++) {\n\t      var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n\t      if (error instanceof Error) {\n\t        return error;\n\t      }\n\t    }\n\t    return null;\n\t  }\n\t  return createChainableTypeChecker(validate);\n\t}\n\t\n\tfunction createElementTypeChecker() {\n\t  function validate(props, propName, componentName, location, propFullName) {\n\t    var propValue = props[propName];\n\t    if (!ReactElement.isValidElement(propValue)) {\n\t      var locationName = ReactPropTypeLocationNames[location];\n\t      var propType = getPropType(propValue);\n\t      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n\t    }\n\t    return null;\n\t  }\n\t  return createChainableTypeChecker(validate);\n\t}\n\t\n\tfunction createInstanceTypeChecker(expectedClass) {\n\t  function validate(props, propName, componentName, location, propFullName) {\n\t    if (!(props[propName] instanceof expectedClass)) {\n\t      var locationName = ReactPropTypeLocationNames[location];\n\t      var expectedClassName = expectedClass.name || ANONYMOUS;\n\t      var actualClassName = getClassName(props[propName]);\n\t      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n\t    }\n\t    return null;\n\t  }\n\t  return createChainableTypeChecker(validate);\n\t}\n\t\n\tfunction createEnumTypeChecker(expectedValues) {\n\t  if (!Array.isArray(expectedValues)) {\n\t    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;\n\t    return emptyFunction.thatReturnsNull;\n\t  }\n\t\n\t  function validate(props, propName, componentName, location, propFullName) {\n\t    var propValue = props[propName];\n\t    for (var i = 0; i < expectedValues.length; i++) {\n\t      if (is(propValue, expectedValues[i])) {\n\t        return null;\n\t      }\n\t    }\n\t\n\t    var locationName = ReactPropTypeLocationNames[location];\n\t    var valuesString = JSON.stringify(expectedValues);\n\t    return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n\t  }\n\t  return createChainableTypeChecker(validate);\n\t}\n\t\n\tfunction createObjectOfTypeChecker(typeChecker) {\n\t  function validate(props, propName, componentName, location, propFullName) {\n\t    if (typeof typeChecker !== 'function') {\n\t      return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n\t    }\n\t    var propValue = props[propName];\n\t    var propType = getPropType(propValue);\n\t    if (propType !== 'object') {\n\t      var locationName = ReactPropTypeLocationNames[location];\n\t      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n\t    }\n\t    for (var key in propValue) {\n\t      if (propValue.hasOwnProperty(key)) {\n\t        var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n\t        if (error instanceof Error) {\n\t          return error;\n\t        }\n\t      }\n\t    }\n\t    return null;\n\t  }\n\t  return createChainableTypeChecker(validate);\n\t}\n\t\n\tfunction createUnionTypeChecker(arrayOfTypeCheckers) {\n\t  if (!Array.isArray(arrayOfTypeCheckers)) {\n\t    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n\t    return emptyFunction.thatReturnsNull;\n\t  }\n\t\n\t  function validate(props, propName, componentName, location, propFullName) {\n\t    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n\t      var checker = arrayOfTypeCheckers[i];\n\t      if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n\t        return null;\n\t      }\n\t    }\n\t\n\t    var locationName = ReactPropTypeLocationNames[location];\n\t    return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n\t  }\n\t  return createChainableTypeChecker(validate);\n\t}\n\t\n\tfunction createNodeChecker() {\n\t  function validate(props, propName, componentName, location, propFullName) {\n\t    if (!isNode(props[propName])) {\n\t      var locationName = ReactPropTypeLocationNames[location];\n\t      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n\t    }\n\t    return null;\n\t  }\n\t  return createChainableTypeChecker(validate);\n\t}\n\t\n\tfunction createShapeTypeChecker(shapeTypes) {\n\t  function validate(props, propName, componentName, location, propFullName) {\n\t    var propValue = props[propName];\n\t    var propType = getPropType(propValue);\n\t    if (propType !== 'object') {\n\t      var locationName = ReactPropTypeLocationNames[location];\n\t      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n\t    }\n\t    for (var key in shapeTypes) {\n\t      var checker = shapeTypes[key];\n\t      if (!checker) {\n\t        continue;\n\t      }\n\t      var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n\t      if (error) {\n\t        return error;\n\t      }\n\t    }\n\t    return null;\n\t  }\n\t  return createChainableTypeChecker(validate);\n\t}\n\t\n\tfunction isNode(propValue) {\n\t  switch (typeof propValue) {\n\t    case 'number':\n\t    case 'string':\n\t    case 'undefined':\n\t      return true;\n\t    case 'boolean':\n\t      return !propValue;\n\t    case 'object':\n\t      if (Array.isArray(propValue)) {\n\t        return propValue.every(isNode);\n\t      }\n\t      if (propValue === null || ReactElement.isValidElement(propValue)) {\n\t        return true;\n\t      }\n\t\n\t      var iteratorFn = getIteratorFn(propValue);\n\t      if (iteratorFn) {\n\t        var iterator = iteratorFn.call(propValue);\n\t        var step;\n\t        if (iteratorFn !== propValue.entries) {\n\t          while (!(step = iterator.next()).done) {\n\t            if (!isNode(step.value)) {\n\t              return false;\n\t            }\n\t          }\n\t        } else {\n\t          // Iterator will provide entry [k,v] tuples rather than values.\n\t          while (!(step = iterator.next()).done) {\n\t            var entry = step.value;\n\t            if (entry) {\n\t              if (!isNode(entry[1])) {\n\t                return false;\n\t              }\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        return false;\n\t      }\n\t\n\t      return true;\n\t    default:\n\t      return false;\n\t  }\n\t}\n\t\n\tfunction isSymbol(propType, propValue) {\n\t  // Native Symbol.\n\t  if (propType === 'symbol') {\n\t    return true;\n\t  }\n\t\n\t  // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n\t  if (propValue['@@toStringTag'] === 'Symbol') {\n\t    return true;\n\t  }\n\t\n\t  // Fallback for non-spec compliant Symbols which are polyfilled.\n\t  if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n\t    return true;\n\t  }\n\t\n\t  return false;\n\t}\n\t\n\t// Equivalent of `typeof` but with special handling for array and regexp.\n\tfunction getPropType(propValue) {\n\t  var propType = typeof propValue;\n\t  if (Array.isArray(propValue)) {\n\t    return 'array';\n\t  }\n\t  if (propValue instanceof RegExp) {\n\t    // Old webkits (at least until Android 4.0) return 'function' rather than\n\t    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n\t    // passes PropTypes.object.\n\t    return 'object';\n\t  }\n\t  if (isSymbol(propType, propValue)) {\n\t    return 'symbol';\n\t  }\n\t  return propType;\n\t}\n\t\n\t// This handles more types than `getPropType`. Only used for error messages.\n\t// See `createPrimitiveTypeChecker`.\n\tfunction getPreciseType(propValue) {\n\t  var propType = getPropType(propValue);\n\t  if (propType === 'object') {\n\t    if (propValue instanceof Date) {\n\t      return 'date';\n\t    } else if (propValue instanceof RegExp) {\n\t      return 'regexp';\n\t    }\n\t  }\n\t  return propType;\n\t}\n\t\n\t// Returns class name of the object, if any.\n\tfunction getClassName(propValue) {\n\t  if (!propValue.constructor || !propValue.constructor.name) {\n\t    return ANONYMOUS;\n\t  }\n\t  return propValue.constructor.name;\n\t}\n\t\n\tmodule.exports = ReactPropTypes;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))\n\n/***/ },\n/* 31 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tmodule.exports = '15.4.1';\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(8);\n\t\n\tvar ReactElement = __webpack_require__(10);\n\t\n\tvar invariant = __webpack_require__(9);\n\t\n\t/**\n\t * Returns the first child in a collection of children and verifies that there\n\t * is only one child in the collection.\n\t *\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only\n\t *\n\t * The current implementation of this function assumes that a single child gets\n\t * passed without a wrapper, but the purpose of this helper function is to\n\t * abstract away the particular structure of children.\n\t *\n\t * @param {?object} children Child collection structure.\n\t * @return {ReactElement} The first and only `ReactElement` contained in the\n\t * structure.\n\t */\n\tfunction onlyChild(children) {\n\t  !ReactElement.isValidElement(children) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;\n\t  return children;\n\t}\n\t\n\tmodule.exports = onlyChild;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\texports.default = activeItem;\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _immutable = __webpack_require__(34);\n\t\n\tvar _immutable2 = _interopRequireDefault(_immutable);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t// TODO: Split this out as a separate react component and add as a dependency\n\t\n\tfunction activeItem(WrappedComponent) {\n\t  return function (_React$Component) {\n\t    _inherits(ActiveItem, _React$Component);\n\t\n\t    function ActiveItem(props) {\n\t      _classCallCheck(this, ActiveItem);\n\t\n\t      var _this = _possibleConstructorReturn(this, (ActiveItem.__proto__ || Object.getPrototypeOf(ActiveItem)).call(this, props));\n\t\n\t      _this.state = { items: _this.props.items };\n\t      _this._bindInit();\n\t      return _this;\n\t    }\n\t\n\t    _createClass(ActiveItem, [{\n\t      key: '_bindInit',\n\t      value: function _bindInit() {\n\t        this.getActiveItem = this.getActiveItem.bind(this);\n\t        this.setActiveItem = this.setActiveItem.bind(this);\n\t        this.getActiveItemIndex = this.getActiveItemIndex.bind(this);\n\t        this._hasFocus = this._hasFocus.bind(this);\n\t        this._updateFocus = this._updateFocus.bind(this);\n\t        this._immutableAssets = this._immutableAssets.bind(this);\n\t        this._unFocused = this._unFocused.bind(this);\n\t        this._handlers = this._handlers.bind(this);\n\t      }\n\t    }, {\n\t      key: 'setActiveItem',\n\t      value: function setActiveItem(i, e) {\n\t        if (typeof e != 'undefined') {\n\t          e.preventDefault();\n\t        }\n\t        this.setState({ items: this._updateFocus(this._unFocused(), i, true).toJS() });\n\t      }\n\t    }, {\n\t      key: 'getActiveItem',\n\t      value: function getActiveItem() {\n\t        return this.state.items.find(this._hasFocus);\n\t      }\n\t    }, {\n\t      key: 'getActiveItemIndex',\n\t      value: function getActiveItemIndex() {\n\t        return this.state.items.findIndex(this._hasFocus);\n\t      }\n\t\n\t      // \"private\"\n\t\n\t    }, {\n\t      key: '_hasFocus',\n\t      value: function _hasFocus(item) {\n\t        return item.focus == true;\n\t      }\n\t    }, {\n\t      key: '_unFocused',\n\t      value: function _unFocused() {\n\t        return this._updateFocus(this._immutableAssets(), this.getActiveItemIndex(), false);\n\t      }\n\t    }, {\n\t      key: '_updateFocus',\n\t      value: function _updateFocus(list, i, status) {\n\t        return list.update(i, function (item) {\n\t          return item.set('focus', status);\n\t        });\n\t      }\n\t    }, {\n\t      key: '_immutableAssets',\n\t      value: function _immutableAssets() {\n\t        return new _immutable2.default.fromJS(this.state.items);\n\t      }\n\t    }, {\n\t      key: '_handlers',\n\t      value: function _handlers() {\n\t        return {\n\t          setActiveItem: this.setActiveItem.bind(this),\n\t          getActiveItem: this.getActiveItem.bind(this),\n\t          getActiveItemIndex: this.getActiveItemIndex.bind(this)\n\t        };\n\t      }\n\t    }, {\n\t      key: 'render',\n\t      value: function render() {\n\t        return _react2.default.createElement(WrappedComponent, _extends({}, this.props, this.state, this._handlers()));\n\t      }\n\t    }]);\n\t\n\t    return ActiveItem;\n\t  }(_react2.default.Component);\n\t}\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t *  Copyright (c) 2014-2015, Facebook, Inc.\n\t *  All rights reserved.\n\t *\n\t *  This source code is licensed under the BSD-style license found in the\n\t *  LICENSE file in the root directory of this source tree. An additional grant\n\t *  of patent rights can be found in the PATENTS file in the same directory.\n\t */\n\t\n\t(function (global, factory) {\n\t   true ? module.exports = factory() :\n\t  typeof define === 'function' && define.amd ? define(factory) :\n\t  (global.Immutable = factory());\n\t}(this, function () { 'use strict';var SLICE$0 = Array.prototype.slice;\n\t\n\t  function createClass(ctor, superClass) {\n\t    if (superClass) {\n\t      ctor.prototype = Object.create(superClass.prototype);\n\t    }\n\t    ctor.prototype.constructor = ctor;\n\t  }\n\t\n\t  function Iterable(value) {\n\t      return isIterable(value) ? value : Seq(value);\n\t    }\n\t\n\t\n\t  createClass(KeyedIterable, Iterable);\n\t    function KeyedIterable(value) {\n\t      return isKeyed(value) ? value : KeyedSeq(value);\n\t    }\n\t\n\t\n\t  createClass(IndexedIterable, Iterable);\n\t    function IndexedIterable(value) {\n\t      return isIndexed(value) ? value : IndexedSeq(value);\n\t    }\n\t\n\t\n\t  createClass(SetIterable, Iterable);\n\t    function SetIterable(value) {\n\t      return isIterable(value) && !isAssociative(value) ? value : SetSeq(value);\n\t    }\n\t\n\t\n\t\n\t  function isIterable(maybeIterable) {\n\t    return !!(maybeIterable && maybeIterable[IS_ITERABLE_SENTINEL]);\n\t  }\n\t\n\t  function isKeyed(maybeKeyed) {\n\t    return !!(maybeKeyed && maybeKeyed[IS_KEYED_SENTINEL]);\n\t  }\n\t\n\t  function isIndexed(maybeIndexed) {\n\t    return !!(maybeIndexed && maybeIndexed[IS_INDEXED_SENTINEL]);\n\t  }\n\t\n\t  function isAssociative(maybeAssociative) {\n\t    return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);\n\t  }\n\t\n\t  function isOrdered(maybeOrdered) {\n\t    return !!(maybeOrdered && maybeOrdered[IS_ORDERED_SENTINEL]);\n\t  }\n\t\n\t  Iterable.isIterable = isIterable;\n\t  Iterable.isKeyed = isKeyed;\n\t  Iterable.isIndexed = isIndexed;\n\t  Iterable.isAssociative = isAssociative;\n\t  Iterable.isOrdered = isOrdered;\n\t\n\t  Iterable.Keyed = KeyedIterable;\n\t  Iterable.Indexed = IndexedIterable;\n\t  Iterable.Set = SetIterable;\n\t\n\t\n\t  var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n\t  var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n\t  var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n\t  var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n\t\n\t  // Used for setting prototype methods that IE8 chokes on.\n\t  var DELETE = 'delete';\n\t\n\t  // Constants describing the size of trie nodes.\n\t  var SHIFT = 5; // Resulted in best performance after ______?\n\t  var SIZE = 1 << SHIFT;\n\t  var MASK = SIZE - 1;\n\t\n\t  // A consistent shared value representing \"not set\" which equals nothing other\n\t  // than itself, and nothing that could be provided externally.\n\t  var NOT_SET = {};\n\t\n\t  // Boolean references, Rough equivalent of `bool &`.\n\t  var CHANGE_LENGTH = { value: false };\n\t  var DID_ALTER = { value: false };\n\t\n\t  function MakeRef(ref) {\n\t    ref.value = false;\n\t    return ref;\n\t  }\n\t\n\t  function SetRef(ref) {\n\t    ref && (ref.value = true);\n\t  }\n\t\n\t  // A function which returns a value representing an \"owner\" for transient writes\n\t  // to tries. The return value will only ever equal itself, and will not equal\n\t  // the return of any subsequent call of this function.\n\t  function OwnerID() {}\n\t\n\t  // http://jsperf.com/copy-array-inline\n\t  function arrCopy(arr, offset) {\n\t    offset = offset || 0;\n\t    var len = Math.max(0, arr.length - offset);\n\t    var newArr = new Array(len);\n\t    for (var ii = 0; ii < len; ii++) {\n\t      newArr[ii] = arr[ii + offset];\n\t    }\n\t    return newArr;\n\t  }\n\t\n\t  function ensureSize(iter) {\n\t    if (iter.size === undefined) {\n\t      iter.size = iter.__iterate(returnTrue);\n\t    }\n\t    return iter.size;\n\t  }\n\t\n\t  function wrapIndex(iter, index) {\n\t    // This implements \"is array index\" which the ECMAString spec defines as:\n\t    //\n\t    //     A String property name P is an array index if and only if\n\t    //     ToString(ToUint32(P)) is equal to P and ToUint32(P) is not equal\n\t    //     to 2^32−1.\n\t    //\n\t    // http://www.ecma-international.org/ecma-262/6.0/#sec-array-exotic-objects\n\t    if (typeof index !== 'number') {\n\t      var uint32Index = index >>> 0; // N >>> 0 is shorthand for ToUint32\n\t      if ('' + uint32Index !== index || uint32Index === 4294967295) {\n\t        return NaN;\n\t      }\n\t      index = uint32Index;\n\t    }\n\t    return index < 0 ? ensureSize(iter) + index : index;\n\t  }\n\t\n\t  function returnTrue() {\n\t    return true;\n\t  }\n\t\n\t  function wholeSlice(begin, end, size) {\n\t    return (begin === 0 || (size !== undefined && begin <= -size)) &&\n\t      (end === undefined || (size !== undefined && end >= size));\n\t  }\n\t\n\t  function resolveBegin(begin, size) {\n\t    return resolveIndex(begin, size, 0);\n\t  }\n\t\n\t  function resolveEnd(end, size) {\n\t    return resolveIndex(end, size, size);\n\t  }\n\t\n\t  function resolveIndex(index, size, defaultIndex) {\n\t    return index === undefined ?\n\t      defaultIndex :\n\t      index < 0 ?\n\t        Math.max(0, size + index) :\n\t        size === undefined ?\n\t          index :\n\t          Math.min(size, index);\n\t  }\n\t\n\t  /* global Symbol */\n\t\n\t  var ITERATE_KEYS = 0;\n\t  var ITERATE_VALUES = 1;\n\t  var ITERATE_ENTRIES = 2;\n\t\n\t  var REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n\t  var FAUX_ITERATOR_SYMBOL = '@@iterator';\n\t\n\t  var ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;\n\t\n\t\n\t  function Iterator(next) {\n\t      this.next = next;\n\t    }\n\t\n\t    Iterator.prototype.toString = function() {\n\t      return '[Iterator]';\n\t    };\n\t\n\t\n\t  Iterator.KEYS = ITERATE_KEYS;\n\t  Iterator.VALUES = ITERATE_VALUES;\n\t  Iterator.ENTRIES = ITERATE_ENTRIES;\n\t\n\t  Iterator.prototype.inspect =\n\t  Iterator.prototype.toSource = function () { return this.toString(); }\n\t  Iterator.prototype[ITERATOR_SYMBOL] = function () {\n\t    return this;\n\t  };\n\t\n\t\n\t  function iteratorValue(type, k, v, iteratorResult) {\n\t    var value = type === 0 ? k : type === 1 ? v : [k, v];\n\t    iteratorResult ? (iteratorResult.value = value) : (iteratorResult = {\n\t      value: value, done: false\n\t    });\n\t    return iteratorResult;\n\t  }\n\t\n\t  function iteratorDone() {\n\t    return { value: undefined, done: true };\n\t  }\n\t\n\t  function hasIterator(maybeIterable) {\n\t    return !!getIteratorFn(maybeIterable);\n\t  }\n\t\n\t  function isIterator(maybeIterator) {\n\t    return maybeIterator && typeof maybeIterator.next === 'function';\n\t  }\n\t\n\t  function getIterator(iterable) {\n\t    var iteratorFn = getIteratorFn(iterable);\n\t    return iteratorFn && iteratorFn.call(iterable);\n\t  }\n\t\n\t  function getIteratorFn(iterable) {\n\t    var iteratorFn = iterable && (\n\t      (REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL]) ||\n\t      iterable[FAUX_ITERATOR_SYMBOL]\n\t    );\n\t    if (typeof iteratorFn === 'function') {\n\t      return iteratorFn;\n\t    }\n\t  }\n\t\n\t  function isArrayLike(value) {\n\t    return value && typeof value.length === 'number';\n\t  }\n\t\n\t  createClass(Seq, Iterable);\n\t    function Seq(value) {\n\t      return value === null || value === undefined ? emptySequence() :\n\t        isIterable(value) ? value.toSeq() : seqFromValue(value);\n\t    }\n\t\n\t    Seq.of = function(/*...values*/) {\n\t      return Seq(arguments);\n\t    };\n\t\n\t    Seq.prototype.toSeq = function() {\n\t      return this;\n\t    };\n\t\n\t    Seq.prototype.toString = function() {\n\t      return this.__toString('Seq {', '}');\n\t    };\n\t\n\t    Seq.prototype.cacheResult = function() {\n\t      if (!this._cache && this.__iterateUncached) {\n\t        this._cache = this.entrySeq().toArray();\n\t        this.size = this._cache.length;\n\t      }\n\t      return this;\n\t    };\n\t\n\t    // abstract __iterateUncached(fn, reverse)\n\t\n\t    Seq.prototype.__iterate = function(fn, reverse) {\n\t      return seqIterate(this, fn, reverse, true);\n\t    };\n\t\n\t    // abstract __iteratorUncached(type, reverse)\n\t\n\t    Seq.prototype.__iterator = function(type, reverse) {\n\t      return seqIterator(this, type, reverse, true);\n\t    };\n\t\n\t\n\t\n\t  createClass(KeyedSeq, Seq);\n\t    function KeyedSeq(value) {\n\t      return value === null || value === undefined ?\n\t        emptySequence().toKeyedSeq() :\n\t        isIterable(value) ?\n\t          (isKeyed(value) ? value.toSeq() : value.fromEntrySeq()) :\n\t          keyedSeqFromValue(value);\n\t    }\n\t\n\t    KeyedSeq.prototype.toKeyedSeq = function() {\n\t      return this;\n\t    };\n\t\n\t\n\t\n\t  createClass(IndexedSeq, Seq);\n\t    function IndexedSeq(value) {\n\t      return value === null || value === undefined ? emptySequence() :\n\t        !isIterable(value) ? indexedSeqFromValue(value) :\n\t        isKeyed(value) ? value.entrySeq() : value.toIndexedSeq();\n\t    }\n\t\n\t    IndexedSeq.of = function(/*...values*/) {\n\t      return IndexedSeq(arguments);\n\t    };\n\t\n\t    IndexedSeq.prototype.toIndexedSeq = function() {\n\t      return this;\n\t    };\n\t\n\t    IndexedSeq.prototype.toString = function() {\n\t      return this.__toString('Seq [', ']');\n\t    };\n\t\n\t    IndexedSeq.prototype.__iterate = function(fn, reverse) {\n\t      return seqIterate(this, fn, reverse, false);\n\t    };\n\t\n\t    IndexedSeq.prototype.__iterator = function(type, reverse) {\n\t      return seqIterator(this, type, reverse, false);\n\t    };\n\t\n\t\n\t\n\t  createClass(SetSeq, Seq);\n\t    function SetSeq(value) {\n\t      return (\n\t        value === null || value === undefined ? emptySequence() :\n\t        !isIterable(value) ? indexedSeqFromValue(value) :\n\t        isKeyed(value) ? value.entrySeq() : value\n\t      ).toSetSeq();\n\t    }\n\t\n\t    SetSeq.of = function(/*...values*/) {\n\t      return SetSeq(arguments);\n\t    };\n\t\n\t    SetSeq.prototype.toSetSeq = function() {\n\t      return this;\n\t    };\n\t\n\t\n\t\n\t  Seq.isSeq = isSeq;\n\t  Seq.Keyed = KeyedSeq;\n\t  Seq.Set = SetSeq;\n\t  Seq.Indexed = IndexedSeq;\n\t\n\t  var IS_SEQ_SENTINEL = '@@__IMMUTABLE_SEQ__@@';\n\t\n\t  Seq.prototype[IS_SEQ_SENTINEL] = true;\n\t\n\t\n\t\n\t  createClass(ArraySeq, IndexedSeq);\n\t    function ArraySeq(array) {\n\t      this._array = array;\n\t      this.size = array.length;\n\t    }\n\t\n\t    ArraySeq.prototype.get = function(index, notSetValue) {\n\t      return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;\n\t    };\n\t\n\t    ArraySeq.prototype.__iterate = function(fn, reverse) {\n\t      var array = this._array;\n\t      var maxIndex = array.length - 1;\n\t      for (var ii = 0; ii <= maxIndex; ii++) {\n\t        if (fn(array[reverse ? maxIndex - ii : ii], ii, this) === false) {\n\t          return ii + 1;\n\t        }\n\t      }\n\t      return ii;\n\t    };\n\t\n\t    ArraySeq.prototype.__iterator = function(type, reverse) {\n\t      var array = this._array;\n\t      var maxIndex = array.length - 1;\n\t      var ii = 0;\n\t      return new Iterator(function() \n\t        {return ii > maxIndex ?\n\t          iteratorDone() :\n\t          iteratorValue(type, ii, array[reverse ? maxIndex - ii++ : ii++])}\n\t      );\n\t    };\n\t\n\t\n\t\n\t  createClass(ObjectSeq, KeyedSeq);\n\t    function ObjectSeq(object) {\n\t      var keys = Object.keys(object);\n\t      this._object = object;\n\t      this._keys = keys;\n\t      this.size = keys.length;\n\t    }\n\t\n\t    ObjectSeq.prototype.get = function(key, notSetValue) {\n\t      if (notSetValue !== undefined && !this.has(key)) {\n\t        return notSetValue;\n\t      }\n\t      return this._object[key];\n\t    };\n\t\n\t    ObjectSeq.prototype.has = function(key) {\n\t      return this._object.hasOwnProperty(key);\n\t    };\n\t\n\t    ObjectSeq.prototype.__iterate = function(fn, reverse) {\n\t      var object = this._object;\n\t      var keys = this._keys;\n\t      var maxIndex = keys.length - 1;\n\t      for (var ii = 0; ii <= maxIndex; ii++) {\n\t        var key = keys[reverse ? maxIndex - ii : ii];\n\t        if (fn(object[key], key, this) === false) {\n\t          return ii + 1;\n\t        }\n\t      }\n\t      return ii;\n\t    };\n\t\n\t    ObjectSeq.prototype.__iterator = function(type, reverse) {\n\t      var object = this._object;\n\t      var keys = this._keys;\n\t      var maxIndex = keys.length - 1;\n\t      var ii = 0;\n\t      return new Iterator(function()  {\n\t        var key = keys[reverse ? maxIndex - ii : ii];\n\t        return ii++ > maxIndex ?\n\t          iteratorDone() :\n\t          iteratorValue(type, key, object[key]);\n\t      });\n\t    };\n\t\n\t  ObjectSeq.prototype[IS_ORDERED_SENTINEL] = true;\n\t\n\t\n\t  createClass(IterableSeq, IndexedSeq);\n\t    function IterableSeq(iterable) {\n\t      this._iterable = iterable;\n\t      this.size = iterable.length || iterable.size;\n\t    }\n\t\n\t    IterableSeq.prototype.__iterateUncached = function(fn, reverse) {\n\t      if (reverse) {\n\t        return this.cacheResult().__iterate(fn, reverse);\n\t      }\n\t      var iterable = this._iterable;\n\t      var iterator = getIterator(iterable);\n\t      var iterations = 0;\n\t      if (isIterator(iterator)) {\n\t        var step;\n\t        while (!(step = iterator.next()).done) {\n\t          if (fn(step.value, iterations++, this) === false) {\n\t            break;\n\t          }\n\t        }\n\t      }\n\t      return iterations;\n\t    };\n\t\n\t    IterableSeq.prototype.__iteratorUncached = function(type, reverse) {\n\t      if (reverse) {\n\t        return this.cacheResult().__iterator(type, reverse);\n\t      }\n\t      var iterable = this._iterable;\n\t      var iterator = getIterator(iterable);\n\t      if (!isIterator(iterator)) {\n\t        return new Iterator(iteratorDone);\n\t      }\n\t      var iterations = 0;\n\t      return new Iterator(function()  {\n\t        var step = iterator.next();\n\t        return step.done ? step : iteratorValue(type, iterations++, step.value);\n\t      });\n\t    };\n\t\n\t\n\t\n\t  createClass(IteratorSeq, IndexedSeq);\n\t    function IteratorSeq(iterator) {\n\t      this._iterator = iterator;\n\t      this._iteratorCache = [];\n\t    }\n\t\n\t    IteratorSeq.prototype.__iterateUncached = function(fn, reverse) {\n\t      if (reverse) {\n\t        return this.cacheResult().__iterate(fn, reverse);\n\t      }\n\t      var iterator = this._iterator;\n\t      var cache = this._iteratorCache;\n\t      var iterations = 0;\n\t      while (iterations < cache.length) {\n\t        if (fn(cache[iterations], iterations++, this) === false) {\n\t          return iterations;\n\t        }\n\t      }\n\t      var step;\n\t      while (!(step = iterator.next()).done) {\n\t        var val = step.value;\n\t        cache[iterations] = val;\n\t        if (fn(val, iterations++, this) === false) {\n\t          break;\n\t        }\n\t      }\n\t      return iterations;\n\t    };\n\t\n\t    IteratorSeq.prototype.__iteratorUncached = function(type, reverse) {\n\t      if (reverse) {\n\t        return this.cacheResult().__iterator(type, reverse);\n\t      }\n\t      var iterator = this._iterator;\n\t      var cache = this._iteratorCache;\n\t      var iterations = 0;\n\t      return new Iterator(function()  {\n\t        if (iterations >= cache.length) {\n\t          var step = iterator.next();\n\t          if (step.done) {\n\t            return step;\n\t          }\n\t          cache[iterations] = step.value;\n\t        }\n\t        return iteratorValue(type, iterations, cache[iterations++]);\n\t      });\n\t    };\n\t\n\t\n\t\n\t\n\t  // # pragma Helper functions\n\t\n\t  function isSeq(maybeSeq) {\n\t    return !!(maybeSeq && maybeSeq[IS_SEQ_SENTINEL]);\n\t  }\n\t\n\t  var EMPTY_SEQ;\n\t\n\t  function emptySequence() {\n\t    return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));\n\t  }\n\t\n\t  function keyedSeqFromValue(value) {\n\t    var seq =\n\t      Array.isArray(value) ? new ArraySeq(value).fromEntrySeq() :\n\t      isIterator(value) ? new IteratorSeq(value).fromEntrySeq() :\n\t      hasIterator(value) ? new IterableSeq(value).fromEntrySeq() :\n\t      typeof value === 'object' ? new ObjectSeq(value) :\n\t      undefined;\n\t    if (!seq) {\n\t      throw new TypeError(\n\t        'Expected Array or iterable object of [k, v] entries, '+\n\t        'or keyed object: ' + value\n\t      );\n\t    }\n\t    return seq;\n\t  }\n\t\n\t  function indexedSeqFromValue(value) {\n\t    var seq = maybeIndexedSeqFromValue(value);\n\t    if (!seq) {\n\t      throw new TypeError(\n\t        'Expected Array or iterable object of values: ' + value\n\t      );\n\t    }\n\t    return seq;\n\t  }\n\t\n\t  function seqFromValue(value) {\n\t    var seq = maybeIndexedSeqFromValue(value) ||\n\t      (typeof value === 'object' && new ObjectSeq(value));\n\t    if (!seq) {\n\t      throw new TypeError(\n\t        'Expected Array or iterable object of values, or keyed object: ' + value\n\t      );\n\t    }\n\t    return seq;\n\t  }\n\t\n\t  function maybeIndexedSeqFromValue(value) {\n\t    return (\n\t      isArrayLike(value) ? new ArraySeq(value) :\n\t      isIterator(value) ? new IteratorSeq(value) :\n\t      hasIterator(value) ? new IterableSeq(value) :\n\t      undefined\n\t    );\n\t  }\n\t\n\t  function seqIterate(seq, fn, reverse, useKeys) {\n\t    var cache = seq._cache;\n\t    if (cache) {\n\t      var maxIndex = cache.length - 1;\n\t      for (var ii = 0; ii <= maxIndex; ii++) {\n\t        var entry = cache[reverse ? maxIndex - ii : ii];\n\t        if (fn(entry[1], useKeys ? entry[0] : ii, seq) === false) {\n\t          return ii + 1;\n\t        }\n\t      }\n\t      return ii;\n\t    }\n\t    return seq.__iterateUncached(fn, reverse);\n\t  }\n\t\n\t  function seqIterator(seq, type, reverse, useKeys) {\n\t    var cache = seq._cache;\n\t    if (cache) {\n\t      var maxIndex = cache.length - 1;\n\t      var ii = 0;\n\t      return new Iterator(function()  {\n\t        var entry = cache[reverse ? maxIndex - ii : ii];\n\t        return ii++ > maxIndex ?\n\t          iteratorDone() :\n\t          iteratorValue(type, useKeys ? entry[0] : ii - 1, entry[1]);\n\t      });\n\t    }\n\t    return seq.__iteratorUncached(type, reverse);\n\t  }\n\t\n\t  function fromJS(json, converter) {\n\t    return converter ?\n\t      fromJSWith(converter, json, '', {'': json}) :\n\t      fromJSDefault(json);\n\t  }\n\t\n\t  function fromJSWith(converter, json, key, parentJSON) {\n\t    if (Array.isArray(json)) {\n\t      return converter.call(parentJSON, key, IndexedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));\n\t    }\n\t    if (isPlainObj(json)) {\n\t      return converter.call(parentJSON, key, KeyedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));\n\t    }\n\t    return json;\n\t  }\n\t\n\t  function fromJSDefault(json) {\n\t    if (Array.isArray(json)) {\n\t      return IndexedSeq(json).map(fromJSDefault).toList();\n\t    }\n\t    if (isPlainObj(json)) {\n\t      return KeyedSeq(json).map(fromJSDefault).toMap();\n\t    }\n\t    return json;\n\t  }\n\t\n\t  function isPlainObj(value) {\n\t    return value && (value.constructor === Object || value.constructor === undefined);\n\t  }\n\t\n\t  /**\n\t   * An extension of the \"same-value\" algorithm as [described for use by ES6 Map\n\t   * and Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Key_equality)\n\t   *\n\t   * NaN is considered the same as NaN, however -0 and 0 are considered the same\n\t   * value, which is different from the algorithm described by\n\t   * [`Object.is`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is).\n\t   *\n\t   * This is extended further to allow Objects to describe the values they\n\t   * represent, by way of `valueOf` or `equals` (and `hashCode`).\n\t   *\n\t   * Note: because of this extension, the key equality of Immutable.Map and the\n\t   * value equality of Immutable.Set will differ from ES6 Map and Set.\n\t   *\n\t   * ### Defining custom values\n\t   *\n\t   * The easiest way to describe the value an object represents is by implementing\n\t   * `valueOf`. For example, `Date` represents a value by returning a unix\n\t   * timestamp for `valueOf`:\n\t   *\n\t   *     var date1 = new Date(1234567890000); // Fri Feb 13 2009 ...\n\t   *     var date2 = new Date(1234567890000);\n\t   *     date1.valueOf(); // 1234567890000\n\t   *     assert( date1 !== date2 );\n\t   *     assert( Immutable.is( date1, date2 ) );\n\t   *\n\t   * Note: overriding `valueOf` may have other implications if you use this object\n\t   * where JavaScript expects a primitive, such as implicit string coercion.\n\t   *\n\t   * For more complex types, especially collections, implementing `valueOf` may\n\t   * not be performant. An alternative is to implement `equals` and `hashCode`.\n\t   *\n\t   * `equals` takes another object, presumably of similar type, and returns true\n\t   * if the it is equal. Equality is symmetrical, so the same result should be\n\t   * returned if this and the argument are flipped.\n\t   *\n\t   *     assert( a.equals(b) === b.equals(a) );\n\t   *\n\t   * `hashCode` returns a 32bit integer number representing the object which will\n\t   * be used to determine how to store the value object in a Map or Set. You must\n\t   * provide both or neither methods, one must not exist without the other.\n\t   *\n\t   * Also, an important relationship between these methods must be upheld: if two\n\t   * values are equal, they *must* return the same hashCode. If the values are not\n\t   * equal, they might have the same hashCode; this is called a hash collision,\n\t   * and while undesirable for performance reasons, it is acceptable.\n\t   *\n\t   *     if (a.equals(b)) {\n\t   *       assert( a.hashCode() === b.hashCode() );\n\t   *     }\n\t   *\n\t   * All Immutable collections implement `equals` and `hashCode`.\n\t   *\n\t   */\n\t  function is(valueA, valueB) {\n\t    if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {\n\t      return true;\n\t    }\n\t    if (!valueA || !valueB) {\n\t      return false;\n\t    }\n\t    if (typeof valueA.valueOf === 'function' &&\n\t        typeof valueB.valueOf === 'function') {\n\t      valueA = valueA.valueOf();\n\t      valueB = valueB.valueOf();\n\t      if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {\n\t        return true;\n\t      }\n\t      if (!valueA || !valueB) {\n\t        return false;\n\t      }\n\t    }\n\t    if (typeof valueA.equals === 'function' &&\n\t        typeof valueB.equals === 'function' &&\n\t        valueA.equals(valueB)) {\n\t      return true;\n\t    }\n\t    return false;\n\t  }\n\t\n\t  function deepEqual(a, b) {\n\t    if (a === b) {\n\t      return true;\n\t    }\n\t\n\t    if (\n\t      !isIterable(b) ||\n\t      a.size !== undefined && b.size !== undefined && a.size !== b.size ||\n\t      a.__hash !== undefined && b.__hash !== undefined && a.__hash !== b.__hash ||\n\t      isKeyed(a) !== isKeyed(b) ||\n\t      isIndexed(a) !== isIndexed(b) ||\n\t      isOrdered(a) !== isOrdered(b)\n\t    ) {\n\t      return false;\n\t    }\n\t\n\t    if (a.size === 0 && b.size === 0) {\n\t      return true;\n\t    }\n\t\n\t    var notAssociative = !isAssociative(a);\n\t\n\t    if (isOrdered(a)) {\n\t      var entries = a.entries();\n\t      return b.every(function(v, k)  {\n\t        var entry = entries.next().value;\n\t        return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));\n\t      }) && entries.next().done;\n\t    }\n\t\n\t    var flipped = false;\n\t\n\t    if (a.size === undefined) {\n\t      if (b.size === undefined) {\n\t        if (typeof a.cacheResult === 'function') {\n\t          a.cacheResult();\n\t        }\n\t      } else {\n\t        flipped = true;\n\t        var _ = a;\n\t        a = b;\n\t        b = _;\n\t      }\n\t    }\n\t\n\t    var allEqual = true;\n\t    var bSize = b.__iterate(function(v, k)  {\n\t      if (notAssociative ? !a.has(v) :\n\t          flipped ? !is(v, a.get(k, NOT_SET)) : !is(a.get(k, NOT_SET), v)) {\n\t        allEqual = false;\n\t        return false;\n\t      }\n\t    });\n\t\n\t    return allEqual && a.size === bSize;\n\t  }\n\t\n\t  createClass(Repeat, IndexedSeq);\n\t\n\t    function Repeat(value, times) {\n\t      if (!(this instanceof Repeat)) {\n\t        return new Repeat(value, times);\n\t      }\n\t      this._value = value;\n\t      this.size = times === undefined ? Infinity : Math.max(0, times);\n\t      if (this.size === 0) {\n\t        if (EMPTY_REPEAT) {\n\t          return EMPTY_REPEAT;\n\t        }\n\t        EMPTY_REPEAT = this;\n\t      }\n\t    }\n\t\n\t    Repeat.prototype.toString = function() {\n\t      if (this.size === 0) {\n\t        return 'Repeat []';\n\t      }\n\t      return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';\n\t    };\n\t\n\t    Repeat.prototype.get = function(index, notSetValue) {\n\t      return this.has(index) ? this._value : notSetValue;\n\t    };\n\t\n\t    Repeat.prototype.includes = function(searchValue) {\n\t      return is(this._value, searchValue);\n\t    };\n\t\n\t    Repeat.prototype.slice = function(begin, end) {\n\t      var size = this.size;\n\t      return wholeSlice(begin, end, size) ? this :\n\t        new Repeat(this._value, resolveEnd(end, size) - resolveBegin(begin, size));\n\t    };\n\t\n\t    Repeat.prototype.reverse = function() {\n\t      return this;\n\t    };\n\t\n\t    Repeat.prototype.indexOf = function(searchValue) {\n\t      if (is(this._value, searchValue)) {\n\t        return 0;\n\t      }\n\t      return -1;\n\t    };\n\t\n\t    Repeat.prototype.lastIndexOf = function(searchValue) {\n\t      if (is(this._value, searchValue)) {\n\t        return this.size;\n\t      }\n\t      return -1;\n\t    };\n\t\n\t    Repeat.prototype.__iterate = function(fn, reverse) {\n\t      for (var ii = 0; ii < this.size; ii++) {\n\t        if (fn(this._value, ii, this) === false) {\n\t          return ii + 1;\n\t        }\n\t      }\n\t      return ii;\n\t    };\n\t\n\t    Repeat.prototype.__iterator = function(type, reverse) {var this$0 = this;\n\t      var ii = 0;\n\t      return new Iterator(function() \n\t        {return ii < this$0.size ? iteratorValue(type, ii++, this$0._value) : iteratorDone()}\n\t      );\n\t    };\n\t\n\t    Repeat.prototype.equals = function(other) {\n\t      return other instanceof Repeat ?\n\t        is(this._value, other._value) :\n\t        deepEqual(other);\n\t    };\n\t\n\t\n\t  var EMPTY_REPEAT;\n\t\n\t  function invariant(condition, error) {\n\t    if (!condition) throw new Error(error);\n\t  }\n\t\n\t  createClass(Range, IndexedSeq);\n\t\n\t    function Range(start, end, step) {\n\t      if (!(this instanceof Range)) {\n\t        return new Range(start, end, step);\n\t      }\n\t      invariant(step !== 0, 'Cannot step a Range by 0');\n\t      start = start || 0;\n\t      if (end === undefined) {\n\t        end = Infinity;\n\t      }\n\t      step = step === undefined ? 1 : Math.abs(step);\n\t      if (end < start) {\n\t        step = -step;\n\t      }\n\t      this._start = start;\n\t      this._end = end;\n\t      this._step = step;\n\t      this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);\n\t      if (this.size === 0) {\n\t        if (EMPTY_RANGE) {\n\t          return EMPTY_RANGE;\n\t        }\n\t        EMPTY_RANGE = this;\n\t      }\n\t    }\n\t\n\t    Range.prototype.toString = function() {\n\t      if (this.size === 0) {\n\t        return 'Range []';\n\t      }\n\t      return 'Range [ ' +\n\t        this._start + '...' + this._end +\n\t        (this._step !== 1 ? ' by ' + this._step : '') +\n\t      ' ]';\n\t    };\n\t\n\t    Range.prototype.get = function(index, notSetValue) {\n\t      return this.has(index) ?\n\t        this._start + wrapIndex(this, index) * this._step :\n\t        notSetValue;\n\t    };\n\t\n\t    Range.prototype.includes = function(searchValue) {\n\t      var possibleIndex = (searchValue - this._start) / this._step;\n\t      return possibleIndex >= 0 &&\n\t        possibleIndex < this.size &&\n\t        possibleIndex === Math.floor(possibleIndex);\n\t    };\n\t\n\t    Range.prototype.slice = function(begin, end) {\n\t      if (wholeSlice(begin, end, this.size)) {\n\t        return this;\n\t      }\n\t      begin = resolveBegin(begin, this.size);\n\t      end = resolveEnd(end, this.size);\n\t      if (end <= begin) {\n\t        return new Range(0, 0);\n\t      }\n\t      return new Range(this.get(begin, this._end), this.get(end, this._end), this._step);\n\t    };\n\t\n\t    Range.prototype.indexOf = function(searchValue) {\n\t      var offsetValue = searchValue - this._start;\n\t      if (offsetValue % this._step === 0) {\n\t        var index = offsetValue / this._step;\n\t        if (index >= 0 && index < this.size) {\n\t          return index\n\t        }\n\t      }\n\t      return -1;\n\t    };\n\t\n\t    Range.prototype.lastIndexOf = function(searchValue) {\n\t      return this.indexOf(searchValue);\n\t    };\n\t\n\t    Range.prototype.__iterate = function(fn, reverse) {\n\t      var maxIndex = this.size - 1;\n\t      var step = this._step;\n\t      var value = reverse ? this._start + maxIndex * step : this._start;\n\t      for (var ii = 0; ii <= maxIndex; ii++) {\n\t        if (fn(value, ii, this) === false) {\n\t          return ii + 1;\n\t        }\n\t        value += reverse ? -step : step;\n\t      }\n\t      return ii;\n\t    };\n\t\n\t    Range.prototype.__iterator = function(type, reverse) {\n\t      var maxIndex = this.size - 1;\n\t      var step = this._step;\n\t      var value = reverse ? this._start + maxIndex * step : this._start;\n\t      var ii = 0;\n\t      return new Iterator(function()  {\n\t        var v = value;\n\t        value += reverse ? -step : step;\n\t        return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii++, v);\n\t      });\n\t    };\n\t\n\t    Range.prototype.equals = function(other) {\n\t      return other instanceof Range ?\n\t        this._start === other._start &&\n\t        this._end === other._end &&\n\t        this._step === other._step :\n\t        deepEqual(this, other);\n\t    };\n\t\n\t\n\t  var EMPTY_RANGE;\n\t\n\t  createClass(Collection, Iterable);\n\t    function Collection() {\n\t      throw TypeError('Abstract');\n\t    }\n\t\n\t\n\t  createClass(KeyedCollection, Collection);function KeyedCollection() {}\n\t\n\t  createClass(IndexedCollection, Collection);function IndexedCollection() {}\n\t\n\t  createClass(SetCollection, Collection);function SetCollection() {}\n\t\n\t\n\t  Collection.Keyed = KeyedCollection;\n\t  Collection.Indexed = IndexedCollection;\n\t  Collection.Set = SetCollection;\n\t\n\t  var imul =\n\t    typeof Math.imul === 'function' && Math.imul(0xffffffff, 2) === -2 ?\n\t    Math.imul :\n\t    function imul(a, b) {\n\t      a = a | 0; // int\n\t      b = b | 0; // int\n\t      var c = a & 0xffff;\n\t      var d = b & 0xffff;\n\t      // Shift by 0 fixes the sign on the high part.\n\t      return (c * d) + ((((a >>> 16) * d + c * (b >>> 16)) << 16) >>> 0) | 0; // int\n\t    };\n\t\n\t  // v8 has an optimization for storing 31-bit signed numbers.\n\t  // Values which have either 00 or 11 as the high order bits qualify.\n\t  // This function drops the highest order bit in a signed number, maintaining\n\t  // the sign bit.\n\t  function smi(i32) {\n\t    return ((i32 >>> 1) & 0x40000000) | (i32 & 0xBFFFFFFF);\n\t  }\n\t\n\t  function hash(o) {\n\t    if (o === false || o === null || o === undefined) {\n\t      return 0;\n\t    }\n\t    if (typeof o.valueOf === 'function') {\n\t      o = o.valueOf();\n\t      if (o === false || o === null || o === undefined) {\n\t        return 0;\n\t      }\n\t    }\n\t    if (o === true) {\n\t      return 1;\n\t    }\n\t    var type = typeof o;\n\t    if (type === 'number') {\n\t      if (o !== o || o === Infinity) {\n\t        return 0;\n\t      }\n\t      var h = o | 0;\n\t      if (h !== o) {\n\t        h ^= o * 0xFFFFFFFF;\n\t      }\n\t      while (o > 0xFFFFFFFF) {\n\t        o /= 0xFFFFFFFF;\n\t        h ^= o;\n\t      }\n\t      return smi(h);\n\t    }\n\t    if (type === 'string') {\n\t      return o.length > STRING_HASH_CACHE_MIN_STRLEN ? cachedHashString(o) : hashString(o);\n\t    }\n\t    if (typeof o.hashCode === 'function') {\n\t      return o.hashCode();\n\t    }\n\t    if (type === 'object') {\n\t      return hashJSObj(o);\n\t    }\n\t    if (typeof o.toString === 'function') {\n\t      return hashString(o.toString());\n\t    }\n\t    throw new Error('Value type ' + type + ' cannot be hashed.');\n\t  }\n\t\n\t  function cachedHashString(string) {\n\t    var hash = stringHashCache[string];\n\t    if (hash === undefined) {\n\t      hash = hashString(string);\n\t      if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {\n\t        STRING_HASH_CACHE_SIZE = 0;\n\t        stringHashCache = {};\n\t      }\n\t      STRING_HASH_CACHE_SIZE++;\n\t      stringHashCache[string] = hash;\n\t    }\n\t    return hash;\n\t  }\n\t\n\t  // http://jsperf.com/hashing-strings\n\t  function hashString(string) {\n\t    // This is the hash from JVM\n\t    // The hash code for a string is computed as\n\t    // s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],\n\t    // where s[i] is the ith character of the string and n is the length of\n\t    // the string. We \"mod\" the result to make it between 0 (inclusive) and 2^31\n\t    // (exclusive) by dropping high bits.\n\t    var hash = 0;\n\t    for (var ii = 0; ii < string.length; ii++) {\n\t      hash = 31 * hash + string.charCodeAt(ii) | 0;\n\t    }\n\t    return smi(hash);\n\t  }\n\t\n\t  function hashJSObj(obj) {\n\t    var hash;\n\t    if (usingWeakMap) {\n\t      hash = weakMap.get(obj);\n\t      if (hash !== undefined) {\n\t        return hash;\n\t      }\n\t    }\n\t\n\t    hash = obj[UID_HASH_KEY];\n\t    if (hash !== undefined) {\n\t      return hash;\n\t    }\n\t\n\t    if (!canDefineProperty) {\n\t      hash = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];\n\t      if (hash !== undefined) {\n\t        return hash;\n\t      }\n\t\n\t      hash = getIENodeHash(obj);\n\t      if (hash !== undefined) {\n\t        return hash;\n\t      }\n\t    }\n\t\n\t    hash = ++objHashUID;\n\t    if (objHashUID & 0x40000000) {\n\t      objHashUID = 0;\n\t    }\n\t\n\t    if (usingWeakMap) {\n\t      weakMap.set(obj, hash);\n\t    } else if (isExtensible !== undefined && isExtensible(obj) === false) {\n\t      throw new Error('Non-extensible objects are not allowed as keys.');\n\t    } else if (canDefineProperty) {\n\t      Object.defineProperty(obj, UID_HASH_KEY, {\n\t        'enumerable': false,\n\t        'configurable': false,\n\t        'writable': false,\n\t        'value': hash\n\t      });\n\t    } else if (obj.propertyIsEnumerable !== undefined &&\n\t               obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable) {\n\t      // Since we can't define a non-enumerable property on the object\n\t      // we'll hijack one of the less-used non-enumerable properties to\n\t      // save our hash on it. Since this is a function it will not show up in\n\t      // `JSON.stringify` which is what we want.\n\t      obj.propertyIsEnumerable = function() {\n\t        return this.constructor.prototype.propertyIsEnumerable.apply(this, arguments);\n\t      };\n\t      obj.propertyIsEnumerable[UID_HASH_KEY] = hash;\n\t    } else if (obj.nodeType !== undefined) {\n\t      // At this point we couldn't get the IE `uniqueID` to use as a hash\n\t      // and we couldn't use a non-enumerable property to exploit the\n\t      // dontEnum bug so we simply add the `UID_HASH_KEY` on the node\n\t      // itself.\n\t      obj[UID_HASH_KEY] = hash;\n\t    } else {\n\t      throw new Error('Unable to set a non-enumerable property on object.');\n\t    }\n\t\n\t    return hash;\n\t  }\n\t\n\t  // Get references to ES5 object methods.\n\t  var isExtensible = Object.isExtensible;\n\t\n\t  // True if Object.defineProperty works as expected. IE8 fails this test.\n\t  var canDefineProperty = (function() {\n\t    try {\n\t      Object.defineProperty({}, '@', {});\n\t      return true;\n\t    } catch (e) {\n\t      return false;\n\t    }\n\t  }());\n\t\n\t  // IE has a `uniqueID` property on DOM nodes. We can construct the hash from it\n\t  // and avoid memory leaks from the IE cloneNode bug.\n\t  function getIENodeHash(node) {\n\t    if (node && node.nodeType > 0) {\n\t      switch (node.nodeType) {\n\t        case 1: // Element\n\t          return node.uniqueID;\n\t        case 9: // Document\n\t          return node.documentElement && node.documentElement.uniqueID;\n\t      }\n\t    }\n\t  }\n\t\n\t  // If possible, use a WeakMap.\n\t  var usingWeakMap = typeof WeakMap === 'function';\n\t  var weakMap;\n\t  if (usingWeakMap) {\n\t    weakMap = new WeakMap();\n\t  }\n\t\n\t  var objHashUID = 0;\n\t\n\t  var UID_HASH_KEY = '__immutablehash__';\n\t  if (typeof Symbol === 'function') {\n\t    UID_HASH_KEY = Symbol(UID_HASH_KEY);\n\t  }\n\t\n\t  var STRING_HASH_CACHE_MIN_STRLEN = 16;\n\t  var STRING_HASH_CACHE_MAX_SIZE = 255;\n\t  var STRING_HASH_CACHE_SIZE = 0;\n\t  var stringHashCache = {};\n\t\n\t  function assertNotInfinite(size) {\n\t    invariant(\n\t      size !== Infinity,\n\t      'Cannot perform this action with an infinite size.'\n\t    );\n\t  }\n\t\n\t  createClass(Map, KeyedCollection);\n\t\n\t    // @pragma Construction\n\t\n\t    function Map(value) {\n\t      return value === null || value === undefined ? emptyMap() :\n\t        isMap(value) && !isOrdered(value) ? value :\n\t        emptyMap().withMutations(function(map ) {\n\t          var iter = KeyedIterable(value);\n\t          assertNotInfinite(iter.size);\n\t          iter.forEach(function(v, k)  {return map.set(k, v)});\n\t        });\n\t    }\n\t\n\t    Map.of = function() {var keyValues = SLICE$0.call(arguments, 0);\n\t      return emptyMap().withMutations(function(map ) {\n\t        for (var i = 0; i < keyValues.length; i += 2) {\n\t          if (i + 1 >= keyValues.length) {\n\t            throw new Error('Missing value for key: ' + keyValues[i]);\n\t          }\n\t          map.set(keyValues[i], keyValues[i + 1]);\n\t        }\n\t      });\n\t    };\n\t\n\t    Map.prototype.toString = function() {\n\t      return this.__toString('Map {', '}');\n\t    };\n\t\n\t    // @pragma Access\n\t\n\t    Map.prototype.get = function(k, notSetValue) {\n\t      return this._root ?\n\t        this._root.get(0, undefined, k, notSetValue) :\n\t        notSetValue;\n\t    };\n\t\n\t    // @pragma Modification\n\t\n\t    Map.prototype.set = function(k, v) {\n\t      return updateMap(this, k, v);\n\t    };\n\t\n\t    Map.prototype.setIn = function(keyPath, v) {\n\t      return this.updateIn(keyPath, NOT_SET, function()  {return v});\n\t    };\n\t\n\t    Map.prototype.remove = function(k) {\n\t      return updateMap(this, k, NOT_SET);\n\t    };\n\t\n\t    Map.prototype.deleteIn = function(keyPath) {\n\t      return this.updateIn(keyPath, function()  {return NOT_SET});\n\t    };\n\t\n\t    Map.prototype.update = function(k, notSetValue, updater) {\n\t      return arguments.length === 1 ?\n\t        k(this) :\n\t        this.updateIn([k], notSetValue, updater);\n\t    };\n\t\n\t    Map.prototype.updateIn = function(keyPath, notSetValue, updater) {\n\t      if (!updater) {\n\t        updater = notSetValue;\n\t        notSetValue = undefined;\n\t      }\n\t      var updatedValue = updateInDeepMap(\n\t        this,\n\t        forceIterator(keyPath),\n\t        notSetValue,\n\t        updater\n\t      );\n\t      return updatedValue === NOT_SET ? undefined : updatedValue;\n\t    };\n\t\n\t    Map.prototype.clear = function() {\n\t      if (this.size === 0) {\n\t        return this;\n\t      }\n\t      if (this.__ownerID) {\n\t        this.size = 0;\n\t        this._root = null;\n\t        this.__hash = undefined;\n\t        this.__altered = true;\n\t        return this;\n\t      }\n\t      return emptyMap();\n\t    };\n\t\n\t    // @pragma Composition\n\t\n\t    Map.prototype.merge = function(/*...iters*/) {\n\t      return mergeIntoMapWith(this, undefined, arguments);\n\t    };\n\t\n\t    Map.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n\t      return mergeIntoMapWith(this, merger, iters);\n\t    };\n\t\n\t    Map.prototype.mergeIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);\n\t      return this.updateIn(\n\t        keyPath,\n\t        emptyMap(),\n\t        function(m ) {return typeof m.merge === 'function' ?\n\t          m.merge.apply(m, iters) :\n\t          iters[iters.length - 1]}\n\t      );\n\t    };\n\t\n\t    Map.prototype.mergeDeep = function(/*...iters*/) {\n\t      return mergeIntoMapWith(this, deepMerger, arguments);\n\t    };\n\t\n\t    Map.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n\t      return mergeIntoMapWith(this, deepMergerWith(merger), iters);\n\t    };\n\t\n\t    Map.prototype.mergeDeepIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);\n\t      return this.updateIn(\n\t        keyPath,\n\t        emptyMap(),\n\t        function(m ) {return typeof m.mergeDeep === 'function' ?\n\t          m.mergeDeep.apply(m, iters) :\n\t          iters[iters.length - 1]}\n\t      );\n\t    };\n\t\n\t    Map.prototype.sort = function(comparator) {\n\t      // Late binding\n\t      return OrderedMap(sortFactory(this, comparator));\n\t    };\n\t\n\t    Map.prototype.sortBy = function(mapper, comparator) {\n\t      // Late binding\n\t      return OrderedMap(sortFactory(this, comparator, mapper));\n\t    };\n\t\n\t    // @pragma Mutability\n\t\n\t    Map.prototype.withMutations = function(fn) {\n\t      var mutable = this.asMutable();\n\t      fn(mutable);\n\t      return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;\n\t    };\n\t\n\t    Map.prototype.asMutable = function() {\n\t      return this.__ownerID ? this : this.__ensureOwner(new OwnerID());\n\t    };\n\t\n\t    Map.prototype.asImmutable = function() {\n\t      return this.__ensureOwner();\n\t    };\n\t\n\t    Map.prototype.wasAltered = function() {\n\t      return this.__altered;\n\t    };\n\t\n\t    Map.prototype.__iterator = function(type, reverse) {\n\t      return new MapIterator(this, type, reverse);\n\t    };\n\t\n\t    Map.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n\t      var iterations = 0;\n\t      this._root && this._root.iterate(function(entry ) {\n\t        iterations++;\n\t        return fn(entry[1], entry[0], this$0);\n\t      }, reverse);\n\t      return iterations;\n\t    };\n\t\n\t    Map.prototype.__ensureOwner = function(ownerID) {\n\t      if (ownerID === this.__ownerID) {\n\t        return this;\n\t      }\n\t      if (!ownerID) {\n\t        this.__ownerID = ownerID;\n\t        this.__altered = false;\n\t        return this;\n\t      }\n\t      return makeMap(this.size, this._root, ownerID, this.__hash);\n\t    };\n\t\n\t\n\t  function isMap(maybeMap) {\n\t    return !!(maybeMap && maybeMap[IS_MAP_SENTINEL]);\n\t  }\n\t\n\t  Map.isMap = isMap;\n\t\n\t  var IS_MAP_SENTINEL = '@@__IMMUTABLE_MAP__@@';\n\t\n\t  var MapPrototype = Map.prototype;\n\t  MapPrototype[IS_MAP_SENTINEL] = true;\n\t  MapPrototype[DELETE] = MapPrototype.remove;\n\t  MapPrototype.removeIn = MapPrototype.deleteIn;\n\t\n\t\n\t  // #pragma Trie Nodes\n\t\n\t\n\t\n\t    function ArrayMapNode(ownerID, entries) {\n\t      this.ownerID = ownerID;\n\t      this.entries = entries;\n\t    }\n\t\n\t    ArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n\t      var entries = this.entries;\n\t      for (var ii = 0, len = entries.length; ii < len; ii++) {\n\t        if (is(key, entries[ii][0])) {\n\t          return entries[ii][1];\n\t        }\n\t      }\n\t      return notSetValue;\n\t    };\n\t\n\t    ArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n\t      var removed = value === NOT_SET;\n\t\n\t      var entries = this.entries;\n\t      var idx = 0;\n\t      for (var len = entries.length; idx < len; idx++) {\n\t        if (is(key, entries[idx][0])) {\n\t          break;\n\t        }\n\t      }\n\t      var exists = idx < len;\n\t\n\t      if (exists ? entries[idx][1] === value : removed) {\n\t        return this;\n\t      }\n\t\n\t      SetRef(didAlter);\n\t      (removed || !exists) && SetRef(didChangeSize);\n\t\n\t      if (removed && entries.length === 1) {\n\t        return; // undefined\n\t      }\n\t\n\t      if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {\n\t        return createNodes(ownerID, entries, key, value);\n\t      }\n\t\n\t      var isEditable = ownerID && ownerID === this.ownerID;\n\t      var newEntries = isEditable ? entries : arrCopy(entries);\n\t\n\t      if (exists) {\n\t        if (removed) {\n\t          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());\n\t        } else {\n\t          newEntries[idx] = [key, value];\n\t        }\n\t      } else {\n\t        newEntries.push([key, value]);\n\t      }\n\t\n\t      if (isEditable) {\n\t        this.entries = newEntries;\n\t        return this;\n\t      }\n\t\n\t      return new ArrayMapNode(ownerID, newEntries);\n\t    };\n\t\n\t\n\t\n\t\n\t    function BitmapIndexedNode(ownerID, bitmap, nodes) {\n\t      this.ownerID = ownerID;\n\t      this.bitmap = bitmap;\n\t      this.nodes = nodes;\n\t    }\n\t\n\t    BitmapIndexedNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n\t      if (keyHash === undefined) {\n\t        keyHash = hash(key);\n\t      }\n\t      var bit = (1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK));\n\t      var bitmap = this.bitmap;\n\t      return (bitmap & bit) === 0 ? notSetValue :\n\t        this.nodes[popCount(bitmap & (bit - 1))].get(shift + SHIFT, keyHash, key, notSetValue);\n\t    };\n\t\n\t    BitmapIndexedNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n\t      if (keyHash === undefined) {\n\t        keyHash = hash(key);\n\t      }\n\t      var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n\t      var bit = 1 << keyHashFrag;\n\t      var bitmap = this.bitmap;\n\t      var exists = (bitmap & bit) !== 0;\n\t\n\t      if (!exists && value === NOT_SET) {\n\t        return this;\n\t      }\n\t\n\t      var idx = popCount(bitmap & (bit - 1));\n\t      var nodes = this.nodes;\n\t      var node = exists ? nodes[idx] : undefined;\n\t      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n\t\n\t      if (newNode === node) {\n\t        return this;\n\t      }\n\t\n\t      if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {\n\t        return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);\n\t      }\n\t\n\t      if (exists && !newNode && nodes.length === 2 && isLeafNode(nodes[idx ^ 1])) {\n\t        return nodes[idx ^ 1];\n\t      }\n\t\n\t      if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {\n\t        return newNode;\n\t      }\n\t\n\t      var isEditable = ownerID && ownerID === this.ownerID;\n\t      var newBitmap = exists ? newNode ? bitmap : bitmap ^ bit : bitmap | bit;\n\t      var newNodes = exists ? newNode ?\n\t        setIn(nodes, idx, newNode, isEditable) :\n\t        spliceOut(nodes, idx, isEditable) :\n\t        spliceIn(nodes, idx, newNode, isEditable);\n\t\n\t      if (isEditable) {\n\t        this.bitmap = newBitmap;\n\t        this.nodes = newNodes;\n\t        return this;\n\t      }\n\t\n\t      return new BitmapIndexedNode(ownerID, newBitmap, newNodes);\n\t    };\n\t\n\t\n\t\n\t\n\t    function HashArrayMapNode(ownerID, count, nodes) {\n\t      this.ownerID = ownerID;\n\t      this.count = count;\n\t      this.nodes = nodes;\n\t    }\n\t\n\t    HashArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n\t      if (keyHash === undefined) {\n\t        keyHash = hash(key);\n\t      }\n\t      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n\t      var node = this.nodes[idx];\n\t      return node ? node.get(shift + SHIFT, keyHash, key, notSetValue) : notSetValue;\n\t    };\n\t\n\t    HashArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n\t      if (keyHash === undefined) {\n\t        keyHash = hash(key);\n\t      }\n\t      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n\t      var removed = value === NOT_SET;\n\t      var nodes = this.nodes;\n\t      var node = nodes[idx];\n\t\n\t      if (removed && !node) {\n\t        return this;\n\t      }\n\t\n\t      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n\t      if (newNode === node) {\n\t        return this;\n\t      }\n\t\n\t      var newCount = this.count;\n\t      if (!node) {\n\t        newCount++;\n\t      } else if (!newNode) {\n\t        newCount--;\n\t        if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {\n\t          return packNodes(ownerID, nodes, newCount, idx);\n\t        }\n\t      }\n\t\n\t      var isEditable = ownerID && ownerID === this.ownerID;\n\t      var newNodes = setIn(nodes, idx, newNode, isEditable);\n\t\n\t      if (isEditable) {\n\t        this.count = newCount;\n\t        this.nodes = newNodes;\n\t        return this;\n\t      }\n\t\n\t      return new HashArrayMapNode(ownerID, newCount, newNodes);\n\t    };\n\t\n\t\n\t\n\t\n\t    function HashCollisionNode(ownerID, keyHash, entries) {\n\t      this.ownerID = ownerID;\n\t      this.keyHash = keyHash;\n\t      this.entries = entries;\n\t    }\n\t\n\t    HashCollisionNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n\t      var entries = this.entries;\n\t      for (var ii = 0, len = entries.length; ii < len; ii++) {\n\t        if (is(key, entries[ii][0])) {\n\t          return entries[ii][1];\n\t        }\n\t      }\n\t      return notSetValue;\n\t    };\n\t\n\t    HashCollisionNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n\t      if (keyHash === undefined) {\n\t        keyHash = hash(key);\n\t      }\n\t\n\t      var removed = value === NOT_SET;\n\t\n\t      if (keyHash !== this.keyHash) {\n\t        if (removed) {\n\t          return this;\n\t        }\n\t        SetRef(didAlter);\n\t        SetRef(didChangeSize);\n\t        return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);\n\t      }\n\t\n\t      var entries = this.entries;\n\t      var idx = 0;\n\t      for (var len = entries.length; idx < len; idx++) {\n\t        if (is(key, entries[idx][0])) {\n\t          break;\n\t        }\n\t      }\n\t      var exists = idx < len;\n\t\n\t      if (exists ? entries[idx][1] === value : removed) {\n\t        return this;\n\t      }\n\t\n\t      SetRef(didAlter);\n\t      (removed || !exists) && SetRef(didChangeSize);\n\t\n\t      if (removed && len === 2) {\n\t        return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);\n\t      }\n\t\n\t      var isEditable = ownerID && ownerID === this.ownerID;\n\t      var newEntries = isEditable ? entries : arrCopy(entries);\n\t\n\t      if (exists) {\n\t        if (removed) {\n\t          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());\n\t        } else {\n\t          newEntries[idx] = [key, value];\n\t        }\n\t      } else {\n\t        newEntries.push([key, value]);\n\t      }\n\t\n\t      if (isEditable) {\n\t        this.entries = newEntries;\n\t        return this;\n\t      }\n\t\n\t      return new HashCollisionNode(ownerID, this.keyHash, newEntries);\n\t    };\n\t\n\t\n\t\n\t\n\t    function ValueNode(ownerID, keyHash, entry) {\n\t      this.ownerID = ownerID;\n\t      this.keyHash = keyHash;\n\t      this.entry = entry;\n\t    }\n\t\n\t    ValueNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n\t      return is(key, this.entry[0]) ? this.entry[1] : notSetValue;\n\t    };\n\t\n\t    ValueNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n\t      var removed = value === NOT_SET;\n\t      var keyMatch = is(key, this.entry[0]);\n\t      if (keyMatch ? value === this.entry[1] : removed) {\n\t        return this;\n\t      }\n\t\n\t      SetRef(didAlter);\n\t\n\t      if (removed) {\n\t        SetRef(didChangeSize);\n\t        return; // undefined\n\t      }\n\t\n\t      if (keyMatch) {\n\t        if (ownerID && ownerID === this.ownerID) {\n\t          this.entry[1] = value;\n\t          return this;\n\t        }\n\t        return new ValueNode(ownerID, this.keyHash, [key, value]);\n\t      }\n\t\n\t      SetRef(didChangeSize);\n\t      return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);\n\t    };\n\t\n\t\n\t\n\t  // #pragma Iterators\n\t\n\t  ArrayMapNode.prototype.iterate =\n\t  HashCollisionNode.prototype.iterate = function (fn, reverse) {\n\t    var entries = this.entries;\n\t    for (var ii = 0, maxIndex = entries.length - 1; ii <= maxIndex; ii++) {\n\t      if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {\n\t        return false;\n\t      }\n\t    }\n\t  }\n\t\n\t  BitmapIndexedNode.prototype.iterate =\n\t  HashArrayMapNode.prototype.iterate = function (fn, reverse) {\n\t    var nodes = this.nodes;\n\t    for (var ii = 0, maxIndex = nodes.length - 1; ii <= maxIndex; ii++) {\n\t      var node = nodes[reverse ? maxIndex - ii : ii];\n\t      if (node && node.iterate(fn, reverse) === false) {\n\t        return false;\n\t      }\n\t    }\n\t  }\n\t\n\t  ValueNode.prototype.iterate = function (fn, reverse) {\n\t    return fn(this.entry);\n\t  }\n\t\n\t  createClass(MapIterator, Iterator);\n\t\n\t    function MapIterator(map, type, reverse) {\n\t      this._type = type;\n\t      this._reverse = reverse;\n\t      this._stack = map._root && mapIteratorFrame(map._root);\n\t    }\n\t\n\t    MapIterator.prototype.next = function() {\n\t      var type = this._type;\n\t      var stack = this._stack;\n\t      while (stack) {\n\t        var node = stack.node;\n\t        var index = stack.index++;\n\t        var maxIndex;\n\t        if (node.entry) {\n\t          if (index === 0) {\n\t            return mapIteratorValue(type, node.entry);\n\t          }\n\t        } else if (node.entries) {\n\t          maxIndex = node.entries.length - 1;\n\t          if (index <= maxIndex) {\n\t            return mapIteratorValue(type, node.entries[this._reverse ? maxIndex - index : index]);\n\t          }\n\t        } else {\n\t          maxIndex = node.nodes.length - 1;\n\t          if (index <= maxIndex) {\n\t            var subNode = node.nodes[this._reverse ? maxIndex - index : index];\n\t            if (subNode) {\n\t              if (subNode.entry) {\n\t                return mapIteratorValue(type, subNode.entry);\n\t              }\n\t              stack = this._stack = mapIteratorFrame(subNode, stack);\n\t            }\n\t            continue;\n\t          }\n\t        }\n\t        stack = this._stack = this._stack.__prev;\n\t      }\n\t      return iteratorDone();\n\t    };\n\t\n\t\n\t  function mapIteratorValue(type, entry) {\n\t    return iteratorValue(type, entry[0], entry[1]);\n\t  }\n\t\n\t  function mapIteratorFrame(node, prev) {\n\t    return {\n\t      node: node,\n\t      index: 0,\n\t      __prev: prev\n\t    };\n\t  }\n\t\n\t  function makeMap(size, root, ownerID, hash) {\n\t    var map = Object.create(MapPrototype);\n\t    map.size = size;\n\t    map._root = root;\n\t    map.__ownerID = ownerID;\n\t    map.__hash = hash;\n\t    map.__altered = false;\n\t    return map;\n\t  }\n\t\n\t  var EMPTY_MAP;\n\t  function emptyMap() {\n\t    return EMPTY_MAP || (EMPTY_MAP = makeMap(0));\n\t  }\n\t\n\t  function updateMap(map, k, v) {\n\t    var newRoot;\n\t    var newSize;\n\t    if (!map._root) {\n\t      if (v === NOT_SET) {\n\t        return map;\n\t      }\n\t      newSize = 1;\n\t      newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);\n\t    } else {\n\t      var didChangeSize = MakeRef(CHANGE_LENGTH);\n\t      var didAlter = MakeRef(DID_ALTER);\n\t      newRoot = updateNode(map._root, map.__ownerID, 0, undefined, k, v, didChangeSize, didAlter);\n\t      if (!didAlter.value) {\n\t        return map;\n\t      }\n\t      newSize = map.size + (didChangeSize.value ? v === NOT_SET ? -1 : 1 : 0);\n\t    }\n\t    if (map.__ownerID) {\n\t      map.size = newSize;\n\t      map._root = newRoot;\n\t      map.__hash = undefined;\n\t      map.__altered = true;\n\t      return map;\n\t    }\n\t    return newRoot ? makeMap(newSize, newRoot) : emptyMap();\n\t  }\n\t\n\t  function updateNode(node, ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n\t    if (!node) {\n\t      if (value === NOT_SET) {\n\t        return node;\n\t      }\n\t      SetRef(didAlter);\n\t      SetRef(didChangeSize);\n\t      return new ValueNode(ownerID, keyHash, [key, value]);\n\t    }\n\t    return node.update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter);\n\t  }\n\t\n\t  function isLeafNode(node) {\n\t    return node.constructor === ValueNode || node.constructor === HashCollisionNode;\n\t  }\n\t\n\t  function mergeIntoNode(node, ownerID, shift, keyHash, entry) {\n\t    if (node.keyHash === keyHash) {\n\t      return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);\n\t    }\n\t\n\t    var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;\n\t    var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n\t\n\t    var newNode;\n\t    var nodes = idx1 === idx2 ?\n\t      [mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)] :\n\t      ((newNode = new ValueNode(ownerID, keyHash, entry)), idx1 < idx2 ? [node, newNode] : [newNode, node]);\n\t\n\t    return new BitmapIndexedNode(ownerID, (1 << idx1) | (1 << idx2), nodes);\n\t  }\n\t\n\t  function createNodes(ownerID, entries, key, value) {\n\t    if (!ownerID) {\n\t      ownerID = new OwnerID();\n\t    }\n\t    var node = new ValueNode(ownerID, hash(key), [key, value]);\n\t    for (var ii = 0; ii < entries.length; ii++) {\n\t      var entry = entries[ii];\n\t      node = node.update(ownerID, 0, undefined, entry[0], entry[1]);\n\t    }\n\t    return node;\n\t  }\n\t\n\t  function packNodes(ownerID, nodes, count, excluding) {\n\t    var bitmap = 0;\n\t    var packedII = 0;\n\t    var packedNodes = new Array(count);\n\t    for (var ii = 0, bit = 1, len = nodes.length; ii < len; ii++, bit <<= 1) {\n\t      var node = nodes[ii];\n\t      if (node !== undefined && ii !== excluding) {\n\t        bitmap |= bit;\n\t        packedNodes[packedII++] = node;\n\t      }\n\t    }\n\t    return new BitmapIndexedNode(ownerID, bitmap, packedNodes);\n\t  }\n\t\n\t  function expandNodes(ownerID, nodes, bitmap, including, node) {\n\t    var count = 0;\n\t    var expandedNodes = new Array(SIZE);\n\t    for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {\n\t      expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;\n\t    }\n\t    expandedNodes[including] = node;\n\t    return new HashArrayMapNode(ownerID, count + 1, expandedNodes);\n\t  }\n\t\n\t  function mergeIntoMapWith(map, merger, iterables) {\n\t    var iters = [];\n\t    for (var ii = 0; ii < iterables.length; ii++) {\n\t      var value = iterables[ii];\n\t      var iter = KeyedIterable(value);\n\t      if (!isIterable(value)) {\n\t        iter = iter.map(function(v ) {return fromJS(v)});\n\t      }\n\t      iters.push(iter);\n\t    }\n\t    return mergeIntoCollectionWith(map, merger, iters);\n\t  }\n\t\n\t  function deepMerger(existing, value, key) {\n\t    return existing && existing.mergeDeep && isIterable(value) ?\n\t      existing.mergeDeep(value) :\n\t      is(existing, value) ? existing : value;\n\t  }\n\t\n\t  function deepMergerWith(merger) {\n\t    return function(existing, value, key)  {\n\t      if (existing && existing.mergeDeepWith && isIterable(value)) {\n\t        return existing.mergeDeepWith(merger, value);\n\t      }\n\t      var nextValue = merger(existing, value, key);\n\t      return is(existing, nextValue) ? existing : nextValue;\n\t    };\n\t  }\n\t\n\t  function mergeIntoCollectionWith(collection, merger, iters) {\n\t    iters = iters.filter(function(x ) {return x.size !== 0});\n\t    if (iters.length === 0) {\n\t      return collection;\n\t    }\n\t    if (collection.size === 0 && !collection.__ownerID && iters.length === 1) {\n\t      return collection.constructor(iters[0]);\n\t    }\n\t    return collection.withMutations(function(collection ) {\n\t      var mergeIntoMap = merger ?\n\t        function(value, key)  {\n\t          collection.update(key, NOT_SET, function(existing )\n\t            {return existing === NOT_SET ? value : merger(existing, value, key)}\n\t          );\n\t        } :\n\t        function(value, key)  {\n\t          collection.set(key, value);\n\t        }\n\t      for (var ii = 0; ii < iters.length; ii++) {\n\t        iters[ii].forEach(mergeIntoMap);\n\t      }\n\t    });\n\t  }\n\t\n\t  function updateInDeepMap(existing, keyPathIter, notSetValue, updater) {\n\t    var isNotSet = existing === NOT_SET;\n\t    var step = keyPathIter.next();\n\t    if (step.done) {\n\t      var existingValue = isNotSet ? notSetValue : existing;\n\t      var newValue = updater(existingValue);\n\t      return newValue === existingValue ? existing : newValue;\n\t    }\n\t    invariant(\n\t      isNotSet || (existing && existing.set),\n\t      'invalid keyPath'\n\t    );\n\t    var key = step.value;\n\t    var nextExisting = isNotSet ? NOT_SET : existing.get(key, NOT_SET);\n\t    var nextUpdated = updateInDeepMap(\n\t      nextExisting,\n\t      keyPathIter,\n\t      notSetValue,\n\t      updater\n\t    );\n\t    return nextUpdated === nextExisting ? existing :\n\t      nextUpdated === NOT_SET ? existing.remove(key) :\n\t      (isNotSet ? emptyMap() : existing).set(key, nextUpdated);\n\t  }\n\t\n\t  function popCount(x) {\n\t    x = x - ((x >> 1) & 0x55555555);\n\t    x = (x & 0x33333333) + ((x >> 2) & 0x33333333);\n\t    x = (x + (x >> 4)) & 0x0f0f0f0f;\n\t    x = x + (x >> 8);\n\t    x = x + (x >> 16);\n\t    return x & 0x7f;\n\t  }\n\t\n\t  function setIn(array, idx, val, canEdit) {\n\t    var newArray = canEdit ? array : arrCopy(array);\n\t    newArray[idx] = val;\n\t    return newArray;\n\t  }\n\t\n\t  function spliceIn(array, idx, val, canEdit) {\n\t    var newLen = array.length + 1;\n\t    if (canEdit && idx + 1 === newLen) {\n\t      array[idx] = val;\n\t      return array;\n\t    }\n\t    var newArray = new Array(newLen);\n\t    var after = 0;\n\t    for (var ii = 0; ii < newLen; ii++) {\n\t      if (ii === idx) {\n\t        newArray[ii] = val;\n\t        after = -1;\n\t      } else {\n\t        newArray[ii] = array[ii + after];\n\t      }\n\t    }\n\t    return newArray;\n\t  }\n\t\n\t  function spliceOut(array, idx, canEdit) {\n\t    var newLen = array.length - 1;\n\t    if (canEdit && idx === newLen) {\n\t      array.pop();\n\t      return array;\n\t    }\n\t    var newArray = new Array(newLen);\n\t    var after = 0;\n\t    for (var ii = 0; ii < newLen; ii++) {\n\t      if (ii === idx) {\n\t        after = 1;\n\t      }\n\t      newArray[ii] = array[ii + after];\n\t    }\n\t    return newArray;\n\t  }\n\t\n\t  var MAX_ARRAY_MAP_SIZE = SIZE / 4;\n\t  var MAX_BITMAP_INDEXED_SIZE = SIZE / 2;\n\t  var MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;\n\t\n\t  createClass(List, IndexedCollection);\n\t\n\t    // @pragma Construction\n\t\n\t    function List(value) {\n\t      var empty = emptyList();\n\t      if (value === null || value === undefined) {\n\t        return empty;\n\t      }\n\t      if (isList(value)) {\n\t        return value;\n\t      }\n\t      var iter = IndexedIterable(value);\n\t      var size = iter.size;\n\t      if (size === 0) {\n\t        return empty;\n\t      }\n\t      assertNotInfinite(size);\n\t      if (size > 0 && size < SIZE) {\n\t        return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));\n\t      }\n\t      return empty.withMutations(function(list ) {\n\t        list.setSize(size);\n\t        iter.forEach(function(v, i)  {return list.set(i, v)});\n\t      });\n\t    }\n\t\n\t    List.of = function(/*...values*/) {\n\t      return this(arguments);\n\t    };\n\t\n\t    List.prototype.toString = function() {\n\t      return this.__toString('List [', ']');\n\t    };\n\t\n\t    // @pragma Access\n\t\n\t    List.prototype.get = function(index, notSetValue) {\n\t      index = wrapIndex(this, index);\n\t      if (index >= 0 && index < this.size) {\n\t        index += this._origin;\n\t        var node = listNodeFor(this, index);\n\t        return node && node.array[index & MASK];\n\t      }\n\t      return notSetValue;\n\t    };\n\t\n\t    // @pragma Modification\n\t\n\t    List.prototype.set = function(index, value) {\n\t      return updateList(this, index, value);\n\t    };\n\t\n\t    List.prototype.remove = function(index) {\n\t      return !this.has(index) ? this :\n\t        index === 0 ? this.shift() :\n\t        index === this.size - 1 ? this.pop() :\n\t        this.splice(index, 1);\n\t    };\n\t\n\t    List.prototype.insert = function(index, value) {\n\t      return this.splice(index, 0, value);\n\t    };\n\t\n\t    List.prototype.clear = function() {\n\t      if (this.size === 0) {\n\t        return this;\n\t      }\n\t      if (this.__ownerID) {\n\t        this.size = this._origin = this._capacity = 0;\n\t        this._level = SHIFT;\n\t        this._root = this._tail = null;\n\t        this.__hash = undefined;\n\t        this.__altered = true;\n\t        return this;\n\t      }\n\t      return emptyList();\n\t    };\n\t\n\t    List.prototype.push = function(/*...values*/) {\n\t      var values = arguments;\n\t      var oldSize = this.size;\n\t      return this.withMutations(function(list ) {\n\t        setListBounds(list, 0, oldSize + values.length);\n\t        for (var ii = 0; ii < values.length; ii++) {\n\t          list.set(oldSize + ii, values[ii]);\n\t        }\n\t      });\n\t    };\n\t\n\t    List.prototype.pop = function() {\n\t      return setListBounds(this, 0, -1);\n\t    };\n\t\n\t    List.prototype.unshift = function(/*...values*/) {\n\t      var values = arguments;\n\t      return this.withMutations(function(list ) {\n\t        setListBounds(list, -values.length);\n\t        for (var ii = 0; ii < values.length; ii++) {\n\t          list.set(ii, values[ii]);\n\t        }\n\t      });\n\t    };\n\t\n\t    List.prototype.shift = function() {\n\t      return setListBounds(this, 1);\n\t    };\n\t\n\t    // @pragma Composition\n\t\n\t    List.prototype.merge = function(/*...iters*/) {\n\t      return mergeIntoListWith(this, undefined, arguments);\n\t    };\n\t\n\t    List.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n\t      return mergeIntoListWith(this, merger, iters);\n\t    };\n\t\n\t    List.prototype.mergeDeep = function(/*...iters*/) {\n\t      return mergeIntoListWith(this, deepMerger, arguments);\n\t    };\n\t\n\t    List.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n\t      return mergeIntoListWith(this, deepMergerWith(merger), iters);\n\t    };\n\t\n\t    List.prototype.setSize = function(size) {\n\t      return setListBounds(this, 0, size);\n\t    };\n\t\n\t    // @pragma Iteration\n\t\n\t    List.prototype.slice = function(begin, end) {\n\t      var size = this.size;\n\t      if (wholeSlice(begin, end, size)) {\n\t        return this;\n\t      }\n\t      return setListBounds(\n\t        this,\n\t        resolveBegin(begin, size),\n\t        resolveEnd(end, size)\n\t      );\n\t    };\n\t\n\t    List.prototype.__iterator = function(type, reverse) {\n\t      var index = 0;\n\t      var values = iterateList(this, reverse);\n\t      return new Iterator(function()  {\n\t        var value = values();\n\t        return value === DONE ?\n\t          iteratorDone() :\n\t          iteratorValue(type, index++, value);\n\t      });\n\t    };\n\t\n\t    List.prototype.__iterate = function(fn, reverse) {\n\t      var index = 0;\n\t      var values = iterateList(this, reverse);\n\t      var value;\n\t      while ((value = values()) !== DONE) {\n\t        if (fn(value, index++, this) === false) {\n\t          break;\n\t        }\n\t      }\n\t      return index;\n\t    };\n\t\n\t    List.prototype.__ensureOwner = function(ownerID) {\n\t      if (ownerID === this.__ownerID) {\n\t        return this;\n\t      }\n\t      if (!ownerID) {\n\t        this.__ownerID = ownerID;\n\t        return this;\n\t      }\n\t      return makeList(this._origin, this._capacity, this._level, this._root, this._tail, ownerID, this.__hash);\n\t    };\n\t\n\t\n\t  function isList(maybeList) {\n\t    return !!(maybeList && maybeList[IS_LIST_SENTINEL]);\n\t  }\n\t\n\t  List.isList = isList;\n\t\n\t  var IS_LIST_SENTINEL = '@@__IMMUTABLE_LIST__@@';\n\t\n\t  var ListPrototype = List.prototype;\n\t  ListPrototype[IS_LIST_SENTINEL] = true;\n\t  ListPrototype[DELETE] = ListPrototype.remove;\n\t  ListPrototype.setIn = MapPrototype.setIn;\n\t  ListPrototype.deleteIn =\n\t  ListPrototype.removeIn = MapPrototype.removeIn;\n\t  ListPrototype.update = MapPrototype.update;\n\t  ListPrototype.updateIn = MapPrototype.updateIn;\n\t  ListPrototype.mergeIn = MapPrototype.mergeIn;\n\t  ListPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n\t  ListPrototype.withMutations = MapPrototype.withMutations;\n\t  ListPrototype.asMutable = MapPrototype.asMutable;\n\t  ListPrototype.asImmutable = MapPrototype.asImmutable;\n\t  ListPrototype.wasAltered = MapPrototype.wasAltered;\n\t\n\t\n\t\n\t    function VNode(array, ownerID) {\n\t      this.array = array;\n\t      this.ownerID = ownerID;\n\t    }\n\t\n\t    // TODO: seems like these methods are very similar\n\t\n\t    VNode.prototype.removeBefore = function(ownerID, level, index) {\n\t      if (index === level ? 1 << level : 0 || this.array.length === 0) {\n\t        return this;\n\t      }\n\t      var originIndex = (index >>> level) & MASK;\n\t      if (originIndex >= this.array.length) {\n\t        return new VNode([], ownerID);\n\t      }\n\t      var removingFirst = originIndex === 0;\n\t      var newChild;\n\t      if (level > 0) {\n\t        var oldChild = this.array[originIndex];\n\t        newChild = oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);\n\t        if (newChild === oldChild && removingFirst) {\n\t          return this;\n\t        }\n\t      }\n\t      if (removingFirst && !newChild) {\n\t        return this;\n\t      }\n\t      var editable = editableVNode(this, ownerID);\n\t      if (!removingFirst) {\n\t        for (var ii = 0; ii < originIndex; ii++) {\n\t          editable.array[ii] = undefined;\n\t        }\n\t      }\n\t      if (newChild) {\n\t        editable.array[originIndex] = newChild;\n\t      }\n\t      return editable;\n\t    };\n\t\n\t    VNode.prototype.removeAfter = function(ownerID, level, index) {\n\t      if (index === (level ? 1 << level : 0) || this.array.length === 0) {\n\t        return this;\n\t      }\n\t      var sizeIndex = ((index - 1) >>> level) & MASK;\n\t      if (sizeIndex >= this.array.length) {\n\t        return this;\n\t      }\n\t\n\t      var newChild;\n\t      if (level > 0) {\n\t        var oldChild = this.array[sizeIndex];\n\t        newChild = oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);\n\t        if (newChild === oldChild && sizeIndex === this.array.length - 1) {\n\t          return this;\n\t        }\n\t      }\n\t\n\t      var editable = editableVNode(this, ownerID);\n\t      editable.array.splice(sizeIndex + 1);\n\t      if (newChild) {\n\t        editable.array[sizeIndex] = newChild;\n\t      }\n\t      return editable;\n\t    };\n\t\n\t\n\t\n\t  var DONE = {};\n\t\n\t  function iterateList(list, reverse) {\n\t    var left = list._origin;\n\t    var right = list._capacity;\n\t    var tailPos = getTailOffset(right);\n\t    var tail = list._tail;\n\t\n\t    return iterateNodeOrLeaf(list._root, list._level, 0);\n\t\n\t    function iterateNodeOrLeaf(node, level, offset) {\n\t      return level === 0 ?\n\t        iterateLeaf(node, offset) :\n\t        iterateNode(node, level, offset);\n\t    }\n\t\n\t    function iterateLeaf(node, offset) {\n\t      var array = offset === tailPos ? tail && tail.array : node && node.array;\n\t      var from = offset > left ? 0 : left - offset;\n\t      var to = right - offset;\n\t      if (to > SIZE) {\n\t        to = SIZE;\n\t      }\n\t      return function()  {\n\t        if (from === to) {\n\t          return DONE;\n\t        }\n\t        var idx = reverse ? --to : from++;\n\t        return array && array[idx];\n\t      };\n\t    }\n\t\n\t    function iterateNode(node, level, offset) {\n\t      var values;\n\t      var array = node && node.array;\n\t      var from = offset > left ? 0 : (left - offset) >> level;\n\t      var to = ((right - offset) >> level) + 1;\n\t      if (to > SIZE) {\n\t        to = SIZE;\n\t      }\n\t      return function()  {\n\t        do {\n\t          if (values) {\n\t            var value = values();\n\t            if (value !== DONE) {\n\t              return value;\n\t            }\n\t            values = null;\n\t          }\n\t          if (from === to) {\n\t            return DONE;\n\t          }\n\t          var idx = reverse ? --to : from++;\n\t          values = iterateNodeOrLeaf(\n\t            array && array[idx], level - SHIFT, offset + (idx << level)\n\t          );\n\t        } while (true);\n\t      };\n\t    }\n\t  }\n\t\n\t  function makeList(origin, capacity, level, root, tail, ownerID, hash) {\n\t    var list = Object.create(ListPrototype);\n\t    list.size = capacity - origin;\n\t    list._origin = origin;\n\t    list._capacity = capacity;\n\t    list._level = level;\n\t    list._root = root;\n\t    list._tail = tail;\n\t    list.__ownerID = ownerID;\n\t    list.__hash = hash;\n\t    list.__altered = false;\n\t    return list;\n\t  }\n\t\n\t  var EMPTY_LIST;\n\t  function emptyList() {\n\t    return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));\n\t  }\n\t\n\t  function updateList(list, index, value) {\n\t    index = wrapIndex(list, index);\n\t\n\t    if (index !== index) {\n\t      return list;\n\t    }\n\t\n\t    if (index >= list.size || index < 0) {\n\t      return list.withMutations(function(list ) {\n\t        index < 0 ?\n\t          setListBounds(list, index).set(0, value) :\n\t          setListBounds(list, 0, index + 1).set(index, value)\n\t      });\n\t    }\n\t\n\t    index += list._origin;\n\t\n\t    var newTail = list._tail;\n\t    var newRoot = list._root;\n\t    var didAlter = MakeRef(DID_ALTER);\n\t    if (index >= getTailOffset(list._capacity)) {\n\t      newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);\n\t    } else {\n\t      newRoot = updateVNode(newRoot, list.__ownerID, list._level, index, value, didAlter);\n\t    }\n\t\n\t    if (!didAlter.value) {\n\t      return list;\n\t    }\n\t\n\t    if (list.__ownerID) {\n\t      list._root = newRoot;\n\t      list._tail = newTail;\n\t      list.__hash = undefined;\n\t      list.__altered = true;\n\t      return list;\n\t    }\n\t    return makeList(list._origin, list._capacity, list._level, newRoot, newTail);\n\t  }\n\t\n\t  function updateVNode(node, ownerID, level, index, value, didAlter) {\n\t    var idx = (index >>> level) & MASK;\n\t    var nodeHas = node && idx < node.array.length;\n\t    if (!nodeHas && value === undefined) {\n\t      return node;\n\t    }\n\t\n\t    var newNode;\n\t\n\t    if (level > 0) {\n\t      var lowerNode = node && node.array[idx];\n\t      var newLowerNode = updateVNode(lowerNode, ownerID, level - SHIFT, index, value, didAlter);\n\t      if (newLowerNode === lowerNode) {\n\t        return node;\n\t      }\n\t      newNode = editableVNode(node, ownerID);\n\t      newNode.array[idx] = newLowerNode;\n\t      return newNode;\n\t    }\n\t\n\t    if (nodeHas && node.array[idx] === value) {\n\t      return node;\n\t    }\n\t\n\t    SetRef(didAlter);\n\t\n\t    newNode = editableVNode(node, ownerID);\n\t    if (value === undefined && idx === newNode.array.length - 1) {\n\t      newNode.array.pop();\n\t    } else {\n\t      newNode.array[idx] = value;\n\t    }\n\t    return newNode;\n\t  }\n\t\n\t  function editableVNode(node, ownerID) {\n\t    if (ownerID && node && ownerID === node.ownerID) {\n\t      return node;\n\t    }\n\t    return new VNode(node ? node.array.slice() : [], ownerID);\n\t  }\n\t\n\t  function listNodeFor(list, rawIndex) {\n\t    if (rawIndex >= getTailOffset(list._capacity)) {\n\t      return list._tail;\n\t    }\n\t    if (rawIndex < 1 << (list._level + SHIFT)) {\n\t      var node = list._root;\n\t      var level = list._level;\n\t      while (node && level > 0) {\n\t        node = node.array[(rawIndex >>> level) & MASK];\n\t        level -= SHIFT;\n\t      }\n\t      return node;\n\t    }\n\t  }\n\t\n\t  function setListBounds(list, begin, end) {\n\t    // Sanitize begin & end using this shorthand for ToInt32(argument)\n\t    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n\t    if (begin !== undefined) {\n\t      begin = begin | 0;\n\t    }\n\t    if (end !== undefined) {\n\t      end = end | 0;\n\t    }\n\t    var owner = list.__ownerID || new OwnerID();\n\t    var oldOrigin = list._origin;\n\t    var oldCapacity = list._capacity;\n\t    var newOrigin = oldOrigin + begin;\n\t    var newCapacity = end === undefined ? oldCapacity : end < 0 ? oldCapacity + end : oldOrigin + end;\n\t    if (newOrigin === oldOrigin && newCapacity === oldCapacity) {\n\t      return list;\n\t    }\n\t\n\t    // If it's going to end after it starts, it's empty.\n\t    if (newOrigin >= newCapacity) {\n\t      return list.clear();\n\t    }\n\t\n\t    var newLevel = list._level;\n\t    var newRoot = list._root;\n\t\n\t    // New origin might need creating a higher root.\n\t    var offsetShift = 0;\n\t    while (newOrigin + offsetShift < 0) {\n\t      newRoot = new VNode(newRoot && newRoot.array.length ? [undefined, newRoot] : [], owner);\n\t      newLevel += SHIFT;\n\t      offsetShift += 1 << newLevel;\n\t    }\n\t    if (offsetShift) {\n\t      newOrigin += offsetShift;\n\t      oldOrigin += offsetShift;\n\t      newCapacity += offsetShift;\n\t      oldCapacity += offsetShift;\n\t    }\n\t\n\t    var oldTailOffset = getTailOffset(oldCapacity);\n\t    var newTailOffset = getTailOffset(newCapacity);\n\t\n\t    // New size might need creating a higher root.\n\t    while (newTailOffset >= 1 << (newLevel + SHIFT)) {\n\t      newRoot = new VNode(newRoot && newRoot.array.length ? [newRoot] : [], owner);\n\t      newLevel += SHIFT;\n\t    }\n\t\n\t    // Locate or create the new tail.\n\t    var oldTail = list._tail;\n\t    var newTail = newTailOffset < oldTailOffset ?\n\t      listNodeFor(list, newCapacity - 1) :\n\t      newTailOffset > oldTailOffset ? new VNode([], owner) : oldTail;\n\t\n\t    // Merge Tail into tree.\n\t    if (oldTail && newTailOffset > oldTailOffset && newOrigin < oldCapacity && oldTail.array.length) {\n\t      newRoot = editableVNode(newRoot, owner);\n\t      var node = newRoot;\n\t      for (var level = newLevel; level > SHIFT; level -= SHIFT) {\n\t        var idx = (oldTailOffset >>> level) & MASK;\n\t        node = node.array[idx] = editableVNode(node.array[idx], owner);\n\t      }\n\t      node.array[(oldTailOffset >>> SHIFT) & MASK] = oldTail;\n\t    }\n\t\n\t    // If the size has been reduced, there's a chance the tail needs to be trimmed.\n\t    if (newCapacity < oldCapacity) {\n\t      newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);\n\t    }\n\t\n\t    // If the new origin is within the tail, then we do not need a root.\n\t    if (newOrigin >= newTailOffset) {\n\t      newOrigin -= newTailOffset;\n\t      newCapacity -= newTailOffset;\n\t      newLevel = SHIFT;\n\t      newRoot = null;\n\t      newTail = newTail && newTail.removeBefore(owner, 0, newOrigin);\n\t\n\t    // Otherwise, if the root has been trimmed, garbage collect.\n\t    } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {\n\t      offsetShift = 0;\n\t\n\t      // Identify the new top root node of the subtree of the old root.\n\t      while (newRoot) {\n\t        var beginIndex = (newOrigin >>> newLevel) & MASK;\n\t        if (beginIndex !== (newTailOffset >>> newLevel) & MASK) {\n\t          break;\n\t        }\n\t        if (beginIndex) {\n\t          offsetShift += (1 << newLevel) * beginIndex;\n\t        }\n\t        newLevel -= SHIFT;\n\t        newRoot = newRoot.array[beginIndex];\n\t      }\n\t\n\t      // Trim the new sides of the new root.\n\t      if (newRoot && newOrigin > oldOrigin) {\n\t        newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);\n\t      }\n\t      if (newRoot && newTailOffset < oldTailOffset) {\n\t        newRoot = newRoot.removeAfter(owner, newLevel, newTailOffset - offsetShift);\n\t      }\n\t      if (offsetShift) {\n\t        newOrigin -= offsetShift;\n\t        newCapacity -= offsetShift;\n\t      }\n\t    }\n\t\n\t    if (list.__ownerID) {\n\t      list.size = newCapacity - newOrigin;\n\t      list._origin = newOrigin;\n\t      list._capacity = newCapacity;\n\t      list._level = newLevel;\n\t      list._root = newRoot;\n\t      list._tail = newTail;\n\t      list.__hash = undefined;\n\t      list.__altered = true;\n\t      return list;\n\t    }\n\t    return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);\n\t  }\n\t\n\t  function mergeIntoListWith(list, merger, iterables) {\n\t    var iters = [];\n\t    var maxSize = 0;\n\t    for (var ii = 0; ii < iterables.length; ii++) {\n\t      var value = iterables[ii];\n\t      var iter = IndexedIterable(value);\n\t      if (iter.size > maxSize) {\n\t        maxSize = iter.size;\n\t      }\n\t      if (!isIterable(value)) {\n\t        iter = iter.map(function(v ) {return fromJS(v)});\n\t      }\n\t      iters.push(iter);\n\t    }\n\t    if (maxSize > list.size) {\n\t      list = list.setSize(maxSize);\n\t    }\n\t    return mergeIntoCollectionWith(list, merger, iters);\n\t  }\n\t\n\t  function getTailOffset(size) {\n\t    return size < SIZE ? 0 : (((size - 1) >>> SHIFT) << SHIFT);\n\t  }\n\t\n\t  createClass(OrderedMap, Map);\n\t\n\t    // @pragma Construction\n\t\n\t    function OrderedMap(value) {\n\t      return value === null || value === undefined ? emptyOrderedMap() :\n\t        isOrderedMap(value) ? value :\n\t        emptyOrderedMap().withMutations(function(map ) {\n\t          var iter = KeyedIterable(value);\n\t          assertNotInfinite(iter.size);\n\t          iter.forEach(function(v, k)  {return map.set(k, v)});\n\t        });\n\t    }\n\t\n\t    OrderedMap.of = function(/*...values*/) {\n\t      return this(arguments);\n\t    };\n\t\n\t    OrderedMap.prototype.toString = function() {\n\t      return this.__toString('OrderedMap {', '}');\n\t    };\n\t\n\t    // @pragma Access\n\t\n\t    OrderedMap.prototype.get = function(k, notSetValue) {\n\t      var index = this._map.get(k);\n\t      return index !== undefined ? this._list.get(index)[1] : notSetValue;\n\t    };\n\t\n\t    // @pragma Modification\n\t\n\t    OrderedMap.prototype.clear = function() {\n\t      if (this.size === 0) {\n\t        return this;\n\t      }\n\t      if (this.__ownerID) {\n\t        this.size = 0;\n\t        this._map.clear();\n\t        this._list.clear();\n\t        return this;\n\t      }\n\t      return emptyOrderedMap();\n\t    };\n\t\n\t    OrderedMap.prototype.set = function(k, v) {\n\t      return updateOrderedMap(this, k, v);\n\t    };\n\t\n\t    OrderedMap.prototype.remove = function(k) {\n\t      return updateOrderedMap(this, k, NOT_SET);\n\t    };\n\t\n\t    OrderedMap.prototype.wasAltered = function() {\n\t      return this._map.wasAltered() || this._list.wasAltered();\n\t    };\n\t\n\t    OrderedMap.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n\t      return this._list.__iterate(\n\t        function(entry ) {return entry && fn(entry[1], entry[0], this$0)},\n\t        reverse\n\t      );\n\t    };\n\t\n\t    OrderedMap.prototype.__iterator = function(type, reverse) {\n\t      return this._list.fromEntrySeq().__iterator(type, reverse);\n\t    };\n\t\n\t    OrderedMap.prototype.__ensureOwner = function(ownerID) {\n\t      if (ownerID === this.__ownerID) {\n\t        return this;\n\t      }\n\t      var newMap = this._map.__ensureOwner(ownerID);\n\t      var newList = this._list.__ensureOwner(ownerID);\n\t      if (!ownerID) {\n\t        this.__ownerID = ownerID;\n\t        this._map = newMap;\n\t        this._list = newList;\n\t        return this;\n\t      }\n\t      return makeOrderedMap(newMap, newList, ownerID, this.__hash);\n\t    };\n\t\n\t\n\t  function isOrderedMap(maybeOrderedMap) {\n\t    return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);\n\t  }\n\t\n\t  OrderedMap.isOrderedMap = isOrderedMap;\n\t\n\t  OrderedMap.prototype[IS_ORDERED_SENTINEL] = true;\n\t  OrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;\n\t\n\t\n\t\n\t  function makeOrderedMap(map, list, ownerID, hash) {\n\t    var omap = Object.create(OrderedMap.prototype);\n\t    omap.size = map ? map.size : 0;\n\t    omap._map = map;\n\t    omap._list = list;\n\t    omap.__ownerID = ownerID;\n\t    omap.__hash = hash;\n\t    return omap;\n\t  }\n\t\n\t  var EMPTY_ORDERED_MAP;\n\t  function emptyOrderedMap() {\n\t    return EMPTY_ORDERED_MAP || (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()));\n\t  }\n\t\n\t  function updateOrderedMap(omap, k, v) {\n\t    var map = omap._map;\n\t    var list = omap._list;\n\t    var i = map.get(k);\n\t    var has = i !== undefined;\n\t    var newMap;\n\t    var newList;\n\t    if (v === NOT_SET) { // removed\n\t      if (!has) {\n\t        return omap;\n\t      }\n\t      if (list.size >= SIZE && list.size >= map.size * 2) {\n\t        newList = list.filter(function(entry, idx)  {return entry !== undefined && i !== idx});\n\t        newMap = newList.toKeyedSeq().map(function(entry ) {return entry[0]}).flip().toMap();\n\t        if (omap.__ownerID) {\n\t          newMap.__ownerID = newList.__ownerID = omap.__ownerID;\n\t        }\n\t      } else {\n\t        newMap = map.remove(k);\n\t        newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);\n\t      }\n\t    } else {\n\t      if (has) {\n\t        if (v === list.get(i)[1]) {\n\t          return omap;\n\t        }\n\t        newMap = map;\n\t        newList = list.set(i, [k, v]);\n\t      } else {\n\t        newMap = map.set(k, list.size);\n\t        newList = list.set(list.size, [k, v]);\n\t      }\n\t    }\n\t    if (omap.__ownerID) {\n\t      omap.size = newMap.size;\n\t      omap._map = newMap;\n\t      omap._list = newList;\n\t      omap.__hash = undefined;\n\t      return omap;\n\t    }\n\t    return makeOrderedMap(newMap, newList);\n\t  }\n\t\n\t  createClass(ToKeyedSequence, KeyedSeq);\n\t    function ToKeyedSequence(indexed, useKeys) {\n\t      this._iter = indexed;\n\t      this._useKeys = useKeys;\n\t      this.size = indexed.size;\n\t    }\n\t\n\t    ToKeyedSequence.prototype.get = function(key, notSetValue) {\n\t      return this._iter.get(key, notSetValue);\n\t    };\n\t\n\t    ToKeyedSequence.prototype.has = function(key) {\n\t      return this._iter.has(key);\n\t    };\n\t\n\t    ToKeyedSequence.prototype.valueSeq = function() {\n\t      return this._iter.valueSeq();\n\t    };\n\t\n\t    ToKeyedSequence.prototype.reverse = function() {var this$0 = this;\n\t      var reversedSequence = reverseFactory(this, true);\n\t      if (!this._useKeys) {\n\t        reversedSequence.valueSeq = function()  {return this$0._iter.toSeq().reverse()};\n\t      }\n\t      return reversedSequence;\n\t    };\n\t\n\t    ToKeyedSequence.prototype.map = function(mapper, context) {var this$0 = this;\n\t      var mappedSequence = mapFactory(this, mapper, context);\n\t      if (!this._useKeys) {\n\t        mappedSequence.valueSeq = function()  {return this$0._iter.toSeq().map(mapper, context)};\n\t      }\n\t      return mappedSequence;\n\t    };\n\t\n\t    ToKeyedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n\t      var ii;\n\t      return this._iter.__iterate(\n\t        this._useKeys ?\n\t          function(v, k)  {return fn(v, k, this$0)} :\n\t          ((ii = reverse ? resolveSize(this) : 0),\n\t            function(v ) {return fn(v, reverse ? --ii : ii++, this$0)}),\n\t        reverse\n\t      );\n\t    };\n\t\n\t    ToKeyedSequence.prototype.__iterator = function(type, reverse) {\n\t      if (this._useKeys) {\n\t        return this._iter.__iterator(type, reverse);\n\t      }\n\t      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n\t      var ii = reverse ? resolveSize(this) : 0;\n\t      return new Iterator(function()  {\n\t        var step = iterator.next();\n\t        return step.done ? step :\n\t          iteratorValue(type, reverse ? --ii : ii++, step.value, step);\n\t      });\n\t    };\n\t\n\t  ToKeyedSequence.prototype[IS_ORDERED_SENTINEL] = true;\n\t\n\t\n\t  createClass(ToIndexedSequence, IndexedSeq);\n\t    function ToIndexedSequence(iter) {\n\t      this._iter = iter;\n\t      this.size = iter.size;\n\t    }\n\t\n\t    ToIndexedSequence.prototype.includes = function(value) {\n\t      return this._iter.includes(value);\n\t    };\n\t\n\t    ToIndexedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n\t      var iterations = 0;\n\t      return this._iter.__iterate(function(v ) {return fn(v, iterations++, this$0)}, reverse);\n\t    };\n\t\n\t    ToIndexedSequence.prototype.__iterator = function(type, reverse) {\n\t      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n\t      var iterations = 0;\n\t      return new Iterator(function()  {\n\t        var step = iterator.next();\n\t        return step.done ? step :\n\t          iteratorValue(type, iterations++, step.value, step)\n\t      });\n\t    };\n\t\n\t\n\t\n\t  createClass(ToSetSequence, SetSeq);\n\t    function ToSetSequence(iter) {\n\t      this._iter = iter;\n\t      this.size = iter.size;\n\t    }\n\t\n\t    ToSetSequence.prototype.has = function(key) {\n\t      return this._iter.includes(key);\n\t    };\n\t\n\t    ToSetSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n\t      return this._iter.__iterate(function(v ) {return fn(v, v, this$0)}, reverse);\n\t    };\n\t\n\t    ToSetSequence.prototype.__iterator = function(type, reverse) {\n\t      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n\t      return new Iterator(function()  {\n\t        var step = iterator.next();\n\t        return step.done ? step :\n\t          iteratorValue(type, step.value, step.value, step);\n\t      });\n\t    };\n\t\n\t\n\t\n\t  createClass(FromEntriesSequence, KeyedSeq);\n\t    function FromEntriesSequence(entries) {\n\t      this._iter = entries;\n\t      this.size = entries.size;\n\t    }\n\t\n\t    FromEntriesSequence.prototype.entrySeq = function() {\n\t      return this._iter.toSeq();\n\t    };\n\t\n\t    FromEntriesSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n\t      return this._iter.__iterate(function(entry ) {\n\t        // Check if entry exists first so array access doesn't throw for holes\n\t        // in the parent iteration.\n\t        if (entry) {\n\t          validateEntry(entry);\n\t          var indexedIterable = isIterable(entry);\n\t          return fn(\n\t            indexedIterable ? entry.get(1) : entry[1],\n\t            indexedIterable ? entry.get(0) : entry[0],\n\t            this$0\n\t          );\n\t        }\n\t      }, reverse);\n\t    };\n\t\n\t    FromEntriesSequence.prototype.__iterator = function(type, reverse) {\n\t      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n\t      return new Iterator(function()  {\n\t        while (true) {\n\t          var step = iterator.next();\n\t          if (step.done) {\n\t            return step;\n\t          }\n\t          var entry = step.value;\n\t          // Check if entry exists first so array access doesn't throw for holes\n\t          // in the parent iteration.\n\t          if (entry) {\n\t            validateEntry(entry);\n\t            var indexedIterable = isIterable(entry);\n\t            return iteratorValue(\n\t              type,\n\t              indexedIterable ? entry.get(0) : entry[0],\n\t              indexedIterable ? entry.get(1) : entry[1],\n\t              step\n\t            );\n\t          }\n\t        }\n\t      });\n\t    };\n\t\n\t\n\t  ToIndexedSequence.prototype.cacheResult =\n\t  ToKeyedSequence.prototype.cacheResult =\n\t  ToSetSequence.prototype.cacheResult =\n\t  FromEntriesSequence.prototype.cacheResult =\n\t    cacheResultThrough;\n\t\n\t\n\t  function flipFactory(iterable) {\n\t    var flipSequence = makeSequence(iterable);\n\t    flipSequence._iter = iterable;\n\t    flipSequence.size = iterable.size;\n\t    flipSequence.flip = function()  {return iterable};\n\t    flipSequence.reverse = function () {\n\t      var reversedSequence = iterable.reverse.apply(this); // super.reverse()\n\t      reversedSequence.flip = function()  {return iterable.reverse()};\n\t      return reversedSequence;\n\t    };\n\t    flipSequence.has = function(key ) {return iterable.includes(key)};\n\t    flipSequence.includes = function(key ) {return iterable.has(key)};\n\t    flipSequence.cacheResult = cacheResultThrough;\n\t    flipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n\t      return iterable.__iterate(function(v, k)  {return fn(k, v, this$0) !== false}, reverse);\n\t    }\n\t    flipSequence.__iteratorUncached = function(type, reverse) {\n\t      if (type === ITERATE_ENTRIES) {\n\t        var iterator = iterable.__iterator(type, reverse);\n\t        return new Iterator(function()  {\n\t          var step = iterator.next();\n\t          if (!step.done) {\n\t            var k = step.value[0];\n\t            step.value[0] = step.value[1];\n\t            step.value[1] = k;\n\t          }\n\t          return step;\n\t        });\n\t      }\n\t      return iterable.__iterator(\n\t        type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES,\n\t        reverse\n\t      );\n\t    }\n\t    return flipSequence;\n\t  }\n\t\n\t\n\t  function mapFactory(iterable, mapper, context) {\n\t    var mappedSequence = makeSequence(iterable);\n\t    mappedSequence.size = iterable.size;\n\t    mappedSequence.has = function(key ) {return iterable.has(key)};\n\t    mappedSequence.get = function(key, notSetValue)  {\n\t      var v = iterable.get(key, NOT_SET);\n\t      return v === NOT_SET ?\n\t        notSetValue :\n\t        mapper.call(context, v, key, iterable);\n\t    };\n\t    mappedSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n\t      return iterable.__iterate(\n\t        function(v, k, c)  {return fn(mapper.call(context, v, k, c), k, this$0) !== false},\n\t        reverse\n\t      );\n\t    }\n\t    mappedSequence.__iteratorUncached = function (type, reverse) {\n\t      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n\t      return new Iterator(function()  {\n\t        var step = iterator.next();\n\t        if (step.done) {\n\t          return step;\n\t        }\n\t        var entry = step.value;\n\t        var key = entry[0];\n\t        return iteratorValue(\n\t          type,\n\t          key,\n\t          mapper.call(context, entry[1], key, iterable),\n\t          step\n\t        );\n\t      });\n\t    }\n\t    return mappedSequence;\n\t  }\n\t\n\t\n\t  function reverseFactory(iterable, useKeys) {\n\t    var reversedSequence = makeSequence(iterable);\n\t    reversedSequence._iter = iterable;\n\t    reversedSequence.size = iterable.size;\n\t    reversedSequence.reverse = function()  {return iterable};\n\t    if (iterable.flip) {\n\t      reversedSequence.flip = function () {\n\t        var flipSequence = flipFactory(iterable);\n\t        flipSequence.reverse = function()  {return iterable.flip()};\n\t        return flipSequence;\n\t      };\n\t    }\n\t    reversedSequence.get = function(key, notSetValue) \n\t      {return iterable.get(useKeys ? key : -1 - key, notSetValue)};\n\t    reversedSequence.has = function(key )\n\t      {return iterable.has(useKeys ? key : -1 - key)};\n\t    reversedSequence.includes = function(value ) {return iterable.includes(value)};\n\t    reversedSequence.cacheResult = cacheResultThrough;\n\t    reversedSequence.__iterate = function (fn, reverse) {var this$0 = this;\n\t      return iterable.__iterate(function(v, k)  {return fn(v, k, this$0)}, !reverse);\n\t    };\n\t    reversedSequence.__iterator =\n\t      function(type, reverse)  {return iterable.__iterator(type, !reverse)};\n\t    return reversedSequence;\n\t  }\n\t\n\t\n\t  function filterFactory(iterable, predicate, context, useKeys) {\n\t    var filterSequence = makeSequence(iterable);\n\t    if (useKeys) {\n\t      filterSequence.has = function(key ) {\n\t        var v = iterable.get(key, NOT_SET);\n\t        return v !== NOT_SET && !!predicate.call(context, v, key, iterable);\n\t      };\n\t      filterSequence.get = function(key, notSetValue)  {\n\t        var v = iterable.get(key, NOT_SET);\n\t        return v !== NOT_SET && predicate.call(context, v, key, iterable) ?\n\t          v : notSetValue;\n\t      };\n\t    }\n\t    filterSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n\t      var iterations = 0;\n\t      iterable.__iterate(function(v, k, c)  {\n\t        if (predicate.call(context, v, k, c)) {\n\t          iterations++;\n\t          return fn(v, useKeys ? k : iterations - 1, this$0);\n\t        }\n\t      }, reverse);\n\t      return iterations;\n\t    };\n\t    filterSequence.__iteratorUncached = function (type, reverse) {\n\t      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n\t      var iterations = 0;\n\t      return new Iterator(function()  {\n\t        while (true) {\n\t          var step = iterator.next();\n\t          if (step.done) {\n\t            return step;\n\t          }\n\t          var entry = step.value;\n\t          var key = entry[0];\n\t          var value = entry[1];\n\t          if (predicate.call(context, value, key, iterable)) {\n\t            return iteratorValue(type, useKeys ? key : iterations++, value, step);\n\t          }\n\t        }\n\t      });\n\t    }\n\t    return filterSequence;\n\t  }\n\t\n\t\n\t  function countByFactory(iterable, grouper, context) {\n\t    var groups = Map().asMutable();\n\t    iterable.__iterate(function(v, k)  {\n\t      groups.update(\n\t        grouper.call(context, v, k, iterable),\n\t        0,\n\t        function(a ) {return a + 1}\n\t      );\n\t    });\n\t    return groups.asImmutable();\n\t  }\n\t\n\t\n\t  function groupByFactory(iterable, grouper, context) {\n\t    var isKeyedIter = isKeyed(iterable);\n\t    var groups = (isOrdered(iterable) ? OrderedMap() : Map()).asMutable();\n\t    iterable.__iterate(function(v, k)  {\n\t      groups.update(\n\t        grouper.call(context, v, k, iterable),\n\t        function(a ) {return (a = a || [], a.push(isKeyedIter ? [k, v] : v), a)}\n\t      );\n\t    });\n\t    var coerce = iterableClass(iterable);\n\t    return groups.map(function(arr ) {return reify(iterable, coerce(arr))});\n\t  }\n\t\n\t\n\t  function sliceFactory(iterable, begin, end, useKeys) {\n\t    var originalSize = iterable.size;\n\t\n\t    // Sanitize begin & end using this shorthand for ToInt32(argument)\n\t    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n\t    if (begin !== undefined) {\n\t      begin = begin | 0;\n\t    }\n\t    if (end !== undefined) {\n\t      if (end === Infinity) {\n\t        end = originalSize;\n\t      } else {\n\t        end = end | 0;\n\t      }\n\t    }\n\t\n\t    if (wholeSlice(begin, end, originalSize)) {\n\t      return iterable;\n\t    }\n\t\n\t    var resolvedBegin = resolveBegin(begin, originalSize);\n\t    var resolvedEnd = resolveEnd(end, originalSize);\n\t\n\t    // begin or end will be NaN if they were provided as negative numbers and\n\t    // this iterable's size is unknown. In that case, cache first so there is\n\t    // a known size and these do not resolve to NaN.\n\t    if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {\n\t      return sliceFactory(iterable.toSeq().cacheResult(), begin, end, useKeys);\n\t    }\n\t\n\t    // Note: resolvedEnd is undefined when the original sequence's length is\n\t    // unknown and this slice did not supply an end and should contain all\n\t    // elements after resolvedBegin.\n\t    // In that case, resolvedSize will be NaN and sliceSize will remain undefined.\n\t    var resolvedSize = resolvedEnd - resolvedBegin;\n\t    var sliceSize;\n\t    if (resolvedSize === resolvedSize) {\n\t      sliceSize = resolvedSize < 0 ? 0 : resolvedSize;\n\t    }\n\t\n\t    var sliceSeq = makeSequence(iterable);\n\t\n\t    // If iterable.size is undefined, the size of the realized sliceSeq is\n\t    // unknown at this point unless the number of items to slice is 0\n\t    sliceSeq.size = sliceSize === 0 ? sliceSize : iterable.size && sliceSize || undefined;\n\t\n\t    if (!useKeys && isSeq(iterable) && sliceSize >= 0) {\n\t      sliceSeq.get = function (index, notSetValue) {\n\t        index = wrapIndex(this, index);\n\t        return index >= 0 && index < sliceSize ?\n\t          iterable.get(index + resolvedBegin, notSetValue) :\n\t          notSetValue;\n\t      }\n\t    }\n\t\n\t    sliceSeq.__iterateUncached = function(fn, reverse) {var this$0 = this;\n\t      if (sliceSize === 0) {\n\t        return 0;\n\t      }\n\t      if (reverse) {\n\t        return this.cacheResult().__iterate(fn, reverse);\n\t      }\n\t      var skipped = 0;\n\t      var isSkipping = true;\n\t      var iterations = 0;\n\t      iterable.__iterate(function(v, k)  {\n\t        if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {\n\t          iterations++;\n\t          return fn(v, useKeys ? k : iterations - 1, this$0) !== false &&\n\t                 iterations !== sliceSize;\n\t        }\n\t      });\n\t      return iterations;\n\t    };\n\t\n\t    sliceSeq.__iteratorUncached = function(type, reverse) {\n\t      if (sliceSize !== 0 && reverse) {\n\t        return this.cacheResult().__iterator(type, reverse);\n\t      }\n\t      // Don't bother instantiating parent iterator if taking 0.\n\t      var iterator = sliceSize !== 0 && iterable.__iterator(type, reverse);\n\t      var skipped = 0;\n\t      var iterations = 0;\n\t      return new Iterator(function()  {\n\t        while (skipped++ < resolvedBegin) {\n\t          iterator.next();\n\t        }\n\t        if (++iterations > sliceSize) {\n\t          return iteratorDone();\n\t        }\n\t        var step = iterator.next();\n\t        if (useKeys || type === ITERATE_VALUES) {\n\t          return step;\n\t        } else if (type === ITERATE_KEYS) {\n\t          return iteratorValue(type, iterations - 1, undefined, step);\n\t        } else {\n\t          return iteratorValue(type, iterations - 1, step.value[1], step);\n\t        }\n\t      });\n\t    }\n\t\n\t    return sliceSeq;\n\t  }\n\t\n\t\n\t  function takeWhileFactory(iterable, predicate, context) {\n\t    var takeSequence = makeSequence(iterable);\n\t    takeSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;\n\t      if (reverse) {\n\t        return this.cacheResult().__iterate(fn, reverse);\n\t      }\n\t      var iterations = 0;\n\t      iterable.__iterate(function(v, k, c) \n\t        {return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$0)}\n\t      );\n\t      return iterations;\n\t    };\n\t    takeSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;\n\t      if (reverse) {\n\t        return this.cacheResult().__iterator(type, reverse);\n\t      }\n\t      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n\t      var iterating = true;\n\t      return new Iterator(function()  {\n\t        if (!iterating) {\n\t          return iteratorDone();\n\t        }\n\t        var step = iterator.next();\n\t        if (step.done) {\n\t          return step;\n\t        }\n\t        var entry = step.value;\n\t        var k = entry[0];\n\t        var v = entry[1];\n\t        if (!predicate.call(context, v, k, this$0)) {\n\t          iterating = false;\n\t          return iteratorDone();\n\t        }\n\t        return type === ITERATE_ENTRIES ? step :\n\t          iteratorValue(type, k, v, step);\n\t      });\n\t    };\n\t    return takeSequence;\n\t  }\n\t\n\t\n\t  function skipWhileFactory(iterable, predicate, context, useKeys) {\n\t    var skipSequence = makeSequence(iterable);\n\t    skipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n\t      if (reverse) {\n\t        return this.cacheResult().__iterate(fn, reverse);\n\t      }\n\t      var isSkipping = true;\n\t      var iterations = 0;\n\t      iterable.__iterate(function(v, k, c)  {\n\t        if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {\n\t          iterations++;\n\t          return fn(v, useKeys ? k : iterations - 1, this$0);\n\t        }\n\t      });\n\t      return iterations;\n\t    };\n\t    skipSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;\n\t      if (reverse) {\n\t        return this.cacheResult().__iterator(type, reverse);\n\t      }\n\t      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n\t      var skipping = true;\n\t      var iterations = 0;\n\t      return new Iterator(function()  {\n\t        var step, k, v;\n\t        do {\n\t          step = iterator.next();\n\t          if (step.done) {\n\t            if (useKeys || type === ITERATE_VALUES) {\n\t              return step;\n\t            } else if (type === ITERATE_KEYS) {\n\t              return iteratorValue(type, iterations++, undefined, step);\n\t            } else {\n\t              return iteratorValue(type, iterations++, step.value[1], step);\n\t            }\n\t          }\n\t          var entry = step.value;\n\t          k = entry[0];\n\t          v = entry[1];\n\t          skipping && (skipping = predicate.call(context, v, k, this$0));\n\t        } while (skipping);\n\t        return type === ITERATE_ENTRIES ? step :\n\t          iteratorValue(type, k, v, step);\n\t      });\n\t    };\n\t    return skipSequence;\n\t  }\n\t\n\t\n\t  function concatFactory(iterable, values) {\n\t    var isKeyedIterable = isKeyed(iterable);\n\t    var iters = [iterable].concat(values).map(function(v ) {\n\t      if (!isIterable(v)) {\n\t        v = isKeyedIterable ?\n\t          keyedSeqFromValue(v) :\n\t          indexedSeqFromValue(Array.isArray(v) ? v : [v]);\n\t      } else if (isKeyedIterable) {\n\t        v = KeyedIterable(v);\n\t      }\n\t      return v;\n\t    }).filter(function(v ) {return v.size !== 0});\n\t\n\t    if (iters.length === 0) {\n\t      return iterable;\n\t    }\n\t\n\t    if (iters.length === 1) {\n\t      var singleton = iters[0];\n\t      if (singleton === iterable ||\n\t          isKeyedIterable && isKeyed(singleton) ||\n\t          isIndexed(iterable) && isIndexed(singleton)) {\n\t        return singleton;\n\t      }\n\t    }\n\t\n\t    var concatSeq = new ArraySeq(iters);\n\t    if (isKeyedIterable) {\n\t      concatSeq = concatSeq.toKeyedSeq();\n\t    } else if (!isIndexed(iterable)) {\n\t      concatSeq = concatSeq.toSetSeq();\n\t    }\n\t    concatSeq = concatSeq.flatten(true);\n\t    concatSeq.size = iters.reduce(\n\t      function(sum, seq)  {\n\t        if (sum !== undefined) {\n\t          var size = seq.size;\n\t          if (size !== undefined) {\n\t            return sum + size;\n\t          }\n\t        }\n\t      },\n\t      0\n\t    );\n\t    return concatSeq;\n\t  }\n\t\n\t\n\t  function flattenFactory(iterable, depth, useKeys) {\n\t    var flatSequence = makeSequence(iterable);\n\t    flatSequence.__iterateUncached = function(fn, reverse) {\n\t      var iterations = 0;\n\t      var stopped = false;\n\t      function flatDeep(iter, currentDepth) {var this$0 = this;\n\t        iter.__iterate(function(v, k)  {\n\t          if ((!depth || currentDepth < depth) && isIterable(v)) {\n\t            flatDeep(v, currentDepth + 1);\n\t          } else if (fn(v, useKeys ? k : iterations++, this$0) === false) {\n\t            stopped = true;\n\t          }\n\t          return !stopped;\n\t        }, reverse);\n\t      }\n\t      flatDeep(iterable, 0);\n\t      return iterations;\n\t    }\n\t    flatSequence.__iteratorUncached = function(type, reverse) {\n\t      var iterator = iterable.__iterator(type, reverse);\n\t      var stack = [];\n\t      var iterations = 0;\n\t      return new Iterator(function()  {\n\t        while (iterator) {\n\t          var step = iterator.next();\n\t          if (step.done !== false) {\n\t            iterator = stack.pop();\n\t            continue;\n\t          }\n\t          var v = step.value;\n\t          if (type === ITERATE_ENTRIES) {\n\t            v = v[1];\n\t          }\n\t          if ((!depth || stack.length < depth) && isIterable(v)) {\n\t            stack.push(iterator);\n\t            iterator = v.__iterator(type, reverse);\n\t          } else {\n\t            return useKeys ? step : iteratorValue(type, iterations++, v, step);\n\t          }\n\t        }\n\t        return iteratorDone();\n\t      });\n\t    }\n\t    return flatSequence;\n\t  }\n\t\n\t\n\t  function flatMapFactory(iterable, mapper, context) {\n\t    var coerce = iterableClass(iterable);\n\t    return iterable.toSeq().map(\n\t      function(v, k)  {return coerce(mapper.call(context, v, k, iterable))}\n\t    ).flatten(true);\n\t  }\n\t\n\t\n\t  function interposeFactory(iterable, separator) {\n\t    var interposedSequence = makeSequence(iterable);\n\t    interposedSequence.size = iterable.size && iterable.size * 2 -1;\n\t    interposedSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;\n\t      var iterations = 0;\n\t      iterable.__iterate(function(v, k) \n\t        {return (!iterations || fn(separator, iterations++, this$0) !== false) &&\n\t        fn(v, iterations++, this$0) !== false},\n\t        reverse\n\t      );\n\t      return iterations;\n\t    };\n\t    interposedSequence.__iteratorUncached = function(type, reverse) {\n\t      var iterator = iterable.__iterator(ITERATE_VALUES, reverse);\n\t      var iterations = 0;\n\t      var step;\n\t      return new Iterator(function()  {\n\t        if (!step || iterations % 2) {\n\t          step = iterator.next();\n\t          if (step.done) {\n\t            return step;\n\t          }\n\t        }\n\t        return iterations % 2 ?\n\t          iteratorValue(type, iterations++, separator) :\n\t          iteratorValue(type, iterations++, step.value, step);\n\t      });\n\t    };\n\t    return interposedSequence;\n\t  }\n\t\n\t\n\t  function sortFactory(iterable, comparator, mapper) {\n\t    if (!comparator) {\n\t      comparator = defaultComparator;\n\t    }\n\t    var isKeyedIterable = isKeyed(iterable);\n\t    var index = 0;\n\t    var entries = iterable.toSeq().map(\n\t      function(v, k)  {return [k, v, index++, mapper ? mapper(v, k, iterable) : v]}\n\t    ).toArray();\n\t    entries.sort(function(a, b)  {return comparator(a[3], b[3]) || a[2] - b[2]}).forEach(\n\t      isKeyedIterable ?\n\t      function(v, i)  { entries[i].length = 2; } :\n\t      function(v, i)  { entries[i] = v[1]; }\n\t    );\n\t    return isKeyedIterable ? KeyedSeq(entries) :\n\t      isIndexed(iterable) ? IndexedSeq(entries) :\n\t      SetSeq(entries);\n\t  }\n\t\n\t\n\t  function maxFactory(iterable, comparator, mapper) {\n\t    if (!comparator) {\n\t      comparator = defaultComparator;\n\t    }\n\t    if (mapper) {\n\t      var entry = iterable.toSeq()\n\t        .map(function(v, k)  {return [v, mapper(v, k, iterable)]})\n\t        .reduce(function(a, b)  {return maxCompare(comparator, a[1], b[1]) ? b : a});\n\t      return entry && entry[0];\n\t    } else {\n\t      return iterable.reduce(function(a, b)  {return maxCompare(comparator, a, b) ? b : a});\n\t    }\n\t  }\n\t\n\t  function maxCompare(comparator, a, b) {\n\t    var comp = comparator(b, a);\n\t    // b is considered the new max if the comparator declares them equal, but\n\t    // they are not equal and b is in fact a nullish value.\n\t    return (comp === 0 && b !== a && (b === undefined || b === null || b !== b)) || comp > 0;\n\t  }\n\t\n\t\n\t  function zipWithFactory(keyIter, zipper, iters) {\n\t    var zipSequence = makeSequence(keyIter);\n\t    zipSequence.size = new ArraySeq(iters).map(function(i ) {return i.size}).min();\n\t    // Note: this a generic base implementation of __iterate in terms of\n\t    // __iterator which may be more generically useful in the future.\n\t    zipSequence.__iterate = function(fn, reverse) {\n\t      /* generic:\n\t      var iterator = this.__iterator(ITERATE_ENTRIES, reverse);\n\t      var step;\n\t      var iterations = 0;\n\t      while (!(step = iterator.next()).done) {\n\t        iterations++;\n\t        if (fn(step.value[1], step.value[0], this) === false) {\n\t          break;\n\t        }\n\t      }\n\t      return iterations;\n\t      */\n\t      // indexed:\n\t      var iterator = this.__iterator(ITERATE_VALUES, reverse);\n\t      var step;\n\t      var iterations = 0;\n\t      while (!(step = iterator.next()).done) {\n\t        if (fn(step.value, iterations++, this) === false) {\n\t          break;\n\t        }\n\t      }\n\t      return iterations;\n\t    };\n\t    zipSequence.__iteratorUncached = function(type, reverse) {\n\t      var iterators = iters.map(function(i )\n\t        {return (i = Iterable(i), getIterator(reverse ? i.reverse() : i))}\n\t      );\n\t      var iterations = 0;\n\t      var isDone = false;\n\t      return new Iterator(function()  {\n\t        var steps;\n\t        if (!isDone) {\n\t          steps = iterators.map(function(i ) {return i.next()});\n\t          isDone = steps.some(function(s ) {return s.done});\n\t        }\n\t        if (isDone) {\n\t          return iteratorDone();\n\t        }\n\t        return iteratorValue(\n\t          type,\n\t          iterations++,\n\t          zipper.apply(null, steps.map(function(s ) {return s.value}))\n\t        );\n\t      });\n\t    };\n\t    return zipSequence\n\t  }\n\t\n\t\n\t  // #pragma Helper Functions\n\t\n\t  function reify(iter, seq) {\n\t    return isSeq(iter) ? seq : iter.constructor(seq);\n\t  }\n\t\n\t  function validateEntry(entry) {\n\t    if (entry !== Object(entry)) {\n\t      throw new TypeError('Expected [K, V] tuple: ' + entry);\n\t    }\n\t  }\n\t\n\t  function resolveSize(iter) {\n\t    assertNotInfinite(iter.size);\n\t    return ensureSize(iter);\n\t  }\n\t\n\t  function iterableClass(iterable) {\n\t    return isKeyed(iterable) ? KeyedIterable :\n\t      isIndexed(iterable) ? IndexedIterable :\n\t      SetIterable;\n\t  }\n\t\n\t  function makeSequence(iterable) {\n\t    return Object.create(\n\t      (\n\t        isKeyed(iterable) ? KeyedSeq :\n\t        isIndexed(iterable) ? IndexedSeq :\n\t        SetSeq\n\t      ).prototype\n\t    );\n\t  }\n\t\n\t  function cacheResultThrough() {\n\t    if (this._iter.cacheResult) {\n\t      this._iter.cacheResult();\n\t      this.size = this._iter.size;\n\t      return this;\n\t    } else {\n\t      return Seq.prototype.cacheResult.call(this);\n\t    }\n\t  }\n\t\n\t  function defaultComparator(a, b) {\n\t    return a > b ? 1 : a < b ? -1 : 0;\n\t  }\n\t\n\t  function forceIterator(keyPath) {\n\t    var iter = getIterator(keyPath);\n\t    if (!iter) {\n\t      // Array might not be iterable in this environment, so we need a fallback\n\t      // to our wrapped type.\n\t      if (!isArrayLike(keyPath)) {\n\t        throw new TypeError('Expected iterable or array-like: ' + keyPath);\n\t      }\n\t      iter = getIterator(Iterable(keyPath));\n\t    }\n\t    return iter;\n\t  }\n\t\n\t  createClass(Record, KeyedCollection);\n\t\n\t    function Record(defaultValues, name) {\n\t      var hasInitialized;\n\t\n\t      var RecordType = function Record(values) {\n\t        if (values instanceof RecordType) {\n\t          return values;\n\t        }\n\t        if (!(this instanceof RecordType)) {\n\t          return new RecordType(values);\n\t        }\n\t        if (!hasInitialized) {\n\t          hasInitialized = true;\n\t          var keys = Object.keys(defaultValues);\n\t          setProps(RecordTypePrototype, keys);\n\t          RecordTypePrototype.size = keys.length;\n\t          RecordTypePrototype._name = name;\n\t          RecordTypePrototype._keys = keys;\n\t          RecordTypePrototype._defaultValues = defaultValues;\n\t        }\n\t        this._map = Map(values);\n\t      };\n\t\n\t      var RecordTypePrototype = RecordType.prototype = Object.create(RecordPrototype);\n\t      RecordTypePrototype.constructor = RecordType;\n\t\n\t      return RecordType;\n\t    }\n\t\n\t    Record.prototype.toString = function() {\n\t      return this.__toString(recordName(this) + ' {', '}');\n\t    };\n\t\n\t    // @pragma Access\n\t\n\t    Record.prototype.has = function(k) {\n\t      return this._defaultValues.hasOwnProperty(k);\n\t    };\n\t\n\t    Record.prototype.get = function(k, notSetValue) {\n\t      if (!this.has(k)) {\n\t        return notSetValue;\n\t      }\n\t      var defaultVal = this._defaultValues[k];\n\t      return this._map ? this._map.get(k, defaultVal) : defaultVal;\n\t    };\n\t\n\t    // @pragma Modification\n\t\n\t    Record.prototype.clear = function() {\n\t      if (this.__ownerID) {\n\t        this._map && this._map.clear();\n\t        return this;\n\t      }\n\t      var RecordType = this.constructor;\n\t      return RecordType._empty || (RecordType._empty = makeRecord(this, emptyMap()));\n\t    };\n\t\n\t    Record.prototype.set = function(k, v) {\n\t      if (!this.has(k)) {\n\t        throw new Error('Cannot set unknown key \"' + k + '\" on ' + recordName(this));\n\t      }\n\t      if (this._map && !this._map.has(k)) {\n\t        var defaultVal = this._defaultValues[k];\n\t        if (v === defaultVal) {\n\t          return this;\n\t        }\n\t      }\n\t      var newMap = this._map && this._map.set(k, v);\n\t      if (this.__ownerID || newMap === this._map) {\n\t        return this;\n\t      }\n\t      return makeRecord(this, newMap);\n\t    };\n\t\n\t    Record.prototype.remove = function(k) {\n\t      if (!this.has(k)) {\n\t        return this;\n\t      }\n\t      var newMap = this._map && this._map.remove(k);\n\t      if (this.__ownerID || newMap === this._map) {\n\t        return this;\n\t      }\n\t      return makeRecord(this, newMap);\n\t    };\n\t\n\t    Record.prototype.wasAltered = function() {\n\t      return this._map.wasAltered();\n\t    };\n\t\n\t    Record.prototype.__iterator = function(type, reverse) {var this$0 = this;\n\t      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterator(type, reverse);\n\t    };\n\t\n\t    Record.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n\t      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterate(fn, reverse);\n\t    };\n\t\n\t    Record.prototype.__ensureOwner = function(ownerID) {\n\t      if (ownerID === this.__ownerID) {\n\t        return this;\n\t      }\n\t      var newMap = this._map && this._map.__ensureOwner(ownerID);\n\t      if (!ownerID) {\n\t        this.__ownerID = ownerID;\n\t        this._map = newMap;\n\t        return this;\n\t      }\n\t      return makeRecord(this, newMap, ownerID);\n\t    };\n\t\n\t\n\t  var RecordPrototype = Record.prototype;\n\t  RecordPrototype[DELETE] = RecordPrototype.remove;\n\t  RecordPrototype.deleteIn =\n\t  RecordPrototype.removeIn = MapPrototype.removeIn;\n\t  RecordPrototype.merge = MapPrototype.merge;\n\t  RecordPrototype.mergeWith = MapPrototype.mergeWith;\n\t  RecordPrototype.mergeIn = MapPrototype.mergeIn;\n\t  RecordPrototype.mergeDeep = MapPrototype.mergeDeep;\n\t  RecordPrototype.mergeDeepWith = MapPrototype.mergeDeepWith;\n\t  RecordPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n\t  RecordPrototype.setIn = MapPrototype.setIn;\n\t  RecordPrototype.update = MapPrototype.update;\n\t  RecordPrototype.updateIn = MapPrototype.updateIn;\n\t  RecordPrototype.withMutations = MapPrototype.withMutations;\n\t  RecordPrototype.asMutable = MapPrototype.asMutable;\n\t  RecordPrototype.asImmutable = MapPrototype.asImmutable;\n\t\n\t\n\t  function makeRecord(likeRecord, map, ownerID) {\n\t    var record = Object.create(Object.getPrototypeOf(likeRecord));\n\t    record._map = map;\n\t    record.__ownerID = ownerID;\n\t    return record;\n\t  }\n\t\n\t  function recordName(record) {\n\t    return record._name || record.constructor.name || 'Record';\n\t  }\n\t\n\t  function setProps(prototype, names) {\n\t    try {\n\t      names.forEach(setProp.bind(undefined, prototype));\n\t    } catch (error) {\n\t      // Object.defineProperty failed. Probably IE8.\n\t    }\n\t  }\n\t\n\t  function setProp(prototype, name) {\n\t    Object.defineProperty(prototype, name, {\n\t      get: function() {\n\t        return this.get(name);\n\t      },\n\t      set: function(value) {\n\t        invariant(this.__ownerID, 'Cannot set on an immutable record.');\n\t        this.set(name, value);\n\t      }\n\t    });\n\t  }\n\t\n\t  createClass(Set, SetCollection);\n\t\n\t    // @pragma Construction\n\t\n\t    function Set(value) {\n\t      return value === null || value === undefined ? emptySet() :\n\t        isSet(value) && !isOrdered(value) ? value :\n\t        emptySet().withMutations(function(set ) {\n\t          var iter = SetIterable(value);\n\t          assertNotInfinite(iter.size);\n\t          iter.forEach(function(v ) {return set.add(v)});\n\t        });\n\t    }\n\t\n\t    Set.of = function(/*...values*/) {\n\t      return this(arguments);\n\t    };\n\t\n\t    Set.fromKeys = function(value) {\n\t      return this(KeyedIterable(value).keySeq());\n\t    };\n\t\n\t    Set.prototype.toString = function() {\n\t      return this.__toString('Set {', '}');\n\t    };\n\t\n\t    // @pragma Access\n\t\n\t    Set.prototype.has = function(value) {\n\t      return this._map.has(value);\n\t    };\n\t\n\t    // @pragma Modification\n\t\n\t    Set.prototype.add = function(value) {\n\t      return updateSet(this, this._map.set(value, true));\n\t    };\n\t\n\t    Set.prototype.remove = function(value) {\n\t      return updateSet(this, this._map.remove(value));\n\t    };\n\t\n\t    Set.prototype.clear = function() {\n\t      return updateSet(this, this._map.clear());\n\t    };\n\t\n\t    // @pragma Composition\n\t\n\t    Set.prototype.union = function() {var iters = SLICE$0.call(arguments, 0);\n\t      iters = iters.filter(function(x ) {return x.size !== 0});\n\t      if (iters.length === 0) {\n\t        return this;\n\t      }\n\t      if (this.size === 0 && !this.__ownerID && iters.length === 1) {\n\t        return this.constructor(iters[0]);\n\t      }\n\t      return this.withMutations(function(set ) {\n\t        for (var ii = 0; ii < iters.length; ii++) {\n\t          SetIterable(iters[ii]).forEach(function(value ) {return set.add(value)});\n\t        }\n\t      });\n\t    };\n\t\n\t    Set.prototype.intersect = function() {var iters = SLICE$0.call(arguments, 0);\n\t      if (iters.length === 0) {\n\t        return this;\n\t      }\n\t      iters = iters.map(function(iter ) {return SetIterable(iter)});\n\t      var originalSet = this;\n\t      return this.withMutations(function(set ) {\n\t        originalSet.forEach(function(value ) {\n\t          if (!iters.every(function(iter ) {return iter.includes(value)})) {\n\t            set.remove(value);\n\t          }\n\t        });\n\t      });\n\t    };\n\t\n\t    Set.prototype.subtract = function() {var iters = SLICE$0.call(arguments, 0);\n\t      if (iters.length === 0) {\n\t        return this;\n\t      }\n\t      iters = iters.map(function(iter ) {return SetIterable(iter)});\n\t      var originalSet = this;\n\t      return this.withMutations(function(set ) {\n\t        originalSet.forEach(function(value ) {\n\t          if (iters.some(function(iter ) {return iter.includes(value)})) {\n\t            set.remove(value);\n\t          }\n\t        });\n\t      });\n\t    };\n\t\n\t    Set.prototype.merge = function() {\n\t      return this.union.apply(this, arguments);\n\t    };\n\t\n\t    Set.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n\t      return this.union.apply(this, iters);\n\t    };\n\t\n\t    Set.prototype.sort = function(comparator) {\n\t      // Late binding\n\t      return OrderedSet(sortFactory(this, comparator));\n\t    };\n\t\n\t    Set.prototype.sortBy = function(mapper, comparator) {\n\t      // Late binding\n\t      return OrderedSet(sortFactory(this, comparator, mapper));\n\t    };\n\t\n\t    Set.prototype.wasAltered = function() {\n\t      return this._map.wasAltered();\n\t    };\n\t\n\t    Set.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n\t      return this._map.__iterate(function(_, k)  {return fn(k, k, this$0)}, reverse);\n\t    };\n\t\n\t    Set.prototype.__iterator = function(type, reverse) {\n\t      return this._map.map(function(_, k)  {return k}).__iterator(type, reverse);\n\t    };\n\t\n\t    Set.prototype.__ensureOwner = function(ownerID) {\n\t      if (ownerID === this.__ownerID) {\n\t        return this;\n\t      }\n\t      var newMap = this._map.__ensureOwner(ownerID);\n\t      if (!ownerID) {\n\t        this.__ownerID = ownerID;\n\t        this._map = newMap;\n\t        return this;\n\t      }\n\t      return this.__make(newMap, ownerID);\n\t    };\n\t\n\t\n\t  function isSet(maybeSet) {\n\t    return !!(maybeSet && maybeSet[IS_SET_SENTINEL]);\n\t  }\n\t\n\t  Set.isSet = isSet;\n\t\n\t  var IS_SET_SENTINEL = '@@__IMMUTABLE_SET__@@';\n\t\n\t  var SetPrototype = Set.prototype;\n\t  SetPrototype[IS_SET_SENTINEL] = true;\n\t  SetPrototype[DELETE] = SetPrototype.remove;\n\t  SetPrototype.mergeDeep = SetPrototype.merge;\n\t  SetPrototype.mergeDeepWith = SetPrototype.mergeWith;\n\t  SetPrototype.withMutations = MapPrototype.withMutations;\n\t  SetPrototype.asMutable = MapPrototype.asMutable;\n\t  SetPrototype.asImmutable = MapPrototype.asImmutable;\n\t\n\t  SetPrototype.__empty = emptySet;\n\t  SetPrototype.__make = makeSet;\n\t\n\t  function updateSet(set, newMap) {\n\t    if (set.__ownerID) {\n\t      set.size = newMap.size;\n\t      set._map = newMap;\n\t      return set;\n\t    }\n\t    return newMap === set._map ? set :\n\t      newMap.size === 0 ? set.__empty() :\n\t      set.__make(newMap);\n\t  }\n\t\n\t  function makeSet(map, ownerID) {\n\t    var set = Object.create(SetPrototype);\n\t    set.size = map ? map.size : 0;\n\t    set._map = map;\n\t    set.__ownerID = ownerID;\n\t    return set;\n\t  }\n\t\n\t  var EMPTY_SET;\n\t  function emptySet() {\n\t    return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));\n\t  }\n\t\n\t  createClass(OrderedSet, Set);\n\t\n\t    // @pragma Construction\n\t\n\t    function OrderedSet(value) {\n\t      return value === null || value === undefined ? emptyOrderedSet() :\n\t        isOrderedSet(value) ? value :\n\t        emptyOrderedSet().withMutations(function(set ) {\n\t          var iter = SetIterable(value);\n\t          assertNotInfinite(iter.size);\n\t          iter.forEach(function(v ) {return set.add(v)});\n\t        });\n\t    }\n\t\n\t    OrderedSet.of = function(/*...values*/) {\n\t      return this(arguments);\n\t    };\n\t\n\t    OrderedSet.fromKeys = function(value) {\n\t      return this(KeyedIterable(value).keySeq());\n\t    };\n\t\n\t    OrderedSet.prototype.toString = function() {\n\t      return this.__toString('OrderedSet {', '}');\n\t    };\n\t\n\t\n\t  function isOrderedSet(maybeOrderedSet) {\n\t    return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);\n\t  }\n\t\n\t  OrderedSet.isOrderedSet = isOrderedSet;\n\t\n\t  var OrderedSetPrototype = OrderedSet.prototype;\n\t  OrderedSetPrototype[IS_ORDERED_SENTINEL] = true;\n\t\n\t  OrderedSetPrototype.__empty = emptyOrderedSet;\n\t  OrderedSetPrototype.__make = makeOrderedSet;\n\t\n\t  function makeOrderedSet(map, ownerID) {\n\t    var set = Object.create(OrderedSetPrototype);\n\t    set.size = map ? map.size : 0;\n\t    set._map = map;\n\t    set.__ownerID = ownerID;\n\t    return set;\n\t  }\n\t\n\t  var EMPTY_ORDERED_SET;\n\t  function emptyOrderedSet() {\n\t    return EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()));\n\t  }\n\t\n\t  createClass(Stack, IndexedCollection);\n\t\n\t    // @pragma Construction\n\t\n\t    function Stack(value) {\n\t      return value === null || value === undefined ? emptyStack() :\n\t        isStack(value) ? value :\n\t        emptyStack().unshiftAll(value);\n\t    }\n\t\n\t    Stack.of = function(/*...values*/) {\n\t      return this(arguments);\n\t    };\n\t\n\t    Stack.prototype.toString = function() {\n\t      return this.__toString('Stack [', ']');\n\t    };\n\t\n\t    // @pragma Access\n\t\n\t    Stack.prototype.get = function(index, notSetValue) {\n\t      var head = this._head;\n\t      index = wrapIndex(this, index);\n\t      while (head && index--) {\n\t        head = head.next;\n\t      }\n\t      return head ? head.value : notSetValue;\n\t    };\n\t\n\t    Stack.prototype.peek = function() {\n\t      return this._head && this._head.value;\n\t    };\n\t\n\t    // @pragma Modification\n\t\n\t    Stack.prototype.push = function(/*...values*/) {\n\t      if (arguments.length === 0) {\n\t        return this;\n\t      }\n\t      var newSize = this.size + arguments.length;\n\t      var head = this._head;\n\t      for (var ii = arguments.length - 1; ii >= 0; ii--) {\n\t        head = {\n\t          value: arguments[ii],\n\t          next: head\n\t        };\n\t      }\n\t      if (this.__ownerID) {\n\t        this.size = newSize;\n\t        this._head = head;\n\t        this.__hash = undefined;\n\t        this.__altered = true;\n\t        return this;\n\t      }\n\t      return makeStack(newSize, head);\n\t    };\n\t\n\t    Stack.prototype.pushAll = function(iter) {\n\t      iter = IndexedIterable(iter);\n\t      if (iter.size === 0) {\n\t        return this;\n\t      }\n\t      assertNotInfinite(iter.size);\n\t      var newSize = this.size;\n\t      var head = this._head;\n\t      iter.reverse().forEach(function(value ) {\n\t        newSize++;\n\t        head = {\n\t          value: value,\n\t          next: head\n\t        };\n\t      });\n\t      if (this.__ownerID) {\n\t        this.size = newSize;\n\t        this._head = head;\n\t        this.__hash = undefined;\n\t        this.__altered = true;\n\t        return this;\n\t      }\n\t      return makeStack(newSize, head);\n\t    };\n\t\n\t    Stack.prototype.pop = function() {\n\t      return this.slice(1);\n\t    };\n\t\n\t    Stack.prototype.unshift = function(/*...values*/) {\n\t      return this.push.apply(this, arguments);\n\t    };\n\t\n\t    Stack.prototype.unshiftAll = function(iter) {\n\t      return this.pushAll(iter);\n\t    };\n\t\n\t    Stack.prototype.shift = function() {\n\t      return this.pop.apply(this, arguments);\n\t    };\n\t\n\t    Stack.prototype.clear = function() {\n\t      if (this.size === 0) {\n\t        return this;\n\t      }\n\t      if (this.__ownerID) {\n\t        this.size = 0;\n\t        this._head = undefined;\n\t        this.__hash = undefined;\n\t        this.__altered = true;\n\t        return this;\n\t      }\n\t      return emptyStack();\n\t    };\n\t\n\t    Stack.prototype.slice = function(begin, end) {\n\t      if (wholeSlice(begin, end, this.size)) {\n\t        return this;\n\t      }\n\t      var resolvedBegin = resolveBegin(begin, this.size);\n\t      var resolvedEnd = resolveEnd(end, this.size);\n\t      if (resolvedEnd !== this.size) {\n\t        // super.slice(begin, end);\n\t        return IndexedCollection.prototype.slice.call(this, begin, end);\n\t      }\n\t      var newSize = this.size - resolvedBegin;\n\t      var head = this._head;\n\t      while (resolvedBegin--) {\n\t        head = head.next;\n\t      }\n\t      if (this.__ownerID) {\n\t        this.size = newSize;\n\t        this._head = head;\n\t        this.__hash = undefined;\n\t        this.__altered = true;\n\t        return this;\n\t      }\n\t      return makeStack(newSize, head);\n\t    };\n\t\n\t    // @pragma Mutability\n\t\n\t    Stack.prototype.__ensureOwner = function(ownerID) {\n\t      if (ownerID === this.__ownerID) {\n\t        return this;\n\t      }\n\t      if (!ownerID) {\n\t        this.__ownerID = ownerID;\n\t        this.__altered = false;\n\t        return this;\n\t      }\n\t      return makeStack(this.size, this._head, ownerID, this.__hash);\n\t    };\n\t\n\t    // @pragma Iteration\n\t\n\t    Stack.prototype.__iterate = function(fn, reverse) {\n\t      if (reverse) {\n\t        return this.reverse().__iterate(fn);\n\t      }\n\t      var iterations = 0;\n\t      var node = this._head;\n\t      while (node) {\n\t        if (fn(node.value, iterations++, this) === false) {\n\t          break;\n\t        }\n\t        node = node.next;\n\t      }\n\t      return iterations;\n\t    };\n\t\n\t    Stack.prototype.__iterator = function(type, reverse) {\n\t      if (reverse) {\n\t        return this.reverse().__iterator(type);\n\t      }\n\t      var iterations = 0;\n\t      var node = this._head;\n\t      return new Iterator(function()  {\n\t        if (node) {\n\t          var value = node.value;\n\t          node = node.next;\n\t          return iteratorValue(type, iterations++, value);\n\t        }\n\t        return iteratorDone();\n\t      });\n\t    };\n\t\n\t\n\t  function isStack(maybeStack) {\n\t    return !!(maybeStack && maybeStack[IS_STACK_SENTINEL]);\n\t  }\n\t\n\t  Stack.isStack = isStack;\n\t\n\t  var IS_STACK_SENTINEL = '@@__IMMUTABLE_STACK__@@';\n\t\n\t  var StackPrototype = Stack.prototype;\n\t  StackPrototype[IS_STACK_SENTINEL] = true;\n\t  StackPrototype.withMutations = MapPrototype.withMutations;\n\t  StackPrototype.asMutable = MapPrototype.asMutable;\n\t  StackPrototype.asImmutable = MapPrototype.asImmutable;\n\t  StackPrototype.wasAltered = MapPrototype.wasAltered;\n\t\n\t\n\t  function makeStack(size, head, ownerID, hash) {\n\t    var map = Object.create(StackPrototype);\n\t    map.size = size;\n\t    map._head = head;\n\t    map.__ownerID = ownerID;\n\t    map.__hash = hash;\n\t    map.__altered = false;\n\t    return map;\n\t  }\n\t\n\t  var EMPTY_STACK;\n\t  function emptyStack() {\n\t    return EMPTY_STACK || (EMPTY_STACK = makeStack(0));\n\t  }\n\t\n\t  /**\n\t   * Contributes additional methods to a constructor\n\t   */\n\t  function mixin(ctor, methods) {\n\t    var keyCopier = function(key ) { ctor.prototype[key] = methods[key]; };\n\t    Object.keys(methods).forEach(keyCopier);\n\t    Object.getOwnPropertySymbols &&\n\t      Object.getOwnPropertySymbols(methods).forEach(keyCopier);\n\t    return ctor;\n\t  }\n\t\n\t  Iterable.Iterator = Iterator;\n\t\n\t  mixin(Iterable, {\n\t\n\t    // ### Conversion to other types\n\t\n\t    toArray: function() {\n\t      assertNotInfinite(this.size);\n\t      var array = new Array(this.size || 0);\n\t      this.valueSeq().__iterate(function(v, i)  { array[i] = v; });\n\t      return array;\n\t    },\n\t\n\t    toIndexedSeq: function() {\n\t      return new ToIndexedSequence(this);\n\t    },\n\t\n\t    toJS: function() {\n\t      return this.toSeq().map(\n\t        function(value ) {return value && typeof value.toJS === 'function' ? value.toJS() : value}\n\t      ).__toJS();\n\t    },\n\t\n\t    toJSON: function() {\n\t      return this.toSeq().map(\n\t        function(value ) {return value && typeof value.toJSON === 'function' ? value.toJSON() : value}\n\t      ).__toJS();\n\t    },\n\t\n\t    toKeyedSeq: function() {\n\t      return new ToKeyedSequence(this, true);\n\t    },\n\t\n\t    toMap: function() {\n\t      // Use Late Binding here to solve the circular dependency.\n\t      return Map(this.toKeyedSeq());\n\t    },\n\t\n\t    toObject: function() {\n\t      assertNotInfinite(this.size);\n\t      var object = {};\n\t      this.__iterate(function(v, k)  { object[k] = v; });\n\t      return object;\n\t    },\n\t\n\t    toOrderedMap: function() {\n\t      // Use Late Binding here to solve the circular dependency.\n\t      return OrderedMap(this.toKeyedSeq());\n\t    },\n\t\n\t    toOrderedSet: function() {\n\t      // Use Late Binding here to solve the circular dependency.\n\t      return OrderedSet(isKeyed(this) ? this.valueSeq() : this);\n\t    },\n\t\n\t    toSet: function() {\n\t      // Use Late Binding here to solve the circular dependency.\n\t      return Set(isKeyed(this) ? this.valueSeq() : this);\n\t    },\n\t\n\t    toSetSeq: function() {\n\t      return new ToSetSequence(this);\n\t    },\n\t\n\t    toSeq: function() {\n\t      return isIndexed(this) ? this.toIndexedSeq() :\n\t        isKeyed(this) ? this.toKeyedSeq() :\n\t        this.toSetSeq();\n\t    },\n\t\n\t    toStack: function() {\n\t      // Use Late Binding here to solve the circular dependency.\n\t      return Stack(isKeyed(this) ? this.valueSeq() : this);\n\t    },\n\t\n\t    toList: function() {\n\t      // Use Late Binding here to solve the circular dependency.\n\t      return List(isKeyed(this) ? this.valueSeq() : this);\n\t    },\n\t\n\t\n\t    // ### Common JavaScript methods and properties\n\t\n\t    toString: function() {\n\t      return '[Iterable]';\n\t    },\n\t\n\t    __toString: function(head, tail) {\n\t      if (this.size === 0) {\n\t        return head + tail;\n\t      }\n\t      return head + ' ' + this.toSeq().map(this.__toStringMapper).join(', ') + ' ' + tail;\n\t    },\n\t\n\t\n\t    // ### ES6 Collection methods (ES6 Array and Map)\n\t\n\t    concat: function() {var values = SLICE$0.call(arguments, 0);\n\t      return reify(this, concatFactory(this, values));\n\t    },\n\t\n\t    includes: function(searchValue) {\n\t      return this.some(function(value ) {return is(value, searchValue)});\n\t    },\n\t\n\t    entries: function() {\n\t      return this.__iterator(ITERATE_ENTRIES);\n\t    },\n\t\n\t    every: function(predicate, context) {\n\t      assertNotInfinite(this.size);\n\t      var returnValue = true;\n\t      this.__iterate(function(v, k, c)  {\n\t        if (!predicate.call(context, v, k, c)) {\n\t          returnValue = false;\n\t          return false;\n\t        }\n\t      });\n\t      return returnValue;\n\t    },\n\t\n\t    filter: function(predicate, context) {\n\t      return reify(this, filterFactory(this, predicate, context, true));\n\t    },\n\t\n\t    find: function(predicate, context, notSetValue) {\n\t      var entry = this.findEntry(predicate, context);\n\t      return entry ? entry[1] : notSetValue;\n\t    },\n\t\n\t    forEach: function(sideEffect, context) {\n\t      assertNotInfinite(this.size);\n\t      return this.__iterate(context ? sideEffect.bind(context) : sideEffect);\n\t    },\n\t\n\t    join: function(separator) {\n\t      assertNotInfinite(this.size);\n\t      separator = separator !== undefined ? '' + separator : ',';\n\t      var joined = '';\n\t      var isFirst = true;\n\t      this.__iterate(function(v ) {\n\t        isFirst ? (isFirst = false) : (joined += separator);\n\t        joined += v !== null && v !== undefined ? v.toString() : '';\n\t      });\n\t      return joined;\n\t    },\n\t\n\t    keys: function() {\n\t      return this.__iterator(ITERATE_KEYS);\n\t    },\n\t\n\t    map: function(mapper, context) {\n\t      return reify(this, mapFactory(this, mapper, context));\n\t    },\n\t\n\t    reduce: function(reducer, initialReduction, context) {\n\t      assertNotInfinite(this.size);\n\t      var reduction;\n\t      var useFirst;\n\t      if (arguments.length < 2) {\n\t        useFirst = true;\n\t      } else {\n\t        reduction = initialReduction;\n\t      }\n\t      this.__iterate(function(v, k, c)  {\n\t        if (useFirst) {\n\t          useFirst = false;\n\t          reduction = v;\n\t        } else {\n\t          reduction = reducer.call(context, reduction, v, k, c);\n\t        }\n\t      });\n\t      return reduction;\n\t    },\n\t\n\t    reduceRight: function(reducer, initialReduction, context) {\n\t      var reversed = this.toKeyedSeq().reverse();\n\t      return reversed.reduce.apply(reversed, arguments);\n\t    },\n\t\n\t    reverse: function() {\n\t      return reify(this, reverseFactory(this, true));\n\t    },\n\t\n\t    slice: function(begin, end) {\n\t      return reify(this, sliceFactory(this, begin, end, true));\n\t    },\n\t\n\t    some: function(predicate, context) {\n\t      return !this.every(not(predicate), context);\n\t    },\n\t\n\t    sort: function(comparator) {\n\t      return reify(this, sortFactory(this, comparator));\n\t    },\n\t\n\t    values: function() {\n\t      return this.__iterator(ITERATE_VALUES);\n\t    },\n\t\n\t\n\t    // ### More sequential methods\n\t\n\t    butLast: function() {\n\t      return this.slice(0, -1);\n\t    },\n\t\n\t    isEmpty: function() {\n\t      return this.size !== undefined ? this.size === 0 : !this.some(function()  {return true});\n\t    },\n\t\n\t    count: function(predicate, context) {\n\t      return ensureSize(\n\t        predicate ? this.toSeq().filter(predicate, context) : this\n\t      );\n\t    },\n\t\n\t    countBy: function(grouper, context) {\n\t      return countByFactory(this, grouper, context);\n\t    },\n\t\n\t    equals: function(other) {\n\t      return deepEqual(this, other);\n\t    },\n\t\n\t    entrySeq: function() {\n\t      var iterable = this;\n\t      if (iterable._cache) {\n\t        // We cache as an entries array, so we can just return the cache!\n\t        return new ArraySeq(iterable._cache);\n\t      }\n\t      var entriesSequence = iterable.toSeq().map(entryMapper).toIndexedSeq();\n\t      entriesSequence.fromEntrySeq = function()  {return iterable.toSeq()};\n\t      return entriesSequence;\n\t    },\n\t\n\t    filterNot: function(predicate, context) {\n\t      return this.filter(not(predicate), context);\n\t    },\n\t\n\t    findEntry: function(predicate, context, notSetValue) {\n\t      var found = notSetValue;\n\t      this.__iterate(function(v, k, c)  {\n\t        if (predicate.call(context, v, k, c)) {\n\t          found = [k, v];\n\t          return false;\n\t        }\n\t      });\n\t      return found;\n\t    },\n\t\n\t    findKey: function(predicate, context) {\n\t      var entry = this.findEntry(predicate, context);\n\t      return entry && entry[0];\n\t    },\n\t\n\t    findLast: function(predicate, context, notSetValue) {\n\t      return this.toKeyedSeq().reverse().find(predicate, context, notSetValue);\n\t    },\n\t\n\t    findLastEntry: function(predicate, context, notSetValue) {\n\t      return this.toKeyedSeq().reverse().findEntry(predicate, context, notSetValue);\n\t    },\n\t\n\t    findLastKey: function(predicate, context) {\n\t      return this.toKeyedSeq().reverse().findKey(predicate, context);\n\t    },\n\t\n\t    first: function() {\n\t      return this.find(returnTrue);\n\t    },\n\t\n\t    flatMap: function(mapper, context) {\n\t      return reify(this, flatMapFactory(this, mapper, context));\n\t    },\n\t\n\t    flatten: function(depth) {\n\t      return reify(this, flattenFactory(this, depth, true));\n\t    },\n\t\n\t    fromEntrySeq: function() {\n\t      return new FromEntriesSequence(this);\n\t    },\n\t\n\t    get: function(searchKey, notSetValue) {\n\t      return this.find(function(_, key)  {return is(key, searchKey)}, undefined, notSetValue);\n\t    },\n\t\n\t    getIn: function(searchKeyPath, notSetValue) {\n\t      var nested = this;\n\t      // Note: in an ES6 environment, we would prefer:\n\t      // for (var key of searchKeyPath) {\n\t      var iter = forceIterator(searchKeyPath);\n\t      var step;\n\t      while (!(step = iter.next()).done) {\n\t        var key = step.value;\n\t        nested = nested && nested.get ? nested.get(key, NOT_SET) : NOT_SET;\n\t        if (nested === NOT_SET) {\n\t          return notSetValue;\n\t        }\n\t      }\n\t      return nested;\n\t    },\n\t\n\t    groupBy: function(grouper, context) {\n\t      return groupByFactory(this, grouper, context);\n\t    },\n\t\n\t    has: function(searchKey) {\n\t      return this.get(searchKey, NOT_SET) !== NOT_SET;\n\t    },\n\t\n\t    hasIn: function(searchKeyPath) {\n\t      return this.getIn(searchKeyPath, NOT_SET) !== NOT_SET;\n\t    },\n\t\n\t    isSubset: function(iter) {\n\t      iter = typeof iter.includes === 'function' ? iter : Iterable(iter);\n\t      return this.every(function(value ) {return iter.includes(value)});\n\t    },\n\t\n\t    isSuperset: function(iter) {\n\t      iter = typeof iter.isSubset === 'function' ? iter : Iterable(iter);\n\t      return iter.isSubset(this);\n\t    },\n\t\n\t    keyOf: function(searchValue) {\n\t      return this.findKey(function(value ) {return is(value, searchValue)});\n\t    },\n\t\n\t    keySeq: function() {\n\t      return this.toSeq().map(keyMapper).toIndexedSeq();\n\t    },\n\t\n\t    last: function() {\n\t      return this.toSeq().reverse().first();\n\t    },\n\t\n\t    lastKeyOf: function(searchValue) {\n\t      return this.toKeyedSeq().reverse().keyOf(searchValue);\n\t    },\n\t\n\t    max: function(comparator) {\n\t      return maxFactory(this, comparator);\n\t    },\n\t\n\t    maxBy: function(mapper, comparator) {\n\t      return maxFactory(this, comparator, mapper);\n\t    },\n\t\n\t    min: function(comparator) {\n\t      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator);\n\t    },\n\t\n\t    minBy: function(mapper, comparator) {\n\t      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator, mapper);\n\t    },\n\t\n\t    rest: function() {\n\t      return this.slice(1);\n\t    },\n\t\n\t    skip: function(amount) {\n\t      return this.slice(Math.max(0, amount));\n\t    },\n\t\n\t    skipLast: function(amount) {\n\t      return reify(this, this.toSeq().reverse().skip(amount).reverse());\n\t    },\n\t\n\t    skipWhile: function(predicate, context) {\n\t      return reify(this, skipWhileFactory(this, predicate, context, true));\n\t    },\n\t\n\t    skipUntil: function(predicate, context) {\n\t      return this.skipWhile(not(predicate), context);\n\t    },\n\t\n\t    sortBy: function(mapper, comparator) {\n\t      return reify(this, sortFactory(this, comparator, mapper));\n\t    },\n\t\n\t    take: function(amount) {\n\t      return this.slice(0, Math.max(0, amount));\n\t    },\n\t\n\t    takeLast: function(amount) {\n\t      return reify(this, this.toSeq().reverse().take(amount).reverse());\n\t    },\n\t\n\t    takeWhile: function(predicate, context) {\n\t      return reify(this, takeWhileFactory(this, predicate, context));\n\t    },\n\t\n\t    takeUntil: function(predicate, context) {\n\t      return this.takeWhile(not(predicate), context);\n\t    },\n\t\n\t    valueSeq: function() {\n\t      return this.toIndexedSeq();\n\t    },\n\t\n\t\n\t    // ### Hashable Object\n\t\n\t    hashCode: function() {\n\t      return this.__hash || (this.__hash = hashIterable(this));\n\t    }\n\t\n\t\n\t    // ### Internal\n\t\n\t    // abstract __iterate(fn, reverse)\n\t\n\t    // abstract __iterator(type, reverse)\n\t  });\n\t\n\t  // var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n\t  // var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n\t  // var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n\t  // var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n\t\n\t  var IterablePrototype = Iterable.prototype;\n\t  IterablePrototype[IS_ITERABLE_SENTINEL] = true;\n\t  IterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.values;\n\t  IterablePrototype.__toJS = IterablePrototype.toArray;\n\t  IterablePrototype.__toStringMapper = quoteString;\n\t  IterablePrototype.inspect =\n\t  IterablePrototype.toSource = function() { return this.toString(); };\n\t  IterablePrototype.chain = IterablePrototype.flatMap;\n\t  IterablePrototype.contains = IterablePrototype.includes;\n\t\n\t  mixin(KeyedIterable, {\n\t\n\t    // ### More sequential methods\n\t\n\t    flip: function() {\n\t      return reify(this, flipFactory(this));\n\t    },\n\t\n\t    mapEntries: function(mapper, context) {var this$0 = this;\n\t      var iterations = 0;\n\t      return reify(this,\n\t        this.toSeq().map(\n\t          function(v, k)  {return mapper.call(context, [k, v], iterations++, this$0)}\n\t        ).fromEntrySeq()\n\t      );\n\t    },\n\t\n\t    mapKeys: function(mapper, context) {var this$0 = this;\n\t      return reify(this,\n\t        this.toSeq().flip().map(\n\t          function(k, v)  {return mapper.call(context, k, v, this$0)}\n\t        ).flip()\n\t      );\n\t    }\n\t\n\t  });\n\t\n\t  var KeyedIterablePrototype = KeyedIterable.prototype;\n\t  KeyedIterablePrototype[IS_KEYED_SENTINEL] = true;\n\t  KeyedIterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.entries;\n\t  KeyedIterablePrototype.__toJS = IterablePrototype.toObject;\n\t  KeyedIterablePrototype.__toStringMapper = function(v, k)  {return JSON.stringify(k) + ': ' + quoteString(v)};\n\t\n\t\n\t\n\t  mixin(IndexedIterable, {\n\t\n\t    // ### Conversion to other types\n\t\n\t    toKeyedSeq: function() {\n\t      return new ToKeyedSequence(this, false);\n\t    },\n\t\n\t\n\t    // ### ES6 Collection methods (ES6 Array and Map)\n\t\n\t    filter: function(predicate, context) {\n\t      return reify(this, filterFactory(this, predicate, context, false));\n\t    },\n\t\n\t    findIndex: function(predicate, context) {\n\t      var entry = this.findEntry(predicate, context);\n\t      return entry ? entry[0] : -1;\n\t    },\n\t\n\t    indexOf: function(searchValue) {\n\t      var key = this.keyOf(searchValue);\n\t      return key === undefined ? -1 : key;\n\t    },\n\t\n\t    lastIndexOf: function(searchValue) {\n\t      var key = this.lastKeyOf(searchValue);\n\t      return key === undefined ? -1 : key;\n\t    },\n\t\n\t    reverse: function() {\n\t      return reify(this, reverseFactory(this, false));\n\t    },\n\t\n\t    slice: function(begin, end) {\n\t      return reify(this, sliceFactory(this, begin, end, false));\n\t    },\n\t\n\t    splice: function(index, removeNum /*, ...values*/) {\n\t      var numArgs = arguments.length;\n\t      removeNum = Math.max(removeNum | 0, 0);\n\t      if (numArgs === 0 || (numArgs === 2 && !removeNum)) {\n\t        return this;\n\t      }\n\t      // If index is negative, it should resolve relative to the size of the\n\t      // collection. However size may be expensive to compute if not cached, so\n\t      // only call count() if the number is in fact negative.\n\t      index = resolveBegin(index, index < 0 ? this.count() : this.size);\n\t      var spliced = this.slice(0, index);\n\t      return reify(\n\t        this,\n\t        numArgs === 1 ?\n\t          spliced :\n\t          spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum))\n\t      );\n\t    },\n\t\n\t\n\t    // ### More collection methods\n\t\n\t    findLastIndex: function(predicate, context) {\n\t      var entry = this.findLastEntry(predicate, context);\n\t      return entry ? entry[0] : -1;\n\t    },\n\t\n\t    first: function() {\n\t      return this.get(0);\n\t    },\n\t\n\t    flatten: function(depth) {\n\t      return reify(this, flattenFactory(this, depth, false));\n\t    },\n\t\n\t    get: function(index, notSetValue) {\n\t      index = wrapIndex(this, index);\n\t      return (index < 0 || (this.size === Infinity ||\n\t          (this.size !== undefined && index > this.size))) ?\n\t        notSetValue :\n\t        this.find(function(_, key)  {return key === index}, undefined, notSetValue);\n\t    },\n\t\n\t    has: function(index) {\n\t      index = wrapIndex(this, index);\n\t      return index >= 0 && (this.size !== undefined ?\n\t        this.size === Infinity || index < this.size :\n\t        this.indexOf(index) !== -1\n\t      );\n\t    },\n\t\n\t    interpose: function(separator) {\n\t      return reify(this, interposeFactory(this, separator));\n\t    },\n\t\n\t    interleave: function(/*...iterables*/) {\n\t      var iterables = [this].concat(arrCopy(arguments));\n\t      var zipped = zipWithFactory(this.toSeq(), IndexedSeq.of, iterables);\n\t      var interleaved = zipped.flatten(true);\n\t      if (zipped.size) {\n\t        interleaved.size = zipped.size * iterables.length;\n\t      }\n\t      return reify(this, interleaved);\n\t    },\n\t\n\t    keySeq: function() {\n\t      return Range(0, this.size);\n\t    },\n\t\n\t    last: function() {\n\t      return this.get(-1);\n\t    },\n\t\n\t    skipWhile: function(predicate, context) {\n\t      return reify(this, skipWhileFactory(this, predicate, context, false));\n\t    },\n\t\n\t    zip: function(/*, ...iterables */) {\n\t      var iterables = [this].concat(arrCopy(arguments));\n\t      return reify(this, zipWithFactory(this, defaultZipper, iterables));\n\t    },\n\t\n\t    zipWith: function(zipper/*, ...iterables */) {\n\t      var iterables = arrCopy(arguments);\n\t      iterables[0] = this;\n\t      return reify(this, zipWithFactory(this, zipper, iterables));\n\t    }\n\t\n\t  });\n\t\n\t  IndexedIterable.prototype[IS_INDEXED_SENTINEL] = true;\n\t  IndexedIterable.prototype[IS_ORDERED_SENTINEL] = true;\n\t\n\t\n\t\n\t  mixin(SetIterable, {\n\t\n\t    // ### ES6 Collection methods (ES6 Array and Map)\n\t\n\t    get: function(value, notSetValue) {\n\t      return this.has(value) ? value : notSetValue;\n\t    },\n\t\n\t    includes: function(value) {\n\t      return this.has(value);\n\t    },\n\t\n\t\n\t    // ### More sequential methods\n\t\n\t    keySeq: function() {\n\t      return this.valueSeq();\n\t    }\n\t\n\t  });\n\t\n\t  SetIterable.prototype.has = IterablePrototype.includes;\n\t  SetIterable.prototype.contains = SetIterable.prototype.includes;\n\t\n\t\n\t  // Mixin subclasses\n\t\n\t  mixin(KeyedSeq, KeyedIterable.prototype);\n\t  mixin(IndexedSeq, IndexedIterable.prototype);\n\t  mixin(SetSeq, SetIterable.prototype);\n\t\n\t  mixin(KeyedCollection, KeyedIterable.prototype);\n\t  mixin(IndexedCollection, IndexedIterable.prototype);\n\t  mixin(SetCollection, SetIterable.prototype);\n\t\n\t\n\t  // #pragma Helper functions\n\t\n\t  function keyMapper(v, k) {\n\t    return k;\n\t  }\n\t\n\t  function entryMapper(v, k) {\n\t    return [k, v];\n\t  }\n\t\n\t  function not(predicate) {\n\t    return function() {\n\t      return !predicate.apply(this, arguments);\n\t    }\n\t  }\n\t\n\t  function neg(predicate) {\n\t    return function() {\n\t      return -predicate.apply(this, arguments);\n\t    }\n\t  }\n\t\n\t  function quoteString(value) {\n\t    return typeof value === 'string' ? JSON.stringify(value) : String(value);\n\t  }\n\t\n\t  function defaultZipper() {\n\t    return arrCopy(arguments);\n\t  }\n\t\n\t  function defaultNegComparator(a, b) {\n\t    return a < b ? 1 : a > b ? -1 : 0;\n\t  }\n\t\n\t  function hashIterable(iterable) {\n\t    if (iterable.size === Infinity) {\n\t      return 0;\n\t    }\n\t    var ordered = isOrdered(iterable);\n\t    var keyed = isKeyed(iterable);\n\t    var h = ordered ? 1 : 0;\n\t    var size = iterable.__iterate(\n\t      keyed ?\n\t        ordered ?\n\t          function(v, k)  { h = 31 * h + hashMerge(hash(v), hash(k)) | 0; } :\n\t          function(v, k)  { h = h + hashMerge(hash(v), hash(k)) | 0; } :\n\t        ordered ?\n\t          function(v ) { h = 31 * h + hash(v) | 0; } :\n\t          function(v ) { h = h + hash(v) | 0; }\n\t    );\n\t    return murmurHashOfSize(size, h);\n\t  }\n\t\n\t  function murmurHashOfSize(size, h) {\n\t    h = imul(h, 0xCC9E2D51);\n\t    h = imul(h << 15 | h >>> -15, 0x1B873593);\n\t    h = imul(h << 13 | h >>> -13, 5);\n\t    h = (h + 0xE6546B64 | 0) ^ size;\n\t    h = imul(h ^ h >>> 16, 0x85EBCA6B);\n\t    h = imul(h ^ h >>> 13, 0xC2B2AE35);\n\t    h = smi(h ^ h >>> 16);\n\t    return h;\n\t  }\n\t\n\t  function hashMerge(a, b) {\n\t    return a ^ b + 0x9E3779B9 + (a << 6) + (a >> 2) | 0; // int\n\t  }\n\t\n\t  var Immutable = {\n\t\n\t    Iterable: Iterable,\n\t\n\t    Seq: Seq,\n\t    Collection: Collection,\n\t    Map: Map,\n\t    OrderedMap: OrderedMap,\n\t    List: List,\n\t    Stack: Stack,\n\t    Set: Set,\n\t    OrderedSet: OrderedSet,\n\t\n\t    Record: Record,\n\t    Range: Range,\n\t    Repeat: Repeat,\n\t\n\t    is: is,\n\t    fromJS: fromJS\n\t\n\t  };\n\t\n\t  return Immutable;\n\t\n\t}));\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar OpenSeadragonNav = function (_React$Component) {\n\t  _inherits(OpenSeadragonNav, _React$Component);\n\t\n\t  function OpenSeadragonNav(props) {\n\t    _classCallCheck(this, OpenSeadragonNav);\n\t\n\t    var _this = _possibleConstructorReturn(this, (OpenSeadragonNav.__proto__ || Object.getPrototypeOf(OpenSeadragonNav)).call(this, props));\n\t\n\t    _this.active_index = _this.active_index.bind(_this);\n\t    _this.active_class = _this.active_class.bind(_this);\n\t    _this.handleChange = _this.handleChange.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(OpenSeadragonNav, [{\n\t    key: 'active_index',\n\t    value: function active_index() {\n\t      return this.props.getActiveItemIndex();\n\t    }\n\t  }, {\n\t    key: 'active_class',\n\t    value: function active_class(i) {\n\t      return this.active_index() == i ? 'active' : '';\n\t    }\n\t  }, {\n\t    key: 'handleChange',\n\t    value: function handleChange(e, target) {\n\t      this.props.viewer.goToPage(e.target.value);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _props = this.props,\n\t          items = _props.items,\n\t          class_name = _props.class_name,\n\t          setActiveItem = _props.setActiveItem,\n\t          getActiveItem = _props.getActiveItem,\n\t          tocs = _props.tocs,\n\t          viewer = _props.viewer;\n\t\n\t      var active_class = this.active_class;\n\t      return _react2.default.createElement(\n\t        'div',\n\t        { className: 'row image-nav' },\n\t        _react2.default.createElement(\n\t          'ul',\n\t          { className: 'nav nav-pills' },\n\t          items.map(function (item, i) {\n\t            return _react2.default.createElement(\n\t              'li',\n\t              { role: 'presentation', className: active_class(i), onClick: setActiveItem.bind(this, i), key: i },\n\t              _react2.default.createElement(\n\t                'a',\n\t                { href: '' },\n\t                item.label\n\t              )\n\t            );\n\t          }),\n\t          _react2.default.createElement(\n\t            'li',\n\t            null,\n\t            _react2.default.createElement(\n\t              'div',\n\t              { className: 'toc-select' },\n\t              _react2.default.createElement(\n\t                'label',\n\t                { htmlFor: 'toc' },\n\t                'Table of Contents:'\n\t              ),\n\t              _react2.default.createElement(\n\t                'select',\n\t                { name: 'toc', onChange: this.handleChange },\n\t                tocs.map(function (toc, i) {\n\t                  var page = i + 1;\n\t                  return _react2.default.createElement(\n\t                    'option',\n\t                    { value: i, key: i },\n\t                    page,\n\t                    '. ',\n\t                    toc\n\t                  );\n\t                })\n\t              )\n\t            )\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return OpenSeadragonNav;\n\t}(_react2.default.Component);\n\t\n\texports.default = OpenSeadragonNav;\n\t\n\t\n\tvar propTypes = {\n\t  items: _react2.default.PropTypes.array.isRequired,\n\t  setActiveItem: _react2.default.PropTypes.func.isRequired,\n\t  tocs: _react2.default.PropTypes.array,\n\t  viewer: _react2.default.PropTypes.object\n\t};\n\t\n\tOpenSeadragonNav.propTypes = propTypes;\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _openseadragon = __webpack_require__(37);\n\t\n\tvar _openseadragon2 = _interopRequireDefault(_openseadragon);\n\t\n\tvar _reactOpenseadragonControls = __webpack_require__(1);\n\t\n\tvar _reactOpenseadragonControls2 = _interopRequireDefault(_reactOpenseadragonControls);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar OpenSeadragonViewer = function (_React$Component) {\n\t  _inherits(OpenSeadragonViewer, _React$Component);\n\t\n\t  function OpenSeadragonViewer(props) {\n\t    _classCallCheck(this, OpenSeadragonViewer);\n\t\n\t    var _this = _possibleConstructorReturn(this, (OpenSeadragonViewer.__proto__ || Object.getPrototypeOf(OpenSeadragonViewer)).call(this, props));\n\t\n\t    _this._config = _this._config.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(OpenSeadragonViewer, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      var page_handler = this.props.page_handler;\n\t\n\t      window.OPENSEADRAGONVIEWER = window.OpenSeadragon(this._config());\n\t      this.setState({ viewer: OPENSEADRAGONVIEWER });\n\t      OPENSEADRAGONVIEWER.addHandler('page', function (viewer) {\n\t        page_handler(viewer, OPENSEADRAGONVIEWER);\n\t      });\n\t      // This allows us to keep the transcript/image toggle pills in sync\n\t      // with what was clicked on the viewer nav strip\n\t      OPENSEADRAGONVIEWER.goToPage(this.props.last_page);\n\t    }\n\t  }, {\n\t    key: '_config',\n\t    value: function _config() {\n\t      return Object.assign(this.props.default_config, this.props.config);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _props = this.props,\n\t          text = _props.text,\n\t          include_controls = _props.include_controls;\n\t\n\t      var controls = include_controls ? _react2.default.createElement(_reactOpenseadragonControls2.default, null) : '';\n\t      return _react2.default.createElement(\n\t        'div',\n\t        { className: 'osd col-md-12' },\n\t        _react2.default.createElement(\n\t          'div',\n\t          { className: 'openseadragon', id: 'osd-viewer' },\n\t          controls\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return OpenSeadragonViewer;\n\t}(_react2.default.Component);\n\t\n\texports.default = OpenSeadragonViewer;\n\t\n\t\n\tOpenSeadragonViewer.defaultProps = { include_navigator: true,\n\t  include_controls: true,\n\t  default_config: {\n\t    showNavigator: true,\n\t    id: 'osd-viewer',\n\t    visibilityRatio: 1.0,\n\t    constrainDuringPan: false,\n\t    defaultZoomLevel: 1,\n\t    minZoomLevel: 1,\n\t    maxZoomLevel: 10,\n\t    zoomInButton: 'zoom-in',\n\t    zoomOutButton: 'zoom-out',\n\t    homeButton: 'reset',\n\t    fullPageButton: 'full-page',\n\t    nextButton: 'next',\n\t    previousButton: 'previous'\n\t  }\n\t};\n\t\n\tOpenSeadragonViewer.propTypes = {\n\t  page_handler: _react2.default.PropTypes.func,\n\t  config: _react2.default.PropTypes.object.isRequired\n\t};\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;//! openseadragon 2.2.1\n\t//! Built on 2016-07-01\n\t//! Git commit: v2.2.1-0-babdefd\n\t//! http://openseadragon.github.io\n\t//! License: http://openseadragon.github.io/license/\n\t\n\t/*\n\t * OpenSeadragon\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t/*\n\t * Portions of this source file taken from jQuery:\n\t *\n\t * Copyright 2011 John Resig\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining\n\t * a copy of this software and associated documentation files (the\n\t * \"Software\"), to deal in the Software without restriction, including\n\t * without limitation the rights to use, copy, modify, merge, publish,\n\t * distribute, sublicense, and/or sell copies of the Software, and to\n\t * permit persons to whom the Software is furnished to do so, subject to\n\t * the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be\n\t * included in all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n\t * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n\t * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n\t * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t */\n\t\n\t/*\n\t * Portions of this source file taken from mattsnider.com:\n\t *\n\t * Copyright (c) 2006-2013 Matt Snider\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a\n\t * copy of this software and associated documentation files (the \"Software\"),\n\t * to deal in the Software without restriction, including without limitation\n\t * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n\t * and/or sell copies of the Software, and to permit persons to whom the\n\t * Software is furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included\n\t * in all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n\t * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n\t * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT\n\t * OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR\n\t * THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t */\n\t\n\t\n\t/**\n\t * @namespace OpenSeadragon\n\t * @version openseadragon 2.2.1\n\t * @classdesc The root namespace for OpenSeadragon.  All utility methods\n\t * and classes are defined on or below this namespace.\n\t *\n\t */\n\t\n\t\n\t// Typedefs\n\t\n\t /**\n\t  * All required and optional settings for instantiating a new instance of an OpenSeadragon image viewer.\n\t  *\n\t  * @typedef {Object} Options\n\t  * @memberof OpenSeadragon\n\t  *\n\t  * @property {String} id\n\t  *     Id of the element to append the viewer's container element to. If not provided, the 'element' property must be provided.\n\t  *     If both the element and id properties are specified, the viewer is appended to the element provided in the element property.\n\t  *\n\t  * @property {Element} element\n\t  *     The element to append the viewer's container element to. If not provided, the 'id' property must be provided.\n\t  *     If both the element and id properties are specified, the viewer is appended to the element provided in the element property.\n\t  *\n\t  * @property {Array|String|Function|Object} [tileSources=null]\n\t  *     Tile source(s) to open initially. This is a complex parameter; see\n\t  *     {@link OpenSeadragon.Viewer#open} for details.\n\t  *\n\t  * @property {Number} [tabIndex=0]\n\t  *     Tabbing order index to assign to the viewer element. Positive values are selected in increasing order. When tabIndex is 0\n\t  *     source order is used. A negative value omits the viewer from the tabbing order.\n\t  *\n\t  * @property {Array} overlays Array of objects defining permanent overlays of\n\t  *     the viewer. The overlays added via this option and later removed with\n\t  *     {@link OpenSeadragon.Viewer#removeOverlay} will be added back when a new\n\t  *     image is opened.\n\t  *     To add overlays which can be definitively removed, one must use\n\t  *     {@link OpenSeadragon.Viewer#addOverlay}\n\t  *     If displaying a sequence of images, the overlays can be associated\n\t  *     with a specific page by passing the overlays array to the page's\n\t  *     tile source configuration.\n\t  *     Expected properties:\n\t  *     * x, y, (or px, py for pixel coordinates) to define the location.\n\t  *     * width, height in point if using x,y or in pixels if using px,py. If width\n\t  *       and height are specified, the overlay size is adjusted when zooming,\n\t  *       otherwise the size stays the size of the content (or the size defined by CSS).\n\t  *     * className to associate a class to the overlay\n\t  *     * id to set the overlay element. If an element with this id already exists,\n\t  *       it is reused, otherwise it is created. If not specified, a new element is\n\t  *       created.\n\t  *     * placement a string to define the relative position to the viewport.\n\t  *       Only used if no width and height are specified. Default: 'TOP_LEFT'.\n\t  *       See {@link OpenSeadragon.Placement} for possible values.\n\t  *\n\t  * @property {String} [xmlPath=null]\n\t  *     <strong>DEPRECATED</strong>. A relative path to load a DZI file from the server.\n\t  *     Prefer the newer Options.tileSources.\n\t  *\n\t  * @property {String} [prefixUrl='/images/']\n\t  *     Prepends the prefixUrl to navImages paths, which is very useful\n\t  *     since the default paths are rarely useful for production\n\t  *     environments.\n\t  *\n\t  * @property {OpenSeadragon.NavImages} [navImages]\n\t  *     An object with a property for each button or other built-in navigation\n\t  *     control, eg the current 'zoomIn', 'zoomOut', 'home', and 'fullpage'.\n\t  *     Each of those in turn provides an image path for each state of the button\n\t  *     or navigation control, eg 'REST', 'GROUP', 'HOVER', 'PRESS'. Finally the\n\t  *     image paths, by default assume there is a folder on the servers root path\n\t  *     called '/images', eg '/images/zoomin_rest.png'.  If you need to adjust\n\t  *     these paths, prefer setting the option.prefixUrl rather than overriding\n\t  *     every image path directly through this setting.\n\t  *\n\t  * @property {Boolean} [debugMode=false]\n\t  *     TODO: provide an in-screen panel providing event detail feedback.\n\t  *\n\t  * @property {String} [debugGridColor='#437AB2']\n\t  *\n\t  * @property {Number} [blendTime=0]\n\t  *     Specifies the duration of animation as higher or lower level tiles are\n\t  *     replacing the existing tile.\n\t  *\n\t  * @property {Boolean} [alwaysBlend=false]\n\t  *     Forces the tile to always blend.  By default the tiles skip blending\n\t  *     when the blendTime is surpassed and the current animation frame would\n\t  *     not complete the blend.\n\t  *\n\t  * @property {Boolean} [autoHideControls=true]\n\t  *     If the user stops interacting with the viewport, fade the navigation\n\t  *     controls.  Useful for presentation since the controls are by default\n\t  *     floated on top of the image the user is viewing.\n\t  *\n\t  * @property {Boolean} [immediateRender=false]\n\t  *     Render the best closest level first, ignoring the lowering levels which\n\t  *     provide the effect of very blurry to sharp. It is recommended to change\n\t  *     setting to true for mobile devices.\n\t  *\n\t  * @property {Number} [defaultZoomLevel=0]\n\t  *     Zoom level to use when image is first opened or the home button is clicked.\n\t  *     If 0, adjusts to fit viewer.\n\t  *\n\t  * @property {Number} [opacity=1]\n\t  *     Default opacity of the tiled images (1=opaque, 0=transparent)\n\t  *\n\t  * @property {String} [compositeOperation=null]\n\t  *     Valid values are 'source-over', 'source-atop', 'source-in', 'source-out',\n\t  *     'destination-over', 'destination-atop', 'destination-in',\n\t  *     'destination-out', 'lighter', 'copy' or 'xor'\n\t  *\n\t  * @property {String|CanvasGradient|CanvasPattern|Function} [placeholderFillStyle=null]\n\t  *     Draws a colored rectangle behind the tile if it is not loaded yet.\n\t  *     You can pass a CSS color value like \"#FF8800\".\n\t  *     When passing a function the tiledImage and canvas context are available as argument which is useful when you draw a gradient or pattern.\n\t  *\n\t  * @property {Number} [degrees=0]\n\t  *     Initial rotation.\n\t  *\n\t  * @property {Number} [minZoomLevel=null]\n\t  *\n\t  * @property {Number} [maxZoomLevel=null]\n\t  *\n\t  * @property {Boolean} [homeFillsViewer=false]\n\t  *     Make the 'home' button fill the viewer and clip the image, instead\n\t  *     of fitting the image to the viewer and letterboxing.\n\t  *\n\t  * @property {Boolean} [panHorizontal=true]\n\t  *     Allow horizontal pan.\n\t  *\n\t  * @property {Boolean} [panVertical=true]\n\t  *     Allow vertical pan.\n\t  *\n\t  * @property {Boolean} [constrainDuringPan=false]\n\t  *\n\t  * @property {Boolean} [wrapHorizontal=false]\n\t  *     Set to true to force the image to wrap horizontally within the viewport.\n\t  *     Useful for maps or images representing the surface of a sphere or cylinder.\n\t  *\n\t  * @property {Boolean} [wrapVertical=false]\n\t  *     Set to true to force the image to wrap vertically within the viewport.\n\t  *     Useful for maps or images representing the surface of a sphere or cylinder.\n\t  *\n\t  * @property {Number} [minZoomImageRatio=0.9]\n\t  *     The minimum percentage ( expressed as a number between 0 and 1 ) of\n\t  *     the viewport height or width at which the zoom out will be constrained.\n\t  *     Setting it to 0, for example will allow you to zoom out infinity.\n\t  *\n\t  * @property {Number} [maxZoomPixelRatio=1.1]\n\t  *     The maximum ratio to allow a zoom-in to affect the highest level pixel\n\t  *     ratio. This can be set to Infinity to allow 'infinite' zooming into the\n\t  *     image though it is less effective visually if the HTML5 Canvas is not\n\t  *     availble on the viewing device.\n\t  *\n\t  * @property {Number} [smoothTileEdgesMinZoom=1.1]\n\t  *     A zoom percentage ( where 1 is 100% ) of the highest resolution level.\n\t  *     When zoomed in beyond this value alternative compositing will be used to\n\t  *     smooth out the edges between tiles. This will have a performance impact.\n\t  *     Can be set to Infinity to turn it off.\n\t  *     Note: This setting is ignored on iOS devices due to a known bug (See {@link https://github.com/openseadragon/openseadragon/issues/952})\n\t  *\n\t  * @property {Boolean} [iOSDevice=?]\n\t  *     True if running on an iOS device, false otherwise.\n\t  *     Used to disable certain features that behave differently on iOS devices.\n\t  *\n\t  * @property {Boolean} [autoResize=true]\n\t  *     Set to false to prevent polling for viewer size changes. Useful for providing custom resize behavior.\n\t  *\n\t  * @property {Boolean} [preserveImageSizeOnResize=false]\n\t  *     Set to true to have the image size preserved when the viewer is resized. This requires autoResize=true (default).\n\t  *\n\t  * @property {Number} [minScrollDeltaTime=50]\n\t  *     Number of milliseconds between canvas-scroll events. This value helps normalize the rate of canvas-scroll\n\t  *     events between different devices, causing the faster devices to slow down enough to make the zoom control\n\t  *     more manageable.\n\t  *\n\t  * @property {Number} [pixelsPerWheelLine=40]\n\t  *     For pixel-resolution scrolling devices, the number of pixels equal to one scroll line.\n\t  *\n\t  * @property {Number} [visibilityRatio=0.5]\n\t  *     The percentage ( as a number from 0 to 1 ) of the source image which\n\t  *     must be kept within the viewport.  If the image is dragged beyond that\n\t  *     limit, it will 'bounce' back until the minimum visibility ratio is\n\t  *     achieved.  Setting this to 0 and wrapHorizontal ( or wrapVertical ) to\n\t  *     true will provide the effect of an infinitely scrolling viewport.\n\t  *\n\t  * @property {Object} [viewportMargins={}]\n\t  *     Pushes the \"home\" region in from the sides by the specified amounts.\n\t  *     Possible subproperties (Numbers, in screen coordinates): left, top, right, bottom.\n\t  *\n\t  * @property {Number} [imageLoaderLimit=0]\n\t  *     The maximum number of image requests to make concurrently. By default\n\t  *     it is set to 0 allowing the browser to make the maximum number of\n\t  *     image requests in parallel as allowed by the browsers policy.\n\t  *\n\t  * @property {Number} [clickTimeThreshold=300]\n\t  *      The number of milliseconds within which a pointer down-up event combination\n\t  *      will be treated as a click gesture.\n\t  *\n\t  * @property {Number} [clickDistThreshold=5]\n\t  *      The maximum distance allowed between a pointer down event and a pointer up event\n\t  *      to be treated as a click gesture.\n\t  *\n\t  * @property {Number} [dblClickTimeThreshold=300]\n\t  *      The number of milliseconds within which two pointer down-up event combinations\n\t  *      will be treated as a double-click gesture.\n\t  *\n\t  * @property {Number} [dblClickDistThreshold=20]\n\t  *      The maximum distance allowed between two pointer click events\n\t  *      to be treated as a double-click gesture.\n\t  *\n\t  * @property {Number} [springStiffness=6.5]\n\t  *\n\t  * @property {Number} [animationTime=1.2]\n\t  *     Specifies the animation duration per each {@link OpenSeadragon.Spring}\n\t  *     which occur when the image is dragged or zoomed.\n\t  *\n\t  * @property {OpenSeadragon.GestureSettings} [gestureSettingsMouse]\n\t  *     Settings for gestures generated by a mouse pointer device. (See {@link OpenSeadragon.GestureSettings})\n\t  * @property {Boolean} [gestureSettingsMouse.scrollToZoom=true] - Zoom on scroll gesture\n\t  * @property {Boolean} [gestureSettingsMouse.clickToZoom=true] - Zoom on click gesture\n\t  * @property {Boolean} [gestureSettingsMouse.dblClickToZoom=false] - Zoom on double-click gesture. Note: If set to true\n\t  *     then clickToZoom should be set to false to prevent multiple zooms.\n\t  * @property {Boolean} [gestureSettingsMouse.pinchToZoom=false] - Zoom on pinch gesture\n\t  * @property {Boolean} [gestureSettingsMouse.flickEnabled=false] - Enable flick gesture\n\t  * @property {Number} [gestureSettingsMouse.flickMinSpeed=120] - If flickEnabled is true, the minimum speed to initiate a flick gesture (pixels-per-second)\n\t  * @property {Number} [gestureSettingsMouse.flickMomentum=0.25] - If flickEnabled is true, the momentum factor for the flick gesture\n\t  * @property {Boolean} [gestureSettingsMouse.pinchRotate=false] - If pinchRotate is true, the user will have the ability to rotate the image using their fingers.\n\t  *\n\t  * @property {OpenSeadragon.GestureSettings} [gestureSettingsTouch]\n\t  *     Settings for gestures generated by a touch pointer device. (See {@link OpenSeadragon.GestureSettings})\n\t  * @property {Boolean} [gestureSettingsTouch.scrollToZoom=false] - Zoom on scroll gesture\n\t  * @property {Boolean} [gestureSettingsTouch.clickToZoom=false] - Zoom on click gesture\n\t  * @property {Boolean} [gestureSettingsTouch.dblClickToZoom=true] - Zoom on double-click gesture. Note: If set to true\n\t  *     then clickToZoom should be set to false to prevent multiple zooms.\n\t  * @property {Boolean} [gestureSettingsTouch.pinchToZoom=true] - Zoom on pinch gesture\n\t  * @property {Boolean} [gestureSettingsTouch.flickEnabled=true] - Enable flick gesture\n\t  * @property {Number} [gestureSettingsTouch.flickMinSpeed=120] - If flickEnabled is true, the minimum speed to initiate a flick gesture (pixels-per-second)\n\t  * @property {Number} [gestureSettingsTouch.flickMomentum=0.25] - If flickEnabled is true, the momentum factor for the flick gesture\n\t  * @property {Boolean} [gestureSettingsTouch.pinchRotate=false] - If pinchRotate is true, the user will have the ability to rotate the image using their fingers.\n\t  *\n\t  * @property {OpenSeadragon.GestureSettings} [gestureSettingsPen]\n\t  *     Settings for gestures generated by a pen pointer device. (See {@link OpenSeadragon.GestureSettings})\n\t  * @property {Boolean} [gestureSettingsPen.scrollToZoom=false] - Zoom on scroll gesture\n\t  * @property {Boolean} [gestureSettingsPen.clickToZoom=true] - Zoom on click gesture\n\t  * @property {Boolean} [gestureSettingsPen.dblClickToZoom=false] - Zoom on double-click gesture. Note: If set to true\n\t  *     then clickToZoom should be set to false to prevent multiple zooms.\n\t  * @property {Boolean} [gestureSettingsPen.pinchToZoom=false] - Zoom on pinch gesture\n\t  * @property {Boolean} [gestureSettingsPen.flickEnabled=false] - Enable flick gesture\n\t  * @property {Number} [gestureSettingsPen.flickMinSpeed=120] - If flickEnabled is true, the minimum speed to initiate a flick gesture (pixels-per-second)\n\t  * @property {Number} [gestureSettingsPen.flickMomentum=0.25] - If flickEnabled is true, the momentum factor for the flick gesture\n\t  * @property {Boolean} [gestureSettingsPen.pinchRotate=false] - If pinchRotate is true, the user will have the ability to rotate the image using their fingers.\n\t  *\n\t  * @property {OpenSeadragon.GestureSettings} [gestureSettingsUnknown]\n\t  *     Settings for gestures generated by unknown pointer devices. (See {@link OpenSeadragon.GestureSettings})\n\t  * @property {Boolean} [gestureSettingsUnknown.scrollToZoom=true] - Zoom on scroll gesture\n\t  * @property {Boolean} [gestureSettingsUnknown.clickToZoom=false] - Zoom on click gesture\n\t  * @property {Boolean} [gestureSettingsUnknown.dblClickToZoom=true] - Zoom on double-click gesture. Note: If set to true\n\t  *     then clickToZoom should be set to false to prevent multiple zooms.\n\t  * @property {Boolean} [gestureSettingsUnknown.pinchToZoom=true] - Zoom on pinch gesture\n\t  * @property {Boolean} [gestureSettingsUnknown.flickEnabled=true] - Enable flick gesture\n\t  * @property {Number} [gestureSettingsUnknown.flickMinSpeed=120] - If flickEnabled is true, the minimum speed to initiate a flick gesture (pixels-per-second)\n\t  * @property {Number} [gestureSettingsUnknown.flickMomentum=0.25] - If flickEnabled is true, the momentum factor for the flick gesture\n\t  * @property {Boolean} [gestureSettingsUnknown.pinchRotate=false] - If pinchRotate is true, the user will have the ability to rotate the image using their fingers.\n\t  *\n\t  * @property {Number} [zoomPerClick=2.0]\n\t  *     The \"zoom distance\" per mouse click or touch tap. <em><strong>Note:</strong> Setting this to 1.0 effectively disables the click-to-zoom feature (also see gestureSettings[Mouse|Touch|Pen].clickToZoom/dblClickToZoom).</em>\n\t  *\n\t  * @property {Number} [zoomPerScroll=1.2]\n\t  *     The \"zoom distance\" per mouse scroll or touch pinch. <em><strong>Note:</strong> Setting this to 1.0 effectively disables the mouse-wheel zoom feature (also see gestureSettings[Mouse|Touch|Pen].scrollToZoom}).</em>\n\t  *\n\t  * @property {Number} [zoomPerSecond=1.0]\n\t  *     The number of seconds to animate a single zoom event over.\n\t  *\n\t  * @property {Boolean} [showNavigator=false]\n\t  *     Set to true to make the navigator minimap appear.\n\t  *\n\t  * @property {String} [navigatorId=navigator-GENERATED DATE]\n\t  *     The ID of a div to hold the navigator minimap.\n\t  *     If an ID is specified, the navigatorPosition, navigatorSizeRatio, navigatorMaintainSizeRatio, navigator[Top|Left|Height|Width] and navigatorAutoFade options will be ignored.\n\t  *     If an ID is not specified, a div element will be generated and placed on top of the main image.\n\t  *\n\t  * @property {String} [navigatorPosition='TOP_RIGHT']\n\t  *     Valid values are 'TOP_LEFT', 'TOP_RIGHT', 'BOTTOM_LEFT', 'BOTTOM_RIGHT', or 'ABSOLUTE'.<br>\n\t  *     If 'ABSOLUTE' is specified, then navigator[Top|Left|Height|Width] determines the size and position of the navigator minimap in the viewer, and navigatorSizeRatio and navigatorMaintainSizeRatio are ignored.<br>\n\t  *     For 'TOP_LEFT', 'TOP_RIGHT', 'BOTTOM_LEFT', and 'BOTTOM_RIGHT', the navigatorSizeRatio or navigator[Height|Width] values determine the size of the navigator minimap.\n\t  *\n\t  * @property {Number} [navigatorSizeRatio=0.2]\n\t  *     Ratio of navigator size to viewer size. Ignored if navigator[Height|Width] are specified.\n\t  *\n\t  * @property {Boolean} [navigatorMaintainSizeRatio=false]\n\t  *     If true, the navigator minimap is resized (using navigatorSizeRatio) when the viewer size changes.\n\t  *\n\t  * @property {Number|String} [navigatorTop=null]\n\t  *     Specifies the location of the navigator minimap (see navigatorPosition).\n\t  *\n\t  * @property {Number|String} [navigatorLeft=null]\n\t  *     Specifies the location of the navigator minimap (see navigatorPosition).\n\t  *\n\t  * @property {Number|String} [navigatorHeight=null]\n\t  *     Specifies the size of the navigator minimap (see navigatorPosition).\n\t  *     If specified, navigatorSizeRatio and navigatorMaintainSizeRatio are ignored.\n\t  *\n\t  * @property {Number|String} [navigatorWidth=null]\n\t  *     Specifies the size of the navigator minimap (see navigatorPosition).\n\t  *     If specified, navigatorSizeRatio and navigatorMaintainSizeRatio are ignored.\n\t  *\n\t  * @property {Boolean} [navigatorAutoResize=true]\n\t  *     Set to false to prevent polling for navigator size changes. Useful for providing custom resize behavior.\n\t  *     Setting to false can also improve performance when the navigator is configured to a fixed size.\n\t  *\n\t  * @property {Boolean} [navigatorAutoFade=true]\n\t  *     If the user stops interacting with the viewport, fade the navigator minimap.\n\t  *     Setting to false will make the navigator minimap always visible.\n\t  *\n\t  * @property {Boolean} [navigatorRotate=true]\n\t  *     If true, the navigator will be rotated together with the viewer.\n\t  *\n\t  * @property {Number} [controlsFadeDelay=2000]\n\t  *     The number of milliseconds to wait once the user has stopped interacting\n\t  *     with the interface before begining to fade the controls. Assumes\n\t  *     showNavigationControl and autoHideControls are both true.\n\t  *\n\t  * @property {Number} [controlsFadeLength=1500]\n\t  *     The number of milliseconds to animate the controls fading out.\n\t  *\n\t  * @property {Number} [maxImageCacheCount=200]\n\t  *     The max number of images we should keep in memory (per drawer).\n\t  *\n\t  * @property {Number} [timeout=30000]\n\t  *\n\t  * @property {Boolean} [useCanvas=true]\n\t  *     Set to false to not use an HTML canvas element for image rendering even if canvas is supported.\n\t  *\n\t  * @property {Number} [minPixelRatio=0.5]\n\t  *     The higher the minPixelRatio, the lower the quality of the image that\n\t  *     is considered sufficient to stop rendering a given zoom level.  For\n\t  *     example, if you are targeting mobile devices with less bandwith you may\n\t  *     try setting this to 1.5 or higher.\n\t  *\n\t  * @property {Boolean} [mouseNavEnabled=true]\n\t  *     Is the user able to interact with the image via mouse or touch. Default\n\t  *     interactions include draging the image in a plane, and zooming in toward\n\t  *     and away from the image.\n\t  *\n\t  * @property {Boolean} [showNavigationControl=true]\n\t  *     Set to false to prevent the appearance of the default navigation controls.<br>\n\t  *     Note that if set to false, the customs buttons set by the options\n\t  *     zoomInButton, zoomOutButton etc, are rendered inactive.\n\t  *\n\t  * @property {OpenSeadragon.ControlAnchor} [navigationControlAnchor=TOP_LEFT]\n\t  *     Placement of the default navigation controls.\n\t  *     To set the placement of the sequence controls, see the\n\t  *     sequenceControlAnchor option.\n\t  *\n\t  * @property {Boolean} [showZoomControl=true]\n\t  *     If true then + and - buttons to zoom in and out are displayed.<br>\n\t  *     Note: {@link OpenSeadragon.Options.showNavigationControl} is overriding\n\t  *     this setting when set to false.\n\t  *\n\t  * @property {Boolean} [showHomeControl=true]\n\t  *     If true then the 'Go home' button is displayed to go back to the original\n\t  *     zoom and pan.<br>\n\t  *     Note: {@link OpenSeadragon.Options.showNavigationControl} is overriding\n\t  *     this setting when set to false.\n\t  *\n\t  * @property {Boolean} [showFullPageControl=true]\n\t  *     If true then the 'Toggle full page' button is displayed to switch\n\t  *     between full page and normal mode.<br>\n\t  *     Note: {@link OpenSeadragon.Options.showNavigationControl} is overriding\n\t  *     this setting when set to false.\n\t  *\n\t  * @property {Boolean} [showRotationControl=false]\n\t  *     If true then the rotate left/right controls will be displayed as part of the\n\t  *     standard controls. This is also subject to the browser support for rotate\n\t  *     (e.g. viewer.drawer.canRotate()).<br>\n\t  *     Note: {@link OpenSeadragon.Options.showNavigationControl} is overriding\n\t  *     this setting when set to false.\n\t  *\n\t  * @property {Boolean} [showSequenceControl=true]\n\t  *     If sequenceMode is true, then provide buttons for navigating forward and\n\t  *     backward through the images.\n\t  *\n\t  * @property {OpenSeadragon.ControlAnchor} [sequenceControlAnchor=TOP_LEFT]\n\t  *     Placement of the default sequence controls.\n\t  *\n\t  * @property {Boolean} [navPrevNextWrap=false]\n\t  *     If true then the 'previous' button will wrap to the last image when\n\t  *     viewing the first image and the 'next' button will wrap to the first\n\t  *     image when viewing the last image.\n\t  *\n\t  * @property {String} zoomInButton\n\t  *     Set the id of the custom 'Zoom in' button to use.\n\t  *     This is useful to have a custom button anywhere in the web page.<br>\n\t  *     To only change the button images, consider using\n\t  *     {@link OpenSeadragon.Options.navImages}\n\t  *\n\t  * @property {String} zoomOutButton\n\t  *     Set the id of the custom 'Zoom out' button to use.\n\t  *     This is useful to have a custom button anywhere in the web page.<br>\n\t  *     To only change the button images, consider using\n\t  *     {@link OpenSeadragon.Options.navImages}\n\t  *\n\t  * @property {String} homeButton\n\t  *     Set the id of the custom 'Go home' button to use.\n\t  *     This is useful to have a custom button anywhere in the web page.<br>\n\t  *     To only change the button images, consider using\n\t  *     {@link OpenSeadragon.Options.navImages}\n\t  *\n\t  * @property {String} fullPageButton\n\t  *     Set the id of the custom 'Toggle full page' button to use.\n\t  *     This is useful to have a custom button anywhere in the web page.<br>\n\t  *     To only change the button images, consider using\n\t  *     {@link OpenSeadragon.Options.navImages}\n\t  *\n\t  * @property {String} rotateLeftButton\n\t  *     Set the id of the custom 'Rotate left' button to use.\n\t  *     This is useful to have a custom button anywhere in the web page.<br>\n\t  *     To only change the button images, consider using\n\t  *     {@link OpenSeadragon.Options.navImages}\n\t  *\n\t  * @property {String} rotateRightButton\n\t  *     Set the id of the custom 'Rotate right' button to use.\n\t  *     This is useful to have a custom button anywhere in the web page.<br>\n\t  *     To only change the button images, consider using\n\t  *     {@link OpenSeadragon.Options.navImages}\n\t  *\n\t  * @property {String} previousButton\n\t  *     Set the id of the custom 'Previous page' button to use.\n\t  *     This is useful to have a custom button anywhere in the web page.<br>\n\t  *     To only change the button images, consider using\n\t  *     {@link OpenSeadragon.Options.navImages}\n\t  *\n\t  * @property {String} nextButton\n\t  *     Set the id of the custom 'Next page' button to use.\n\t  *     This is useful to have a custom button anywhere in the web page.<br>\n\t  *     To only change the button images, consider using\n\t  *     {@link OpenSeadragon.Options.navImages}\n\t  *\n\t  * @property {Boolean} [sequenceMode=false]\n\t  *     Set to true to have the viewer treat your tilesources as a sequence of images to\n\t  *     be opened one at a time rather than all at once.\n\t  *\n\t  * @property {Number} [initialPage=0]\n\t  *     If sequenceMode is true, display this page initially.\n\t  *\n\t  * @property {Boolean} [preserveViewport=false]\n\t  *     If sequenceMode is true, then normally navigating through each image resets the\n\t  *     viewport to 'home' position.  If preserveViewport is set to true, then the viewport\n\t  *     position is preserved when navigating between images in the sequence.\n\t  *\n\t  * @property {Boolean} [preserveOverlays=false]\n\t  *     If sequenceMode is true, then normally navigating through each image\n\t  *     resets the overlays.\n\t  *     If preserveOverlays is set to true, then the overlays added with {@link OpenSeadragon.Viewer#addOverlay}\n\t  *     are preserved when navigating between images in the sequence.\n\t  *     Note: setting preserveOverlays overrides any overlays specified in the global\n\t  *     \"overlays\" option for the Viewer. It's also not compatible with specifying\n\t  *     per-tileSource overlays via the options, as those overlays will persist\n\t  *     even after the tileSource is closed.\n\t  *\n\t  * @property {Boolean} [showReferenceStrip=false]\n\t  *     If sequenceMode is true, then display a scrolling strip of image thumbnails for\n\t  *     navigating through the images.\n\t  *\n\t  * @property {String} [referenceStripScroll='horizontal']\n\t  *\n\t  * @property {Element} [referenceStripElement=null]\n\t  *\n\t  * @property {Number} [referenceStripHeight=null]\n\t  *\n\t  * @property {Number} [referenceStripWidth=null]\n\t  *\n\t  * @property {String} [referenceStripPosition='BOTTOM_LEFT']\n\t  *\n\t  * @property {Number} [referenceStripSizeRatio=0.2]\n\t  *\n\t  * @property {Boolean} [collectionMode=false]\n\t  *     Set to true to have the viewer arrange your TiledImages in a grid or line.\n\t  *\n\t  * @property {Number} [collectionRows=3]\n\t  *     If collectionMode is true, specifies how many rows the grid should have. Use 1 to make a line.\n\t  *     If collectionLayout is 'vertical', specifies how many columns instead.\n\t  *\n\t  * @property {Number} [collectionColumns=0]\n\t  *     If collectionMode is true, specifies how many columns the grid should have. Use 1 to make a line.\n\t  *     If collectionLayout is 'vertical', specifies how many rows instead. Ignored if collectionRows is not set to a falsy value.\n\t  *\n\t  * @property {String} [collectionLayout='horizontal']\n\t  *     If collectionMode is true, specifies whether to arrange vertically or horizontally.\n\t  *\n\t  * @property {Number} [collectionTileSize=800]\n\t  *     If collectionMode is true, specifies the size, in viewport coordinates, for each TiledImage to fit into.\n\t  *     The TiledImage will be centered within a square of the specified size.\n\t  *\n\t  * @property {Number} [collectionTileMargin=80]\n\t  *     If collectionMode is true, specifies the margin, in viewport coordinates, between each TiledImage.\n\t  *\n\t  * @property {String|Boolean} [crossOriginPolicy=false]\n\t  *     Valid values are 'Anonymous', 'use-credentials', and false. If false, canvas requests will\n\t  *     not use CORS, and the canvas will be tainted.\n\t  *\n\t  * @property {Boolean} [ajaxWithCredentials=false]\n\t  *     Whether to set the withCredentials XHR flag for AJAX requests (when loading tile sources).\n\t  *     Note that this can be overridden at the {@link OpenSeadragon.TileSource} level.\n\t  *\n\t  */\n\t\n\t /**\n\t  * Settings for gestures generated by a pointer device.\n\t  *\n\t  * @typedef {Object} GestureSettings\n\t  * @memberof OpenSeadragon\n\t  *\n\t  * @property {Boolean} scrollToZoom\n\t  *     Set to false to disable zooming on scroll gestures.\n\t  *\n\t  * @property {Boolean} clickToZoom\n\t  *     Set to false to disable zooming on click gestures.\n\t  *\n\t  * @property {Boolean} dblClickToZoom\n\t  *     Set to false to disable zooming on double-click gestures. Note: If set to true\n\t  *     then clickToZoom should be set to false to prevent multiple zooms.\n\t  *\n\t  * @property {Boolean} pinchToZoom\n\t  *     Set to false to disable zooming on pinch gestures.\n\t  *\n\t  * @property {Boolean} flickEnabled\n\t  *     Set to false to disable the kinetic panning effect (flick) at the end of a drag gesture.\n\t  *\n\t  * @property {Number} flickMinSpeed\n\t  *     If flickEnabled is true, the minimum speed (in pixels-per-second) required to cause the kinetic panning effect (flick) at the end of a drag gesture.\n\t  *\n\t  * @property {Number} flickMomentum\n\t  *     If flickEnabled is true, a constant multiplied by the velocity to determine the distance of the kinetic panning effect (flick) at the end of a drag gesture.\n\t  *     A larger value will make the flick feel \"lighter\", while a smaller value will make the flick feel \"heavier\".\n\t  *     Note: springStiffness and animationTime also affect the \"spring\" used to stop the flick animation.\n\t  *\n\t  */\n\t\n\t/**\n\t  * The names for the image resources used for the image navigation buttons.\n\t  *\n\t  * @typedef {Object} NavImages\n\t  * @memberof OpenSeadragon\n\t  *\n\t  * @property {Object} zoomIn - Images for the zoom-in button.\n\t  * @property {String} zoomIn.REST\n\t  * @property {String} zoomIn.GROUP\n\t  * @property {String} zoomIn.HOVER\n\t  * @property {String} zoomIn.DOWN\n\t  *\n\t  * @property {Object} zoomOut - Images for the zoom-out button.\n\t  * @property {String} zoomOut.REST\n\t  * @property {String} zoomOut.GROUP\n\t  * @property {String} zoomOut.HOVER\n\t  * @property {String} zoomOut.DOWN\n\t  *\n\t  * @property {Object} home - Images for the home button.\n\t  * @property {String} home.REST\n\t  * @property {String} home.GROUP\n\t  * @property {String} home.HOVER\n\t  * @property {String} home.DOWN\n\t  *\n\t  * @property {Object} fullpage - Images for the full-page button.\n\t  * @property {String} fullpage.REST\n\t  * @property {String} fullpage.GROUP\n\t  * @property {String} fullpage.HOVER\n\t  * @property {String} fullpage.DOWN\n\t  *\n\t  * @property {Object} rotateleft - Images for the rotate left button.\n\t  * @property {String} rotateleft.REST\n\t  * @property {String} rotateleft.GROUP\n\t  * @property {String} rotateleft.HOVER\n\t  * @property {String} rotateleft.DOWN\n\t  *\n\t  * @property {Object} rotateright - Images for the rotate right button.\n\t  * @property {String} rotateright.REST\n\t  * @property {String} rotateright.GROUP\n\t  * @property {String} rotateright.HOVER\n\t  * @property {String} rotateright.DOWN\n\t  *\n\t  * @property {Object} previous - Images for the previous button.\n\t  * @property {String} previous.REST\n\t  * @property {String} previous.GROUP\n\t  * @property {String} previous.HOVER\n\t  * @property {String} previous.DOWN\n\t  *\n\t  * @property {Object} next - Images for the next button.\n\t  * @property {String} next.REST\n\t  * @property {String} next.GROUP\n\t  * @property {String} next.HOVER\n\t  * @property {String} next.DOWN\n\t  *\n\t  */\n\t\n\t\n\t /**\n\t  * This function serves as a single point of instantiation for an {@link OpenSeadragon.Viewer}, including all\n\t  * combinations of out-of-the-box configurable features.\n\t  *\n\t  * @param {OpenSeadragon.Options} options - Viewer options.\n\t  * @returns {OpenSeadragon.Viewer}\n\t  */\n\twindow.OpenSeadragon = window.OpenSeadragon || function( options ){\n\t\n\t    return new OpenSeadragon.Viewer( options );\n\t\n\t};\n\t\n\tif (true) {\n\t   !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t       return (window.OpenSeadragon);\n\t   }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t}\n\t\n\t\n\t(function( $ ){\n\t\n\t\n\t    /**\n\t     * The OpenSeadragon version.\n\t     *\n\t     * @member {Object} OpenSeadragon.version\n\t     * @property {String} versionStr - The version number as a string ('major.minor.revision').\n\t     * @property {Number} major - The major version number.\n\t     * @property {Number} minor - The minor version number.\n\t     * @property {Number} revision - The revision number.\n\t     * @since 1.0.0\n\t     */\n\t    $.version = {\n\t        versionStr: '2.2.1',\n\t        major: parseInt('2', 10),\n\t        minor: parseInt('2', 10),\n\t        revision: parseInt('1', 10)\n\t    };\n\t\n\t\n\t    /**\n\t     * Taken from jquery 1.6.1\n\t     * [[Class]] -> type pairs\n\t     * @private\n\t     */\n\t    var class2type = {\n\t            '[object Boolean]':     'boolean',\n\t            '[object Number]':      'number',\n\t            '[object String]':      'string',\n\t            '[object Function]':    'function',\n\t            '[object Array]':       'array',\n\t            '[object Date]':        'date',\n\t            '[object RegExp]':      'regexp',\n\t            '[object Object]':      'object'\n\t        },\n\t        // Save a reference to some core methods\n\t        toString    = Object.prototype.toString,\n\t        hasOwn      = Object.prototype.hasOwnProperty;\n\t\n\t    /**\n\t     * Taken from jQuery 1.6.1\n\t     * @function isFunction\n\t     * @memberof OpenSeadragon\n\t     * @see {@link http://www.jquery.com/ jQuery}\n\t     */\n\t    $.isFunction = function( obj ) {\n\t        return $.type(obj) === \"function\";\n\t    };\n\t\n\t\n\t    /**\n\t     * Taken from jQuery 1.6.1\n\t     * @function isArray\n\t     * @memberof OpenSeadragon\n\t     * @see {@link http://www.jquery.com/ jQuery}\n\t     */\n\t    $.isArray = Array.isArray || function( obj ) {\n\t        return $.type(obj) === \"array\";\n\t    };\n\t\n\t\n\t    /**\n\t     * A crude way of determining if an object is a window.\n\t     * Taken from jQuery 1.6.1\n\t     * @function isWindow\n\t     * @memberof OpenSeadragon\n\t     * @see {@link http://www.jquery.com/ jQuery}\n\t     */\n\t    $.isWindow = function( obj ) {\n\t        return obj && typeof obj === \"object\" && \"setInterval\" in obj;\n\t    };\n\t\n\t\n\t    /**\n\t     * Taken from jQuery 1.6.1\n\t     * @function type\n\t     * @memberof OpenSeadragon\n\t     * @see {@link http://www.jquery.com/ jQuery}\n\t     */\n\t    $.type = function( obj ) {\n\t        return ( obj === null ) || ( obj === undefined ) ?\n\t            String( obj ) :\n\t            class2type[ toString.call(obj) ] || \"object\";\n\t    };\n\t\n\t\n\t    /**\n\t     * Taken from jQuery 1.6.1\n\t     * @function isPlainObject\n\t     * @memberof OpenSeadragon\n\t     * @see {@link http://www.jquery.com/ jQuery}\n\t     */\n\t    $.isPlainObject = function( obj ) {\n\t        // Must be an Object.\n\t        // Because of IE, we also have to check the presence of the constructor property.\n\t        // Make sure that DOM nodes and window objects don't pass through, as well\n\t        if ( !obj || OpenSeadragon.type(obj) !== \"object\" || obj.nodeType || $.isWindow( obj ) ) {\n\t            return false;\n\t        }\n\t\n\t        // Not own constructor property must be Object\n\t        if ( obj.constructor &&\n\t            !hasOwn.call(obj, \"constructor\") &&\n\t            !hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\") ) {\n\t            return false;\n\t        }\n\t\n\t        // Own properties are enumerated firstly, so to speed up,\n\t        // if last one is own, then all properties are own.\n\t\n\t        var lastKey;\n\t        for (var key in obj ) {\n\t            lastKey = key;\n\t        }\n\t\n\t        return lastKey === undefined || hasOwn.call( obj, lastKey );\n\t    };\n\t\n\t\n\t    /**\n\t     * Taken from jQuery 1.6.1\n\t     * @function isEmptyObject\n\t     * @memberof OpenSeadragon\n\t     * @see {@link http://www.jquery.com/ jQuery}\n\t     */\n\t    $.isEmptyObject = function( obj ) {\n\t        for ( var name in obj ) {\n\t            return false;\n\t        }\n\t        return true;\n\t    };\n\t\n\t    /**\n\t     * Shim around Object.freeze. Does nothing if Object.freeze is not supported.\n\t     * @param {Object} obj The object to freeze.\n\t     * @return {Object} obj The frozen object.\n\t     */\n\t    $.freezeObject = function(obj) {\n\t        if (Object.freeze) {\n\t            $.freezeObject = Object.freeze;\n\t        } else {\n\t            $.freezeObject = function(obj) {\n\t                return obj;\n\t            };\n\t        }\n\t        return $.freezeObject(obj);\n\t    };\n\t\n\t    /**\n\t     * True if the browser supports the HTML5 canvas element\n\t     * @member {Boolean} supportsCanvas\n\t     * @memberof OpenSeadragon\n\t     */\n\t    $.supportsCanvas = (function () {\n\t        var canvasElement = document.createElement( 'canvas' );\n\t        return !!( $.isFunction( canvasElement.getContext ) &&\n\t                    canvasElement.getContext( '2d' ) );\n\t    }());\n\t\n\t    /**\n\t     * Test whether the submitted canvas is tainted or not.\n\t     * @argument {Canvas} canvas The canvas to test.\n\t     * @returns {Boolean} True if the canvas is tainted.\n\t     */\n\t    $.isCanvasTainted = function(canvas) {\n\t        var isTainted = false;\n\t        try {\n\t            // We test if the canvas is tainted by retrieving data from it.\n\t            // An exception will be raised if the canvas is tainted.\n\t            var data = canvas.getContext('2d').getImageData(0, 0, 1, 1);\n\t        } catch (e) {\n\t            isTainted = true;\n\t        }\n\t        return isTainted;\n\t    };\n\t\n\t    /**\n\t     * A ratio comparing the device screen's pixel density to the canvas's backing store pixel density. Defaults to 1 if canvas isn't supported by the browser.\n\t     * @member {Number} pixelDensityRatio\n\t     * @memberof OpenSeadragon\n\t     */\n\t    $.pixelDensityRatio = (function () {\n\t        if ( $.supportsCanvas ) {\n\t            var context = document.createElement('canvas').getContext('2d');\n\t            var devicePixelRatio = window.devicePixelRatio || 1;\n\t            var backingStoreRatio = context.webkitBackingStorePixelRatio ||\n\t                                    context.mozBackingStorePixelRatio ||\n\t                                    context.msBackingStorePixelRatio ||\n\t                                    context.oBackingStorePixelRatio ||\n\t                                    context.backingStorePixelRatio || 1;\n\t            return devicePixelRatio / backingStoreRatio;\n\t        } else {\n\t            return 1;\n\t        }\n\t    }());\n\t\n\t}( OpenSeadragon ));\n\t\n\t/**\n\t *  This closure defines all static methods available to the OpenSeadragon\n\t *  namespace.  Many, if not most, are taked directly from jQuery for use\n\t *  to simplify and reduce common programming patterns.  More static methods\n\t *  from jQuery may eventually make their way into this though we are\n\t *  attempting to avoid an explicit dependency on jQuery only because\n\t *  OpenSeadragon is a broadly useful code base and would be made less broad\n\t *  by requiring jQuery fully.\n\t *\n\t *  Some static methods have also been refactored from the original OpenSeadragon\n\t *  project.\n\t */\n\t(function( $ ){\n\t\n\t    /**\n\t     * Taken from jQuery 1.6.1\n\t     * @function extend\n\t     * @memberof OpenSeadragon\n\t     * @see {@link http://www.jquery.com/ jQuery}\n\t     */\n\t    $.extend = function() {\n\t        var options,\n\t            name,\n\t            src,\n\t            copy,\n\t            copyIsArray,\n\t            clone,\n\t            target  = arguments[ 0 ] || {},\n\t            length  = arguments.length,\n\t            deep    = false,\n\t            i       = 1;\n\t\n\t        // Handle a deep copy situation\n\t        if ( typeof target === \"boolean\" ) {\n\t            deep    = target;\n\t            target  = arguments[ 1 ] || {};\n\t            // skip the boolean and the target\n\t            i = 2;\n\t        }\n\t\n\t        // Handle case when target is a string or something (possible in deep copy)\n\t        if ( typeof target !== \"object\" && !OpenSeadragon.isFunction( target ) ) {\n\t            target = {};\n\t        }\n\t\n\t        // extend jQuery itself if only one argument is passed\n\t        if ( length === i ) {\n\t            target = this;\n\t            --i;\n\t        }\n\t\n\t        for ( ; i < length; i++ ) {\n\t            // Only deal with non-null/undefined values\n\t            options = arguments[ i ];\n\t            if ( options !== null || options !== undefined ) {\n\t                // Extend the base object\n\t                for ( name in options ) {\n\t                    src = target[ name ];\n\t                    copy = options[ name ];\n\t\n\t                    // Prevent never-ending loop\n\t                    if ( target === copy ) {\n\t                        continue;\n\t                    }\n\t\n\t                    // Recurse if we're merging plain objects or arrays\n\t                    if ( deep && copy && ( OpenSeadragon.isPlainObject( copy ) || ( copyIsArray = OpenSeadragon.isArray( copy ) ) ) ) {\n\t                        if ( copyIsArray ) {\n\t                            copyIsArray = false;\n\t                            clone = src && OpenSeadragon.isArray( src ) ? src : [];\n\t\n\t                        } else {\n\t                            clone = src && OpenSeadragon.isPlainObject( src ) ? src : {};\n\t                        }\n\t\n\t                        // Never move original objects, clone them\n\t                        target[ name ] = OpenSeadragon.extend( deep, clone, copy );\n\t\n\t                    // Don't bring in undefined values\n\t                    } else if ( copy !== undefined ) {\n\t                        target[ name ] = copy;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t\n\t        // Return the modified object\n\t        return target;\n\t    };\n\t\n\t    var isIOSDevice = function () {\n\t        if (typeof navigator !== 'object') {\n\t            return false;\n\t        }\n\t        var userAgent = navigator.userAgent;\n\t        if (typeof userAgent !== 'string') {\n\t            return false;\n\t        }\n\t        return userAgent.indexOf('iPhone') !== -1 ||\n\t               userAgent.indexOf('iPad') !== -1 ||\n\t               userAgent.indexOf('iPod') !== -1;\n\t    };\n\t\n\t    $.extend( $, /** @lends OpenSeadragon */{\n\t        /**\n\t         * The default values for the optional settings documented at {@link OpenSeadragon.Options}.\n\t         * @static\n\t         * @type {Object}\n\t         */\n\t        DEFAULT_SETTINGS: {\n\t            //DATA SOURCE DETAILS\n\t            xmlPath:                null,\n\t            tileSources:            null,\n\t            tileHost:               null,\n\t            initialPage:            0,\n\t            crossOriginPolicy:      false,\n\t            ajaxWithCredentials:    false,\n\t\n\t            //PAN AND ZOOM SETTINGS AND CONSTRAINTS\n\t            panHorizontal:          true,\n\t            panVertical:            true,\n\t            constrainDuringPan:     false,\n\t            wrapHorizontal:         false,\n\t            wrapVertical:           false,\n\t            visibilityRatio:        0.5, //-> how much of the viewer can be negative space\n\t            minPixelRatio:          0.5, //->closer to 0 draws tiles meant for a higher zoom at this zoom\n\t            defaultZoomLevel:       0,\n\t            minZoomLevel:           null,\n\t            maxZoomLevel:           null,\n\t            homeFillsViewer:        false,\n\t\n\t            //UI RESPONSIVENESS AND FEEL\n\t            clickTimeThreshold:     300,\n\t            clickDistThreshold:     5,\n\t            dblClickTimeThreshold:  300,\n\t            dblClickDistThreshold:  20,\n\t            springStiffness:        6.5,\n\t            animationTime:          1.2,\n\t            gestureSettingsMouse:   { scrollToZoom: true,  clickToZoom: true,  dblClickToZoom: false, pinchToZoom: false, flickEnabled: false, flickMinSpeed: 120, flickMomentum: 0.25, pinchRotate: false },\n\t            gestureSettingsTouch:   { scrollToZoom: false, clickToZoom: false, dblClickToZoom: true,  pinchToZoom: true,  flickEnabled: true,  flickMinSpeed: 120, flickMomentum: 0.25, pinchRotate: false },\n\t            gestureSettingsPen:     { scrollToZoom: false, clickToZoom: true,  dblClickToZoom: false, pinchToZoom: false, flickEnabled: false, flickMinSpeed: 120, flickMomentum: 0.25, pinchRotate: false },\n\t            gestureSettingsUnknown: { scrollToZoom: false, clickToZoom: false, dblClickToZoom: true,  pinchToZoom: true,  flickEnabled: true,  flickMinSpeed: 120, flickMomentum: 0.25, pinchRotate: false },\n\t            zoomPerClick:           2,\n\t            zoomPerScroll:          1.2,\n\t            zoomPerSecond:          1.0,\n\t            blendTime:              0,\n\t            alwaysBlend:            false,\n\t            autoHideControls:       true,\n\t            immediateRender:        false,\n\t            minZoomImageRatio:      0.9, //-> closer to 0 allows zoom out to infinity\n\t            maxZoomPixelRatio:      1.1, //-> higher allows 'over zoom' into pixels\n\t            smoothTileEdgesMinZoom: 1.1, //-> higher than maxZoomPixelRatio disables it\n\t            iOSDevice:              isIOSDevice(),\n\t            pixelsPerWheelLine:     40,\n\t            autoResize:             true,\n\t            preserveImageSizeOnResize: false, // requires autoResize=true\n\t            minScrollDeltaTime:     50,\n\t\n\t            //DEFAULT CONTROL SETTINGS\n\t            showSequenceControl:     true,  //SEQUENCE\n\t            sequenceControlAnchor:   null,  //SEQUENCE\n\t            preserveViewport:        false, //SEQUENCE\n\t            preserveOverlays:        false, //SEQUENCE\n\t            navPrevNextWrap:         false, //SEQUENCE\n\t            showNavigationControl:   true,  //ZOOM/HOME/FULL/ROTATION\n\t            navigationControlAnchor: null,  //ZOOM/HOME/FULL/ROTATION\n\t            showZoomControl:         true,  //ZOOM\n\t            showHomeControl:         true,  //HOME\n\t            showFullPageControl:     true,  //FULL\n\t            showRotationControl:     false, //ROTATION\n\t            controlsFadeDelay:       2000,  //ZOOM/HOME/FULL/SEQUENCE\n\t            controlsFadeLength:      1500,  //ZOOM/HOME/FULL/SEQUENCE\n\t            mouseNavEnabled:         true,  //GENERAL MOUSE INTERACTIVITY\n\t\n\t            //VIEWPORT NAVIGATOR SETTINGS\n\t            showNavigator:              false,\n\t            navigatorId:                null,\n\t            navigatorPosition:          null,\n\t            navigatorSizeRatio:         0.2,\n\t            navigatorMaintainSizeRatio: false,\n\t            navigatorTop:               null,\n\t            navigatorLeft:              null,\n\t            navigatorHeight:            null,\n\t            navigatorWidth:             null,\n\t            navigatorAutoResize:        true,\n\t            navigatorAutoFade:          true,\n\t            navigatorRotate:            true,\n\t\n\t            // INITIAL ROTATION\n\t            degrees:                    0,\n\t\n\t            // APPEARANCE\n\t            opacity:                    1,\n\t            compositeOperation:         null,\n\t            placeholderFillStyle:       null,\n\t\n\t            //REFERENCE STRIP SETTINGS\n\t            showReferenceStrip:          false,\n\t            referenceStripScroll:       'horizontal',\n\t            referenceStripElement:       null,\n\t            referenceStripHeight:        null,\n\t            referenceStripWidth:         null,\n\t            referenceStripPosition:      'BOTTOM_LEFT',\n\t            referenceStripSizeRatio:     0.2,\n\t\n\t            //COLLECTION VISUALIZATION SETTINGS\n\t            collectionRows:         3, //or columns depending on layout\n\t            collectionColumns:      0, //columns in horizontal layout, rows in vertical layout\n\t            collectionLayout:       'horizontal', //vertical\n\t            collectionMode:         false,\n\t            collectionTileSize:     800,\n\t            collectionTileMargin:   80,\n\t\n\t            //PERFORMANCE SETTINGS\n\t            imageLoaderLimit:       0,\n\t            maxImageCacheCount:     200,\n\t            timeout:                30000,\n\t            useCanvas:              true,  // Use canvas element for drawing if available\n\t\n\t            //INTERFACE RESOURCE SETTINGS\n\t            prefixUrl:              \"/images/\",\n\t            navImages: {\n\t                zoomIn: {\n\t                    REST:   'zoomin_rest.png',\n\t                    GROUP:  'zoomin_grouphover.png',\n\t                    HOVER:  'zoomin_hover.png',\n\t                    DOWN:   'zoomin_pressed.png'\n\t                },\n\t                zoomOut: {\n\t                    REST:   'zoomout_rest.png',\n\t                    GROUP:  'zoomout_grouphover.png',\n\t                    HOVER:  'zoomout_hover.png',\n\t                    DOWN:   'zoomout_pressed.png'\n\t                },\n\t                home: {\n\t                    REST:   'home_rest.png',\n\t                    GROUP:  'home_grouphover.png',\n\t                    HOVER:  'home_hover.png',\n\t                    DOWN:   'home_pressed.png'\n\t                },\n\t                fullpage: {\n\t                    REST:   'fullpage_rest.png',\n\t                    GROUP:  'fullpage_grouphover.png',\n\t                    HOVER:  'fullpage_hover.png',\n\t                    DOWN:   'fullpage_pressed.png'\n\t                },\n\t                rotateleft: {\n\t                    REST:   'rotateleft_rest.png',\n\t                    GROUP:  'rotateleft_grouphover.png',\n\t                    HOVER:  'rotateleft_hover.png',\n\t                    DOWN:   'rotateleft_pressed.png'\n\t                },\n\t                rotateright: {\n\t                    REST:   'rotateright_rest.png',\n\t                    GROUP:  'rotateright_grouphover.png',\n\t                    HOVER:  'rotateright_hover.png',\n\t                    DOWN:   'rotateright_pressed.png'\n\t                },\n\t                previous: {\n\t                    REST:   'previous_rest.png',\n\t                    GROUP:  'previous_grouphover.png',\n\t                    HOVER:  'previous_hover.png',\n\t                    DOWN:   'previous_pressed.png'\n\t                },\n\t                next: {\n\t                    REST:   'next_rest.png',\n\t                    GROUP:  'next_grouphover.png',\n\t                    HOVER:  'next_hover.png',\n\t                    DOWN:   'next_pressed.png'\n\t                }\n\t            },\n\t\n\t            //DEVELOPER SETTINGS\n\t            debugMode:              false,\n\t            debugGridColor:         '#437AB2'\n\t        },\n\t\n\t\n\t        /**\n\t         * TODO: get rid of this.  I can't see how it's required at all.  Looks\n\t         *       like an early legacy code artifact.\n\t         * @static\n\t         * @ignore\n\t         */\n\t        SIGNAL: \"----seadragon----\",\n\t\n\t\n\t        /**\n\t         * Returns a function which invokes the method as if it were a method belonging to the object.\n\t         * @function\n\t         * @param {Object} object\n\t         * @param {Function} method\n\t         * @returns {Function}\n\t         */\n\t        delegate: function( object, method ) {\n\t            return function(){\n\t                var args = arguments;\n\t                if ( args === undefined ){\n\t                    args = [];\n\t                }\n\t                return method.apply( object, args );\n\t            };\n\t        },\n\t\n\t\n\t        /**\n\t         * An enumeration of Browser vendors.\n\t         * @static\n\t         * @type {Object}\n\t         * @property {Number} UNKNOWN\n\t         * @property {Number} IE\n\t         * @property {Number} FIREFOX\n\t         * @property {Number} SAFARI\n\t         * @property {Number} CHROME\n\t         * @property {Number} OPERA\n\t         */\n\t        BROWSERS: {\n\t            UNKNOWN:    0,\n\t            IE:         1,\n\t            FIREFOX:    2,\n\t            SAFARI:     3,\n\t            CHROME:     4,\n\t            OPERA:      5\n\t        },\n\t\n\t\n\t        /**\n\t         * Returns a DOM Element for the given id or element.\n\t         * @function\n\t         * @param {String|Element} element Accepts an id or element.\n\t         * @returns {Element} The element with the given id, null, or the element itself.\n\t         */\n\t        getElement: function( element ) {\n\t            if ( typeof ( element ) == \"string\" ) {\n\t                element = document.getElementById( element );\n\t            }\n\t            return element;\n\t        },\n\t\n\t\n\t        /**\n\t         * Determines the position of the upper-left corner of the element.\n\t         * @function\n\t         * @param {Element|String} element - the elemenet we want the position for.\n\t         * @returns {OpenSeadragon.Point} - the position of the upper left corner of the element.\n\t         */\n\t        getElementPosition: function( element ) {\n\t            var result = new $.Point(),\n\t                isFixed,\n\t                offsetParent;\n\t\n\t            element      = $.getElement( element );\n\t            isFixed      = $.getElementStyle( element ).position == \"fixed\";\n\t            offsetParent = getOffsetParent( element, isFixed );\n\t\n\t            while ( offsetParent ) {\n\t\n\t                result.x += element.offsetLeft;\n\t                result.y += element.offsetTop;\n\t\n\t                if ( isFixed ) {\n\t                    result = result.plus( $.getPageScroll() );\n\t                }\n\t\n\t                element = offsetParent;\n\t                isFixed = $.getElementStyle( element ).position == \"fixed\";\n\t                offsetParent = getOffsetParent( element, isFixed );\n\t            }\n\t\n\t            return result;\n\t        },\n\t\n\t\n\t        /**\n\t         * Determines the position of the upper-left corner of the element adjusted for current page and/or element scroll.\n\t         * @function\n\t         * @param {Element|String} element - the element we want the position for.\n\t         * @returns {OpenSeadragon.Point} - the position of the upper left corner of the element adjusted for current page and/or element scroll.\n\t         */\n\t        getElementOffset: function( element ) {\n\t            element = $.getElement( element );\n\t\n\t            var doc = element && element.ownerDocument,\n\t                docElement,\n\t                win,\n\t                boundingRect = { top: 0, left: 0 };\n\t\n\t            if ( !doc ) {\n\t                return new $.Point();\n\t            }\n\t\n\t            docElement = doc.documentElement;\n\t\n\t            if ( typeof element.getBoundingClientRect !== typeof undefined ) {\n\t                boundingRect = element.getBoundingClientRect();\n\t            }\n\t\n\t            win = ( doc == doc.window ) ?\n\t                doc :\n\t                ( doc.nodeType === 9 ) ?\n\t                    doc.defaultView || doc.parentWindow :\n\t                    false;\n\t\n\t            return new $.Point(\n\t                boundingRect.left + ( win.pageXOffset || docElement.scrollLeft ) - ( docElement.clientLeft || 0 ),\n\t                boundingRect.top + ( win.pageYOffset || docElement.scrollTop ) - ( docElement.clientTop || 0 )\n\t            );\n\t        },\n\t\n\t\n\t        /**\n\t         * Determines the height and width of the given element.\n\t         * @function\n\t         * @param {Element|String} element\n\t         * @returns {OpenSeadragon.Point}\n\t         */\n\t        getElementSize: function( element ) {\n\t            element = $.getElement( element );\n\t\n\t            return new $.Point(\n\t                element.clientWidth,\n\t                element.clientHeight\n\t            );\n\t        },\n\t\n\t\n\t        /**\n\t         * Returns the CSSStyle object for the given element.\n\t         * @function\n\t         * @param {Element|String} element\n\t         * @returns {CSSStyle}\n\t         */\n\t        getElementStyle:\n\t            document.documentElement.currentStyle ?\n\t            function( element ) {\n\t                element = $.getElement( element );\n\t                return element.currentStyle;\n\t            } :\n\t            function( element ) {\n\t                element = $.getElement( element );\n\t                return window.getComputedStyle( element, \"\" );\n\t            },\n\t\n\t        /**\n\t         * Returns the property with the correct vendor prefix appended.\n\t         * @param {String} property the property name\n\t         * @returns {String} the property with the correct prefix or null if not\n\t         * supported.\n\t         */\n\t        getCssPropertyWithVendorPrefix: function(property) {\n\t            var memo = {};\n\t\n\t            $.getCssPropertyWithVendorPrefix = function(property) {\n\t                if (memo[property] !== undefined) {\n\t                    return memo[property];\n\t                }\n\t                var style = document.createElement('div').style;\n\t                var result = null;\n\t                if (style[property] !== undefined) {\n\t                    result = property;\n\t                } else {\n\t                    var prefixes = ['Webkit', 'Moz', 'MS', 'O',\n\t                        'webkit', 'moz', 'ms', 'o'];\n\t                    var suffix = $.capitalizeFirstLetter(property);\n\t                    for (var i = 0; i < prefixes.length; i++) {\n\t                        var prop = prefixes[i] + suffix;\n\t                        if (style[prop] !== undefined) {\n\t                            result = prop;\n\t                            break;\n\t                        }\n\t                    }\n\t                }\n\t                memo[property] = result;\n\t                return result;\n\t            };\n\t            return $.getCssPropertyWithVendorPrefix(property);\n\t        },\n\t\n\t        /**\n\t         * Capitalizes the first letter of a string\n\t         * @param {String} string\n\t         * @returns {String} The string with the first letter capitalized\n\t         */\n\t        capitalizeFirstLetter: function(string) {\n\t            return string.charAt(0).toUpperCase() + string.slice(1);\n\t        },\n\t\n\t        /**\n\t         * Determines if a point is within the bounding rectangle of the given element (hit-test).\n\t         * @function\n\t         * @param {Element|String} element\n\t         * @param {OpenSeadragon.Point} point\n\t         * @returns {Boolean}\n\t         */\n\t        pointInElement: function( element, point ) {\n\t            element = $.getElement( element );\n\t            var offset = $.getElementOffset( element ),\n\t                size = $.getElementSize( element );\n\t            return point.x >= offset.x && point.x < offset.x + size.x && point.y < offset.y + size.y && point.y >= offset.y;\n\t        },\n\t\n\t\n\t        /**\n\t         * Gets the latest event, really only useful internally since its\n\t         * specific to IE behavior.\n\t         * @function\n\t         * @param {Event} [event]\n\t         * @returns {Event}\n\t         * @deprecated For internal use only\n\t         * @private\n\t         */\n\t        getEvent: function( event ) {\n\t            if( event ){\n\t                $.getEvent = function( event ) {\n\t                    return event;\n\t                };\n\t            } else {\n\t                $.getEvent = function() {\n\t                    return window.event;\n\t                };\n\t            }\n\t            return $.getEvent( event );\n\t        },\n\t\n\t\n\t        /**\n\t         * Gets the position of the mouse on the screen for a given event.\n\t         * @function\n\t         * @param {Event} [event]\n\t         * @returns {OpenSeadragon.Point}\n\t         */\n\t        getMousePosition: function( event ) {\n\t\n\t            if ( typeof( event.pageX ) == \"number\" ) {\n\t                $.getMousePosition = function( event ){\n\t                    var result = new $.Point();\n\t\n\t                    event = $.getEvent( event );\n\t                    result.x = event.pageX;\n\t                    result.y = event.pageY;\n\t\n\t                    return result;\n\t                };\n\t            } else if ( typeof( event.clientX ) == \"number\" ) {\n\t                $.getMousePosition = function( event ){\n\t                    var result = new $.Point();\n\t\n\t                    event = $.getEvent( event );\n\t                    result.x =\n\t                        event.clientX +\n\t                        document.body.scrollLeft +\n\t                        document.documentElement.scrollLeft;\n\t                    result.y =\n\t                        event.clientY +\n\t                        document.body.scrollTop +\n\t                        document.documentElement.scrollTop;\n\t\n\t                    return result;\n\t                };\n\t            } else {\n\t                throw new Error(\n\t                    \"Unknown event mouse position, no known technique.\"\n\t                );\n\t            }\n\t\n\t            return $.getMousePosition( event );\n\t        },\n\t\n\t\n\t        /**\n\t         * Determines the page's current scroll position.\n\t         * @function\n\t         * @returns {OpenSeadragon.Point}\n\t         */\n\t        getPageScroll: function() {\n\t            var docElement  = document.documentElement || {},\n\t                body        = document.body || {};\n\t\n\t            if ( typeof( window.pageXOffset ) == \"number\" ) {\n\t                $.getPageScroll = function(){\n\t                    return new $.Point(\n\t                        window.pageXOffset,\n\t                        window.pageYOffset\n\t                    );\n\t                };\n\t            } else if ( body.scrollLeft || body.scrollTop ) {\n\t                $.getPageScroll = function(){\n\t                    return new $.Point(\n\t                        document.body.scrollLeft,\n\t                        document.body.scrollTop\n\t                    );\n\t                };\n\t            } else if ( docElement.scrollLeft || docElement.scrollTop ) {\n\t                $.getPageScroll = function(){\n\t                    return new $.Point(\n\t                        document.documentElement.scrollLeft,\n\t                        document.documentElement.scrollTop\n\t                    );\n\t                };\n\t            } else {\n\t                // We can't reassign the function yet, as there was no scroll.\n\t                return new $.Point(0,0);\n\t            }\n\t\n\t            return $.getPageScroll();\n\t        },\n\t\n\t        /**\n\t         * Set the page scroll position.\n\t         * @function\n\t         * @returns {OpenSeadragon.Point}\n\t         */\n\t        setPageScroll: function( scroll ) {\n\t            if ( typeof ( window.scrollTo ) !== \"undefined\" ) {\n\t                $.setPageScroll = function( scroll ) {\n\t                    window.scrollTo( scroll.x, scroll.y );\n\t                };\n\t            } else {\n\t                var originalScroll = $.getPageScroll();\n\t                if ( originalScroll.x === scroll.x &&\n\t                    originalScroll.y === scroll.y ) {\n\t                    // We are already correctly positioned and there\n\t                    // is no way to detect the correct method.\n\t                    return;\n\t                }\n\t\n\t                document.body.scrollLeft = scroll.x;\n\t                document.body.scrollTop = scroll.y;\n\t                var currentScroll = $.getPageScroll();\n\t                if ( currentScroll.x !== originalScroll.x &&\n\t                    currentScroll.y !== originalScroll.y ) {\n\t                    $.setPageScroll = function( scroll ) {\n\t                        document.body.scrollLeft = scroll.x;\n\t                        document.body.scrollTop = scroll.y;\n\t                    };\n\t                    return;\n\t                }\n\t\n\t                document.documentElement.scrollLeft = scroll.x;\n\t                document.documentElement.scrollTop = scroll.y;\n\t                currentScroll = $.getPageScroll();\n\t                if ( currentScroll.x !== originalScroll.x &&\n\t                    currentScroll.y !== originalScroll.y ) {\n\t                    $.setPageScroll = function( scroll ) {\n\t                        document.documentElement.scrollLeft = scroll.x;\n\t                        document.documentElement.scrollTop = scroll.y;\n\t                    };\n\t                    return;\n\t                }\n\t\n\t                // We can't find anything working, so we do nothing.\n\t                $.setPageScroll = function( scroll ) {\n\t                };\n\t            }\n\t\n\t            return $.setPageScroll( scroll );\n\t        },\n\t\n\t        /**\n\t         * Determines the size of the browsers window.\n\t         * @function\n\t         * @returns {OpenSeadragon.Point}\n\t         */\n\t        getWindowSize: function() {\n\t            var docElement = document.documentElement || {},\n\t                body    = document.body || {};\n\t\n\t            if ( typeof( window.innerWidth ) == 'number' ) {\n\t                $.getWindowSize = function(){\n\t                    return new $.Point(\n\t                        window.innerWidth,\n\t                        window.innerHeight\n\t                    );\n\t                };\n\t            } else if ( docElement.clientWidth || docElement.clientHeight ) {\n\t                $.getWindowSize = function(){\n\t                    return new $.Point(\n\t                        document.documentElement.clientWidth,\n\t                        document.documentElement.clientHeight\n\t                    );\n\t                };\n\t            } else if ( body.clientWidth || body.clientHeight ) {\n\t                $.getWindowSize = function(){\n\t                    return new $.Point(\n\t                        document.body.clientWidth,\n\t                        document.body.clientHeight\n\t                    );\n\t                };\n\t            } else {\n\t                throw new Error(\"Unknown window size, no known technique.\");\n\t            }\n\t\n\t            return $.getWindowSize();\n\t        },\n\t\n\t\n\t        /**\n\t         * Wraps the given element in a nest of divs so that the element can\n\t         * be easily centered using CSS tables\n\t         * @function\n\t         * @param {Element|String} element\n\t         * @returns {Element} outermost wrapper element\n\t         */\n\t        makeCenteredNode: function( element ) {\n\t            // Convert a possible ID to an actual HTMLElement\n\t            element = $.getElement( element );\n\t\n\t            /*\n\t                CSS tables require you to have a display:table/row/cell hierarchy so we need to create\n\t                three nested wrapper divs:\n\t             */\n\t\n\t            var wrappers = [\n\t                $.makeNeutralElement( 'div' ),\n\t                $.makeNeutralElement( 'div' ),\n\t                $.makeNeutralElement( 'div' )\n\t            ];\n\t\n\t            // It feels like we should be able to pass style dicts to makeNeutralElement:\n\t            $.extend(wrappers[0].style, {\n\t                display: \"table\",\n\t                height: \"100%\",\n\t                width: \"100%\"\n\t            });\n\t\n\t            $.extend(wrappers[1].style, {\n\t                display: \"table-row\"\n\t            });\n\t\n\t            $.extend(wrappers[2].style, {\n\t                display: \"table-cell\",\n\t                verticalAlign: \"middle\",\n\t                textAlign: \"center\"\n\t            });\n\t\n\t            wrappers[0].appendChild(wrappers[1]);\n\t            wrappers[1].appendChild(wrappers[2]);\n\t            wrappers[2].appendChild(element);\n\t\n\t            return wrappers[0];\n\t        },\n\t\n\t\n\t        /**\n\t         * Creates an easily positionable element of the given type that therefor\n\t         * serves as an excellent container element.\n\t         * @function\n\t         * @param {String} tagName\n\t         * @returns {Element}\n\t         */\n\t        makeNeutralElement: function( tagName ) {\n\t            var element = document.createElement( tagName ),\n\t                style   = element.style;\n\t\n\t            style.background = \"transparent none\";\n\t            style.border     = \"none\";\n\t            style.margin     = \"0px\";\n\t            style.padding    = \"0px\";\n\t            style.position   = \"static\";\n\t\n\t            return element;\n\t        },\n\t\n\t\n\t        /**\n\t         * Returns the current milliseconds, using Date.now() if available\n\t         * @function\n\t         */\n\t        now: function( ) {\n\t          if (Date.now) {\n\t            $.now = Date.now;\n\t          } else {\n\t            $.now = function() { return new Date().getTime(); };\n\t          }\n\t\n\t          return $.now();\n\t        },\n\t\n\t\n\t        /**\n\t         * Ensures an image is loaded correctly to support alpha transparency.\n\t         * Generally only IE has issues doing this correctly for formats like\n\t         * png.\n\t         * @function\n\t         * @param {String} src\n\t         * @returns {Element}\n\t         */\n\t        makeTransparentImage: function( src ) {\n\t\n\t            $.makeTransparentImage = function( src ){\n\t                var img = $.makeNeutralElement( \"img\" );\n\t\n\t                img.src = src;\n\t\n\t                return img;\n\t            };\n\t\n\t            if ( $.Browser.vendor == $.BROWSERS.IE && $.Browser.version < 7 ) {\n\t\n\t                $.makeTransparentImage = function( src ){\n\t                    var img     = $.makeNeutralElement( \"img\" ),\n\t                        element = null;\n\t\n\t                    element = $.makeNeutralElement(\"span\");\n\t                    element.style.display = \"inline-block\";\n\t\n\t                    img.onload = function() {\n\t                        element.style.width  = element.style.width || img.width + \"px\";\n\t                        element.style.height = element.style.height || img.height + \"px\";\n\t\n\t                        img.onload = null;\n\t                        img = null;     // to prevent memory leaks in IE\n\t                    };\n\t\n\t                    img.src = src;\n\t                    element.style.filter =\n\t                        \"progid:DXImageTransform.Microsoft.AlphaImageLoader(src='\" +\n\t                        src +\n\t                        \"', sizingMethod='scale')\";\n\t\n\t                    return element;\n\t                };\n\t\n\t            }\n\t\n\t            return $.makeTransparentImage( src );\n\t        },\n\t\n\t\n\t        /**\n\t         * Sets the opacity of the specified element.\n\t         * @function\n\t         * @param {Element|String} element\n\t         * @param {Number} opacity\n\t         * @param {Boolean} [usesAlpha]\n\t         */\n\t        setElementOpacity: function( element, opacity, usesAlpha ) {\n\t\n\t            var ieOpacity,\n\t                ieFilter;\n\t\n\t            element = $.getElement( element );\n\t\n\t            if ( usesAlpha && !$.Browser.alpha ) {\n\t                opacity = Math.round( opacity );\n\t            }\n\t\n\t            if ( $.Browser.opacity ) {\n\t                element.style.opacity = opacity < 1 ? opacity : \"\";\n\t            } else {\n\t                if ( opacity < 1 ) {\n\t                    ieOpacity = Math.round( 100 * opacity );\n\t                    ieFilter  = \"alpha(opacity=\" + ieOpacity + \")\";\n\t                    element.style.filter = ieFilter;\n\t                } else {\n\t                    element.style.filter = \"\";\n\t                }\n\t            }\n\t        },\n\t\n\t\n\t        /**\n\t         * Sets the specified element's touch-action style attribute to 'none'.\n\t         * @function\n\t         * @param {Element|String} element\n\t         */\n\t        setElementTouchActionNone: function( element ) {\n\t            element = $.getElement( element );\n\t            if ( typeof element.style.touchAction !== 'undefined' ) {\n\t                element.style.touchAction = 'none';\n\t            } else if ( typeof element.style.msTouchAction !== 'undefined' ) {\n\t                element.style.msTouchAction = 'none';\n\t            }\n\t        },\n\t\n\t\n\t        /**\n\t         * Add the specified CSS class to the element if not present.\n\t         * @function\n\t         * @param {Element|String} element\n\t         * @param {String} className\n\t         */\n\t        addClass: function( element, className ) {\n\t            element = $.getElement( element );\n\t\n\t            if ( ! element.className ) {\n\t                element.className = className;\n\t            } else if ( ( ' ' + element.className + ' ' ).\n\t                indexOf( ' ' + className + ' ' ) === -1 ) {\n\t                element.className += ' ' + className;\n\t            }\n\t        },\n\t\n\t        /**\n\t         * Find the first index at which an element is found in an array or -1\n\t         * if not present.\n\t         *\n\t         * Code taken and adapted from\n\t         * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf#Compatibility\n\t         *\n\t         * @function\n\t         * @param {Array} array The array from which to find the element\n\t         * @param {Object} searchElement The element to find\n\t         * @param {Number} [fromIndex=0] Index to start research.\n\t         * @returns {Number} The index of the element in the array.\n\t         */\n\t        indexOf: function( array, searchElement, fromIndex ) {\n\t            if ( Array.prototype.indexOf ) {\n\t                this.indexOf = function( array, searchElement, fromIndex ) {\n\t                    return array.indexOf( searchElement, fromIndex );\n\t                };\n\t            } else {\n\t                this.indexOf = function( array, searchElement, fromIndex ) {\n\t                    var i,\n\t                        pivot = ( fromIndex ) ? fromIndex : 0,\n\t                        length;\n\t                    if ( !array ) {\n\t                        throw new TypeError( );\n\t                    }\n\t\n\t                    length = array.length;\n\t                    if ( length === 0 || pivot >= length ) {\n\t                        return -1;\n\t                    }\n\t\n\t                    if ( pivot < 0 ) {\n\t                        pivot = length - Math.abs( pivot );\n\t                    }\n\t\n\t                    for ( i = pivot; i < length; i++ ) {\n\t                        if ( array[i] === searchElement ) {\n\t                            return i;\n\t                        }\n\t                    }\n\t                    return -1;\n\t                };\n\t            }\n\t            return this.indexOf( array, searchElement, fromIndex );\n\t        },\n\t\n\t        /**\n\t         * Remove the specified CSS class from the element.\n\t         * @function\n\t         * @param {Element|String} element\n\t         * @param {String} className\n\t         */\n\t        removeClass: function( element, className ) {\n\t            var oldClasses,\n\t                newClasses = [],\n\t                i;\n\t\n\t            element = $.getElement( element );\n\t            oldClasses = element.className.split( /\\s+/ );\n\t            for ( i = 0; i < oldClasses.length; i++ ) {\n\t                if ( oldClasses[ i ] && oldClasses[ i ] !== className ) {\n\t                    newClasses.push( oldClasses[ i ] );\n\t                }\n\t            }\n\t            element.className = newClasses.join(' ');\n\t        },\n\t\n\t\n\t        /**\n\t         * Adds an event listener for the given element, eventName and handler.\n\t         * @function\n\t         * @param {Element|String} element\n\t         * @param {String} eventName\n\t         * @param {Function} handler\n\t         * @param {Boolean} [useCapture]\n\t         */\n\t        addEvent: (function () {\n\t            if ( window.addEventListener ) {\n\t                return function ( element, eventName, handler, useCapture ) {\n\t                    element = $.getElement( element );\n\t                    element.addEventListener( eventName, handler, useCapture );\n\t                };\n\t            } else if ( window.attachEvent ) {\n\t                return function ( element, eventName, handler, useCapture ) {\n\t                    element = $.getElement( element );\n\t                    element.attachEvent( 'on' + eventName, handler );\n\t                };\n\t            } else {\n\t                throw new Error( \"No known event model.\" );\n\t            }\n\t        }()),\n\t\n\t\n\t        /**\n\t         * Remove a given event listener for the given element, event type and\n\t         * handler.\n\t         * @function\n\t         * @param {Element|String} element\n\t         * @param {String} eventName\n\t         * @param {Function} handler\n\t         * @param {Boolean} [useCapture]\n\t         */\n\t        removeEvent: (function () {\n\t            if ( window.removeEventListener ) {\n\t                return function ( element, eventName, handler, useCapture ) {\n\t                    element = $.getElement( element );\n\t                    element.removeEventListener( eventName, handler, useCapture );\n\t                };\n\t            } else if ( window.detachEvent ) {\n\t                return function( element, eventName, handler, useCapture ) {\n\t                    element = $.getElement( element );\n\t                    element.detachEvent( 'on' + eventName, handler );\n\t                };\n\t            } else {\n\t                throw new Error( \"No known event model.\" );\n\t            }\n\t        }()),\n\t\n\t\n\t        /**\n\t         * Cancels the default browser behavior had the event propagated all\n\t         * the way up the DOM to the window object.\n\t         * @function\n\t         * @param {Event} [event]\n\t         */\n\t        cancelEvent: function( event ) {\n\t            event = $.getEvent( event );\n\t\n\t            if ( event.preventDefault ) {\n\t                $.cancelEvent = function( event ){\n\t                    // W3C for preventing default\n\t                    event.preventDefault();\n\t                };\n\t            } else {\n\t                $.cancelEvent = function( event ){\n\t                    event = $.getEvent( event );\n\t                    // legacy for preventing default\n\t                    event.cancel = true;\n\t                    // IE for preventing default\n\t                    event.returnValue = false;\n\t                };\n\t            }\n\t            $.cancelEvent( event );\n\t        },\n\t\n\t\n\t        /**\n\t         * Stops the propagation of the event up the DOM.\n\t         * @function\n\t         * @param {Event} [event]\n\t         */\n\t        stopEvent: function( event ) {\n\t            event = $.getEvent( event );\n\t\n\t            if ( event.stopPropagation ) {\n\t                // W3C for stopping propagation\n\t                $.stopEvent = function( event ){\n\t                    event.stopPropagation();\n\t                };\n\t            } else {\n\t                // IE for stopping propagation\n\t                $.stopEvent = function( event ){\n\t                    event = $.getEvent( event );\n\t                    event.cancelBubble = true;\n\t                };\n\t\n\t            }\n\t\n\t            $.stopEvent( event );\n\t        },\n\t\n\t\n\t        /**\n\t         * Similar to OpenSeadragon.delegate, but it does not immediately call\n\t         * the method on the object, returning a function which can be called\n\t         * repeatedly to delegate the method. It also allows additonal arguments\n\t         * to be passed during construction which will be added during each\n\t         * invocation, and each invocation can add additional arguments as well.\n\t         *\n\t         * @function\n\t         * @param {Object} object\n\t         * @param {Function} method\n\t         * @param [args] any additional arguments are passed as arguments to the\n\t         *  created callback\n\t         * @returns {Function}\n\t         */\n\t        createCallback: function( object, method ) {\n\t            //TODO: This pattern is painful to use and debug.  It's much cleaner\n\t            //      to use pinning plus anonymous functions.  Get rid of this\n\t            //      pattern!\n\t            var initialArgs = [],\n\t                i;\n\t            for ( i = 2; i < arguments.length; i++ ) {\n\t                initialArgs.push( arguments[ i ] );\n\t            }\n\t\n\t            return function() {\n\t                var args = initialArgs.concat( [] ),\n\t                    i;\n\t                for ( i = 0; i < arguments.length; i++ ) {\n\t                    args.push( arguments[ i ] );\n\t                }\n\t\n\t                return method.apply( object, args );\n\t            };\n\t        },\n\t\n\t\n\t        /**\n\t         * Retreives the value of a url parameter from the window.location string.\n\t         * @function\n\t         * @param {String} key\n\t         * @returns {String} The value of the url parameter or null if no param matches.\n\t         */\n\t        getUrlParameter: function( key ) {\n\t            var value = URLPARAMS[ key ];\n\t            return value ? value : null;\n\t        },\n\t\n\t        /**\n\t         * Retrieves the protocol used by the url. The url can either be absolute\n\t         * or relative.\n\t         * @function\n\t         * @private\n\t         * @param {String} url The url to retrieve the protocol from.\n\t         * @return {String} The protocol (http:, https:, file:, ftp: ...)\n\t         */\n\t        getUrlProtocol: function( url ) {\n\t            var match = url.match(/^([a-z]+:)\\/\\//i);\n\t            if ( match === null ) {\n\t                // Relative URL, retrive the protocol from window.location\n\t                return window.location.protocol;\n\t            }\n\t            return match[1].toLowerCase();\n\t        },\n\t\n\t        /**\n\t         * Create an XHR object\n\t         * @private\n\t         * @param {type} [local] If set to true, the XHR will be file: protocol\n\t         * compatible if possible (but may raise a warning in the browser).\n\t         * @returns {XMLHttpRequest}\n\t         */\n\t        createAjaxRequest: function( local ) {\n\t            // IE11 does not support window.ActiveXObject so we just try to\n\t            // create one to see if it is supported.\n\t            // See: http://msdn.microsoft.com/en-us/library/ie/dn423948%28v=vs.85%29.aspx\n\t            var supportActiveX;\n\t            try {\n\t                /* global ActiveXObject:true */\n\t                supportActiveX = !!new ActiveXObject( \"Microsoft.XMLHTTP\" );\n\t            } catch( e ) {\n\t                supportActiveX = false;\n\t            }\n\t\n\t            if ( supportActiveX ) {\n\t                if ( window.XMLHttpRequest ) {\n\t                    $.createAjaxRequest = function( local ) {\n\t                        if ( local ) {\n\t                            return new ActiveXObject( \"Microsoft.XMLHTTP\" );\n\t                        }\n\t                        return new XMLHttpRequest();\n\t                    };\n\t                } else {\n\t                    $.createAjaxRequest = function() {\n\t                        return new ActiveXObject( \"Microsoft.XMLHTTP\" );\n\t                    };\n\t                }\n\t            } else if ( window.XMLHttpRequest ) {\n\t                $.createAjaxRequest = function() {\n\t                    return new XMLHttpRequest();\n\t                };\n\t            } else {\n\t                throw new Error( \"Browser doesn't support XMLHttpRequest.\" );\n\t            }\n\t            return $.createAjaxRequest( local );\n\t        },\n\t\n\t        /**\n\t         * Makes an AJAX request.\n\t         * @param {Object} options\n\t         * @param {String} options.url - the url to request\n\t         * @param {Function} options.success - a function to call on a successful response\n\t         * @param {Function} options.error - a function to call on when an error occurs\n\t         * @param {Boolean} [options.withCredentials=false] - whether to set the XHR's withCredentials\n\t         * @throws {Error}\n\t         */\n\t        makeAjaxRequest: function( url, onSuccess, onError ) {\n\t            var withCredentials;\n\t\n\t            // Note that our preferred API is that you pass in a single object; the named\n\t            // arguments are for legacy support.\n\t            if( $.isPlainObject( url ) ){\n\t                onSuccess = url.success;\n\t                onError = url.error;\n\t                withCredentials = url.withCredentials;\n\t                url = url.url;\n\t            }\n\t\n\t            var protocol = $.getUrlProtocol( url );\n\t            var request = $.createAjaxRequest( protocol === \"file:\" );\n\t\n\t            if ( !$.isFunction( onSuccess ) ) {\n\t                throw new Error( \"makeAjaxRequest requires a success callback\" );\n\t            }\n\t\n\t            request.onreadystatechange = function() {\n\t                // 4 = DONE (https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest#Properties)\n\t                if ( request.readyState == 4 ) {\n\t                    request.onreadystatechange = function(){};\n\t\n\t                    // With protocols other than http/https, the status is 200\n\t                    // on Firefox and 0 on other browsers\n\t                    if ( request.status === 200 ||\n\t                        ( request.status === 0 &&\n\t                          protocol !== \"http:\" &&\n\t                          protocol !== \"https:\" )) {\n\t                        onSuccess( request );\n\t                    } else {\n\t                        $.console.log( \"AJAX request returned %d: %s\", request.status, url );\n\t\n\t                        if ( $.isFunction( onError ) ) {\n\t                            onError( request );\n\t                        }\n\t                    }\n\t                }\n\t            };\n\t\n\t            if (withCredentials) {\n\t                request.withCredentials = true;\n\t            }\n\t\n\t            try {\n\t                request.open( \"GET\", url, true );\n\t                request.send( null );\n\t            } catch (e) {\n\t                var msg = e.message;\n\t\n\t                /*\n\t                    IE < 10 does not support CORS and an XHR request to a different origin will fail as soon\n\t                    as send() is called. This is particularly easy to miss during development and appear in\n\t                    production if you use a CDN or domain sharding and the security policy is likely to break\n\t                    exception handlers since any attempt to access a property of the request object will\n\t                    raise an access denied TypeError inside the catch block.\n\t\n\t                    To be friendlier, we'll check for this specific error and add a documentation pointer\n\t                    to point developers in the right direction. We test the exception number because IE's\n\t                    error messages are localized.\n\t                */\n\t                var oldIE = $.Browser.vendor == $.BROWSERS.IE && $.Browser.version < 10;\n\t                if ( oldIE && typeof( e.number ) != \"undefined\" && e.number == -2147024891 ) {\n\t                    msg += \"\\nSee http://msdn.microsoft.com/en-us/library/ms537505(v=vs.85).aspx#xdomain\";\n\t                }\n\t\n\t                $.console.log( \"%s while making AJAX request: %s\", e.name, msg );\n\t\n\t                request.onreadystatechange = function(){};\n\t\n\t                if (window.XDomainRequest) { // IE9 or IE8 might as well try to use XDomainRequest\n\t                    var xdr = new XDomainRequest();\n\t                    if (xdr) {\n\t                        xdr.onload = function (e) {\n\t                            if ( $.isFunction( onSuccess ) ) {\n\t                                onSuccess({ // Faking an xhr object\n\t                                    responseText: xdr.responseText,\n\t                                    status: 200, // XDomainRequest doesn't support status codes, so we just fake one! :/\n\t                                    statusText: 'OK'\n\t                                });\n\t                            }\n\t                        };\n\t                        xdr.onerror = function (e) {\n\t                            if ( $.isFunction ( onError ) ) {\n\t                                onError({ // Faking an xhr object\n\t                                    responseText: xdr.responseText,\n\t                                    status: 444, // 444 No Response\n\t                                    statusText: 'An error happened. Due to an XDomainRequest deficiency we can not extract any information about this error. Upgrade your browser.'\n\t                                });\n\t                            }\n\t                        };\n\t                        try {\n\t                            xdr.open('GET', url);\n\t                            xdr.send();\n\t                        } catch (e2) {\n\t                            if ( $.isFunction( onError ) ) {\n\t                                onError( request, e );\n\t                            }\n\t                        }\n\t                    }\n\t                } else {\n\t                    if ( $.isFunction( onError ) ) {\n\t                        onError( request, e );\n\t                    }\n\t                }\n\t            }\n\t        },\n\t\n\t        /**\n\t         * Taken from jQuery 1.6.1\n\t         * @function\n\t         * @param {Object} options\n\t         * @param {String} options.url\n\t         * @param {Function} options.callback\n\t         * @param {String} [options.param='callback'] The name of the url parameter\n\t         *      to request the jsonp provider with.\n\t         * @param {String} [options.callbackName=] The name of the callback to\n\t         *      request the jsonp provider with.\n\t         */\n\t        jsonp: function( options ){\n\t            var script,\n\t                url     = options.url,\n\t                head    = document.head ||\n\t                    document.getElementsByTagName( \"head\" )[ 0 ] ||\n\t                    document.documentElement,\n\t                jsonpCallback = options.callbackName || 'openseadragon' + $.now(),\n\t                previous      = window[ jsonpCallback ],\n\t                replace       = \"$1\" + jsonpCallback + \"$2\",\n\t                callbackParam = options.param || 'callback',\n\t                callback      = options.callback;\n\t\n\t            url = url.replace( /(\\=)\\?(&|$)|\\?\\?/i, replace );\n\t            // Add callback manually\n\t            url += (/\\?/.test( url ) ? \"&\" : \"?\") + callbackParam + \"=\" + jsonpCallback;\n\t\n\t            // Install callback\n\t            window[ jsonpCallback ] = function( response ) {\n\t                if ( !previous ){\n\t                    try{\n\t                        delete window[ jsonpCallback ];\n\t                    }catch(e){\n\t                        //swallow\n\t                    }\n\t                } else {\n\t                    window[ jsonpCallback ] = previous;\n\t                }\n\t                if( callback && $.isFunction( callback ) ){\n\t                    callback( response );\n\t                }\n\t            };\n\t\n\t            script = document.createElement( \"script\" );\n\t\n\t            //TODO: having an issue with async info requests\n\t            if( undefined !== options.async || false !== options.async ){\n\t                script.async = \"async\";\n\t            }\n\t\n\t            if ( options.scriptCharset ) {\n\t                script.charset = options.scriptCharset;\n\t            }\n\t\n\t            script.src = url;\n\t\n\t            // Attach handlers for all browsers\n\t            script.onload = script.onreadystatechange = function( _, isAbort ) {\n\t\n\t                if ( isAbort || !script.readyState || /loaded|complete/.test( script.readyState ) ) {\n\t\n\t                    // Handle memory leak in IE\n\t                    script.onload = script.onreadystatechange = null;\n\t\n\t                    // Remove the script\n\t                    if ( head && script.parentNode ) {\n\t                        head.removeChild( script );\n\t                    }\n\t\n\t                    // Dereference the script\n\t                    script = undefined;\n\t                }\n\t            };\n\t            // Use insertBefore instead of appendChild  to circumvent an IE6 bug.\n\t            // This arises when a base node is used (#2709 and #4378).\n\t            head.insertBefore( script, head.firstChild );\n\t\n\t        },\n\t\n\t\n\t        /**\n\t         * Fully deprecated. Will throw an error.\n\t         * @function\n\t         * @deprecated use {@link OpenSeadragon.Viewer#open}\n\t         */\n\t        createFromDZI: function() {\n\t            throw \"OpenSeadragon.createFromDZI is deprecated, use Viewer.open.\";\n\t        },\n\t\n\t        /**\n\t         * Parses an XML string into a DOM Document.\n\t         * @function\n\t         * @param {String} string\n\t         * @returns {Document}\n\t         */\n\t        parseXml: function( string ) {\n\t            if ( window.DOMParser ) {\n\t\n\t                $.parseXml = function( string ) {\n\t                    var xmlDoc = null,\n\t                        parser;\n\t\n\t                    parser = new DOMParser();\n\t                    xmlDoc = parser.parseFromString( string, \"text/xml\" );\n\t                    return xmlDoc;\n\t                };\n\t\n\t            } else if ( window.ActiveXObject ) {\n\t\n\t                $.parseXml = function( string ) {\n\t                    var xmlDoc = null;\n\t\n\t                    xmlDoc = new ActiveXObject( \"Microsoft.XMLDOM\" );\n\t                    xmlDoc.async = false;\n\t                    xmlDoc.loadXML( string );\n\t                    return xmlDoc;\n\t                };\n\t\n\t            } else {\n\t                throw new Error( \"Browser doesn't support XML DOM.\" );\n\t            }\n\t\n\t            return $.parseXml( string );\n\t        },\n\t\n\t        /**\n\t         * Parses a JSON string into a Javascript object.\n\t         * @function\n\t         * @param {String} string\n\t         * @returns {Object}\n\t         */\n\t        parseJSON: function(string) {\n\t            if (window.JSON && window.JSON.parse) {\n\t                $.parseJSON = window.JSON.parse;\n\t            } else {\n\t                // Should only be used by IE8 in non standards mode\n\t                $.parseJSON = function(string) {\n\t                    /*jshint evil:true*/\n\t                    return eval('(' + string + ')');\n\t                };\n\t            }\n\t            return $.parseJSON(string);\n\t        },\n\t\n\t        /**\n\t         * Reports whether the image format is supported for tiling in this\n\t         * version.\n\t         * @function\n\t         * @param {String} [extension]\n\t         * @returns {Boolean}\n\t         */\n\t        imageFormatSupported: function( extension ) {\n\t            extension = extension ? extension : \"\";\n\t            return !!FILEFORMATS[ extension.toLowerCase() ];\n\t        }\n\t\n\t    });\n\t\n\t\n\t    /**\n\t     * The current browser vendor, version, and related information regarding detected features.\n\t     * @member {Object} Browser\n\t     * @memberof OpenSeadragon\n\t     * @static\n\t     * @type {Object}\n\t     * @property {OpenSeadragon.BROWSERS} vendor - One of the {@link OpenSeadragon.BROWSERS} enumeration values.\n\t     * @property {Number} version\n\t     * @property {Boolean} alpha - Does the browser support image alpha transparency.\n\t     */\n\t    $.Browser = {\n\t        vendor:     $.BROWSERS.UNKNOWN,\n\t        version:    0,\n\t        alpha:      true\n\t    };\n\t\n\t\n\t    var FILEFORMATS = {\n\t            \"bmp\":  false,\n\t            \"jpeg\": true,\n\t            \"jpg\":  true,\n\t            \"png\":  true,\n\t            \"tif\":  false,\n\t            \"wdp\":  false\n\t        },\n\t        URLPARAMS = {};\n\t\n\t    (function() {\n\t        //A small auto-executing routine to determine the browser vendor,\n\t        //version and supporting feature sets.\n\t        var app = navigator.appName,\n\t            ver = navigator.appVersion,\n\t            ua  = navigator.userAgent,\n\t            regex;\n\t\n\t        //console.error( 'appName: ' + navigator.appName );\n\t        //console.error( 'appVersion: ' + navigator.appVersion );\n\t        //console.error( 'userAgent: ' + navigator.userAgent );\n\t\n\t        switch( navigator.appName ){\n\t            case \"Microsoft Internet Explorer\":\n\t                if( !!window.attachEvent &&\n\t                    !!window.ActiveXObject ) {\n\t\n\t                    $.Browser.vendor = $.BROWSERS.IE;\n\t                    $.Browser.version = parseFloat(\n\t                        ua.substring(\n\t                            ua.indexOf( \"MSIE\" ) + 5,\n\t                            ua.indexOf( \";\", ua.indexOf( \"MSIE\" ) ) )\n\t                        );\n\t                }\n\t                break;\n\t            case \"Netscape\":\n\t                if( !!window.addEventListener ){\n\t                    if ( ua.indexOf( \"Firefox\" ) >= 0 ) {\n\t                        $.Browser.vendor = $.BROWSERS.FIREFOX;\n\t                        $.Browser.version = parseFloat(\n\t                            ua.substring( ua.indexOf( \"Firefox\" ) + 8 )\n\t                        );\n\t                    } else if ( ua.indexOf( \"Safari\" ) >= 0 ) {\n\t                        $.Browser.vendor = ua.indexOf( \"Chrome\" ) >= 0 ?\n\t                            $.BROWSERS.CHROME :\n\t                            $.BROWSERS.SAFARI;\n\t                        $.Browser.version = parseFloat(\n\t                            ua.substring(\n\t                                ua.substring( 0, ua.indexOf( \"Safari\" ) ).lastIndexOf( \"/\" ) + 1,\n\t                                ua.indexOf( \"Safari\" )\n\t                            )\n\t                        );\n\t                    } else {\n\t                        regex = new RegExp( \"Trident/.*rv:([0-9]{1,}[.0-9]{0,})\");\n\t                        if ( regex.exec( ua ) !== null ) {\n\t                            $.Browser.vendor = $.BROWSERS.IE;\n\t                            $.Browser.version = parseFloat( RegExp.$1 );\n\t                        }\n\t                    }\n\t                }\n\t                break;\n\t            case \"Opera\":\n\t                $.Browser.vendor = $.BROWSERS.OPERA;\n\t                $.Browser.version = parseFloat( ver );\n\t                break;\n\t        }\n\t\n\t            // ignore '?' portion of query string\n\t        var query = window.location.search.substring( 1 ),\n\t            parts = query.split('&'),\n\t            part,\n\t            sep,\n\t            i;\n\t\n\t        for ( i = 0; i < parts.length; i++ ) {\n\t            part = parts[ i ];\n\t            sep  = part.indexOf( '=' );\n\t\n\t            if ( sep > 0 ) {\n\t                URLPARAMS[ part.substring( 0, sep ) ] =\n\t                    decodeURIComponent( part.substring( sep + 1 ) );\n\t            }\n\t        }\n\t\n\t        //determine if this browser supports image alpha transparency\n\t        $.Browser.alpha = !(\n\t            (\n\t                $.Browser.vendor == $.BROWSERS.IE &&\n\t                $.Browser.version < 9\n\t            ) || (\n\t                $.Browser.vendor == $.BROWSERS.CHROME &&\n\t                $.Browser.version < 2\n\t            )\n\t        );\n\t\n\t        //determine if this browser supports element.style.opacity\n\t        $.Browser.opacity = !(\n\t            $.Browser.vendor == $.BROWSERS.IE &&\n\t            $.Browser.version < 9\n\t        );\n\t\n\t    })();\n\t\n\t\n\t    //TODO: $.console is often used inside a try/catch block which generally\n\t    //      prevents allowings errors to occur with detection until a debugger\n\t    //      is attached.  Although I've been guilty of the same anti-pattern\n\t    //      I eventually was convinced that errors should naturally propogate in\n\t    //      all but the most special cases.\n\t    /**\n\t     * A convenient alias for console when available, and a simple null\n\t     * function when console is unavailable.\n\t     * @static\n\t     * @private\n\t     */\n\t    var nullfunction = function( msg ){\n\t            //document.location.hash = msg;\n\t        };\n\t\n\t    $.console = window.console || {\n\t        log:    nullfunction,\n\t        debug:  nullfunction,\n\t        info:   nullfunction,\n\t        warn:   nullfunction,\n\t        error:  nullfunction,\n\t        assert: nullfunction\n\t    };\n\t\n\t\n\t    // Adding support for HTML5's requestAnimationFrame as suggested by acdha.\n\t    // Implementation taken from matt synder's post here:\n\t    // http://mattsnider.com/cross-browser-and-legacy-supported-requestframeanimation/\n\t    (function( w ) {\n\t\n\t        // most browsers have an implementation\n\t        var requestAnimationFrame = w.requestAnimationFrame ||\n\t            w.mozRequestAnimationFrame ||\n\t            w.webkitRequestAnimationFrame ||\n\t            w.msRequestAnimationFrame;\n\t\n\t        var cancelAnimationFrame = w.cancelAnimationFrame ||\n\t            w.mozCancelAnimationFrame ||\n\t            w.webkitCancelAnimationFrame ||\n\t            w.msCancelAnimationFrame;\n\t\n\t        // polyfill, when necessary\n\t        if ( requestAnimationFrame && cancelAnimationFrame ) {\n\t            // We can't assign these window methods directly to $ because they\n\t            // expect their \"this\" to be \"window\", so we call them in wrappers.\n\t            $.requestAnimationFrame = function(){\n\t                return requestAnimationFrame.apply( w, arguments );\n\t            };\n\t            $.cancelAnimationFrame = function(){\n\t                return cancelAnimationFrame.apply( w, arguments );\n\t            };\n\t        } else {\n\t            var aAnimQueue = [],\n\t                processing = [],\n\t                iRequestId = 0,\n\t                iIntervalId;\n\t\n\t            // create a mock requestAnimationFrame function\n\t            $.requestAnimationFrame = function( callback ) {\n\t                aAnimQueue.push( [ ++iRequestId, callback ] );\n\t\n\t                if ( !iIntervalId ) {\n\t                    iIntervalId = setInterval( function() {\n\t                        if ( aAnimQueue.length ) {\n\t                            var time = $.now();\n\t                            // Process all of the currently outstanding frame\n\t                            // requests, but none that get added during the\n\t                            // processing.\n\t                            // Swap the arrays so we don't have to create a new\n\t                            // array every frame.\n\t                            var temp = processing;\n\t                            processing = aAnimQueue;\n\t                            aAnimQueue = temp;\n\t                            while ( processing.length ) {\n\t                                processing.shift()[ 1 ]( time );\n\t                            }\n\t                        } else {\n\t                            // don't continue the interval, if unnecessary\n\t                            clearInterval( iIntervalId );\n\t                            iIntervalId = undefined;\n\t                        }\n\t                    }, 1000 / 50);  // estimating support for 50 frames per second\n\t                }\n\t\n\t                return iRequestId;\n\t            };\n\t\n\t            // create a mock cancelAnimationFrame function\n\t            $.cancelAnimationFrame = function( requestId ) {\n\t                // find the request ID and remove it\n\t                var i, j;\n\t                for ( i = 0, j = aAnimQueue.length; i < j; i += 1 ) {\n\t                    if ( aAnimQueue[ i ][ 0 ] === requestId ) {\n\t                        aAnimQueue.splice( i, 1 );\n\t                        return;\n\t                    }\n\t                }\n\t\n\t                // If it's not in the queue, it may be in the set we're currently\n\t                // processing (if cancelAnimationFrame is called from within a\n\t                // requestAnimationFrame callback).\n\t                for ( i = 0, j = processing.length; i < j; i += 1 ) {\n\t                    if ( processing[ i ][ 0 ] === requestId ) {\n\t                        processing.splice( i, 1 );\n\t                        return;\n\t                    }\n\t                }\n\t            };\n\t        }\n\t    })( window );\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     * @function\n\t     * @param {Element} element\n\t     * @param {Boolean} [isFixed]\n\t     * @returns {Element}\n\t     */\n\t    function getOffsetParent( element, isFixed ) {\n\t        if ( isFixed && element != document.body ) {\n\t            return document.body;\n\t        } else {\n\t            return element.offsetParent;\n\t        }\n\t    }\n\t\n\t}(OpenSeadragon));\n\t\n\t/*\n\t * OpenSeadragon - full-screen support functions\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function( $ ) {\n\t    /**\n\t     * Determine native full screen support we can get from the browser.\n\t     * @member fullScreenApi\n\t     * @memberof OpenSeadragon\n\t     * @type {object}\n\t     * @property {Boolean} supportsFullScreen Return true if full screen API is supported.\n\t     * @property {Function} isFullScreen Return true if currently in full screen mode.\n\t     * @property {Function} getFullScreenElement Return the element currently in full screen mode.\n\t     * @property {Function} requestFullScreen Make a request to go in full screen mode.\n\t     * @property {Function} exitFullScreen Make a request to exit full screen mode.\n\t     * @property {Function} cancelFullScreen Deprecated, use exitFullScreen instead.\n\t     * @property {String} fullScreenEventName Event fired when the full screen mode change.\n\t     * @property {String} fullScreenErrorEventName Event fired when a request to go\n\t     * in full screen mode failed.\n\t     */\n\t    var fullScreenApi = {\n\t        supportsFullScreen: false,\n\t        isFullScreen: function() { return false; },\n\t        getFullScreenElement: function() { return null; },\n\t        requestFullScreen: function() {},\n\t        exitFullScreen: function() {},\n\t        cancelFullScreen: function() {},\n\t        fullScreenEventName: '',\n\t        fullScreenErrorEventName: ''\n\t    };\n\t\n\t    // check for native support\n\t    if ( document.exitFullscreen ) {\n\t        // W3C standard\n\t        fullScreenApi.supportsFullScreen = true;\n\t        fullScreenApi.getFullScreenElement = function() {\n\t            return document.fullscreenElement;\n\t        };\n\t        fullScreenApi.requestFullScreen = function( element ) {\n\t            return element.requestFullscreen();\n\t        };\n\t        fullScreenApi.exitFullScreen = function() {\n\t            document.exitFullscreen();\n\t        };\n\t        fullScreenApi.fullScreenEventName = \"fullscreenchange\";\n\t        fullScreenApi.fullScreenErrorEventName = \"fullscreenerror\";\n\t    } else if ( document.msExitFullscreen ) {\n\t        // IE 11\n\t        fullScreenApi.supportsFullScreen = true;\n\t        fullScreenApi.getFullScreenElement = function() {\n\t            return document.msFullscreenElement;\n\t        };\n\t        fullScreenApi.requestFullScreen = function( element ) {\n\t            return element.msRequestFullscreen();\n\t        };\n\t        fullScreenApi.exitFullScreen = function() {\n\t            document.msExitFullscreen();\n\t        };\n\t        fullScreenApi.fullScreenEventName = \"MSFullscreenChange\";\n\t        fullScreenApi.fullScreenErrorEventName = \"MSFullscreenError\";\n\t    } else if ( document.webkitExitFullscreen ) {\n\t        // Recent webkit\n\t        fullScreenApi.supportsFullScreen = true;\n\t        fullScreenApi.getFullScreenElement = function() {\n\t            return document.webkitFullscreenElement;\n\t        };\n\t        fullScreenApi.requestFullScreen = function( element ) {\n\t            return element.webkitRequestFullscreen();\n\t        };\n\t        fullScreenApi.exitFullScreen = function() {\n\t            document.webkitExitFullscreen();\n\t        };\n\t        fullScreenApi.fullScreenEventName = \"webkitfullscreenchange\";\n\t        fullScreenApi.fullScreenErrorEventName = \"webkitfullscreenerror\";\n\t    } else if ( document.webkitCancelFullScreen ) {\n\t        // Old webkit\n\t        fullScreenApi.supportsFullScreen = true;\n\t        fullScreenApi.getFullScreenElement = function() {\n\t            return document.webkitCurrentFullScreenElement;\n\t        };\n\t        fullScreenApi.requestFullScreen = function( element ) {\n\t            return element.webkitRequestFullScreen();\n\t        };\n\t        fullScreenApi.exitFullScreen = function() {\n\t            document.webkitCancelFullScreen();\n\t        };\n\t        fullScreenApi.fullScreenEventName = \"webkitfullscreenchange\";\n\t        fullScreenApi.fullScreenErrorEventName = \"webkitfullscreenerror\";\n\t    } else if ( document.mozCancelFullScreen ) {\n\t        // Firefox\n\t        fullScreenApi.supportsFullScreen = true;\n\t        fullScreenApi.getFullScreenElement = function() {\n\t            return document.mozFullScreenElement;\n\t        };\n\t        fullScreenApi.requestFullScreen = function( element ) {\n\t            return element.mozRequestFullScreen();\n\t        };\n\t        fullScreenApi.exitFullScreen = function() {\n\t            document.mozCancelFullScreen();\n\t        };\n\t        fullScreenApi.fullScreenEventName = \"mozfullscreenchange\";\n\t        fullScreenApi.fullScreenErrorEventName = \"mozfullscreenerror\";\n\t    }\n\t    fullScreenApi.isFullScreen = function() {\n\t        return fullScreenApi.getFullScreenElement() !== null;\n\t    };\n\t    fullScreenApi.cancelFullScreen = function() {\n\t        $.console.error(\"cancelFullScreen is deprecated. Use exitFullScreen instead.\");\n\t        fullScreenApi.exitFullScreen();\n\t    };\n\t\n\t    // export api\n\t    $.extend( $, fullScreenApi );\n\t\n\t})( OpenSeadragon );\n\t\n\t/*\n\t * OpenSeadragon - EventSource\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function($){\n\t\n\t/**\n\t * Event handler method signature used by all OpenSeadragon events.\n\t *\n\t * @callback EventHandler\n\t * @memberof OpenSeadragon\n\t * @param {Object} event - See individual events for event-specific properties.\n\t */\n\t\n\t\n\t/**\n\t * @class EventSource\n\t * @classdesc For use by classes which want to support custom, non-browser events.\n\t *\n\t * @memberof OpenSeadragon\n\t */\n\t$.EventSource = function() {\n\t    this.events = {};\n\t};\n\t\n\t/** @lends OpenSeadragon.EventSource.prototype */\n\t$.EventSource.prototype = {\n\t\n\t    /**\n\t     * Add an event handler to be triggered only once (or a given number of times)\n\t     * for a given event.\n\t     * @function\n\t     * @param {String} eventName - Name of event to register.\n\t     * @param {OpenSeadragon.EventHandler} handler - Function to call when event\n\t     * is triggered.\n\t     * @param {Object} [userData=null] - Arbitrary object to be passed unchanged\n\t     * to the handler.\n\t     * @param {Number} [times=1] - The number of times to handle the event\n\t     * before removing it.\n\t     */\n\t    addOnceHandler: function(eventName, handler, userData, times) {\n\t        var self = this;\n\t        times = times || 1;\n\t        var count = 0;\n\t        var onceHandler = function(event) {\n\t            count++;\n\t            if (count === times) {\n\t                self.removeHandler(eventName, onceHandler);\n\t            }\n\t            handler(event);\n\t        };\n\t        this.addHandler(eventName, onceHandler, userData);\n\t    },\n\t\n\t    /**\n\t     * Add an event handler for a given event.\n\t     * @function\n\t     * @param {String} eventName - Name of event to register.\n\t     * @param {OpenSeadragon.EventHandler} handler - Function to call when event is triggered.\n\t     * @param {Object} [userData=null] - Arbitrary object to be passed unchanged to the handler.\n\t     */\n\t    addHandler: function ( eventName, handler, userData ) {\n\t        var events = this.events[ eventName ];\n\t        if ( !events ) {\n\t            this.events[ eventName ] = events = [];\n\t        }\n\t        if ( handler && $.isFunction( handler ) ) {\n\t            events[ events.length ] = { handler: handler, userData: userData || null };\n\t        }\n\t    },\n\t\n\t    /**\n\t     * Remove a specific event handler for a given event.\n\t     * @function\n\t     * @param {String} eventName - Name of event for which the handler is to be removed.\n\t     * @param {OpenSeadragon.EventHandler} handler - Function to be removed.\n\t     */\n\t    removeHandler: function ( eventName, handler ) {\n\t        var events = this.events[ eventName ],\n\t            handlers = [],\n\t            i;\n\t        if ( !events ) {\n\t            return;\n\t        }\n\t        if ( $.isArray( events ) ) {\n\t            for ( i = 0; i < events.length; i++ ) {\n\t                if ( events[i].handler !== handler ) {\n\t                    handlers.push( events[ i ] );\n\t                }\n\t            }\n\t            this.events[ eventName ] = handlers;\n\t        }\n\t    },\n\t\n\t\n\t    /**\n\t     * Remove all event handlers for a given event type. If no type is given all\n\t     * event handlers for every event type are removed.\n\t     * @function\n\t     * @param {String} eventName - Name of event for which all handlers are to be removed.\n\t     */\n\t    removeAllHandlers: function( eventName ) {\n\t        if ( eventName ){\n\t            this.events[ eventName ] = [];\n\t        } else{\n\t            for ( var eventType in this.events ) {\n\t                this.events[ eventType ] = [];\n\t            }\n\t        }\n\t    },\n\t\n\t    /**\n\t     * Get a function which iterates the list of all handlers registered for a given event, calling the handler for each.\n\t     * @function\n\t     * @param {String} eventName - Name of event to get handlers for.\n\t     */\n\t    getHandler: function ( eventName ) {\n\t        var events = this.events[ eventName ];\n\t        if ( !events || !events.length ) {\n\t            return null;\n\t        }\n\t        events = events.length === 1 ?\n\t            [ events[ 0 ] ] :\n\t            Array.apply( null, events );\n\t        return function ( source, args ) {\n\t            var i,\n\t                length = events.length;\n\t            for ( i = 0; i < length; i++ ) {\n\t                if ( events[ i ] ) {\n\t                    args.eventSource = source;\n\t                    args.userData = events[ i ].userData;\n\t                    events[ i ].handler( args );\n\t                }\n\t            }\n\t        };\n\t    },\n\t\n\t    /**\n\t     * Trigger an event, optionally passing additional information.\n\t     * @function\n\t     * @param {String} eventName - Name of event to register.\n\t     * @param {Object} eventArgs - Event-specific data.\n\t     */\n\t    raiseEvent: function( eventName, eventArgs ) {\n\t        //uncomment if you want to get a log of all events\n\t        //$.console.log( eventName );\n\t        var handler = this.getHandler( eventName );\n\t\n\t        if ( handler ) {\n\t            if ( !eventArgs ) {\n\t                eventArgs = {};\n\t            }\n\t\n\t            handler( this, eventArgs );\n\t        }\n\t    }\n\t};\n\t\n\t}( OpenSeadragon ));\n\t\n\t/*\n\t * OpenSeadragon - MouseTracker\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function ( $ ) {\n\t\n\t    // All MouseTracker instances\n\t    var MOUSETRACKERS  = [];\n\t\n\t    // dictionary from hash to private properties\n\t    var THIS           = {};\n\t\n\t\n\t    /**\n\t     * @class MouseTracker\n\t     * @classdesc Provides simplified handling of common pointer device (mouse, touch, pen, etc.) gestures\n\t     *            and keyboard events on a specified element.\n\t     * @memberof OpenSeadragon\n\t     * @param {Object} options\n\t     *      Allows configurable properties to be entirely specified by passing\n\t     *      an options object to the constructor.  The constructor also supports\n\t     *      the original positional arguments 'element', 'clickTimeThreshold',\n\t     *      and 'clickDistThreshold' in that order.\n\t     * @param {Element|String} options.element\n\t     *      A reference to an element or an element id for which the pointer/key\n\t     *      events will be monitored.\n\t     * @param {Boolean} [options.startDisabled=false]\n\t     *      If true, event tracking on the element will not start until\n\t     *      {@link OpenSeadragon.MouseTracker.setTracking|setTracking} is called.\n\t     * @param {Number} options.clickTimeThreshold\n\t     *      The number of milliseconds within which a pointer down-up event combination\n\t     *      will be treated as a click gesture.\n\t     * @param {Number} options.clickDistThreshold\n\t     *      The maximum distance allowed between a pointer down event and a pointer up event\n\t     *      to be treated as a click gesture.\n\t     * @param {Number} options.dblClickTimeThreshold\n\t     *      The number of milliseconds within which two pointer down-up event combinations\n\t     *      will be treated as a double-click gesture.\n\t     * @param {Number} options.dblClickDistThreshold\n\t     *      The maximum distance allowed between two pointer click events\n\t     *      to be treated as a click gesture.\n\t     * @param {Number} [options.stopDelay=50]\n\t     *      The number of milliseconds without pointer move before the stop\n\t     *      event is fired.\n\t     * @param {OpenSeadragon.EventHandler} [options.enterHandler=null]\n\t     *      An optional handler for pointer enter.\n\t     * @param {OpenSeadragon.EventHandler} [options.exitHandler=null]\n\t     *      An optional handler for pointer exit.\n\t     * @param {OpenSeadragon.EventHandler} [options.pressHandler=null]\n\t     *      An optional handler for pointer press.\n\t     * @param {OpenSeadragon.EventHandler} [options.nonPrimaryPressHandler=null]\n\t     *      An optional handler for pointer non-primary button press.\n\t     * @param {OpenSeadragon.EventHandler} [options.releaseHandler=null]\n\t     *      An optional handler for pointer release.\n\t     * @param {OpenSeadragon.EventHandler} [options.nonPrimaryReleaseHandler=null]\n\t     *      An optional handler for pointer non-primary button release.\n\t     * @param {OpenSeadragon.EventHandler} [options.moveHandler=null]\n\t     *      An optional handler for pointer move.\n\t     * @param {OpenSeadragon.EventHandler} [options.scrollHandler=null]\n\t     *      An optional handler for mouse wheel scroll.\n\t     * @param {OpenSeadragon.EventHandler} [options.clickHandler=null]\n\t     *      An optional handler for pointer click.\n\t     * @param {OpenSeadragon.EventHandler} [options.dblClickHandler=null]\n\t     *      An optional handler for pointer double-click.\n\t     * @param {OpenSeadragon.EventHandler} [options.dragHandler=null]\n\t     *      An optional handler for the drag gesture.\n\t     * @param {OpenSeadragon.EventHandler} [options.dragEndHandler=null]\n\t     *      An optional handler for after a drag gesture.\n\t     * @param {OpenSeadragon.EventHandler} [options.pinchHandler=null]\n\t     *      An optional handler for the pinch gesture.\n\t     * @param {OpenSeadragon.EventHandler} [options.keyDownHandler=null]\n\t     *      An optional handler for keydown.\n\t     * @param {OpenSeadragon.EventHandler} [options.keyUpHandler=null]\n\t     *      An optional handler for keyup.\n\t     * @param {OpenSeadragon.EventHandler} [options.keyHandler=null]\n\t     *      An optional handler for keypress.\n\t     * @param {OpenSeadragon.EventHandler} [options.focusHandler=null]\n\t     *      An optional handler for focus.\n\t     * @param {OpenSeadragon.EventHandler} [options.blurHandler=null]\n\t     *      An optional handler for blur.\n\t     * @param {Object} [options.userData=null]\n\t     *      Arbitrary object to be passed unchanged to any attached handler methods.\n\t     */\n\t    $.MouseTracker = function ( options ) {\n\t\n\t        MOUSETRACKERS.push( this );\n\t\n\t        var args = arguments;\n\t\n\t        if ( !$.isPlainObject( options ) ) {\n\t            options = {\n\t                element:            args[ 0 ],\n\t                clickTimeThreshold: args[ 1 ],\n\t                clickDistThreshold: args[ 2 ]\n\t            };\n\t        }\n\t\n\t        this.hash               = Math.random(); // An unique hash for this tracker.\n\t        /**\n\t         * The element for which pointer events are being monitored.\n\t         * @member {Element} element\n\t         * @memberof OpenSeadragon.MouseTracker#\n\t         */\n\t        this.element            = $.getElement( options.element );\n\t        /**\n\t         * The number of milliseconds within which a pointer down-up event combination\n\t         * will be treated as a click gesture.\n\t         * @member {Number} clickTimeThreshold\n\t         * @memberof OpenSeadragon.MouseTracker#\n\t         */\n\t        this.clickTimeThreshold = options.clickTimeThreshold || $.DEFAULT_SETTINGS.clickTimeThreshold;\n\t        /**\n\t         * The maximum distance allowed between a pointer down event and a pointer up event\n\t         * to be treated as a click gesture.\n\t         * @member {Number} clickDistThreshold\n\t         * @memberof OpenSeadragon.MouseTracker#\n\t         */\n\t        this.clickDistThreshold = options.clickDistThreshold || $.DEFAULT_SETTINGS.clickDistThreshold;\n\t        /**\n\t         * The number of milliseconds within which two pointer down-up event combinations\n\t         * will be treated as a double-click gesture.\n\t         * @member {Number} dblClickTimeThreshold\n\t         * @memberof OpenSeadragon.MouseTracker#\n\t         */\n\t        this.dblClickTimeThreshold = options.dblClickTimeThreshold || $.DEFAULT_SETTINGS.dblClickTimeThreshold;\n\t        /**\n\t         * The maximum distance allowed between two pointer click events\n\t         * to be treated as a click gesture.\n\t         * @member {Number} clickDistThreshold\n\t         * @memberof OpenSeadragon.MouseTracker#\n\t         */\n\t        this.dblClickDistThreshold = options.dblClickDistThreshold || $.DEFAULT_SETTINGS.dblClickDistThreshold;\n\t        this.userData              = options.userData          || null;\n\t        this.stopDelay             = options.stopDelay         || 50;\n\t\n\t        this.enterHandler             = options.enterHandler             || null;\n\t        this.exitHandler              = options.exitHandler              || null;\n\t        this.pressHandler             = options.pressHandler             || null;\n\t        this.nonPrimaryPressHandler   = options.nonPrimaryPressHandler   || null;\n\t        this.releaseHandler           = options.releaseHandler           || null;\n\t        this.nonPrimaryReleaseHandler = options.nonPrimaryReleaseHandler || null;\n\t        this.moveHandler              = options.moveHandler              || null;\n\t        this.scrollHandler            = options.scrollHandler            || null;\n\t        this.clickHandler             = options.clickHandler             || null;\n\t        this.dblClickHandler          = options.dblClickHandler          || null;\n\t        this.dragHandler              = options.dragHandler              || null;\n\t        this.dragEndHandler           = options.dragEndHandler           || null;\n\t        this.pinchHandler             = options.pinchHandler             || null;\n\t        this.stopHandler              = options.stopHandler              || null;\n\t        this.keyDownHandler           = options.keyDownHandler           || null;\n\t        this.keyUpHandler             = options.keyUpHandler             || null;\n\t        this.keyHandler               = options.keyHandler               || null;\n\t        this.focusHandler             = options.focusHandler             || null;\n\t        this.blurHandler              = options.blurHandler              || null;\n\t\n\t        //Store private properties in a scope sealed hash map\n\t        var _this = this;\n\t\n\t        /**\n\t         * @private\n\t         * @property {Boolean} tracking\n\t         *      Are we currently tracking pointer events for this element.\n\t         */\n\t        THIS[ this.hash ] = {\n\t            click:                 function ( event ) { onClick( _this, event ); },\n\t            dblclick:              function ( event ) { onDblClick( _this, event ); },\n\t            keydown:               function ( event ) { onKeyDown( _this, event ); },\n\t            keyup:                 function ( event ) { onKeyUp( _this, event ); },\n\t            keypress:              function ( event ) { onKeyPress( _this, event ); },\n\t            focus:                 function ( event ) { onFocus( _this, event ); },\n\t            blur:                  function ( event ) { onBlur( _this, event ); },\n\t\n\t            wheel:                 function ( event ) { onWheel( _this, event ); },\n\t            mousewheel:            function ( event ) { onMouseWheel( _this, event ); },\n\t            DOMMouseScroll:        function ( event ) { onMouseWheel( _this, event ); },\n\t            MozMousePixelScroll:   function ( event ) { onMouseWheel( _this, event ); },\n\t\n\t            mouseenter:            function ( event ) { onMouseEnter( _this, event ); }, // Used on IE8 only\n\t            mouseleave:            function ( event ) { onMouseLeave( _this, event ); }, // Used on IE8 only\n\t            mouseover:             function ( event ) { onMouseOver( _this, event ); },\n\t            mouseout:              function ( event ) { onMouseOut( _this, event ); },\n\t            mousedown:             function ( event ) { onMouseDown( _this, event ); },\n\t            mouseup:               function ( event ) { onMouseUp( _this, event ); },\n\t            mouseupcaptured:       function ( event ) { onMouseUpCaptured( _this, event ); },\n\t            mousemove:             function ( event ) { onMouseMove( _this, event ); },\n\t            mousemovecaptured:     function ( event ) { onMouseMoveCaptured( _this, event ); },\n\t\n\t            touchstart:            function ( event ) { onTouchStart( _this, event ); },\n\t            touchend:              function ( event ) { onTouchEnd( _this, event ); },\n\t            touchendcaptured:      function ( event ) { onTouchEndCaptured( _this, event ); },\n\t            touchmove:             function ( event ) { onTouchMove( _this, event ); },\n\t            touchmovecaptured:     function ( event ) { onTouchMoveCaptured( _this, event ); },\n\t            touchcancel:           function ( event ) { onTouchCancel( _this, event ); },\n\t\n\t            gesturestart:          function ( event ) { onGestureStart( _this, event ); },\n\t            gesturechange:         function ( event ) { onGestureChange( _this, event ); },\n\t\n\t            pointerover:           function ( event ) { onPointerOver( _this, event ); },\n\t            MSPointerOver:         function ( event ) { onPointerOver( _this, event ); },\n\t            pointerout:            function ( event ) { onPointerOut( _this, event ); },\n\t            MSPointerOut:          function ( event ) { onPointerOut( _this, event ); },\n\t            pointerdown:           function ( event ) { onPointerDown( _this, event ); },\n\t            MSPointerDown:         function ( event ) { onPointerDown( _this, event ); },\n\t            pointerup:             function ( event ) { onPointerUp( _this, event ); },\n\t            MSPointerUp:           function ( event ) { onPointerUp( _this, event ); },\n\t            pointermove:           function ( event ) { onPointerMove( _this, event ); },\n\t            MSPointerMove:         function ( event ) { onPointerMove( _this, event ); },\n\t            pointercancel:         function ( event ) { onPointerCancel( _this, event ); },\n\t            MSPointerCancel:       function ( event ) { onPointerCancel( _this, event ); },\n\t            pointerupcaptured:     function ( event ) { onPointerUpCaptured( _this, event ); },\n\t            pointermovecaptured:   function ( event ) { onPointerMoveCaptured( _this, event ); },\n\t\n\t            tracking:              false,\n\t\n\t            // Active pointers lists. Array of GesturePointList objects, one for each pointer device type.\n\t            // GesturePointList objects are added each time a pointer is tracked by a new pointer device type (see getActivePointersListByType()).\n\t            // Active pointers are any pointer being tracked for this element which are in the hit-test area\n\t            //     of the element (for hover-capable devices) and/or have contact or a button press initiated in the element.\n\t            activePointersLists:   [],\n\t\n\t            // Tracking for double-click gesture\n\t            lastClickPos:          null,\n\t            dblClickTimeOut:       null,\n\t\n\t            // Tracking for pinch gesture\n\t            pinchGPoints:          [],\n\t            lastPinchDist:         0,\n\t            currentPinchDist:      0,\n\t            lastPinchCenter:       null,\n\t            currentPinchCenter:    null\n\t        };\n\t\n\t        if ( !options.startDisabled ) {\n\t            this.setTracking( true );\n\t        }\n\t    };\n\t\n\t    /** @lends OpenSeadragon.MouseTracker.prototype */\n\t    $.MouseTracker.prototype = {\n\t\n\t        /**\n\t         * Clean up any events or objects created by the tracker.\n\t         * @function\n\t         */\n\t        destroy: function () {\n\t            var i;\n\t\n\t            stopTracking( this );\n\t            this.element = null;\n\t\n\t            for ( i = 0; i < MOUSETRACKERS.length; i++ ) {\n\t                if ( MOUSETRACKERS[ i ] === this ) {\n\t                    MOUSETRACKERS.splice( i, 1 );\n\t                    break;\n\t                }\n\t            }\n\t\n\t            THIS[ this.hash ] = null;\n\t            delete THIS[ this.hash ];\n\t        },\n\t\n\t        /**\n\t         * Are we currently tracking events on this element.\n\t         * @deprecated Just use this.tracking\n\t         * @function\n\t         * @returns {Boolean} Are we currently tracking events on this element.\n\t         */\n\t        isTracking: function () {\n\t            return THIS[ this.hash ].tracking;\n\t        },\n\t\n\t        /**\n\t         * Enable or disable whether or not we are tracking events on this element.\n\t         * @function\n\t         * @param {Boolean} track True to start tracking, false to stop tracking.\n\t         * @returns {OpenSeadragon.MouseTracker} Chainable.\n\t         */\n\t        setTracking: function ( track ) {\n\t            if ( track ) {\n\t                startTracking( this );\n\t            } else {\n\t                stopTracking( this );\n\t            }\n\t            //chain\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         * Returns the {@link OpenSeadragon.MouseTracker.GesturePointList|GesturePointList} for the given pointer device type,\n\t         * creating and caching a new {@link OpenSeadragon.MouseTracker.GesturePointList|GesturePointList} if one doesn't already exist for the type.\n\t         * @function\n\t         * @param {String} type - The pointer device type: \"mouse\", \"touch\", \"pen\", etc.\n\t         * @returns {OpenSeadragon.MouseTracker.GesturePointList}\n\t         */\n\t        getActivePointersListByType: function ( type ) {\n\t            var delegate = THIS[ this.hash ],\n\t                i,\n\t                len = delegate.activePointersLists.length,\n\t                list;\n\t\n\t            for ( i = 0; i < len; i++ ) {\n\t                if ( delegate.activePointersLists[ i ].type === type ) {\n\t                    return delegate.activePointersLists[ i ];\n\t                }\n\t            }\n\t\n\t            list = new $.MouseTracker.GesturePointList( type );\n\t            delegate.activePointersLists.push( list );\n\t            return list;\n\t        },\n\t\n\t        /**\n\t         * Returns the total number of pointers currently active on the tracked element.\n\t         * @function\n\t         * @returns {Number}\n\t         */\n\t        getActivePointerCount: function () {\n\t            var delegate = THIS[ this.hash ],\n\t                i,\n\t                len = delegate.activePointersLists.length,\n\t                count = 0;\n\t\n\t            for ( i = 0; i < len; i++ ) {\n\t                count += delegate.activePointersLists[ i ].getLength();\n\t            }\n\t\n\t            return count;\n\t        },\n\t\n\t        /**\n\t         * Implement or assign implementation to these handlers during or after\n\t         * calling the constructor.\n\t         * @function\n\t         * @param {Object} event\n\t         * @param {OpenSeadragon.MouseTracker} event.eventSource\n\t         *      A reference to the tracker instance.\n\t         * @param {String} event.pointerType\n\t         *     \"mouse\", \"touch\", \"pen\", etc.\n\t         * @param {OpenSeadragon.Point} event.position\n\t         *      The position of the event relative to the tracked element.\n\t         * @param {Number} event.buttons\n\t         *      Current buttons pressed.\n\t         *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n\t         * @param {Number} event.pointers\n\t         *      Number of pointers (all types) active in the tracked element.\n\t         * @param {Boolean} event.insideElementPressed\n\t         *      True if the left mouse button is currently being pressed and was\n\t         *      initiated inside the tracked element, otherwise false.\n\t         * @param {Boolean} event.buttonDownAny\n\t         *      Was the button down anywhere in the screen during the event. <span style=\"color:red;\">Deprecated. Use buttons instead.</span>\n\t         * @param {Boolean} event.isTouchEvent\n\t         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n\t         * @param {Object} event.originalEvent\n\t         *      The original event object.\n\t         * @param {Boolean} event.preventDefaultAction\n\t         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n\t         * @param {Object} event.userData\n\t         *      Arbitrary user-defined object.\n\t         */\n\t        enterHandler: function () { },\n\t\n\t        /**\n\t         * Implement or assign implementation to these handlers during or after\n\t         * calling the constructor.\n\t         * @function\n\t         * @param {Object} event\n\t         * @param {OpenSeadragon.MouseTracker} event.eventSource\n\t         *      A reference to the tracker instance.\n\t         * @param {String} event.pointerType\n\t         *     \"mouse\", \"touch\", \"pen\", etc.\n\t         * @param {OpenSeadragon.Point} event.position\n\t         *      The position of the event relative to the tracked element.\n\t         * @param {Number} event.buttons\n\t         *      Current buttons pressed.\n\t         *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n\t         * @param {Number} event.pointers\n\t         *      Number of pointers (all types) active in the tracked element.\n\t         * @param {Boolean} event.insideElementPressed\n\t         *      True if the left mouse button is currently being pressed and was\n\t         *      initiated inside the tracked element, otherwise false.\n\t         * @param {Boolean} event.buttonDownAny\n\t         *      Was the button down anywhere in the screen during the event. <span style=\"color:red;\">Deprecated. Use buttons instead.</span>\n\t         * @param {Boolean} event.isTouchEvent\n\t         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n\t         * @param {Object} event.originalEvent\n\t         *      The original event object.\n\t         * @param {Boolean} event.preventDefaultAction\n\t         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n\t         * @param {Object} event.userData\n\t         *      Arbitrary user-defined object.\n\t         */\n\t        exitHandler: function () { },\n\t\n\t        /**\n\t         * Implement or assign implementation to these handlers during or after\n\t         * calling the constructor.\n\t         * @function\n\t         * @param {Object} event\n\t         * @param {OpenSeadragon.MouseTracker} event.eventSource\n\t         *      A reference to the tracker instance.\n\t         * @param {String} event.pointerType\n\t         *     \"mouse\", \"touch\", \"pen\", etc.\n\t         * @param {OpenSeadragon.Point} event.position\n\t         *      The position of the event relative to the tracked element.\n\t         * @param {Number} event.buttons\n\t         *      Current buttons pressed.\n\t         *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n\t         * @param {Boolean} event.isTouchEvent\n\t         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n\t         * @param {Object} event.originalEvent\n\t         *      The original event object.\n\t         * @param {Boolean} event.preventDefaultAction\n\t         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n\t         * @param {Object} event.userData\n\t         *      Arbitrary user-defined object.\n\t         */\n\t        pressHandler: function () { },\n\t\n\t        /**\n\t         * Implement or assign implementation to these handlers during or after\n\t         * calling the constructor.\n\t         * @function\n\t         * @param {Object} event\n\t         * @param {OpenSeadragon.MouseTracker} event.eventSource\n\t         *      A reference to the tracker instance.\n\t         * @param {String} event.pointerType\n\t         *     \"mouse\", \"touch\", \"pen\", etc.\n\t         * @param {OpenSeadragon.Point} event.position\n\t         *      The position of the event relative to the tracked element.\n\t         * @param {Number} event.button\n\t         *      Button which caused the event.\n\t         *      -1: none, 0: primary/left, 1: aux/middle, 2: secondary/right, 3: X1/back, 4: X2/forward, 5: pen eraser.\n\t         * @param {Number} event.buttons\n\t         *      Current buttons pressed.\n\t         *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n\t         * @param {Boolean} event.isTouchEvent\n\t         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n\t         * @param {Object} event.originalEvent\n\t         *      The original event object.\n\t         * @param {Boolean} event.preventDefaultAction\n\t         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n\t         * @param {Object} event.userData\n\t         *      Arbitrary user-defined object.\n\t         */\n\t        nonPrimaryPressHandler: function () { },\n\t\n\t        /**\n\t         * Implement or assign implementation to these handlers during or after\n\t         * calling the constructor.\n\t         * @function\n\t         * @param {Object} event\n\t         * @param {OpenSeadragon.MouseTracker} event.eventSource\n\t         *      A reference to the tracker instance.\n\t         * @param {String} event.pointerType\n\t         *     \"mouse\", \"touch\", \"pen\", etc.\n\t         * @param {OpenSeadragon.Point} event.position\n\t         *      The position of the event relative to the tracked element.\n\t         * @param {Number} event.buttons\n\t         *      Current buttons pressed.\n\t         *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n\t         * @param {Boolean} event.insideElementPressed\n\t         *      True if the left mouse button is currently being pressed and was\n\t         *      initiated inside the tracked element, otherwise false.\n\t         * @param {Boolean} event.insideElementReleased\n\t         *      True if the cursor inside the tracked element when the button was released.\n\t         * @param {Boolean} event.isTouchEvent\n\t         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n\t         * @param {Object} event.originalEvent\n\t         *      The original event object.\n\t         * @param {Boolean} event.preventDefaultAction\n\t         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n\t         * @param {Object} event.userData\n\t         *      Arbitrary user-defined object.\n\t         */\n\t        releaseHandler: function () { },\n\t\n\t        /**\n\t         * Implement or assign implementation to these handlers during or after\n\t         * calling the constructor.\n\t         * @function\n\t         * @param {Object} event\n\t         * @param {OpenSeadragon.MouseTracker} event.eventSource\n\t         *      A reference to the tracker instance.\n\t         * @param {String} event.pointerType\n\t         *     \"mouse\", \"touch\", \"pen\", etc.\n\t         * @param {OpenSeadragon.Point} event.position\n\t         *      The position of the event relative to the tracked element.\n\t         * @param {Number} event.button\n\t         *      Button which caused the event.\n\t         *      -1: none, 0: primary/left, 1: aux/middle, 2: secondary/right, 3: X1/back, 4: X2/forward, 5: pen eraser.\n\t         * @param {Number} event.buttons\n\t         *      Current buttons pressed.\n\t         *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n\t         * @param {Boolean} event.isTouchEvent\n\t         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n\t         * @param {Object} event.originalEvent\n\t         *      The original event object.\n\t         * @param {Boolean} event.preventDefaultAction\n\t         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n\t         * @param {Object} event.userData\n\t         *      Arbitrary user-defined object.\n\t         */\n\t        nonPrimaryReleaseHandler: function () { },\n\t\n\t        /**\n\t         * Implement or assign implementation to these handlers during or after\n\t         * calling the constructor.\n\t         * @function\n\t         * @param {Object} event\n\t         * @param {OpenSeadragon.MouseTracker} event.eventSource\n\t         *      A reference to the tracker instance.\n\t         * @param {String} event.pointerType\n\t         *     \"mouse\", \"touch\", \"pen\", etc.\n\t         * @param {OpenSeadragon.Point} event.position\n\t         *      The position of the event relative to the tracked element.\n\t         * @param {Number} event.buttons\n\t         *      Current buttons pressed.\n\t         *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n\t         * @param {Boolean} event.isTouchEvent\n\t         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n\t         * @param {Object} event.originalEvent\n\t         *      The original event object.\n\t         * @param {Boolean} event.preventDefaultAction\n\t         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n\t         * @param {Object} event.userData\n\t         *      Arbitrary user-defined object.\n\t         */\n\t        moveHandler: function () { },\n\t\n\t        /**\n\t         * Implement or assign implementation to these handlers during or after\n\t         * calling the constructor.\n\t         * @function\n\t         * @param {Object} event\n\t         * @param {OpenSeadragon.MouseTracker} event.eventSource\n\t         *      A reference to the tracker instance.\n\t         * @param {String} event.pointerType\n\t         *     \"mouse\", \"touch\", \"pen\", etc.\n\t         * @param {OpenSeadragon.Point} event.position\n\t         *      The position of the event relative to the tracked element.\n\t         * @param {Number} event.scroll\n\t         *      The scroll delta for the event.\n\t         * @param {Boolean} event.shift\n\t         *      True if the shift key was pressed during this event.\n\t         * @param {Boolean} event.isTouchEvent\n\t         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead. Touch devices no longer generate scroll event.</span>\n\t         * @param {Object} event.originalEvent\n\t         *      The original event object.\n\t         * @param {Boolean} event.preventDefaultAction\n\t         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n\t         * @param {Object} event.userData\n\t         *      Arbitrary user-defined object.\n\t         */\n\t        scrollHandler: function () { },\n\t\n\t        /**\n\t         * Implement or assign implementation to these handlers during or after\n\t         * calling the constructor.\n\t         * @function\n\t         * @param {Object} event\n\t         * @param {OpenSeadragon.MouseTracker} event.eventSource\n\t         *      A reference to the tracker instance.\n\t         * @param {String} event.pointerType\n\t         *     \"mouse\", \"touch\", \"pen\", etc.\n\t         * @param {OpenSeadragon.Point} event.position\n\t         *      The position of the event relative to the tracked element.\n\t         * @param {Boolean} event.quick\n\t         *      True only if the clickDistThreshold and clickTimeThreshold are both passed. Useful for ignoring drag events.\n\t         * @param {Boolean} event.shift\n\t         *      True if the shift key was pressed during this event.\n\t         * @param {Boolean} event.isTouchEvent\n\t         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n\t         * @param {Object} event.originalEvent\n\t         *      The original event object.\n\t         * @param {Boolean} event.preventDefaultAction\n\t         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n\t         * @param {Object} event.userData\n\t         *      Arbitrary user-defined object.\n\t         */\n\t        clickHandler: function () { },\n\t\n\t        /**\n\t         * Implement or assign implementation to these handlers during or after\n\t         * calling the constructor.\n\t         * @function\n\t         * @param {Object} event\n\t         * @param {OpenSeadragon.MouseTracker} event.eventSource\n\t         *      A reference to the tracker instance.\n\t         * @param {String} event.pointerType\n\t         *     \"mouse\", \"touch\", \"pen\", etc.\n\t         * @param {OpenSeadragon.Point} event.position\n\t         *      The position of the event relative to the tracked element.\n\t         * @param {Boolean} event.shift\n\t         *      True if the shift key was pressed during this event.\n\t         * @param {Boolean} event.isTouchEvent\n\t         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n\t         * @param {Object} event.originalEvent\n\t         *      The original event object.\n\t         * @param {Boolean} event.preventDefaultAction\n\t         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n\t         * @param {Object} event.userData\n\t         *      Arbitrary user-defined object.\n\t         */\n\t        dblClickHandler: function () { },\n\t\n\t        /**\n\t         * Implement or assign implementation to these handlers during or after\n\t         * calling the constructor.\n\t         * @function\n\t         * @param {Object} event\n\t         * @param {OpenSeadragon.MouseTracker} event.eventSource\n\t         *      A reference to the tracker instance.\n\t         * @param {String} event.pointerType\n\t         *     \"mouse\", \"touch\", \"pen\", etc.\n\t         * @param {OpenSeadragon.Point} event.position\n\t         *      The position of the event relative to the tracked element.\n\t         * @param {Number} event.buttons\n\t         *      Current buttons pressed.\n\t         *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n\t         * @param {OpenSeadragon.Point} event.delta\n\t         *      The x,y components of the difference between the current position and the last drag event position.  Useful for ignoring or weighting the events.\n\t         * @param {Number} event.speed\n\t         *     Current computed speed, in pixels per second.\n\t         * @param {Number} event.direction\n\t         *     Current computed direction, expressed as an angle counterclockwise relative to the positive X axis (-pi to pi, in radians). Only valid if speed > 0.\n\t         * @param {Boolean} event.shift\n\t         *      True if the shift key was pressed during this event.\n\t         * @param {Boolean} event.isTouchEvent\n\t         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n\t         * @param {Object} event.originalEvent\n\t         *      The original event object.\n\t         * @param {Boolean} event.preventDefaultAction\n\t         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n\t         * @param {Object} event.userData\n\t         *      Arbitrary user-defined object.\n\t         */\n\t        dragHandler: function () { },\n\t\n\t        /**\n\t         * Implement or assign implementation to these handlers during or after\n\t         * calling the constructor.\n\t         * @function\n\t         * @param {Object} event\n\t         * @param {OpenSeadragon.MouseTracker} event.eventSource\n\t         *      A reference to the tracker instance.\n\t         * @param {String} event.pointerType\n\t         *     \"mouse\", \"touch\", \"pen\", etc.\n\t         * @param {OpenSeadragon.Point} event.position\n\t         *      The position of the event relative to the tracked element.\n\t         * @param {Number} event.speed\n\t         *     Speed at the end of a drag gesture, in pixels per second.\n\t         * @param {Number} event.direction\n\t         *     Direction at the end of a drag gesture, expressed as an angle counterclockwise relative to the positive X axis (-pi to pi, in radians). Only valid if speed > 0.\n\t         * @param {Boolean} event.shift\n\t         *      True if the shift key was pressed during this event.\n\t         * @param {Boolean} event.isTouchEvent\n\t         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n\t         * @param {Object} event.originalEvent\n\t         *      The original event object.\n\t         * @param {Boolean} event.preventDefaultAction\n\t         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n\t         * @param {Object} event.userData\n\t         *      Arbitrary user-defined object.\n\t         */\n\t        dragEndHandler: function () { },\n\t\n\t        /**\n\t         * Implement or assign implementation to these handlers during or after\n\t         * calling the constructor.\n\t         * @function\n\t         * @param {Object} event\n\t         * @param {OpenSeadragon.MouseTracker} event.eventSource\n\t         *      A reference to the tracker instance.\n\t         * @param {String} event.pointerType\n\t         *     \"mouse\", \"touch\", \"pen\", etc.\n\t         * @param {Array.<OpenSeadragon.MouseTracker.GesturePoint>} event.gesturePoints\n\t         *      Gesture points associated with the gesture. Velocity data can be found here.\n\t         * @param {OpenSeadragon.Point} event.lastCenter\n\t         *      The previous center point of the two pinch contact points relative to the tracked element.\n\t         * @param {OpenSeadragon.Point} event.center\n\t         *      The center point of the two pinch contact points relative to the tracked element.\n\t         * @param {Number} event.lastDistance\n\t         *      The previous distance between the two pinch contact points in CSS pixels.\n\t         * @param {Number} event.distance\n\t         *      The distance between the two pinch contact points in CSS pixels.\n\t         * @param {Boolean} event.shift\n\t         *      True if the shift key was pressed during this event.\n\t         * @param {Object} event.originalEvent\n\t         *      The original event object.\n\t         * @param {Boolean} event.preventDefaultAction\n\t         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n\t         * @param {Object} event.userData\n\t         *      Arbitrary user-defined object.\n\t         */\n\t        pinchHandler: function () { },\n\t\n\t        /**\n\t         * Implement or assign implementation to these handlers during or after\n\t         * calling the constructor.\n\t         * @function\n\t         * @param {Object} event\n\t         * @param {OpenSeadragon.MouseTracker} event.eventSource\n\t         *      A reference to the tracker instance.\n\t         * @param {String} event.pointerType\n\t         *     \"mouse\", \"touch\", \"pen\", etc.\n\t         * @param {OpenSeadragon.Point} event.position\n\t         *      The position of the event relative to the tracked element.\n\t         * @param {Number} event.buttons\n\t         *      Current buttons pressed.\n\t         *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n\t         * @param {Boolean} event.isTouchEvent\n\t         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n\t         * @param {Object} event.originalEvent\n\t         *      The original event object.\n\t         * @param {Boolean} event.preventDefaultAction\n\t         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n\t         * @param {Object} event.userData\n\t         *      Arbitrary user-defined object.\n\t         */\n\t        stopHandler: function () { },\n\t\n\t        /**\n\t         * Implement or assign implementation to these handlers during or after\n\t         * calling the constructor.\n\t         * @function\n\t         * @param {Object} event\n\t         * @param {OpenSeadragon.MouseTracker} event.eventSource\n\t         *      A reference to the tracker instance.\n\t         * @param {Number} event.keyCode\n\t         *      The key code that was pressed.\n\t         * @param {Boolean} event.ctrl\n\t         *      True if the ctrl key was pressed during this event.\n\t         * @param {Boolean} event.shift\n\t         *      True if the shift key was pressed during this event.\n\t         * @param {Boolean} event.alt\n\t         *      True if the alt key was pressed during this event.\n\t         * @param {Boolean} event.meta\n\t         *      True if the meta key was pressed during this event.\n\t         * @param {Object} event.originalEvent\n\t         *      The original event object.\n\t         * @param {Boolean} event.preventDefaultAction\n\t         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n\t         * @param {Object} event.userData\n\t         *      Arbitrary user-defined object.\n\t         */\n\t        keyDownHandler: function () { },\n\t\n\t        /**\n\t         * Implement or assign implementation to these handlers during or after\n\t         * calling the constructor.\n\t         * @function\n\t         * @param {Object} event\n\t         * @param {OpenSeadragon.MouseTracker} event.eventSource\n\t         *      A reference to the tracker instance.\n\t         * @param {Number} event.keyCode\n\t         *      The key code that was pressed.\n\t         * @param {Boolean} event.ctrl\n\t         *      True if the ctrl key was pressed during this event.\n\t         * @param {Boolean} event.shift\n\t         *      True if the shift key was pressed during this event.\n\t         * @param {Boolean} event.alt\n\t         *      True if the alt key was pressed during this event.\n\t         * @param {Boolean} event.meta\n\t         *      True if the meta key was pressed during this event.\n\t         * @param {Object} event.originalEvent\n\t         *      The original event object.\n\t         * @param {Boolean} event.preventDefaultAction\n\t         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n\t         * @param {Object} event.userData\n\t         *      Arbitrary user-defined object.\n\t         */\n\t        keyUpHandler: function () { },\n\t\n\t        /**\n\t         * Implement or assign implementation to these handlers during or after\n\t         * calling the constructor.\n\t         * @function\n\t         * @param {Object} event\n\t         * @param {OpenSeadragon.MouseTracker} event.eventSource\n\t         *      A reference to the tracker instance.\n\t         * @param {Number} event.keyCode\n\t         *      The key code that was pressed.\n\t         * @param {Boolean} event.ctrl\n\t         *      True if the ctrl key was pressed during this event.\n\t         * @param {Boolean} event.shift\n\t         *      True if the shift key was pressed during this event.\n\t         * @param {Boolean} event.alt\n\t         *      True if the alt key was pressed during this event.\n\t         * @param {Boolean} event.meta\n\t         *      True if the meta key was pressed during this event.\n\t         * @param {Object} event.originalEvent\n\t         *      The original event object.\n\t         * @param {Boolean} event.preventDefaultAction\n\t         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n\t         * @param {Object} event.userData\n\t         *      Arbitrary user-defined object.\n\t         */\n\t        keyHandler: function () { },\n\t\n\t        /**\n\t         * Implement or assign implementation to these handlers during or after\n\t         * calling the constructor.\n\t         * @function\n\t         * @param {Object} event\n\t         * @param {OpenSeadragon.MouseTracker} event.eventSource\n\t         *      A reference to the tracker instance.\n\t         * @param {Object} event.originalEvent\n\t         *      The original event object.\n\t         * @param {Boolean} event.preventDefaultAction\n\t         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n\t         * @param {Object} event.userData\n\t         *      Arbitrary user-defined object.\n\t         */\n\t        focusHandler: function () { },\n\t\n\t        /**\n\t         * Implement or assign implementation to these handlers during or after\n\t         * calling the constructor.\n\t         * @function\n\t         * @param {Object} event\n\t         * @param {OpenSeadragon.MouseTracker} event.eventSource\n\t         *      A reference to the tracker instance.\n\t         * @param {Object} event.originalEvent\n\t         *      The original event object.\n\t         * @param {Boolean} event.preventDefaultAction\n\t         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n\t         * @param {Object} event.userData\n\t         *      Arbitrary user-defined object.\n\t         */\n\t        blurHandler: function () { }\n\t    };\n\t\n\t\n\t    /**\n\t     * Provides continuous computation of velocity (speed and direction) of active pointers.\n\t     * This is a singleton, used by all MouseTracker instances, as it is unlikely there will ever be more than\n\t     * two active gesture pointers at a time.\n\t     *\n\t     * @private\n\t     * @member gesturePointVelocityTracker\n\t     * @memberof OpenSeadragon.MouseTracker\n\t     */\n\t    $.MouseTracker.gesturePointVelocityTracker = (function () {\n\t        var trackerPoints = [],\n\t            intervalId = 0,\n\t            lastTime = 0;\n\t\n\t        // Generates a unique identifier for a tracked gesture point\n\t        var _generateGuid = function ( tracker, gPoint ) {\n\t            return tracker.hash.toString() + gPoint.type + gPoint.id.toString();\n\t        };\n\t\n\t        // Interval timer callback. Computes velocity for all tracked gesture points.\n\t        var _doTracking = function () {\n\t            var i,\n\t                len = trackerPoints.length,\n\t                trackPoint,\n\t                gPoint,\n\t                now = $.now(),\n\t                elapsedTime,\n\t                distance,\n\t                speed;\n\t\n\t            elapsedTime = now - lastTime;\n\t            lastTime = now;\n\t\n\t            for ( i = 0; i < len; i++ ) {\n\t                trackPoint = trackerPoints[ i ];\n\t                gPoint = trackPoint.gPoint;\n\t                // Math.atan2 gives us just what we need for a velocity vector, as we can simply\n\t                //   use cos()/sin() to extract the x/y velocity components.\n\t                gPoint.direction = Math.atan2( gPoint.currentPos.y - trackPoint.lastPos.y, gPoint.currentPos.x - trackPoint.lastPos.x );\n\t                // speed = distance / elapsed time\n\t                distance = trackPoint.lastPos.distanceTo( gPoint.currentPos );\n\t                trackPoint.lastPos = gPoint.currentPos;\n\t                speed = 1000 * distance / ( elapsedTime + 1 );\n\t                // Simple biased average, favors the most recent speed computation. Smooths out erratic gestures a bit.\n\t                gPoint.speed = 0.75 * speed + 0.25 * gPoint.speed;\n\t            }\n\t        };\n\t\n\t        // Public. Add a gesture point to be tracked\n\t        var addPoint = function ( tracker, gPoint ) {\n\t            var guid = _generateGuid( tracker, gPoint );\n\t\n\t            trackerPoints.push(\n\t                {\n\t                    guid: guid,\n\t                    gPoint: gPoint,\n\t                    lastPos: gPoint.currentPos\n\t                } );\n\t\n\t            // Only fire up the interval timer when there's gesture pointers to track\n\t            if ( trackerPoints.length === 1 ) {\n\t                lastTime = $.now();\n\t                intervalId = window.setInterval( _doTracking, 50 );\n\t            }\n\t        };\n\t\n\t        // Public. Stop tracking a gesture point\n\t        var removePoint = function ( tracker, gPoint ) {\n\t            var guid = _generateGuid( tracker, gPoint ),\n\t                i,\n\t                len = trackerPoints.length;\n\t            for ( i = 0; i < len; i++ ) {\n\t                if ( trackerPoints[ i ].guid === guid ) {\n\t                    trackerPoints.splice( i, 1 );\n\t                    // Only run the interval timer if theres gesture pointers to track\n\t                    len--;\n\t                    if ( len === 0 ) {\n\t                        window.clearInterval( intervalId );\n\t                    }\n\t                    break;\n\t                }\n\t            }\n\t        };\n\t\n\t        return {\n\t            addPoint:    addPoint,\n\t            removePoint: removePoint\n\t        };\n\t    } )();\n\t\n\t\n\t///////////////////////////////////////////////////////////////////////////////\n\t// Pointer event model and feature detection\n\t///////////////////////////////////////////////////////////////////////////////\n\t\n\t    $.MouseTracker.captureElement = document;\n\t\n\t    /**\n\t     * Detect available mouse wheel event name.\n\t     */\n\t    $.MouseTracker.wheelEventName = ( $.Browser.vendor == $.BROWSERS.IE && $.Browser.version > 8 ) ||\n\t                                                ( 'onwheel' in document.createElement( 'div' ) ) ? 'wheel' : // Modern browsers support 'wheel'\n\t                                    document.onmousewheel !== undefined ? 'mousewheel' :                     // Webkit and IE support at least 'mousewheel'\n\t                                    'DOMMouseScroll';                                                        // Assume old Firefox\n\t\n\t    /**\n\t     * Detect legacy mouse capture support.\n\t     */\n\t    $.MouseTracker.supportsMouseCapture = (function () {\n\t        var divElement = document.createElement( 'div' );\n\t        return $.isFunction( divElement.setCapture ) && $.isFunction( divElement.releaseCapture );\n\t    }());\n\t\n\t    /**\n\t     * Detect browser pointer device event model(s) and build appropriate list of events to subscribe to.\n\t     */\n\t    $.MouseTracker.subscribeEvents = [ \"click\", \"dblclick\", \"keydown\", \"keyup\", \"keypress\", \"focus\", \"blur\", $.MouseTracker.wheelEventName ];\n\t\n\t    if( $.MouseTracker.wheelEventName == \"DOMMouseScroll\" ) {\n\t        // Older Firefox\n\t        $.MouseTracker.subscribeEvents.push( \"MozMousePixelScroll\" );\n\t    }\n\t\n\t    // Note: window.navigator.pointerEnable is deprecated on IE 11 and not part of W3C spec.\n\t    if ( window.PointerEvent && ( window.navigator.pointerEnabled || $.Browser.vendor !== $.BROWSERS.IE ) ) {\n\t        // IE11 and other W3C Pointer Event implementations (see http://www.w3.org/TR/pointerevents)\n\t        $.MouseTracker.havePointerEvents = true;\n\t        $.MouseTracker.subscribeEvents.push( \"pointerover\", \"pointerout\", \"pointerdown\", \"pointerup\", \"pointermove\", \"pointercancel\" );\n\t        $.MouseTracker.unprefixedPointerEvents = true;\n\t        if( navigator.maxTouchPoints ) {\n\t            $.MouseTracker.maxTouchPoints = navigator.maxTouchPoints;\n\t        } else {\n\t            $.MouseTracker.maxTouchPoints = 0;\n\t        }\n\t        $.MouseTracker.haveMouseEnter = false;\n\t    } else if ( window.MSPointerEvent && window.navigator.msPointerEnabled ) {\n\t        // IE10\n\t        $.MouseTracker.havePointerEvents = true;\n\t        $.MouseTracker.subscribeEvents.push( \"MSPointerOver\", \"MSPointerOut\", \"MSPointerDown\", \"MSPointerUp\", \"MSPointerMove\", \"MSPointerCancel\" );\n\t        $.MouseTracker.unprefixedPointerEvents = false;\n\t        if( navigator.msMaxTouchPoints ) {\n\t            $.MouseTracker.maxTouchPoints = navigator.msMaxTouchPoints;\n\t        } else {\n\t            $.MouseTracker.maxTouchPoints = 0;\n\t        }\n\t        $.MouseTracker.haveMouseEnter = false;\n\t    } else {\n\t        // Legacy W3C mouse events\n\t        $.MouseTracker.havePointerEvents = false;\n\t        if ( $.Browser.vendor === $.BROWSERS.IE && $.Browser.version < 9 ) {\n\t            $.MouseTracker.subscribeEvents.push( \"mouseenter\", \"mouseleave\" );\n\t            $.MouseTracker.haveMouseEnter = true;\n\t        } else {\n\t            $.MouseTracker.subscribeEvents.push( \"mouseover\", \"mouseout\" );\n\t            $.MouseTracker.haveMouseEnter = false;\n\t        }\n\t        $.MouseTracker.subscribeEvents.push( \"mousedown\", \"mouseup\", \"mousemove\" );\n\t        if ( 'ontouchstart' in window ) {\n\t            // iOS, Android, and other W3c Touch Event implementations\n\t            //    (see http://www.w3.org/TR/touch-events/)\n\t            //    (see https://developer.apple.com/library/ios/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html)\n\t            //    (see https://developer.apple.com/library/safari/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html)\n\t            $.MouseTracker.subscribeEvents.push( \"touchstart\", \"touchend\", \"touchmove\", \"touchcancel\" );\n\t        }\n\t        if ( 'ongesturestart' in window ) {\n\t            // iOS (see https://developer.apple.com/library/ios/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html)\n\t            //   Subscribe to these to prevent default gesture handling\n\t            $.MouseTracker.subscribeEvents.push( \"gesturestart\", \"gesturechange\" );\n\t        }\n\t        $.MouseTracker.mousePointerId = \"legacy-mouse\";\n\t        $.MouseTracker.maxTouchPoints = 10;\n\t    }\n\t\n\t\n\t///////////////////////////////////////////////////////////////////////////////\n\t// Classes and typedefs\n\t///////////////////////////////////////////////////////////////////////////////\n\t\n\t    /**\n\t     * Represents a point of contact on the screen made by a mouse cursor, pen, touch, or other pointer device.\n\t     *\n\t     * @typedef {Object} GesturePoint\n\t     * @memberof OpenSeadragon.MouseTracker\n\t     *\n\t     * @property {Number} id\n\t     *     Identifier unique from all other active GesturePoints for a given pointer device.\n\t     * @property {String} type\n\t     *     The pointer device type: \"mouse\", \"touch\", \"pen\", etc.\n\t     * @property {Boolean} captured\n\t     *     True if events for the gesture point are captured to the tracked element.\n\t     * @property {Boolean} isPrimary\n\t     *     True if the gesture point is a master pointer amongst the set of active pointers for each pointer type. True for mouse and primary (first) touch/pen pointers.\n\t     * @property {Boolean} insideElementPressed\n\t     *     True if button pressed or contact point initiated inside the screen area of the tracked element.\n\t     * @property {Boolean} insideElement\n\t     *     True if pointer or contact point is currently inside the bounds of the tracked element.\n\t     * @property {Number} speed\n\t     *     Current computed speed, in pixels per second.\n\t     * @property {Number} direction\n\t     *     Current computed direction, expressed as an angle counterclockwise relative to the positive X axis (-pi to pi, in radians). Only valid if speed > 0.\n\t     * @property {OpenSeadragon.Point} contactPos\n\t     *     The initial pointer contact position, relative to the page including any scrolling. Only valid if the pointer has contact (pressed, touch contact, pen contact).\n\t     * @property {Number} contactTime\n\t     *     The initial pointer contact time, in milliseconds. Only valid if the pointer has contact (pressed, touch contact, pen contact).\n\t     * @property {OpenSeadragon.Point} lastPos\n\t     *     The last pointer position, relative to the page including any scrolling.\n\t     * @property {Number} lastTime\n\t     *     The last pointer contact time, in milliseconds.\n\t     * @property {OpenSeadragon.Point} currentPos\n\t     *     The current pointer position, relative to the page including any scrolling.\n\t     * @property {Number} currentTime\n\t     *     The current pointer contact time, in milliseconds.\n\t     */\n\t\n\t\n\t    /**\n\t     * @class GesturePointList\n\t     * @classdesc Provides an abstraction for a set of active {@link OpenSeadragon.MouseTracker.GesturePoint|GesturePoint} objects for a given pointer device type.\n\t     *            Active pointers are any pointer being tracked for this element which are in the hit-test area\n\t     *            of the element (for hover-capable devices) and/or have contact or a button press initiated in the element.\n\t     * @memberof OpenSeadragon.MouseTracker\n\t     * @param {String} type - The pointer device type: \"mouse\", \"touch\", \"pen\", etc.\n\t     */\n\t    $.MouseTracker.GesturePointList = function ( type ) {\n\t        this._gPoints = [];\n\t        /**\n\t         * The pointer device type: \"mouse\", \"touch\", \"pen\", etc.\n\t         * @member {String} type\n\t         * @memberof OpenSeadragon.MouseTracker.GesturePointList#\n\t         */\n\t        this.type = type;\n\t        /**\n\t         * Current buttons pressed for the device.\n\t         * Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n\t         * @member {Number} buttons\n\t         * @memberof OpenSeadragon.MouseTracker.GesturePointList#\n\t         */\n\t        this.buttons = 0;\n\t        /**\n\t         * Current number of contact points (touch points, mouse down, etc.) for the device.\n\t         * @member {Number} contacts\n\t         * @memberof OpenSeadragon.MouseTracker.GesturePointList#\n\t         */\n\t        this.contacts = 0;\n\t        /**\n\t         * Current number of clicks for the device. Used for multiple click gesture tracking.\n\t         * @member {Number} clicks\n\t         * @memberof OpenSeadragon.MouseTracker.GesturePointList#\n\t         */\n\t        this.clicks = 0;\n\t        /**\n\t         * Current number of captured pointers for the device.\n\t         * @member {Number} captureCount\n\t         * @memberof OpenSeadragon.MouseTracker.GesturePointList#\n\t         */\n\t        this.captureCount = 0;\n\t    };\n\t\n\t    /** @lends OpenSeadragon.MouseTracker.GesturePointList.prototype */\n\t    $.MouseTracker.GesturePointList.prototype = {\n\t        /**\n\t         * @function\n\t         * @returns {Number} Number of gesture points in the list.\n\t         */\n\t        getLength: function () {\n\t            return this._gPoints.length;\n\t        },\n\t        /**\n\t         * @function\n\t         * @returns {Array.<OpenSeadragon.MouseTracker.GesturePoint>} The list of gesture points in the list as an array (read-only).\n\t         */\n\t        asArray: function () {\n\t            return this._gPoints;\n\t        },\n\t        /**\n\t         * @function\n\t         * @param {OpenSeadragon.MouseTracker.GesturePoint} gesturePoint - A gesture point to add to the list.\n\t         * @returns {Number} Number of gesture points in the list.\n\t         */\n\t        add: function ( gp ) {\n\t            return this._gPoints.push( gp );\n\t        },\n\t        /**\n\t         * @function\n\t         * @param {Number} id - The id of the gesture point to remove from the list.\n\t         * @returns {Number} Number of gesture points in the list.\n\t         */\n\t        removeById: function ( id ) {\n\t            var i,\n\t                len = this._gPoints.length;\n\t            for ( i = 0; i < len; i++ ) {\n\t                if ( this._gPoints[ i ].id === id ) {\n\t                    this._gPoints.splice( i, 1 );\n\t                    break;\n\t                }\n\t            }\n\t            return this._gPoints.length;\n\t        },\n\t        /**\n\t         * @function\n\t         * @param {Number} index - The index of the gesture point to retrieve from the list.\n\t         * @returns {OpenSeadragon.MouseTracker.GesturePoint|null} The gesture point at the given index, or null if not found.\n\t         */\n\t        getByIndex: function ( index ) {\n\t            if ( index < this._gPoints.length) {\n\t                return this._gPoints[ index ];\n\t            }\n\t\n\t            return null;\n\t        },\n\t        /**\n\t         * @function\n\t         * @param {Number} id - The id of the gesture point to retrieve from the list.\n\t         * @returns {OpenSeadragon.MouseTracker.GesturePoint|null} The gesture point with the given id, or null if not found.\n\t         */\n\t        getById: function ( id ) {\n\t            var i,\n\t                len = this._gPoints.length;\n\t            for ( i = 0; i < len; i++ ) {\n\t                if ( this._gPoints[ i ].id === id ) {\n\t                    return this._gPoints[ i ];\n\t                }\n\t            }\n\t            return null;\n\t        },\n\t        /**\n\t         * @function\n\t         * @returns {OpenSeadragon.MouseTracker.GesturePoint|null} The primary gesture point in the list, or null if not found.\n\t         */\n\t        getPrimary: function ( id ) {\n\t            var i,\n\t                len = this._gPoints.length;\n\t            for ( i = 0; i < len; i++ ) {\n\t                if ( this._gPoints[ i ].isPrimary ) {\n\t                    return this._gPoints[ i ];\n\t                }\n\t            }\n\t            return null;\n\t        }\n\t    };\n\t\n\t\n\t///////////////////////////////////////////////////////////////////////////////\n\t// Utility functions\n\t///////////////////////////////////////////////////////////////////////////////\n\t\n\t    /**\n\t     * Removes all tracked pointers.\n\t     * @private\n\t     * @inner\n\t     */\n\t    function clearTrackedPointers( tracker ) {\n\t        var delegate = THIS[ tracker.hash ],\n\t            i,\n\t            pointerListCount = delegate.activePointersLists.length;\n\t\n\t        for ( i = 0; i < pointerListCount; i++ ) {\n\t            if ( delegate.activePointersLists[ i ].captureCount > 0 ) {\n\t                $.removeEvent(\n\t                    $.MouseTracker.captureElement,\n\t                    'mousemove',\n\t                    delegate.mousemovecaptured,\n\t                    true\n\t                );\n\t                $.removeEvent(\n\t                    $.MouseTracker.captureElement,\n\t                    'mouseup',\n\t                    delegate.mouseupcaptured,\n\t                    true\n\t                );\n\t                $.removeEvent(\n\t                    $.MouseTracker.captureElement,\n\t                    $.MouseTracker.unprefixedPointerEvents ? 'pointermove' : 'MSPointerMove',\n\t                    delegate.pointermovecaptured,\n\t                    true\n\t                );\n\t                $.removeEvent(\n\t                    $.MouseTracker.captureElement,\n\t                    $.MouseTracker.unprefixedPointerEvents ? 'pointerup' : 'MSPointerUp',\n\t                    delegate.pointerupcaptured,\n\t                    true\n\t                );\n\t                $.removeEvent(\n\t                    $.MouseTracker.captureElement,\n\t                    'touchmove',\n\t                    delegate.touchmovecaptured,\n\t                    true\n\t                );\n\t                $.removeEvent(\n\t                    $.MouseTracker.captureElement,\n\t                    'touchend',\n\t                    delegate.touchendcaptured,\n\t                    true\n\t                );\n\t\n\t                delegate.activePointersLists[ i ].captureCount = 0;\n\t            }\n\t        }\n\t\n\t        for ( i = 0; i < pointerListCount; i++ ) {\n\t            delegate.activePointersLists.pop();\n\t        }\n\t    }\n\t\n\t    /**\n\t     * Starts tracking pointer events on the tracked element.\n\t     * @private\n\t     * @inner\n\t     */\n\t    function startTracking( tracker ) {\n\t        var delegate = THIS[ tracker.hash ],\n\t            event,\n\t            i;\n\t\n\t        if ( !delegate.tracking ) {\n\t            for ( i = 0; i < $.MouseTracker.subscribeEvents.length; i++ ) {\n\t                event = $.MouseTracker.subscribeEvents[ i ];\n\t                $.addEvent(\n\t                    tracker.element,\n\t                    event,\n\t                    delegate[ event ],\n\t                    false\n\t                );\n\t            }\n\t\n\t            clearTrackedPointers( tracker );\n\t\n\t            delegate.tracking = true;\n\t        }\n\t    }\n\t\n\t    /**\n\t     * Stops tracking pointer events on the tracked element.\n\t     * @private\n\t     * @inner\n\t     */\n\t    function stopTracking( tracker ) {\n\t        var delegate = THIS[ tracker.hash ],\n\t            event,\n\t            i;\n\t\n\t        if ( delegate.tracking ) {\n\t            for ( i = 0; i < $.MouseTracker.subscribeEvents.length; i++ ) {\n\t                event = $.MouseTracker.subscribeEvents[ i ];\n\t                $.removeEvent(\n\t                    tracker.element,\n\t                    event,\n\t                    delegate[ event ],\n\t                    false\n\t                );\n\t            }\n\t\n\t            clearTrackedPointers( tracker );\n\t\n\t            delegate.tracking = false;\n\t        }\n\t    }\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function getCaptureEventParams( tracker, pointerType ) {\n\t        var delegate = THIS[ tracker.hash ];\n\t\n\t        if ( pointerType === 'pointerevent' ) {\n\t            return {\n\t                upName: $.MouseTracker.unprefixedPointerEvents ? 'pointerup' : 'MSPointerUp',\n\t                upHandler: delegate.pointerupcaptured,\n\t                moveName: $.MouseTracker.unprefixedPointerEvents ? 'pointermove' : 'MSPointerMove',\n\t                moveHandler: delegate.pointermovecaptured\n\t            };\n\t        } else if ( pointerType === 'mouse' ) {\n\t            return {\n\t                upName: 'mouseup',\n\t                upHandler: delegate.mouseupcaptured,\n\t                moveName: 'mousemove',\n\t                moveHandler: delegate.mousemovecaptured\n\t            };\n\t        } else if ( pointerType === 'touch' ) {\n\t            return {\n\t                upName: 'touchend',\n\t                upHandler: delegate.touchendcaptured,\n\t                moveName: 'touchmove',\n\t                moveHandler: delegate.touchmovecaptured\n\t            };\n\t        } else {\n\t            throw new Error( \"MouseTracker.getCaptureEventParams: Unknown pointer type.\" );\n\t        }\n\t    }\n\t\n\t    /**\n\t     * Begin capturing pointer events to the tracked element.\n\t     * @private\n\t     * @inner\n\t     */\n\t    function capturePointer( tracker, pointerType, pointerCount ) {\n\t        var pointsList = tracker.getActivePointersListByType( pointerType ),\n\t            eventParams;\n\t\n\t        pointsList.captureCount += (pointerCount || 1);\n\t\n\t        if ( pointsList.captureCount === 1 ) {\n\t            if ( $.Browser.vendor === $.BROWSERS.IE && $.Browser.version < 9 ) {\n\t                tracker.element.setCapture( true );\n\t            } else {\n\t                eventParams = getCaptureEventParams( tracker, $.MouseTracker.havePointerEvents ? 'pointerevent' : pointerType );\n\t                // We emulate mouse capture by hanging listeners on the document object.\n\t                //    (Note we listen on the capture phase so the captured handlers will get called first)\n\t                if (isInIframe && canAccessEvents(window.top)) {\n\t                    $.addEvent(\n\t                        window.top,\n\t                        eventParams.upName,\n\t                        eventParams.upHandler,\n\t                        true\n\t                    );\n\t                }\n\t                $.addEvent(\n\t                    $.MouseTracker.captureElement,\n\t                    eventParams.upName,\n\t                    eventParams.upHandler,\n\t                    true\n\t                );\n\t                $.addEvent(\n\t                    $.MouseTracker.captureElement,\n\t                    eventParams.moveName,\n\t                    eventParams.moveHandler,\n\t                    true\n\t                );\n\t            }\n\t        }\n\t    }\n\t\n\t\n\t    /**\n\t     * Stop capturing pointer events to the tracked element.\n\t     * @private\n\t     * @inner\n\t     */\n\t    function releasePointer( tracker, pointerType, pointerCount ) {\n\t        var pointsList = tracker.getActivePointersListByType( pointerType ),\n\t            eventParams;\n\t\n\t        pointsList.captureCount -= (pointerCount || 1);\n\t\n\t        if ( pointsList.captureCount === 0 ) {\n\t            if ( $.Browser.vendor === $.BROWSERS.IE && $.Browser.version < 9 ) {\n\t                tracker.element.releaseCapture();\n\t            } else {\n\t                eventParams = getCaptureEventParams( tracker, $.MouseTracker.havePointerEvents ? 'pointerevent' : pointerType );\n\t                // We emulate mouse capture by hanging listeners on the document object.\n\t                //    (Note we listen on the capture phase so the captured handlers will get called first)\n\t                if (isInIframe && canAccessEvents(window.top)) {\n\t                    $.removeEvent(\n\t                        window.top,\n\t                        eventParams.upName,\n\t                        eventParams.upHandler,\n\t                        true\n\t                    );\n\t                }\n\t                $.removeEvent(\n\t                    $.MouseTracker.captureElement,\n\t                    eventParams.moveName,\n\t                    eventParams.moveHandler,\n\t                    true\n\t                );\n\t                $.removeEvent(\n\t                    $.MouseTracker.captureElement,\n\t                    eventParams.upName,\n\t                    eventParams.upHandler,\n\t                    true\n\t                );\n\t            }\n\t        }\n\t    }\n\t\n\t\n\t    /**\n\t     * Gets a W3C Pointer Events model compatible pointer type string from a DOM pointer event.\n\t     * IE10 used a long integer value, but the W3C specification (and IE11+) use a string \"mouse\", \"touch\", \"pen\", etc.\n\t     * @private\n\t     * @inner\n\t     */\n\t    function getPointerType( event ) {\n\t        var pointerTypeStr;\n\t        if ( $.MouseTracker.unprefixedPointerEvents ) {\n\t            pointerTypeStr = event.pointerType;\n\t        } else {\n\t            // IE10\n\t            //  MSPOINTER_TYPE_TOUCH: 0x00000002\n\t            //  MSPOINTER_TYPE_PEN:   0x00000003\n\t            //  MSPOINTER_TYPE_MOUSE: 0x00000004\n\t            switch( event.pointerType )\n\t            {\n\t                case 0x00000002:\n\t                    pointerTypeStr = 'touch';\n\t                    break;\n\t                case 0x00000003:\n\t                    pointerTypeStr = 'pen';\n\t                    break;\n\t                case 0x00000004:\n\t                    pointerTypeStr = 'mouse';\n\t                    break;\n\t                default:\n\t                    pointerTypeStr = '';\n\t            }\n\t        }\n\t        return pointerTypeStr;\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function getMouseAbsolute( event ) {\n\t        return $.getMousePosition( event );\n\t    }\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function getMouseRelative( event, element ) {\n\t        return getPointRelativeToAbsolute( getMouseAbsolute( event ), element );\n\t    }\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function getPointRelativeToAbsolute( point, element ) {\n\t        var offset = $.getElementOffset( element );\n\t        return point.minus( offset );\n\t    }\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function getCenterPoint( point1, point2 ) {\n\t        return new $.Point( ( point1.x + point2.x ) / 2, ( point1.y + point2.y ) / 2 );\n\t    }\n\t\n\t\n\t///////////////////////////////////////////////////////////////////////////////\n\t// Device-specific DOM event handlers\n\t///////////////////////////////////////////////////////////////////////////////\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onClick( tracker, event ) {\n\t        if ( tracker.clickHandler ) {\n\t            $.cancelEvent( event );\n\t        }\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onDblClick( tracker, event ) {\n\t        if ( tracker.dblClickHandler ) {\n\t            $.cancelEvent( event );\n\t        }\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onKeyDown( tracker, event ) {\n\t        //$.console.log( \"keydown %s %s %s %s %s\", event.keyCode, event.charCode, event.ctrlKey, event.shiftKey, event.altKey );\n\t        var propagate;\n\t        if ( tracker.keyDownHandler ) {\n\t            event = $.getEvent( event );\n\t            propagate = tracker.keyDownHandler(\n\t                {\n\t                    eventSource:          tracker,\n\t                    keyCode:              event.keyCode ? event.keyCode : event.charCode,\n\t                    ctrl:                 event.ctrlKey,\n\t                    shift:                event.shiftKey,\n\t                    alt:                  event.altKey,\n\t                    meta:                 event.metaKey,\n\t                    originalEvent:        event,\n\t                    preventDefaultAction: false,\n\t                    userData:             tracker.userData\n\t                }\n\t            );\n\t            if ( !propagate ) {\n\t                $.cancelEvent( event );\n\t            }\n\t        }\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onKeyUp( tracker, event ) {\n\t        //$.console.log( \"keyup %s %s %s %s %s\", event.keyCode, event.charCode, event.ctrlKey, event.shiftKey, event.altKey );\n\t        var propagate;\n\t        if ( tracker.keyUpHandler ) {\n\t            event = $.getEvent( event );\n\t            propagate = tracker.keyUpHandler(\n\t                {\n\t                    eventSource:          tracker,\n\t                    keyCode:              event.keyCode ? event.keyCode : event.charCode,\n\t                    ctrl:                 event.ctrlKey,\n\t                    shift:                event.shiftKey,\n\t                    alt:                  event.altKey,\n\t                    meta:                 event.metaKey,\n\t                    originalEvent:        event,\n\t                    preventDefaultAction: false,\n\t                    userData:             tracker.userData\n\t                }\n\t            );\n\t            if ( !propagate ) {\n\t                $.cancelEvent( event );\n\t            }\n\t        }\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onKeyPress( tracker, event ) {\n\t        //$.console.log( \"keypress %s %s %s %s %s\", event.keyCode, event.charCode, event.ctrlKey, event.shiftKey, event.altKey );\n\t        var propagate;\n\t        if ( tracker.keyHandler ) {\n\t            event = $.getEvent( event );\n\t            propagate = tracker.keyHandler(\n\t                {\n\t                    eventSource:          tracker,\n\t                    keyCode:              event.keyCode ? event.keyCode : event.charCode,\n\t                    ctrl:                 event.ctrlKey,\n\t                    shift:                event.shiftKey,\n\t                    alt:                  event.altKey,\n\t                    meta:                 event.metaKey,\n\t                    originalEvent:        event,\n\t                    preventDefaultAction: false,\n\t                    userData:             tracker.userData\n\t                }\n\t            );\n\t            if ( !propagate ) {\n\t                $.cancelEvent( event );\n\t            }\n\t        }\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onFocus( tracker, event ) {\n\t        //console.log( \"focus %s\", event );\n\t        var propagate;\n\t        if ( tracker.focusHandler ) {\n\t            event = $.getEvent( event );\n\t            propagate = tracker.focusHandler(\n\t                {\n\t                    eventSource:          tracker,\n\t                    originalEvent:        event,\n\t                    preventDefaultAction: false,\n\t                    userData:             tracker.userData\n\t                }\n\t            );\n\t            if ( propagate === false ) {\n\t                $.cancelEvent( event );\n\t            }\n\t        }\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onBlur( tracker, event ) {\n\t        //console.log( \"blur %s\", event );\n\t        var propagate;\n\t        if ( tracker.blurHandler ) {\n\t            event = $.getEvent( event );\n\t            propagate = tracker.blurHandler(\n\t                {\n\t                    eventSource:          tracker,\n\t                    originalEvent:        event,\n\t                    preventDefaultAction: false,\n\t                    userData:             tracker.userData\n\t                }\n\t            );\n\t            if ( propagate === false ) {\n\t                $.cancelEvent( event );\n\t            }\n\t        }\n\t    }\n\t\n\t\n\t    /**\n\t     * Handler for 'wheel' events\n\t     *\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onWheel( tracker, event ) {\n\t        handleWheelEvent( tracker, event, event );\n\t    }\n\t\n\t\n\t    /**\n\t     * Handler for 'mousewheel', 'DOMMouseScroll', and 'MozMousePixelScroll' events\n\t     *\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onMouseWheel( tracker, event ) {\n\t        event = $.getEvent( event );\n\t\n\t        // Simulate a 'wheel' event\n\t        var simulatedEvent = {\n\t            target:     event.target || event.srcElement,\n\t            type:       \"wheel\",\n\t            shiftKey:   event.shiftKey || false,\n\t            clientX:    event.clientX,\n\t            clientY:    event.clientY,\n\t            pageX:      event.pageX ? event.pageX : event.clientX,\n\t            pageY:      event.pageY ? event.pageY : event.clientY,\n\t            deltaMode:  event.type == \"MozMousePixelScroll\" ? 0 : 1, // 0=pixel, 1=line, 2=page\n\t            deltaX:     0,\n\t            deltaZ:     0\n\t        };\n\t\n\t        // Calculate deltaY\n\t        if ( $.MouseTracker.wheelEventName == \"mousewheel\" ) {\n\t            simulatedEvent.deltaY = - 1 / $.DEFAULT_SETTINGS.pixelsPerWheelLine * event.wheelDelta;\n\t        } else {\n\t            simulatedEvent.deltaY = event.detail;\n\t        }\n\t\n\t        handleWheelEvent( tracker, simulatedEvent, event );\n\t    }\n\t\n\t\n\t    /**\n\t     * Handles 'wheel' events.\n\t     * The event may be simulated by the legacy mouse wheel event handler (onMouseWheel()).\n\t     *\n\t     * @private\n\t     * @inner\n\t     */\n\t    function handleWheelEvent( tracker, event, originalEvent ) {\n\t        var nDelta = 0,\n\t            propagate;\n\t\n\t        // The nDelta variable is gated to provide smooth z-index scrolling\n\t        //   since the mouse wheel allows for substantial deltas meant for rapid\n\t        //   y-index scrolling.\n\t        // event.deltaMode: 0=pixel, 1=line, 2=page\n\t        // TODO: Deltas in pixel mode should be accumulated then a scroll value computed after $.DEFAULT_SETTINGS.pixelsPerWheelLine threshold reached\n\t        nDelta = event.deltaY < 0 ? 1 : -1;\n\t\n\t        if ( tracker.scrollHandler ) {\n\t            propagate = tracker.scrollHandler(\n\t                {\n\t                    eventSource:          tracker,\n\t                    pointerType:          'mouse',\n\t                    position:             getMouseRelative( event, tracker.element ),\n\t                    scroll:               nDelta,\n\t                    shift:                event.shiftKey,\n\t                    isTouchEvent:         false,\n\t                    originalEvent:        originalEvent,\n\t                    preventDefaultAction: false,\n\t                    userData:             tracker.userData\n\t                }\n\t            );\n\t            if ( propagate === false ) {\n\t                $.cancelEvent( originalEvent );\n\t            }\n\t        }\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function isParentChild( parent, child )\n\t    {\n\t       if ( parent === child ) {\n\t           return false;\n\t       }\n\t       while ( child && child !== parent ) {\n\t           child = child.parentNode;\n\t       }\n\t       return child === parent;\n\t    }\n\t\n\t\n\t    /**\n\t     * Only used on IE 8\n\t     *\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onMouseEnter( tracker, event ) {\n\t        event = $.getEvent( event );\n\t\n\t        handleMouseEnter( tracker, event );\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onMouseOver( tracker, event ) {\n\t        event = $.getEvent( event );\n\t\n\t        if ( event.currentTarget === event.relatedTarget || isParentChild( event.currentTarget, event.relatedTarget ) ) {\n\t            return;\n\t        }\n\t\n\t        handleMouseEnter( tracker, event );\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function handleMouseEnter( tracker, event ) {\n\t        var gPoint = {\n\t            id: $.MouseTracker.mousePointerId,\n\t            type: 'mouse',\n\t            isPrimary: true,\n\t            currentPos: getMouseAbsolute( event ),\n\t            currentTime: $.now()\n\t        };\n\t\n\t        updatePointersEnter( tracker, event, [ gPoint ] );\n\t    }\n\t\n\t\n\t    /**\n\t     * Only used on IE 8\n\t     *\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onMouseLeave( tracker, event ) {\n\t        event = $.getEvent( event );\n\t\n\t        handleMouseExit( tracker, event );\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onMouseOut( tracker, event ) {\n\t        event = $.getEvent( event );\n\t\n\t        if ( event.currentTarget === event.relatedTarget || isParentChild( event.currentTarget, event.relatedTarget ) ) {\n\t            return;\n\t        }\n\t\n\t        handleMouseExit( tracker, event );\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function handleMouseExit( tracker, event ) {\n\t        var gPoint = {\n\t            id: $.MouseTracker.mousePointerId,\n\t            type: 'mouse',\n\t            isPrimary: true,\n\t            currentPos: getMouseAbsolute( event ),\n\t            currentTime: $.now()\n\t        };\n\t\n\t        updatePointersExit( tracker, event, [ gPoint ] );\n\t    }\n\t\n\t\n\t    /**\n\t     * Returns a W3C DOM level 3 standard button value given an event.button property:\n\t     *   -1 == none, 0 == primary/left, 1 == middle, 2 == secondary/right, 3 == X1/back, 4 == X2/forward, 5 == eraser (pen)\n\t     * @private\n\t     * @inner\n\t     */\n\t    function getStandardizedButton( button ) {\n\t        if ( $.Browser.vendor === $.BROWSERS.IE && $.Browser.version < 9 ) {\n\t            // On IE 8, 0 == none, 1 == left, 2 == right, 3 == left and right, 4 == middle, 5 == left and middle, 6 == right and middle, 7 == all three\n\t            // TODO: Support chorded (multiple) button presses on IE 8?\n\t            if ( button === 1 ) {\n\t                return 0;\n\t            } else if ( button === 2 ) {\n\t                return 2;\n\t            } else if ( button === 4 ) {\n\t                return 1;\n\t            } else {\n\t                return -1;\n\t            }\n\t        } else {\n\t            return button;\n\t        }\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onMouseDown( tracker, event ) {\n\t        var gPoint;\n\t\n\t        event = $.getEvent( event );\n\t\n\t        gPoint = {\n\t            id: $.MouseTracker.mousePointerId,\n\t            type: 'mouse',\n\t            isPrimary: true,\n\t            currentPos: getMouseAbsolute( event ),\n\t            currentTime: $.now()\n\t        };\n\t\n\t        if ( updatePointersDown( tracker, event, [ gPoint ], getStandardizedButton( event.button ) ) ) {\n\t            $.stopEvent( event );\n\t            capturePointer( tracker, 'mouse' );\n\t        }\n\t\n\t        if ( tracker.clickHandler || tracker.dblClickHandler || tracker.pressHandler || tracker.dragHandler || tracker.dragEndHandler ) {\n\t            $.cancelEvent( event );\n\t        }\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onMouseUp( tracker, event ) {\n\t        handleMouseUp( tracker, event );\n\t    }\n\t\n\t    /**\n\t     * This handler is attached to the window object (on the capture phase) to emulate mouse capture.\n\t     * onMouseUp is still attached to the tracked element, so stop propagation to avoid processing twice.\n\t     *\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onMouseUpCaptured( tracker, event ) {\n\t        handleMouseUp( tracker, event );\n\t        $.stopEvent( event );\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function handleMouseUp( tracker, event ) {\n\t        var gPoint;\n\t\n\t        event = $.getEvent( event );\n\t\n\t        gPoint = {\n\t            id: $.MouseTracker.mousePointerId,\n\t            type: 'mouse',\n\t            isPrimary: true,\n\t            currentPos: getMouseAbsolute( event ),\n\t            currentTime: $.now()\n\t        };\n\t\n\t        if ( updatePointersUp( tracker, event, [ gPoint ], getStandardizedButton( event.button ) ) ) {\n\t            releasePointer( tracker, 'mouse' );\n\t        }\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onMouseMove( tracker, event ) {\n\t        handleMouseMove( tracker, event );\n\t   }\n\t\n\t\n\t    /**\n\t     * This handler is attached to the window object (on the capture phase) to emulate mouse capture.\n\t     * onMouseMove is still attached to the tracked element, so stop propagation to avoid processing twice.\n\t     *\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onMouseMoveCaptured( tracker, event ) {\n\t        handleMouseMove( tracker, event );\n\t        $.stopEvent( event );\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function handleMouseMove( tracker, event ) {\n\t        var gPoint;\n\t\n\t        event = $.getEvent( event );\n\t\n\t        gPoint = {\n\t            id: $.MouseTracker.mousePointerId,\n\t            type: 'mouse',\n\t            isPrimary: true,\n\t            currentPos: getMouseAbsolute( event ),\n\t            currentTime: $.now()\n\t        };\n\t\n\t        updatePointersMove( tracker, event, [ gPoint ] );\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function abortTouchContacts( tracker, event, pointsList ) {\n\t        var i,\n\t            gPointCount = pointsList.getLength(),\n\t            abortGPoints = [];\n\t\n\t        for ( i = 0; i < gPointCount; i++ ) {\n\t            abortGPoints.push( pointsList.getByIndex( i ) );\n\t        }\n\t\n\t        if ( abortGPoints.length > 0 ) {\n\t            // simulate touchend\n\t            updatePointersUp( tracker, event, abortGPoints, 0 ); // 0 means primary button press/release or touch contact\n\t            // release pointer capture\n\t            pointsList.captureCount = 1;\n\t            releasePointer( tracker, 'touch' );\n\t            // simulate touchleave\n\t            updatePointersExit( tracker, event, abortGPoints );\n\t        }\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onTouchStart( tracker, event ) {\n\t        var time,\n\t            i,\n\t            j,\n\t            touchCount = event.changedTouches.length,\n\t            gPoints = [],\n\t            parentGPoints,\n\t            pointsList = tracker.getActivePointersListByType( 'touch' );\n\t\n\t        time = $.now();\n\t\n\t        if ( pointsList.getLength() > event.touches.length - touchCount ) {\n\t            $.console.warn('Tracked touch contact count doesn\\'t match event.touches.length. Removing all tracked touch pointers.');\n\t            abortTouchContacts( tracker, event, pointsList );\n\t        }\n\t\n\t        for ( i = 0; i < touchCount; i++ ) {\n\t            gPoints.push( {\n\t                id: event.changedTouches[ i ].identifier,\n\t                type: 'touch',\n\t                // isPrimary not set - let the updatePointers functions determine it\n\t                currentPos: getMouseAbsolute( event.changedTouches[ i ] ),\n\t                currentTime: time\n\t            } );\n\t        }\n\t\n\t        // simulate touchenter on our tracked element\n\t        updatePointersEnter( tracker, event, gPoints );\n\t\n\t        // simulate touchenter on our tracked element's tracked ancestor elements\n\t        for ( i = 0; i < MOUSETRACKERS.length; i++ ) {\n\t            if ( MOUSETRACKERS[ i ] !== tracker && MOUSETRACKERS[ i ].isTracking() && isParentChild( MOUSETRACKERS[ i ].element, tracker.element ) ) {\n\t                parentGPoints = [];\n\t                for ( j = 0; j < touchCount; j++ ) {\n\t                    parentGPoints.push( {\n\t                        id: event.changedTouches[ j ].identifier,\n\t                        type: 'touch',\n\t                        // isPrimary not set - let the updatePointers functions determine it\n\t                        currentPos: getMouseAbsolute( event.changedTouches[ j ] ),\n\t                        currentTime: time\n\t                    } );\n\t                }\n\t                updatePointersEnter( MOUSETRACKERS[ i ], event, parentGPoints );\n\t            }\n\t        }\n\t\n\t        if ( updatePointersDown( tracker, event, gPoints, 0 ) ) { // 0 means primary button press/release or touch contact\n\t            $.stopEvent( event );\n\t            capturePointer( tracker, 'touch', touchCount );\n\t        }\n\t\n\t        $.cancelEvent( event );\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onTouchEnd( tracker, event ) {\n\t        handleTouchEnd( tracker, event );\n\t    }\n\t\n\t\n\t    /**\n\t     * This handler is attached to the window object (on the capture phase) to emulate pointer capture.\n\t     * onTouchEnd is still attached to the tracked element, so stop propagation to avoid processing twice.\n\t     *\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onTouchEndCaptured( tracker, event ) {\n\t        handleTouchEnd( tracker, event );\n\t        $.stopEvent( event );\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function handleTouchEnd( tracker, event ) {\n\t        var time,\n\t            i,\n\t            j,\n\t            touchCount = event.changedTouches.length,\n\t            gPoints = [],\n\t            parentGPoints;\n\t\n\t        time = $.now();\n\t\n\t        for ( i = 0; i < touchCount; i++ ) {\n\t            gPoints.push( {\n\t                id: event.changedTouches[ i ].identifier,\n\t                type: 'touch',\n\t                // isPrimary not set - let the updatePointers functions determine it\n\t                currentPos: getMouseAbsolute( event.changedTouches[ i ] ),\n\t                currentTime: time\n\t            } );\n\t        }\n\t\n\t        if ( updatePointersUp( tracker, event, gPoints, 0 ) ) {\n\t            releasePointer( tracker, 'touch', touchCount );\n\t        }\n\t\n\t        // simulate touchleave on our tracked element\n\t        updatePointersExit( tracker, event, gPoints );\n\t\n\t        // simulate touchleave on our tracked element's tracked ancestor elements\n\t        for ( i = 0; i < MOUSETRACKERS.length; i++ ) {\n\t            if ( MOUSETRACKERS[ i ] !== tracker && MOUSETRACKERS[ i ].isTracking() && isParentChild( MOUSETRACKERS[ i ].element, tracker.element ) ) {\n\t                parentGPoints = [];\n\t                for ( j = 0; j < touchCount; j++ ) {\n\t                    parentGPoints.push( {\n\t                        id: event.changedTouches[ j ].identifier,\n\t                        type: 'touch',\n\t                        // isPrimary not set - let the updatePointers functions determine it\n\t                        currentPos: getMouseAbsolute( event.changedTouches[ j ] ),\n\t                        currentTime: time\n\t                    } );\n\t                }\n\t                updatePointersExit( MOUSETRACKERS[ i ], event, parentGPoints );\n\t            }\n\t        }\n\t\n\t        $.cancelEvent( event );\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onTouchMove( tracker, event ) {\n\t        handleTouchMove( tracker, event );\n\t    }\n\t\n\t\n\t    /**\n\t     * This handler is attached to the window object (on the capture phase) to emulate pointer capture.\n\t     * onTouchMove is still attached to the tracked element, so stop propagation to avoid processing twice.\n\t     *\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onTouchMoveCaptured( tracker, event ) {\n\t        handleTouchMove( tracker, event );\n\t        $.stopEvent( event );\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function handleTouchMove( tracker, event ) {\n\t        var i,\n\t            touchCount = event.changedTouches.length,\n\t            gPoints = [];\n\t\n\t        for ( i = 0; i < touchCount; i++ ) {\n\t            gPoints.push( {\n\t                id: event.changedTouches[ i ].identifier,\n\t                type: 'touch',\n\t                // isPrimary not set - let the updatePointers functions determine it\n\t                currentPos: getMouseAbsolute( event.changedTouches[ i ] ),\n\t                currentTime: $.now()\n\t            } );\n\t        }\n\t\n\t        updatePointersMove( tracker, event, gPoints );\n\t\n\t        $.cancelEvent( event );\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onTouchCancel( tracker, event ) {\n\t        var i,\n\t            touchCount = event.changedTouches.length,\n\t            gPoints = [],\n\t            pointsList = tracker.getActivePointersListByType( 'touch' );\n\t        \n\t        abortTouchContacts( tracker, event, pointsList );\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onGestureStart( tracker, event ) {\n\t        event.stopPropagation();\n\t        event.preventDefault();\n\t        return false;\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onGestureChange( tracker, event ) {\n\t        event.stopPropagation();\n\t        event.preventDefault();\n\t        return false;\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onPointerOver( tracker, event ) {\n\t        var gPoint;\n\t\n\t        if ( event.currentTarget === event.relatedTarget || isParentChild( event.currentTarget, event.relatedTarget ) ) {\n\t            return;\n\t        }\n\t\n\t        gPoint = {\n\t            id: event.pointerId,\n\t            type: getPointerType( event ),\n\t            isPrimary: event.isPrimary,\n\t            currentPos: getMouseAbsolute( event ),\n\t            currentTime: $.now()\n\t        };\n\t\n\t        updatePointersEnter( tracker, event, [ gPoint ] );\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onPointerOut( tracker, event ) {\n\t        var gPoint;\n\t\n\t        if ( event.currentTarget === event.relatedTarget || isParentChild( event.currentTarget, event.relatedTarget ) ) {\n\t            return;\n\t        }\n\t\n\t        gPoint = {\n\t            id: event.pointerId,\n\t            type: getPointerType( event ),\n\t            isPrimary: event.isPrimary,\n\t            currentPos: getMouseAbsolute( event ),\n\t            currentTime: $.now()\n\t        };\n\t\n\t        updatePointersExit( tracker, event, [ gPoint ] );\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onPointerDown( tracker, event ) {\n\t        var gPoint;\n\t\n\t        gPoint = {\n\t            id: event.pointerId,\n\t            type: getPointerType( event ),\n\t            isPrimary: event.isPrimary,\n\t            currentPos: getMouseAbsolute( event ),\n\t            currentTime: $.now()\n\t        };\n\t\n\t        if ( updatePointersDown( tracker, event, [ gPoint ], event.button ) ) {\n\t            $.stopEvent( event );\n\t            capturePointer( tracker, gPoint.type );\n\t        }\n\t\n\t        if ( tracker.clickHandler || tracker.dblClickHandler || tracker.pressHandler || tracker.dragHandler || tracker.dragEndHandler || tracker.pinchHandler ) {\n\t            $.cancelEvent( event );\n\t        }\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onPointerUp( tracker, event ) {\n\t        handlePointerUp( tracker, event );\n\t    }\n\t\n\t\n\t    /**\n\t     * This handler is attached to the window object (on the capture phase) to emulate mouse capture.\n\t     * onPointerUp is still attached to the tracked element, so stop propagation to avoid processing twice.\n\t     *\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onPointerUpCaptured( tracker, event ) {\n\t        var pointsList = tracker.getActivePointersListByType( getPointerType( event ) );\n\t        if ( pointsList.getById( event.pointerId ) ) {\n\t            handlePointerUp( tracker, event );\n\t        }\n\t        $.stopEvent( event );\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function handlePointerUp( tracker, event ) {\n\t        var gPoint;\n\t\n\t        gPoint = {\n\t            id: event.pointerId,\n\t            type: getPointerType( event ),\n\t            isPrimary: event.isPrimary,\n\t            currentPos: getMouseAbsolute( event ),\n\t            currentTime: $.now()\n\t        };\n\t\n\t        if ( updatePointersUp( tracker, event, [ gPoint ], event.button ) ) {\n\t            releasePointer( tracker, gPoint.type );\n\t        }\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onPointerMove( tracker, event ) {\n\t        handlePointerMove( tracker, event );\n\t    }\n\t\n\t\n\t    /**\n\t     * This handler is attached to the window object (on the capture phase) to emulate mouse capture.\n\t     * onPointerMove is still attached to the tracked element, so stop propagation to avoid processing twice.\n\t     *\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onPointerMoveCaptured( tracker, event ) {\n\t        var pointsList = tracker.getActivePointersListByType( getPointerType( event ) );\n\t        if ( pointsList.getById( event.pointerId ) ) {\n\t            handlePointerMove( tracker, event );\n\t        }\n\t        $.stopEvent( event );\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function handlePointerMove( tracker, event ) {\n\t        // Pointer changed coordinates, button state, pressure, tilt, or contact geometry (e.g. width and height)\n\t        var gPoint;\n\t\n\t        gPoint = {\n\t            id: event.pointerId,\n\t            type: getPointerType( event ),\n\t            isPrimary: event.isPrimary,\n\t            currentPos: getMouseAbsolute( event ),\n\t            currentTime: $.now()\n\t        };\n\t\n\t        updatePointersMove( tracker, event, [ gPoint ] );\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function onPointerCancel( tracker, event ) {\n\t        var gPoint;\n\t\n\t        gPoint = {\n\t            id: event.pointerId,\n\t            type: getPointerType( event )\n\t        };\n\t\n\t        updatePointersCancel( tracker, event, [ gPoint ] );\n\t    }\n\t\n\t\n\t///////////////////////////////////////////////////////////////////////////////\n\t// Device-agnostic DOM event handlers\n\t///////////////////////////////////////////////////////////////////////////////\n\t\n\t    /**\n\t     * @function\n\t     * @private\n\t     * @inner\n\t     * @param {OpenSeadragon.MouseTracker.GesturePointList} pointsList\n\t     *     The GesturePointList to track the pointer in.\n\t     * @param {OpenSeadragon.MouseTracker.GesturePoint} gPoint\n\t     *      Gesture point to track.\n\t     * @returns {Number} Number of gesture points in pointsList.\n\t     */\n\t    function startTrackingPointer( pointsList, gPoint ) {\n\t\n\t        // If isPrimary is not known for the pointer then set it according to our rules:\n\t        //    true if the first pointer in the gesture, otherwise false\n\t        if ( !gPoint.hasOwnProperty( 'isPrimary' ) ) {\n\t            if ( pointsList.getLength() === 0 ) {\n\t                gPoint.isPrimary = true;\n\t            } else {\n\t                gPoint.isPrimary = false;\n\t            }\n\t        }\n\t        gPoint.speed = 0;\n\t        gPoint.direction = 0;\n\t        gPoint.contactPos = gPoint.currentPos;\n\t        gPoint.contactTime = gPoint.currentTime;\n\t        gPoint.lastPos = gPoint.currentPos;\n\t        gPoint.lastTime = gPoint.currentTime;\n\t\n\t        return pointsList.add( gPoint );\n\t    }\n\t\n\t\n\t    /**\n\t     * @function\n\t     * @private\n\t     * @inner\n\t     * @param {OpenSeadragon.MouseTracker.GesturePointList} pointsList\n\t     *     The GesturePointList to stop tracking the pointer on.\n\t     * @param {OpenSeadragon.MouseTracker.GesturePoint} gPoint\n\t     *      Gesture point to stop tracking.\n\t     * @returns {Number} Number of gesture points in pointsList.\n\t     */\n\t    function stopTrackingPointer( pointsList, gPoint ) {\n\t        var listLength,\n\t            primaryPoint;\n\t\n\t        if ( pointsList.getById( gPoint.id ) ) {\n\t            listLength = pointsList.removeById( gPoint.id );\n\t\n\t            // If isPrimary is not known for the pointer and we just removed the primary pointer from the list then we need to set another pointer as primary\n\t            if ( !gPoint.hasOwnProperty( 'isPrimary' ) ) {\n\t                primaryPoint = pointsList.getPrimary();\n\t                if ( !primaryPoint ) {\n\t                    primaryPoint = pointsList.getByIndex( 0 );\n\t                    if ( primaryPoint ) {\n\t                        primaryPoint.isPrimary = true;\n\t                    }\n\t                }\n\t            }\n\t        } else {\n\t            listLength = pointsList.getLength();\n\t        }\n\t\n\t        return listLength;\n\t    }\n\t\n\t\n\t    /**\n\t     * @function\n\t     * @private\n\t     * @inner\n\t     * @param {OpenSeadragon.MouseTracker} tracker\n\t     *     A reference to the MouseTracker instance.\n\t     * @param {Object} event\n\t     *     A reference to the originating DOM event.\n\t     * @param {Array.<OpenSeadragon.MouseTracker.GesturePoint>} gPoints\n\t     *      Gesture points associated with the event.\n\t     */\n\t    function updatePointersEnter( tracker, event, gPoints ) {\n\t        var pointsList = tracker.getActivePointersListByType( gPoints[ 0 ].type ),\n\t            i,\n\t            gPointCount = gPoints.length,\n\t            curGPoint,\n\t            updateGPoint,\n\t            propagate;\n\t\n\t        for ( i = 0; i < gPointCount; i++ ) {\n\t            curGPoint = gPoints[ i ];\n\t            updateGPoint = pointsList.getById( curGPoint.id );\n\t\n\t            if ( updateGPoint ) {\n\t                // Already tracking the pointer...update it\n\t                updateGPoint.insideElement = true;\n\t                updateGPoint.lastPos = updateGPoint.currentPos;\n\t                updateGPoint.lastTime = updateGPoint.currentTime;\n\t                updateGPoint.currentPos = curGPoint.currentPos;\n\t                updateGPoint.currentTime = curGPoint.currentTime;\n\t\n\t                curGPoint = updateGPoint;\n\t            } else {\n\t                // Initialize for tracking and add to the tracking list\n\t                curGPoint.captured = false;\n\t                curGPoint.insideElementPressed = false;\n\t                curGPoint.insideElement = true;\n\t                startTrackingPointer( pointsList, curGPoint );\n\t            }\n\t\n\t            // Enter\n\t            if ( tracker.enterHandler ) {\n\t                propagate = tracker.enterHandler(\n\t                    {\n\t                        eventSource:          tracker,\n\t                        pointerType:          curGPoint.type,\n\t                        position:             getPointRelativeToAbsolute( curGPoint.currentPos, tracker.element ),\n\t                        buttons:              pointsList.buttons,\n\t                        pointers:             tracker.getActivePointerCount(),\n\t                        insideElementPressed: curGPoint.insideElementPressed,\n\t                        buttonDownAny:        pointsList.buttons !== 0,\n\t                        isTouchEvent:         curGPoint.type === 'touch',\n\t                        originalEvent:        event,\n\t                        preventDefaultAction: false,\n\t                        userData:             tracker.userData\n\t                    }\n\t                );\n\t                if ( propagate === false ) {\n\t                    $.cancelEvent( event );\n\t                }\n\t            }\n\t        }\n\t    }\n\t\n\t\n\t    /**\n\t     * @function\n\t     * @private\n\t     * @inner\n\t     * @param {OpenSeadragon.MouseTracker} tracker\n\t     *     A reference to the MouseTracker instance.\n\t     * @param {Object} event\n\t     *     A reference to the originating DOM event.\n\t     * @param {Array.<OpenSeadragon.MouseTracker.GesturePoint>} gPoints\n\t     *      Gesture points associated with the event.\n\t     */\n\t    function updatePointersExit( tracker, event, gPoints ) {\n\t        var delegate = THIS[ tracker.hash ],\n\t            pointsList = tracker.getActivePointersListByType( gPoints[ 0 ].type ),\n\t            i,\n\t            gPointCount = gPoints.length,\n\t            curGPoint,\n\t            updateGPoint,\n\t            propagate;\n\t\n\t        for ( i = 0; i < gPointCount; i++ ) {\n\t            curGPoint = gPoints[ i ];\n\t            updateGPoint = pointsList.getById( curGPoint.id );\n\t\n\t            if ( updateGPoint ) {\n\t                // Already tracking the pointer. If captured then update it, else stop tracking it\n\t                if ( updateGPoint.captured ) {\n\t                    updateGPoint.insideElement = false;\n\t                    updateGPoint.lastPos = updateGPoint.currentPos;\n\t                    updateGPoint.lastTime = updateGPoint.currentTime;\n\t                    updateGPoint.currentPos = curGPoint.currentPos;\n\t                    updateGPoint.currentTime = curGPoint.currentTime;\n\t                } else {\n\t                    stopTrackingPointer( pointsList, updateGPoint );\n\t                }\n\t\n\t                curGPoint = updateGPoint;\n\t            }\n\t\n\t            // Exit\n\t            if ( tracker.exitHandler ) {\n\t                propagate = tracker.exitHandler(\n\t                    {\n\t                        eventSource:          tracker,\n\t                        pointerType:          curGPoint.type,\n\t                        position:             getPointRelativeToAbsolute( curGPoint.currentPos, tracker.element ),\n\t                        buttons:              pointsList.buttons,\n\t                        pointers:             tracker.getActivePointerCount(),\n\t                        insideElementPressed: updateGPoint ? updateGPoint.insideElementPressed : false,\n\t                        buttonDownAny:        pointsList.buttons !== 0,\n\t                        isTouchEvent:         curGPoint.type === 'touch',\n\t                        originalEvent:        event,\n\t                        preventDefaultAction: false,\n\t                        userData:             tracker.userData\n\t                    }\n\t                );\n\t\n\t                if ( propagate === false ) {\n\t                    $.cancelEvent( event );\n\t                }\n\t            }\n\t        }\n\t    }\n\t\n\t\n\t    /**\n\t     * @function\n\t     * @private\n\t     * @inner\n\t     * @param {OpenSeadragon.MouseTracker} tracker\n\t     *     A reference to the MouseTracker instance.\n\t     * @param {Object} event\n\t     *     A reference to the originating DOM event.\n\t     * @param {Array.<OpenSeadragon.MouseTracker.GesturePoint>} gPoints\n\t     *      Gesture points associated with the event.\n\t     * @param {Number} buttonChanged\n\t     *      The button involved in the event: -1: none, 0: primary/left, 1: aux/middle, 2: secondary/right, 3: X1/back, 4: X2/forward, 5: pen eraser.\n\t     *      Note on chorded button presses (a button pressed when another button is already pressed): In the W3C Pointer Events model,\n\t     *      only one pointerdown/pointerup event combo is fired. Chorded button state changes instead fire pointermove events.\n\t     *\n\t     * @returns {Boolean} True if pointers should be captured to the tracked element, otherwise false.\n\t     */\n\t    function updatePointersDown( tracker, event, gPoints, buttonChanged ) {\n\t        var delegate = THIS[ tracker.hash ],\n\t            propagate,\n\t            pointsList = tracker.getActivePointersListByType( gPoints[ 0 ].type ),\n\t            i,\n\t            gPointCount = gPoints.length,\n\t            curGPoint,\n\t            updateGPoint;\n\t\n\t        if ( typeof event.buttons !== 'undefined' ) {\n\t            pointsList.buttons = event.buttons;\n\t        } else {\n\t            if ( $.Browser.vendor === $.BROWSERS.IE && $.Browser.version < 9 ) {\n\t                if ( buttonChanged === 0 ) {\n\t                    // Primary\n\t                    pointsList.buttons += 1;\n\t                } else if ( buttonChanged === 1 ) {\n\t                    // Aux\n\t                    pointsList.buttons += 4;\n\t                } else if ( buttonChanged === 2 ) {\n\t                    // Secondary\n\t                    pointsList.buttons += 2;\n\t                } else if ( buttonChanged === 3 ) {\n\t                    // X1 (Back)\n\t                    pointsList.buttons += 8;\n\t                } else if ( buttonChanged === 4 ) {\n\t                    // X2 (Forward)\n\t                    pointsList.buttons += 16;\n\t                } else if ( buttonChanged === 5 ) {\n\t                    // Pen Eraser\n\t                    pointsList.buttons += 32;\n\t                }\n\t            } else {\n\t                if ( buttonChanged === 0 ) {\n\t                    // Primary\n\t                    pointsList.buttons |= 1;\n\t                } else if ( buttonChanged === 1 ) {\n\t                    // Aux\n\t                    pointsList.buttons |= 4;\n\t                } else if ( buttonChanged === 2 ) {\n\t                    // Secondary\n\t                    pointsList.buttons |= 2;\n\t                } else if ( buttonChanged === 3 ) {\n\t                    // X1 (Back)\n\t                    pointsList.buttons |= 8;\n\t                } else if ( buttonChanged === 4 ) {\n\t                    // X2 (Forward)\n\t                    pointsList.buttons |= 16;\n\t                } else if ( buttonChanged === 5 ) {\n\t                    // Pen Eraser\n\t                    pointsList.buttons |= 32;\n\t                }\n\t            }\n\t        }\n\t\n\t        // Only capture and track primary button, pen, and touch contacts\n\t        if ( buttonChanged !== 0 ) {\n\t            // Aux Press\n\t            if ( tracker.nonPrimaryPressHandler ) {\n\t                propagate = tracker.nonPrimaryPressHandler(\n\t                    {\n\t                        eventSource:          tracker,\n\t                        pointerType:          gPoints[ 0 ].type,\n\t                        position:             getPointRelativeToAbsolute( gPoints[ 0 ].currentPos, tracker.element ),\n\t                        button:               buttonChanged,\n\t                        buttons:              pointsList.buttons,\n\t                        isTouchEvent:         gPoints[ 0 ].type === 'touch',\n\t                        originalEvent:        event,\n\t                        preventDefaultAction: false,\n\t                        userData:             tracker.userData\n\t                    }\n\t                );\n\t                if ( propagate === false ) {\n\t                    $.cancelEvent( event );\n\t                }\n\t            }\n\t\n\t            return false;\n\t        }\n\t\n\t        for ( i = 0; i < gPointCount; i++ ) {\n\t            curGPoint = gPoints[ i ];\n\t            updateGPoint = pointsList.getById( curGPoint.id );\n\t\n\t            if ( updateGPoint ) {\n\t                // Already tracking the pointer...update it\n\t                updateGPoint.captured = true;\n\t                updateGPoint.insideElementPressed = true;\n\t                updateGPoint.insideElement = true;\n\t                updateGPoint.contactPos = curGPoint.currentPos;\n\t                updateGPoint.contactTime = curGPoint.currentTime;\n\t                updateGPoint.lastPos = updateGPoint.currentPos;\n\t                updateGPoint.lastTime = updateGPoint.currentTime;\n\t                updateGPoint.currentPos = curGPoint.currentPos;\n\t                updateGPoint.currentTime = curGPoint.currentTime;\n\t\n\t                curGPoint = updateGPoint;\n\t            } else {\n\t                // Initialize for tracking and add to the tracking list (no pointerover or pointermove event occurred before this)\n\t                curGPoint.captured = true;\n\t                curGPoint.insideElementPressed = true;\n\t                curGPoint.insideElement = true;\n\t                startTrackingPointer( pointsList, curGPoint );\n\t            }\n\t\n\t            pointsList.contacts++;\n\t            //$.console.log('contacts++ ', pointsList.contacts);\n\t\n\t            if ( tracker.dragHandler || tracker.dragEndHandler || tracker.pinchHandler ) {\n\t                $.MouseTracker.gesturePointVelocityTracker.addPoint( tracker, curGPoint );\n\t            }\n\t\n\t            if ( pointsList.contacts === 1 ) {\n\t                // Press\n\t                if ( tracker.pressHandler ) {\n\t                    propagate = tracker.pressHandler(\n\t                        {\n\t                            eventSource:          tracker,\n\t                            pointerType:          curGPoint.type,\n\t                            position:             getPointRelativeToAbsolute( curGPoint.contactPos, tracker.element ),\n\t                            buttons:              pointsList.buttons,\n\t                            isTouchEvent:         curGPoint.type === 'touch',\n\t                            originalEvent:        event,\n\t                            preventDefaultAction: false,\n\t                            userData:             tracker.userData\n\t                        }\n\t                    );\n\t                    if ( propagate === false ) {\n\t                        $.cancelEvent( event );\n\t                    }\n\t                }\n\t            } else if ( pointsList.contacts === 2 ) {\n\t                if ( tracker.pinchHandler && curGPoint.type === 'touch' ) {\n\t                    // Initialize for pinch\n\t                    delegate.pinchGPoints = pointsList.asArray();\n\t                    delegate.lastPinchDist = delegate.currentPinchDist = delegate.pinchGPoints[ 0 ].currentPos.distanceTo( delegate.pinchGPoints[ 1 ].currentPos );\n\t                    delegate.lastPinchCenter = delegate.currentPinchCenter = getCenterPoint( delegate.pinchGPoints[ 0 ].currentPos, delegate.pinchGPoints[ 1 ].currentPos );\n\t                }\n\t            }\n\t        }\n\t\n\t        return true;\n\t    }\n\t\n\t\n\t    /**\n\t     * @function\n\t     * @private\n\t     * @inner\n\t     * @param {OpenSeadragon.MouseTracker} tracker\n\t     *     A reference to the MouseTracker instance.\n\t     * @param {Object} event\n\t     *     A reference to the originating DOM event.\n\t     * @param {Array.<OpenSeadragon.MouseTracker.GesturePoint>} gPoints\n\t     *      Gesture points associated with the event.\n\t     * @param {Number} buttonChanged\n\t     *      The button involved in the event: -1: none, 0: primary/left, 1: aux/middle, 2: secondary/right, 3: X1/back, 4: X2/forward, 5: pen eraser.\n\t     *      Note on chorded button presses (a button pressed when another button is already pressed): In the W3C Pointer Events model,\n\t     *      only one pointerdown/pointerup event combo is fired. Chorded button state changes instead fire pointermove events.\n\t     *\n\t     * @returns {Boolean} True if pointer capture should be released from the tracked element, otherwise false.\n\t     */\n\t    function updatePointersUp( tracker, event, gPoints, buttonChanged ) {\n\t        var delegate = THIS[ tracker.hash ],\n\t            pointsList = tracker.getActivePointersListByType( gPoints[ 0 ].type ),\n\t            propagate,\n\t            insideElementReleased,\n\t            releasePoint,\n\t            releaseTime,\n\t            i,\n\t            gPointCount = gPoints.length,\n\t            curGPoint,\n\t            updateGPoint,\n\t            releaseCapture = false,\n\t            wasCaptured = false,\n\t            quick;\n\t\n\t        if ( typeof event.buttons !== 'undefined' ) {\n\t            pointsList.buttons = event.buttons;\n\t        } else {\n\t            if ( $.Browser.vendor === $.BROWSERS.IE && $.Browser.version < 9 ) {\n\t                if ( buttonChanged === 0 ) {\n\t                    // Primary\n\t                    pointsList.buttons -= 1;\n\t                } else if ( buttonChanged === 1 ) {\n\t                    // Aux\n\t                    pointsList.buttons -= 4;\n\t                } else if ( buttonChanged === 2 ) {\n\t                    // Secondary\n\t                    pointsList.buttons -= 2;\n\t                } else if ( buttonChanged === 3 ) {\n\t                    // X1 (Back)\n\t                    pointsList.buttons -= 8;\n\t                } else if ( buttonChanged === 4 ) {\n\t                    // X2 (Forward)\n\t                    pointsList.buttons -= 16;\n\t                } else if ( buttonChanged === 5 ) {\n\t                    // Pen Eraser\n\t                    pointsList.buttons -= 32;\n\t                }\n\t            } else {\n\t                if ( buttonChanged === 0 ) {\n\t                    // Primary\n\t                    pointsList.buttons ^= ~1;\n\t                } else if ( buttonChanged === 1 ) {\n\t                    // Aux\n\t                    pointsList.buttons ^= ~4;\n\t                } else if ( buttonChanged === 2 ) {\n\t                    // Secondary\n\t                    pointsList.buttons ^= ~2;\n\t                } else if ( buttonChanged === 3 ) {\n\t                    // X1 (Back)\n\t                    pointsList.buttons ^= ~8;\n\t                } else if ( buttonChanged === 4 ) {\n\t                    // X2 (Forward)\n\t                    pointsList.buttons ^= ~16;\n\t                } else if ( buttonChanged === 5 ) {\n\t                    // Pen Eraser\n\t                    pointsList.buttons ^= ~32;\n\t                }\n\t            }\n\t        }\n\t\n\t        // Only capture and track primary button, pen, and touch contacts\n\t        if ( buttonChanged !== 0 ) {\n\t            // Aux Release\n\t            if ( tracker.nonPrimaryReleaseHandler ) {\n\t                propagate = tracker.nonPrimaryReleaseHandler(\n\t                    {\n\t                        eventSource:           tracker,\n\t                        pointerType:           gPoints[ 0 ].type,\n\t                        position:              getPointRelativeToAbsolute(  gPoints[ 0 ].currentPos, tracker.element ),\n\t                        button:                buttonChanged,\n\t                        buttons:               pointsList.buttons,\n\t                        isTouchEvent:          gPoints[ 0 ].type === 'touch',\n\t                        originalEvent:         event,\n\t                        preventDefaultAction:  false,\n\t                        userData:              tracker.userData\n\t                    }\n\t                );\n\t                if ( propagate === false ) {\n\t                    $.cancelEvent( event );\n\t                }\n\t            }\n\t\n\t            return false;\n\t        }\n\t\n\t        for ( i = 0; i < gPointCount; i++ ) {\n\t            curGPoint = gPoints[ i ];\n\t            updateGPoint = pointsList.getById( curGPoint.id );\n\t\n\t            if ( updateGPoint ) {\n\t                // Update the pointer, stop tracking it if not still in this element\n\t                if ( updateGPoint.captured ) {\n\t                    updateGPoint.captured = false;\n\t                    releaseCapture = true;\n\t                    wasCaptured = true;\n\t                }\n\t                updateGPoint.lastPos = updateGPoint.currentPos;\n\t                updateGPoint.lastTime = updateGPoint.currentTime;\n\t                updateGPoint.currentPos = curGPoint.currentPos;\n\t                updateGPoint.currentTime = curGPoint.currentTime;\n\t                if ( !updateGPoint.insideElement ) {\n\t                    stopTrackingPointer( pointsList, updateGPoint );\n\t                }\n\t\n\t                releasePoint = updateGPoint.currentPos;\n\t                releaseTime = updateGPoint.currentTime;\n\t\n\t                if ( wasCaptured ) {\n\t                    // Pointer was activated in our element but could have been removed in any element since events are captured to our element\n\t\n\t                    pointsList.contacts--;\n\t                    //$.console.log('contacts-- ', pointsList.contacts);\n\t\n\t                    if ( tracker.dragHandler || tracker.dragEndHandler || tracker.pinchHandler ) {\n\t                        $.MouseTracker.gesturePointVelocityTracker.removePoint( tracker, updateGPoint );\n\t                    }\n\t\n\t                    if ( pointsList.contacts === 0 ) {\n\t\n\t                        // Release (pressed in our element)\n\t                        if ( tracker.releaseHandler ) {\n\t                            propagate = tracker.releaseHandler(\n\t                                {\n\t                                    eventSource:           tracker,\n\t                                    pointerType:           updateGPoint.type,\n\t                                    position:              getPointRelativeToAbsolute( releasePoint, tracker.element ),\n\t                                    buttons:               pointsList.buttons,\n\t                                    insideElementPressed:  updateGPoint.insideElementPressed,\n\t                                    insideElementReleased: updateGPoint.insideElement,\n\t                                    isTouchEvent:          updateGPoint.type === 'touch',\n\t                                    originalEvent:         event,\n\t                                    preventDefaultAction:  false,\n\t                                    userData:              tracker.userData\n\t                                }\n\t                            );\n\t                            if ( propagate === false ) {\n\t                                $.cancelEvent( event );\n\t                            }\n\t                        }\n\t\n\t                        // Drag End\n\t                        if ( tracker.dragEndHandler && !updateGPoint.currentPos.equals( updateGPoint.contactPos ) ) {\n\t                            propagate = tracker.dragEndHandler(\n\t                                {\n\t                                    eventSource:          tracker,\n\t                                    pointerType:          updateGPoint.type,\n\t                                    position:             getPointRelativeToAbsolute( updateGPoint.currentPos, tracker.element ),\n\t                                    speed:                updateGPoint.speed,\n\t                                    direction:            updateGPoint.direction,\n\t                                    shift:                event.shiftKey,\n\t                                    isTouchEvent:         updateGPoint.type === 'touch',\n\t                                    originalEvent:        event,\n\t                                    preventDefaultAction: false,\n\t                                    userData:             tracker.userData\n\t                                }\n\t                            );\n\t                            if ( propagate === false ) {\n\t                                $.cancelEvent( event );\n\t                            }\n\t                        }\n\t\n\t                        // Click / Double-Click\n\t                        if ( ( tracker.clickHandler || tracker.dblClickHandler ) && updateGPoint.insideElement ) {\n\t                            quick = releaseTime - updateGPoint.contactTime <= tracker.clickTimeThreshold &&\n\t                                            updateGPoint.contactPos.distanceTo( releasePoint ) <= tracker.clickDistThreshold;\n\t\n\t                            // Click\n\t                            if ( tracker.clickHandler ) {\n\t                                propagate = tracker.clickHandler(\n\t                                    {\n\t                                        eventSource:          tracker,\n\t                                        pointerType:          updateGPoint.type,\n\t                                        position:             getPointRelativeToAbsolute( updateGPoint.currentPos, tracker.element ),\n\t                                        quick:                quick,\n\t                                        shift:                event.shiftKey,\n\t                                        isTouchEvent:         updateGPoint.type === 'touch',\n\t                                        originalEvent:        event,\n\t                                        preventDefaultAction: false,\n\t                                        userData:             tracker.userData\n\t                                    }\n\t                                );\n\t                                if ( propagate === false ) {\n\t                                    $.cancelEvent( event );\n\t                                }\n\t                            }\n\t\n\t                            // Double-Click\n\t                            if ( tracker.dblClickHandler && quick ) {\n\t                                pointsList.clicks++;\n\t                                if ( pointsList.clicks === 1 ) {\n\t                                    delegate.lastClickPos = releasePoint;\n\t                                    /*jshint loopfunc:true*/\n\t                                    delegate.dblClickTimeOut = setTimeout( function() {\n\t                                        pointsList.clicks = 0;\n\t                                    }, tracker.dblClickTimeThreshold );\n\t                                    /*jshint loopfunc:false*/\n\t                                } else if ( pointsList.clicks === 2 ) {\n\t                                    clearTimeout( delegate.dblClickTimeOut );\n\t                                    pointsList.clicks = 0;\n\t                                    if ( delegate.lastClickPos.distanceTo( releasePoint ) <= tracker.dblClickDistThreshold ) {\n\t                                        propagate = tracker.dblClickHandler(\n\t                                            {\n\t                                                eventSource:          tracker,\n\t                                                pointerType:          updateGPoint.type,\n\t                                                position:             getPointRelativeToAbsolute( updateGPoint.currentPos, tracker.element ),\n\t                                                shift:                event.shiftKey,\n\t                                                isTouchEvent:         updateGPoint.type === 'touch',\n\t                                                originalEvent:        event,\n\t                                                preventDefaultAction: false,\n\t                                                userData:             tracker.userData\n\t                                            }\n\t                                        );\n\t                                        if ( propagate === false ) {\n\t                                            $.cancelEvent( event );\n\t                                        }\n\t                                    }\n\t                                    delegate.lastClickPos = null;\n\t                                }\n\t                            }\n\t                        }\n\t                    } else if ( pointsList.contacts === 2 ) {\n\t                        if ( tracker.pinchHandler && updateGPoint.type === 'touch' ) {\n\t                            // Reset for pinch\n\t                            delegate.pinchGPoints = pointsList.asArray();\n\t                            delegate.lastPinchDist = delegate.currentPinchDist = delegate.pinchGPoints[ 0 ].currentPos.distanceTo( delegate.pinchGPoints[ 1 ].currentPos );\n\t                            delegate.lastPinchCenter = delegate.currentPinchCenter = getCenterPoint( delegate.pinchGPoints[ 0 ].currentPos, delegate.pinchGPoints[ 1 ].currentPos );\n\t                        }\n\t                    }\n\t                } else {\n\t                    // Pointer was activated in another element but removed in our element\n\t\n\t                    // Release (pressed in another element)\n\t                    if ( tracker.releaseHandler ) {\n\t                        propagate = tracker.releaseHandler(\n\t                            {\n\t                                eventSource:           tracker,\n\t                                pointerType:           updateGPoint.type,\n\t                                position:              getPointRelativeToAbsolute( releasePoint, tracker.element ),\n\t                                buttons:               pointsList.buttons,\n\t                                insideElementPressed:  updateGPoint.insideElementPressed,\n\t                                insideElementReleased: updateGPoint.insideElement,\n\t                                isTouchEvent:          updateGPoint.type === 'touch',\n\t                                originalEvent:         event,\n\t                                preventDefaultAction:  false,\n\t                                userData:              tracker.userData\n\t                            }\n\t                        );\n\t                        if ( propagate === false ) {\n\t                            $.cancelEvent( event );\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        }\n\t\n\t        return releaseCapture;\n\t    }\n\t\n\t\n\t    /**\n\t     * Call when pointer(s) change coordinates, button state, pressure, tilt, or contact geometry (e.g. width and height)\n\t     *\n\t     * @function\n\t     * @private\n\t     * @inner\n\t     * @param {OpenSeadragon.MouseTracker} tracker\n\t     *     A reference to the MouseTracker instance.\n\t     * @param {Object} event\n\t     *     A reference to the originating DOM event.\n\t     * @param {Array.<OpenSeadragon.MouseTracker.GesturePoint>} gPoints\n\t     *      Gesture points associated with the event.\n\t     */\n\t    function updatePointersMove( tracker, event, gPoints ) {\n\t        var delegate = THIS[ tracker.hash ],\n\t            pointsList = tracker.getActivePointersListByType( gPoints[ 0 ].type ),\n\t            i,\n\t            gPointCount = gPoints.length,\n\t            curGPoint,\n\t            updateGPoint,\n\t            gPointArray,\n\t            delta,\n\t            propagate;\n\t\n\t        if ( typeof event.buttons !== 'undefined' ) {\n\t            pointsList.buttons = event.buttons;\n\t        }\n\t\n\t        for ( i = 0; i < gPointCount; i++ ) {\n\t            curGPoint = gPoints[ i ];\n\t            updateGPoint = pointsList.getById( curGPoint.id );\n\t\n\t            if ( updateGPoint ) {\n\t                // Already tracking the pointer...update it\n\t                if ( curGPoint.hasOwnProperty( 'isPrimary' ) ) {\n\t                    updateGPoint.isPrimary = curGPoint.isPrimary;\n\t                }\n\t                updateGPoint.lastPos = updateGPoint.currentPos;\n\t                updateGPoint.lastTime = updateGPoint.currentTime;\n\t                updateGPoint.currentPos = curGPoint.currentPos;\n\t                updateGPoint.currentTime = curGPoint.currentTime;\n\t            } else {\n\t                // Initialize for tracking and add to the tracking list (no pointerover or pointerdown event occurred before this)\n\t                curGPoint.captured = false;\n\t                curGPoint.insideElementPressed = false;\n\t                curGPoint.insideElement = true;\n\t                startTrackingPointer( pointsList, curGPoint );\n\t            }\n\t        }\n\t\n\t        // Stop (mouse only)\n\t        if ( tracker.stopHandler && gPoints[ 0 ].type === 'mouse' ) {\n\t            clearTimeout( tracker.stopTimeOut );\n\t            tracker.stopTimeOut = setTimeout( function() {\n\t                handlePointerStop( tracker, event, gPoints[ 0 ].type );\n\t            }, tracker.stopDelay );\n\t        }\n\t\n\t        if ( pointsList.contacts === 0 ) {\n\t            // Move (no contacts: hovering mouse or other hover-capable device)\n\t            if ( tracker.moveHandler ) {\n\t                propagate = tracker.moveHandler(\n\t                    {\n\t                        eventSource:          tracker,\n\t                        pointerType:          gPoints[ 0 ].type,\n\t                        position:             getPointRelativeToAbsolute( gPoints[ 0 ].currentPos, tracker.element ),\n\t                        buttons:              pointsList.buttons,\n\t                        isTouchEvent:         gPoints[ 0 ].type === 'touch',\n\t                        originalEvent:        event,\n\t                        preventDefaultAction: false,\n\t                        userData:             tracker.userData\n\t                    }\n\t                );\n\t                if ( propagate === false ) {\n\t                    $.cancelEvent( event );\n\t                }\n\t            }\n\t        } else if ( pointsList.contacts === 1 ) {\n\t            // Move (1 contact)\n\t            if ( tracker.moveHandler ) {\n\t                updateGPoint = pointsList.asArray()[ 0 ];\n\t                propagate = tracker.moveHandler(\n\t                    {\n\t                        eventSource:          tracker,\n\t                        pointerType:          updateGPoint.type,\n\t                        position:             getPointRelativeToAbsolute( updateGPoint.currentPos, tracker.element ),\n\t                        buttons:              pointsList.buttons,\n\t                        isTouchEvent:         updateGPoint.type === 'touch',\n\t                        originalEvent:        event,\n\t                        preventDefaultAction: false,\n\t                        userData:             tracker.userData\n\t                    }\n\t                );\n\t                if ( propagate === false ) {\n\t                    $.cancelEvent( event );\n\t                }\n\t            }\n\t\n\t            // Drag\n\t            if ( tracker.dragHandler ) {\n\t                updateGPoint = pointsList.asArray()[ 0 ];\n\t                delta = updateGPoint.currentPos.minus( updateGPoint.lastPos );\n\t                propagate = tracker.dragHandler(\n\t                    {\n\t                        eventSource:          tracker,\n\t                        pointerType:          updateGPoint.type,\n\t                        position:             getPointRelativeToAbsolute( updateGPoint.currentPos, tracker.element ),\n\t                        buttons:              pointsList.buttons,\n\t                        delta:                delta,\n\t                        speed:                updateGPoint.speed,\n\t                        direction:            updateGPoint.direction,\n\t                        shift:                event.shiftKey,\n\t                        isTouchEvent:         updateGPoint.type === 'touch',\n\t                        originalEvent:        event,\n\t                        preventDefaultAction: false,\n\t                        userData:             tracker.userData\n\t                    }\n\t                );\n\t                if ( propagate === false ) {\n\t                    $.cancelEvent( event );\n\t                }\n\t            }\n\t        } else if ( pointsList.contacts === 2 ) {\n\t            // Move (2 contacts, use center)\n\t            if ( tracker.moveHandler ) {\n\t                gPointArray = pointsList.asArray();\n\t                propagate = tracker.moveHandler(\n\t                    {\n\t                        eventSource:          tracker,\n\t                        pointerType:          gPointArray[ 0 ].type,\n\t                        position:             getPointRelativeToAbsolute( getCenterPoint( gPointArray[ 0 ].currentPos, gPointArray[ 1 ].currentPos ), tracker.element ),\n\t                        buttons:              pointsList.buttons,\n\t                        isTouchEvent:         gPointArray[ 0 ].type === 'touch',\n\t                        originalEvent:        event,\n\t                        preventDefaultAction: false,\n\t                        userData:             tracker.userData\n\t                    }\n\t                );\n\t                if ( propagate === false ) {\n\t                    $.cancelEvent( event );\n\t                }\n\t            }\n\t\n\t            // Pinch\n\t            if ( tracker.pinchHandler && gPoints[ 0 ].type === 'touch' ) {\n\t                delta = delegate.pinchGPoints[ 0 ].currentPos.distanceTo( delegate.pinchGPoints[ 1 ].currentPos );\n\t                if ( delta != delegate.currentPinchDist ) {\n\t                    delegate.lastPinchDist = delegate.currentPinchDist;\n\t                    delegate.currentPinchDist = delta;\n\t                    delegate.lastPinchCenter = delegate.currentPinchCenter;\n\t                    delegate.currentPinchCenter = getCenterPoint( delegate.pinchGPoints[ 0 ].currentPos, delegate.pinchGPoints[ 1 ].currentPos );\n\t                    propagate = tracker.pinchHandler(\n\t                        {\n\t                            eventSource:          tracker,\n\t                            pointerType:          'touch',\n\t                            gesturePoints:        delegate.pinchGPoints,\n\t                            lastCenter:           getPointRelativeToAbsolute( delegate.lastPinchCenter, tracker.element ),\n\t                            center:               getPointRelativeToAbsolute( delegate.currentPinchCenter, tracker.element ),\n\t                            lastDistance:         delegate.lastPinchDist,\n\t                            distance:             delegate.currentPinchDist,\n\t                            shift:                event.shiftKey,\n\t                            originalEvent:        event,\n\t                            preventDefaultAction: false,\n\t                            userData:             tracker.userData\n\t                        }\n\t                    );\n\t                    if ( propagate === false ) {\n\t                        $.cancelEvent( event );\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }\n\t\n\t\n\t    /**\n\t     * @function\n\t     * @private\n\t     * @inner\n\t     * @param {OpenSeadragon.MouseTracker} tracker\n\t     *     A reference to the MouseTracker instance.\n\t     * @param {Object} event\n\t     *     A reference to the originating DOM event.\n\t     * @param {Array.<OpenSeadragon.MouseTracker.GesturePoint>} gPoints\n\t     *      Gesture points associated with the event.\n\t     */\n\t    function updatePointersCancel( tracker, event, gPoints ) {\n\t        updatePointersUp( tracker, event, gPoints, 0 );\n\t        updatePointersExit( tracker, event, gPoints );\n\t    }\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @inner\n\t     */\n\t    function handlePointerStop( tracker, originalMoveEvent, pointerType ) {\n\t        if ( tracker.stopHandler ) {\n\t            tracker.stopHandler( {\n\t                eventSource:          tracker,\n\t                pointerType:          pointerType,\n\t                position:             getMouseRelative( originalMoveEvent, tracker.element ),\n\t                buttons:              tracker.getActivePointersListByType( pointerType ).buttons,\n\t                isTouchEvent:         pointerType === 'touch',\n\t                originalEvent:        originalMoveEvent,\n\t                preventDefaultAction: false,\n\t                userData:             tracker.userData\n\t            } );\n\t        }\n\t    }\n\t    \n\t    // True if inside an iframe, otherwise false.\n\t    // @member {Boolean} isInIframe\n\t    // @private\n\t    // @inner\n\t    var isInIframe = (function() {\n\t        try {\n\t            return window.self !== window.top;\n\t        } catch (e) {\n\t            return true;\n\t        }\n\t    })();\n\t \n\t    // @function\n\t    // @private\n\t    // @inner\n\t    // @returns {Boolean} True if the target has access rights to events, otherwise false.\n\t    function canAccessEvents (target) {\n\t        try {\n\t            return target.addEventListener && target.removeEventListener;\n\t        } catch (e) {\n\t            return false;\n\t        }\n\t    }\n\t\n\t} ( OpenSeadragon ) );\n\t\n\t/*\n\t * OpenSeadragon - Control\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function( $ ){\n\t\n\t/**\n\t * An enumeration of supported locations where controls can be anchored.\n\t * The anchoring is always relative to the container.\n\t * @member ControlAnchor\n\t * @memberof OpenSeadragon\n\t * @static\n\t * @type {Object}\n\t * @property {Number} NONE\n\t * @property {Number} TOP_LEFT\n\t * @property {Number} TOP_RIGHT\n\t * @property {Number} BOTTOM_LEFT\n\t * @property {Number} BOTTOM_RIGHT\n\t * @property {Number} ABSOLUTE\n\t */\n\t$.ControlAnchor = {\n\t    NONE: 0,\n\t    TOP_LEFT: 1,\n\t    TOP_RIGHT: 2,\n\t    BOTTOM_RIGHT: 3,\n\t    BOTTOM_LEFT: 4,\n\t    ABSOLUTE: 5\n\t};\n\t\n\t/**\n\t * @class Control\n\t * @classdesc A Control represents any interface element which is meant to allow the user\n\t * to interact with the zoomable interface. Any control can be anchored to any\n\t * element.\n\t *\n\t * @memberof OpenSeadragon\n\t * @param {Element} element - the control element to be anchored in the container.\n\t * @param {Object } options - All required and optional settings for configuring a control element.\n\t * @param {OpenSeadragon.ControlAnchor} [options.anchor=OpenSeadragon.ControlAnchor.NONE] - the position of the control\n\t *  relative to the container.\n\t * @param {Boolean} [options.attachToViewer=true] - Whether the control should be added directly to the viewer, or\n\t *  directly to the container\n\t * @param {Boolean} [options.autoFade=true] - Whether the control should have the autofade behavior\n\t * @param {Element} container - the element to control will be anchored too.\n\t */\n\t$.Control = function ( element, options, container ) {\n\t    var parent = element.parentNode;\n\t    if (typeof options === 'number')\n\t    {\n\t        $.console.error(\"Passing an anchor directly into the OpenSeadragon.Control constructor is deprecated; \" +\n\t                        \"please use an options object instead.  \" +\n\t                        \"Support for this deprecated variant is scheduled for removal in December 2013\");\n\t         options = {anchor: options};\n\t    }\n\t    options.attachToViewer = (typeof options.attachToViewer === 'undefined') ? true : options.attachToViewer;\n\t    /**\n\t     * True if the control should have autofade behavior.\n\t     * @member {Boolean} autoFade\n\t     * @memberof OpenSeadragon.Control#\n\t     */\n\t    this.autoFade = (typeof options.autoFade === 'undefined') ? true : options.autoFade;\n\t    /**\n\t     * The element providing the user interface with some type of control (e.g. a zoom-in button).\n\t     * @member {Element} element\n\t     * @memberof OpenSeadragon.Control#\n\t     */\n\t    this.element    = element;\n\t    /**\n\t     * The position of the Control relative to its container.\n\t     * @member {OpenSeadragon.ControlAnchor} anchor\n\t     * @memberof OpenSeadragon.Control#\n\t     */\n\t    this.anchor     = options.anchor;\n\t    /**\n\t     * The Control's containing element.\n\t     * @member {Element} container\n\t     * @memberof OpenSeadragon.Control#\n\t     */\n\t    this.container  = container;\n\t    /**\n\t     * A neutral element surrounding the control element.\n\t     * @member {Element} wrapper\n\t     * @memberof OpenSeadragon.Control#\n\t     */\n\t    if ( this.anchor == $.ControlAnchor.ABSOLUTE ) {\n\t        this.wrapper    = $.makeNeutralElement( \"div\" );\n\t        this.wrapper.style.position = \"absolute\";\n\t        this.wrapper.style.top = typeof ( options.top )  == \"number\" ? ( options.top + 'px' ) : options.top;\n\t        this.wrapper.style.left  = typeof ( options.left )  == \"number\" ?  (options.left + 'px' ) : options.left;\n\t        this.wrapper.style.height = typeof ( options.height )  == \"number\" ? ( options.height + 'px' ) : options.height;\n\t        this.wrapper.style.width  = typeof ( options.width )  == \"number\" ? ( options.width + 'px' ) : options.width;\n\t        this.wrapper.style.margin = \"0px\";\n\t        this.wrapper.style.padding = \"0px\";\n\t\n\t        this.element.style.position = \"relative\";\n\t        this.element.style.top = \"0px\";\n\t        this.element.style.left = \"0px\";\n\t        this.element.style.height = \"100%\";\n\t        this.element.style.width = \"100%\";\n\t    } else {\n\t        this.wrapper    = $.makeNeutralElement( \"div\" );\n\t        this.wrapper.style.display = \"inline-block\";\n\t        if ( this.anchor == $.ControlAnchor.NONE ) {\n\t            // IE6 fix\n\t            this.wrapper.style.width = this.wrapper.style.height = \"100%\";\n\t        }\n\t    }\n\t    this.wrapper.appendChild( this.element );\n\t\n\t    if (options.attachToViewer ) {\n\t        if ( this.anchor == $.ControlAnchor.TOP_RIGHT ||\n\t             this.anchor == $.ControlAnchor.BOTTOM_RIGHT ) {\n\t            this.container.insertBefore(\n\t                this.wrapper,\n\t                this.container.firstChild\n\t            );\n\t        } else {\n\t            this.container.appendChild( this.wrapper );\n\t        }\n\t    } else {\n\t        parent.appendChild( this.wrapper );\n\t    }\n\t};\n\t\n\t/** @lends OpenSeadragon.Control.prototype */\n\t$.Control.prototype = {\n\t\n\t    /**\n\t     * Removes the control from the container.\n\t     * @function\n\t     */\n\t    destroy: function() {\n\t        this.wrapper.removeChild( this.element );\n\t        this.container.removeChild( this.wrapper );\n\t    },\n\t\n\t    /**\n\t     * Determines if the control is currently visible.\n\t     * @function\n\t     * @return {Boolean} true if currenly visible, false otherwise.\n\t     */\n\t    isVisible: function() {\n\t        return this.wrapper.style.display != \"none\";\n\t    },\n\t\n\t    /**\n\t     * Toggles the visibility of the control.\n\t     * @function\n\t     * @param {Boolean} visible - true to make visible, false to hide.\n\t     */\n\t    setVisible: function( visible ) {\n\t        this.wrapper.style.display = visible ?\n\t            ( this.anchor == $.ControlAnchor.ABSOLUTE ? 'block' : 'inline-block' ) :\n\t            \"none\";\n\t    },\n\t\n\t    /**\n\t     * Sets the opacity level for the control.\n\t     * @function\n\t     * @param {Number} opactiy - a value between 1 and 0 inclusively.\n\t     */\n\t    setOpacity: function( opacity ) {\n\t        if ( this.element[ $.SIGNAL ] && $.Browser.vendor == $.BROWSERS.IE ) {\n\t            $.setElementOpacity( this.element, opacity, true );\n\t        } else {\n\t            $.setElementOpacity( this.wrapper, opacity, true );\n\t        }\n\t    }\n\t};\n\t\n\t}( OpenSeadragon ));\n\t\n\t/*\n\t * OpenSeadragon - ControlDock\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function( $ ){\n\t    /**\n\t     * @class ControlDock\n\t     * @classdesc Provides a container element (a &lt;form&gt; element) with support for the layout of control elements.\n\t     *\n\t     * @memberof OpenSeadragon\n\t     */\n\t    $.ControlDock = function( options ){\n\t        var layouts = [ 'topleft', 'topright', 'bottomright', 'bottomleft'],\n\t            layout,\n\t            i;\n\t\n\t        $.extend( true, this, {\n\t            id: 'controldock-'+$.now()+'-'+Math.floor(Math.random()*1000000),\n\t            container: $.makeNeutralElement( 'div' ),\n\t            controls: []\n\t        }, options );\n\t\n\t        // Disable the form's submit; otherwise button clicks and return keys\n\t        // can trigger it.\n\t        this.container.onsubmit = function() {\n\t            return false;\n\t        };\n\t\n\t        if( this.element ){\n\t            this.element = $.getElement( this.element );\n\t            this.element.appendChild( this.container );\n\t            this.element.style.position = 'relative';\n\t            this.container.style.width = '100%';\n\t            this.container.style.height = '100%';\n\t        }\n\t\n\t        for( i = 0; i < layouts.length; i++ ){\n\t            layout = layouts[ i ];\n\t            this.controls[ layout ] = $.makeNeutralElement( \"div\" );\n\t            this.controls[ layout ].style.position = 'absolute';\n\t            if ( layout.match( 'left' ) ){\n\t                this.controls[ layout ].style.left = '0px';\n\t            }\n\t            if ( layout.match( 'right' ) ){\n\t                this.controls[ layout ].style.right = '0px';\n\t            }\n\t            if ( layout.match( 'top' ) ){\n\t                this.controls[ layout ].style.top = '0px';\n\t            }\n\t            if ( layout.match( 'bottom' ) ){\n\t                this.controls[ layout ].style.bottom = '0px';\n\t            }\n\t        }\n\t\n\t        this.container.appendChild( this.controls.topleft );\n\t        this.container.appendChild( this.controls.topright );\n\t        this.container.appendChild( this.controls.bottomright );\n\t        this.container.appendChild( this.controls.bottomleft );\n\t    };\n\t\n\t    /** @lends OpenSeadragon.ControlDock.prototype */\n\t    $.ControlDock.prototype = {\n\t\n\t        /**\n\t         * @function\n\t         */\n\t        addControl: function ( element, controlOptions ) {\n\t            element = $.getElement( element );\n\t            var div = null;\n\t\n\t            if ( getControlIndex( this, element ) >= 0 ) {\n\t                return;     // they're trying to add a duplicate control\n\t            }\n\t\n\t            switch ( controlOptions.anchor ) {\n\t                case $.ControlAnchor.TOP_RIGHT:\n\t                    div = this.controls.topright;\n\t                    element.style.position = \"relative\";\n\t                    element.style.paddingRight = \"0px\";\n\t                    element.style.paddingTop = \"0px\";\n\t                    break;\n\t                case $.ControlAnchor.BOTTOM_RIGHT:\n\t                    div = this.controls.bottomright;\n\t                    element.style.position = \"relative\";\n\t                    element.style.paddingRight = \"0px\";\n\t                    element.style.paddingBottom = \"0px\";\n\t                    break;\n\t                case $.ControlAnchor.BOTTOM_LEFT:\n\t                    div = this.controls.bottomleft;\n\t                    element.style.position = \"relative\";\n\t                    element.style.paddingLeft = \"0px\";\n\t                    element.style.paddingBottom = \"0px\";\n\t                    break;\n\t                case $.ControlAnchor.TOP_LEFT:\n\t                    div = this.controls.topleft;\n\t                    element.style.position = \"relative\";\n\t                    element.style.paddingLeft = \"0px\";\n\t                    element.style.paddingTop = \"0px\";\n\t                    break;\n\t                case $.ControlAnchor.ABSOLUTE:\n\t                    div = this.container;\n\t                    element.style.margin = \"0px\";\n\t                    element.style.padding = \"0px\";\n\t                    break;\n\t                default:\n\t                case $.ControlAnchor.NONE:\n\t                    div = this.container;\n\t                    element.style.margin = \"0px\";\n\t                    element.style.padding = \"0px\";\n\t                    break;\n\t            }\n\t\n\t            this.controls.push(\n\t                new $.Control( element, controlOptions, div )\n\t            );\n\t            element.style.display = \"inline-block\";\n\t        },\n\t\n\t\n\t        /**\n\t         * @function\n\t         * @return {OpenSeadragon.ControlDock} Chainable.\n\t         */\n\t        removeControl: function ( element ) {\n\t            element = $.getElement( element );\n\t            var i = getControlIndex( this, element );\n\t\n\t            if ( i >= 0 ) {\n\t                this.controls[ i ].destroy();\n\t                this.controls.splice( i, 1 );\n\t            }\n\t\n\t            return this;\n\t        },\n\t\n\t        /**\n\t         * @function\n\t         * @return {OpenSeadragon.ControlDock} Chainable.\n\t         */\n\t        clearControls: function () {\n\t            while ( this.controls.length > 0 ) {\n\t                this.controls.pop().destroy();\n\t            }\n\t\n\t            return this;\n\t        },\n\t\n\t\n\t        /**\n\t         * @function\n\t         * @return {Boolean}\n\t         */\n\t        areControlsEnabled: function () {\n\t            var i;\n\t\n\t            for ( i = this.controls.length - 1; i >= 0; i-- ) {\n\t                if ( this.controls[ i ].isVisible() ) {\n\t                    return true;\n\t                }\n\t            }\n\t\n\t            return false;\n\t        },\n\t\n\t\n\t        /**\n\t         * @function\n\t         * @return {OpenSeadragon.ControlDock} Chainable.\n\t         */\n\t        setControlsEnabled: function( enabled ) {\n\t            var i;\n\t\n\t            for ( i = this.controls.length - 1; i >= 0; i-- ) {\n\t                this.controls[ i ].setVisible( enabled );\n\t            }\n\t\n\t            return this;\n\t        }\n\t\n\t    };\n\t\n\t\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    // Utility methods\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    function getControlIndex( dock, element ) {\n\t        var controls = dock.controls,\n\t            i;\n\t\n\t        for ( i = controls.length - 1; i >= 0; i-- ) {\n\t            if ( controls[ i ].element == element ) {\n\t                return i;\n\t            }\n\t        }\n\t\n\t        return -1;\n\t    }\n\t\n\t}( OpenSeadragon ));\n\t\n\t/*\n\t * OpenSeadragon - Placement\n\t *\n\t * Copyright (C) 2010-2016 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function($) {\n\t\n\t    /**\n\t     * An enumeration of positions to anchor an element.\n\t     * @member Placement\n\t     * @memberOf OpenSeadragon\n\t     * @static\n\t     * @readonly\n\t     * @property {OpenSeadragon.Placement} CENTER\n\t     * @property {OpenSeadragon.Placement} TOP_LEFT\n\t     * @property {OpenSeadragon.Placement} TOP\n\t     * @property {OpenSeadragon.Placement} TOP_RIGHT\n\t     * @property {OpenSeadragon.Placement} RIGHT\n\t     * @property {OpenSeadragon.Placement} BOTTOM_RIGHT\n\t     * @property {OpenSeadragon.Placement} BOTTOM\n\t     * @property {OpenSeadragon.Placement} BOTTOM_LEFT\n\t     * @property {OpenSeadragon.Placement} LEFT\n\t     */\n\t    $.Placement = $.freezeObject({\n\t        CENTER:       0,\n\t        TOP_LEFT:     1,\n\t        TOP:          2,\n\t        TOP_RIGHT:    3,\n\t        RIGHT:        4,\n\t        BOTTOM_RIGHT: 5,\n\t        BOTTOM:       6,\n\t        BOTTOM_LEFT:  7,\n\t        LEFT:         8,\n\t        properties: {\n\t            0: {\n\t                isLeft: false,\n\t                isHorizontallyCentered: true,\n\t                isRight: false,\n\t                isTop: false,\n\t                isVerticallyCentered: true,\n\t                isBottom: false\n\t            },\n\t            1: {\n\t                isLeft: true,\n\t                isHorizontallyCentered: false,\n\t                isRight: false,\n\t                isTop: true,\n\t                isVerticallyCentered: false,\n\t                isBottom: false\n\t            },\n\t            2: {\n\t                isLeft: false,\n\t                isHorizontallyCentered: true,\n\t                isRight: false,\n\t                isTop: true,\n\t                isVerticallyCentered: false,\n\t                isBottom: false\n\t            },\n\t            3: {\n\t                isLeft: false,\n\t                isHorizontallyCentered: false,\n\t                isRight: true,\n\t                isTop: true,\n\t                isVerticallyCentered: false,\n\t                isBottom: false\n\t            },\n\t            4: {\n\t                isLeft: false,\n\t                isHorizontallyCentered: false,\n\t                isRight: true,\n\t                isTop: false,\n\t                isVerticallyCentered: true,\n\t                isBottom: false\n\t            },\n\t            5: {\n\t                isLeft: false,\n\t                isHorizontallyCentered: false,\n\t                isRight: true,\n\t                isTop: false,\n\t                isVerticallyCentered: false,\n\t                isBottom: true\n\t            },\n\t            6: {\n\t                isLeft: false,\n\t                isHorizontallyCentered: true,\n\t                isRight: false,\n\t                isTop: false,\n\t                isVerticallyCentered: false,\n\t                isBottom: true\n\t            },\n\t            7: {\n\t                isLeft: true,\n\t                isHorizontallyCentered: false,\n\t                isRight: false,\n\t                isTop: false,\n\t                isVerticallyCentered: false,\n\t                isBottom: true\n\t            },\n\t            8: {\n\t                isLeft: true,\n\t                isHorizontallyCentered: false,\n\t                isRight: false,\n\t                isTop: false,\n\t                isVerticallyCentered: true,\n\t                isBottom: false\n\t            }\n\t        }\n\t    });\n\t\n\t}(OpenSeadragon));\n\t\n\t/*\n\t * OpenSeadragon - Viewer\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function( $ ){\n\t\n\t// dictionary from hash to private properties\n\tvar THIS = {};\n\tvar nextHash = 1;\n\t\n\t/**\n\t *\n\t * The main point of entry into creating a zoomable image on the page.<br>\n\t * <br>\n\t * We have provided an idiomatic javascript constructor which takes\n\t * a single object, but still support the legacy positional arguments.<br>\n\t * <br>\n\t * The options below are given in order that they appeared in the constructor\n\t * as arguments and we translate a positional call into an idiomatic call.<br>\n\t * <br>\n\t * To create a viewer, you can use either of this methods:<br>\n\t * <ul>\n\t * <li><code>var viewer = new OpenSeadragon.Viewer(options);</code></li>\n\t * <li><code>var viewer = OpenSeadragon(options);</code></li>\n\t * </ul>\n\t * @class Viewer\n\t * @classdesc The main OpenSeadragon viewer class.\n\t *\n\t * @memberof OpenSeadragon\n\t * @extends OpenSeadragon.EventSource\n\t * @extends OpenSeadragon.ControlDock\n\t * @param {OpenSeadragon.Options} options - Viewer options.\n\t *\n\t **/\n\t$.Viewer = function( options ) {\n\t\n\t    var args  = arguments,\n\t        _this = this,\n\t        i;\n\t\n\t\n\t    //backward compatibility for positional args while prefering more\n\t    //idiomatic javascript options object as the only argument\n\t    if( !$.isPlainObject( options ) ){\n\t        options = {\n\t            id:                 args[ 0 ],\n\t            xmlPath:            args.length > 1 ? args[ 1 ] : undefined,\n\t            prefixUrl:          args.length > 2 ? args[ 2 ] : undefined,\n\t            controls:           args.length > 3 ? args[ 3 ] : undefined,\n\t            overlays:           args.length > 4 ? args[ 4 ] : undefined\n\t        };\n\t    }\n\t\n\t    //options.config and the general config argument are deprecated\n\t    //in favor of the more direct specification of optional settings\n\t    //being pass directly on the options object\n\t    if ( options.config ){\n\t        $.extend( true, options, options.config );\n\t        delete options.config;\n\t    }\n\t\n\t    //Public properties\n\t    //Allow the options object to override global defaults\n\t    $.extend( true, this, {\n\t\n\t        //internal state and dom identifiers\n\t        id:             options.id,\n\t        hash:           options.hash || nextHash++,\n\t\n\t        //dom nodes\n\t        /**\n\t         * The parent element of this Viewer instance, passed in when the Viewer was created.\n\t         * @member {Element} element\n\t         * @memberof OpenSeadragon.Viewer#\n\t         */\n\t        element:        null,\n\t        /**\n\t         * A &lt;div&gt; element (provided by {@link OpenSeadragon.ControlDock}), the base element of this Viewer instance.<br><br>\n\t         * Child element of {@link OpenSeadragon.Viewer#element}.\n\t         * @member {Element} container\n\t         * @memberof OpenSeadragon.Viewer#\n\t         */\n\t        container:      null,\n\t        /**\n\t         * A &lt;div&gt; element, the element where user-input events are handled for panning and zooming.<br><br>\n\t         * Child element of {@link OpenSeadragon.Viewer#container},\n\t         * positioned on top of {@link OpenSeadragon.Viewer#keyboardCommandArea}.<br><br>\n\t         * The parent of {@link OpenSeadragon.Drawer#canvas} instances.\n\t         * @member {Element} canvas\n\t         * @memberof OpenSeadragon.Viewer#\n\t         */\n\t        canvas:         null,\n\t\n\t        // Overlays list. An overlay allows to add html on top of the viewer.\n\t        overlays:           [],\n\t        // Container inside the canvas where overlays are drawn.\n\t        overlaysContainer:  null,\n\t\n\t        //private state properties\n\t        previousBody:   [],\n\t\n\t        //This was originally initialized in the constructor and so could never\n\t        //have anything in it.  now it can because we allow it to be specified\n\t        //in the options and is only empty by default if not specified. Also\n\t        //this array was returned from get_controls which I find confusing\n\t        //since this object has a controls property which is treated in other\n\t        //functions like clearControls.  I'm removing the accessors.\n\t        customControls: [],\n\t\n\t        //These are originally not part options but declared as members\n\t        //in initialize.  It's still considered idiomatic to put them here\n\t        source:         null,\n\t        /**\n\t         * Handles rendering of tiles in the viewer. Created for each TileSource opened.\n\t         * @member {OpenSeadragon.Drawer} drawer\n\t         * @memberof OpenSeadragon.Viewer#\n\t         */\n\t        drawer:             null,\n\t        world:              null,\n\t        /**\n\t         * Handles coordinate-related functionality - zoom, pan, rotation, etc. Created for each TileSource opened.\n\t         * @member {OpenSeadragon.Viewport} viewport\n\t         * @memberof OpenSeadragon.Viewer#\n\t         */\n\t        viewport:       null,\n\t        /**\n\t         * @member {OpenSeadragon.Navigator} navigator\n\t         * @memberof OpenSeadragon.Viewer#\n\t         */\n\t        navigator:      null,\n\t\n\t        //A collection viewport is a separate viewport used to provide\n\t        //simultaneous rendering of sets of tiles\n\t        collectionViewport:     null,\n\t        collectionDrawer:       null,\n\t\n\t        //UI image resources\n\t        //TODO: rename navImages to uiImages\n\t        navImages:      null,\n\t\n\t        //interface button controls\n\t        buttons:        null,\n\t\n\t        //TODO: this is defunct so safely remove it\n\t        profiler:       null\n\t\n\t    }, $.DEFAULT_SETTINGS, options );\n\t\n\t    if ( typeof( this.hash) === \"undefined\" ) {\n\t        throw new Error(\"A hash must be defined, either by specifying options.id or options.hash.\");\n\t    }\n\t    if ( typeof( THIS[ this.hash ] ) !== \"undefined\" ) {\n\t        // We don't want to throw an error here, as the user might have discarded\n\t        // the previous viewer with the same hash and now want to recreate it.\n\t        $.console.warn(\"Hash \" + this.hash + \" has already been used.\");\n\t    }\n\t\n\t    //Private state properties\n\t    THIS[ this.hash ] = {\n\t        \"fsBoundsDelta\":     new $.Point( 1, 1 ),\n\t        \"prevContainerSize\": null,\n\t        \"animating\":         false,\n\t        \"forceRedraw\":       false,\n\t        \"mouseInside\":       false,\n\t        \"group\":             null,\n\t        // whether we should be continuously zooming\n\t        \"zooming\":           false,\n\t        // how much we should be continuously zooming by\n\t        \"zoomFactor\":        null,\n\t        \"lastZoomTime\":      null,\n\t        \"fullPage\":          false,\n\t        \"onfullscreenchange\": null\n\t    };\n\t\n\t    this._sequenceIndex = 0;\n\t    this._firstOpen = true;\n\t    this._updateRequestId = null;\n\t    this._loadQueue = [];\n\t    this.currentOverlays = [];\n\t\n\t    this._lastScrollTime = $.now(); // variable used to help normalize the scroll event speed of different devices\n\t\n\t    //Inherit some behaviors and properties\n\t    $.EventSource.call( this );\n\t\n\t    this.addHandler( 'open-failed', function ( event ) {\n\t        var msg = $.getString( \"Errors.OpenFailed\", event.eventSource, event.message);\n\t        _this._showMessage( msg );\n\t    });\n\t\n\t    $.ControlDock.call( this, options );\n\t\n\t    //Deal with tile sources\n\t    if ( this.xmlPath  ){\n\t        //Deprecated option.  Now it is preferred to use the tileSources option\n\t        this.tileSources = [ this.xmlPath ];\n\t    }\n\t\n\t    this.element              = this.element || document.getElementById( this.id );\n\t    this.canvas               = $.makeNeutralElement( \"div\" );\n\t\n\t    this.canvas.className = \"openseadragon-canvas\";\n\t    (function( style ){\n\t        style.width    = \"100%\";\n\t        style.height   = \"100%\";\n\t        style.overflow = \"hidden\";\n\t        style.position = \"absolute\";\n\t        style.top      = \"0px\";\n\t        style.left     = \"0px\";\n\t    }(this.canvas.style));\n\t    $.setElementTouchActionNone( this.canvas );\n\t    if (options.tabIndex !== \"\") {\n\t        this.canvas.tabIndex = (options.tabIndex === undefined ? 0 : options.tabIndex);\n\t    }\n\t\n\t    //the container is created through applying the ControlDock constructor above\n\t    this.container.className = \"openseadragon-container\";\n\t    (function( style ){\n\t        style.width     = \"100%\";\n\t        style.height    = \"100%\";\n\t        style.position  = \"relative\";\n\t        style.overflow  = \"hidden\";\n\t        style.left      = \"0px\";\n\t        style.top       = \"0px\";\n\t        style.textAlign = \"left\";  // needed to protect against\n\t    }( this.container.style ));\n\t\n\t    this.container.insertBefore( this.canvas, this.container.firstChild );\n\t    this.element.appendChild( this.container );\n\t\n\t    //Used for toggling between fullscreen and default container size\n\t    //TODO: these can be closure private and shared across Viewer\n\t    //      instances.\n\t    this.bodyWidth      = document.body.style.width;\n\t    this.bodyHeight     = document.body.style.height;\n\t    this.bodyOverflow   = document.body.style.overflow;\n\t    this.docOverflow    = document.documentElement.style.overflow;\n\t\n\t    this.innerTracker = new $.MouseTracker({\n\t        element:                  this.canvas,\n\t        startDisabled:            this.mouseNavEnabled ? false : true,\n\t        clickTimeThreshold:       this.clickTimeThreshold,\n\t        clickDistThreshold:       this.clickDistThreshold,\n\t        dblClickTimeThreshold:    this.dblClickTimeThreshold,\n\t        dblClickDistThreshold:    this.dblClickDistThreshold,\n\t        keyDownHandler:           $.delegate( this, onCanvasKeyDown ),\n\t        keyHandler:               $.delegate( this, onCanvasKeyPress ),\n\t        clickHandler:             $.delegate( this, onCanvasClick ),\n\t        dblClickHandler:          $.delegate( this, onCanvasDblClick ),\n\t        dragHandler:              $.delegate( this, onCanvasDrag ),\n\t        dragEndHandler:           $.delegate( this, onCanvasDragEnd ),\n\t        enterHandler:             $.delegate( this, onCanvasEnter ),\n\t        exitHandler:              $.delegate( this, onCanvasExit ),\n\t        pressHandler:             $.delegate( this, onCanvasPress ),\n\t        releaseHandler:           $.delegate( this, onCanvasRelease ),\n\t        nonPrimaryPressHandler:   $.delegate( this, onCanvasNonPrimaryPress ),\n\t        nonPrimaryReleaseHandler: $.delegate( this, onCanvasNonPrimaryRelease ),\n\t        scrollHandler:            $.delegate( this, onCanvasScroll ),\n\t        pinchHandler:             $.delegate( this, onCanvasPinch )\n\t    });\n\t\n\t    this.outerTracker = new $.MouseTracker({\n\t        element:               this.container,\n\t        startDisabled:         this.mouseNavEnabled ? false : true,\n\t        clickTimeThreshold:    this.clickTimeThreshold,\n\t        clickDistThreshold:    this.clickDistThreshold,\n\t        dblClickTimeThreshold: this.dblClickTimeThreshold,\n\t        dblClickDistThreshold: this.dblClickDistThreshold,\n\t        enterHandler:          $.delegate( this, onContainerEnter ),\n\t        exitHandler:           $.delegate( this, onContainerExit )\n\t    });\n\t\n\t    if( this.toolbar ){\n\t        this.toolbar = new $.ControlDock({ element: this.toolbar });\n\t    }\n\t\n\t    this.bindStandardControls();\n\t\n\t    THIS[ this.hash ].prevContainerSize = _getSafeElemSize( this.container );\n\t\n\t    // Create the world\n\t    this.world = new $.World({\n\t        viewer: this\n\t    });\n\t\n\t    this.world.addHandler('add-item', function(event) {\n\t        // For backwards compatibility, we maintain the source property\n\t        _this.source = _this.world.getItemAt(0).source;\n\t\n\t        THIS[ _this.hash ].forceRedraw = true;\n\t\n\t        if (!_this._updateRequestId) {\n\t            _this._updateRequestId = scheduleUpdate( _this, updateMulti );\n\t        }\n\t    });\n\t\n\t    this.world.addHandler('remove-item', function(event) {\n\t        // For backwards compatibility, we maintain the source property\n\t        if (_this.world.getItemCount()) {\n\t            _this.source = _this.world.getItemAt(0).source;\n\t        } else {\n\t            _this.source = null;\n\t        }\n\t\n\t        THIS[ _this.hash ].forceRedraw = true;\n\t    });\n\t\n\t    this.world.addHandler('metrics-change', function(event) {\n\t        if (_this.viewport) {\n\t            _this.viewport._setContentBounds(_this.world.getHomeBounds(), _this.world.getContentFactor());\n\t        }\n\t    });\n\t\n\t    this.world.addHandler('item-index-change', function(event) {\n\t        // For backwards compatibility, we maintain the source property\n\t        _this.source = _this.world.getItemAt(0).source;\n\t    });\n\t\n\t    // Create the viewport\n\t    this.viewport = new $.Viewport({\n\t        containerSize:      THIS[ this.hash ].prevContainerSize,\n\t        springStiffness:    this.springStiffness,\n\t        animationTime:      this.animationTime,\n\t        minZoomImageRatio:  this.minZoomImageRatio,\n\t        maxZoomPixelRatio:  this.maxZoomPixelRatio,\n\t        visibilityRatio:    this.visibilityRatio,\n\t        wrapHorizontal:     this.wrapHorizontal,\n\t        wrapVertical:       this.wrapVertical,\n\t        defaultZoomLevel:   this.defaultZoomLevel,\n\t        minZoomLevel:       this.minZoomLevel,\n\t        maxZoomLevel:       this.maxZoomLevel,\n\t        viewer:             this,\n\t        degrees:            this.degrees,\n\t        navigatorRotate:    this.navigatorRotate,\n\t        homeFillsViewer:    this.homeFillsViewer,\n\t        margins:            this.viewportMargins\n\t    });\n\t\n\t    this.viewport._setContentBounds(this.world.getHomeBounds(), this.world.getContentFactor());\n\t\n\t    // Create the image loader\n\t    this.imageLoader = new $.ImageLoader({\n\t        jobLimit: this.imageLoaderLimit\n\t    });\n\t\n\t    // Create the tile cache\n\t    this.tileCache = new $.TileCache({\n\t        maxImageCacheCount: this.maxImageCacheCount\n\t    });\n\t\n\t    // Create the drawer\n\t    this.drawer = new $.Drawer({\n\t        viewer:             this,\n\t        viewport:           this.viewport,\n\t        element:            this.canvas,\n\t        debugGridColor:     this.debugGridColor\n\t    });\n\t\n\t    // Overlay container\n\t    this.overlaysContainer    = $.makeNeutralElement( \"div\" );\n\t    this.canvas.appendChild( this.overlaysContainer );\n\t\n\t    // Now that we have a drawer, see if it supports rotate. If not we need to remove the rotate buttons\n\t    if (!this.drawer.canRotate()) {\n\t        // Disable/remove the rotate left/right buttons since they aren't supported\n\t        if (this.rotateLeft) {\n\t            i = this.buttons.buttons.indexOf(this.rotateLeft);\n\t            this.buttons.buttons.splice(i, 1);\n\t            this.buttons.element.removeChild(this.rotateLeft.element);\n\t        }\n\t        if (this.rotateRight) {\n\t            i = this.buttons.buttons.indexOf(this.rotateRight);\n\t            this.buttons.buttons.splice(i, 1);\n\t            this.buttons.element.removeChild(this.rotateRight.element);\n\t        }\n\t    }\n\t\n\t    //Instantiate a navigator if configured\n\t    if ( this.showNavigator){\n\t        this.navigator = new $.Navigator({\n\t            id:                this.navigatorId,\n\t            position:          this.navigatorPosition,\n\t            sizeRatio:         this.navigatorSizeRatio,\n\t            maintainSizeRatio: this.navigatorMaintainSizeRatio,\n\t            top:               this.navigatorTop,\n\t            left:              this.navigatorLeft,\n\t            width:             this.navigatorWidth,\n\t            height:            this.navigatorHeight,\n\t            autoResize:        this.navigatorAutoResize,\n\t            autoFade:          this.navigatorAutoFade,\n\t            prefixUrl:         this.prefixUrl,\n\t            viewer:            this,\n\t            navigatorRotate:   this.navigatorRotate,\n\t            crossOriginPolicy: this.crossOriginPolicy\n\t        });\n\t    }\n\t\n\t    // Sequence mode\n\t    if (this.sequenceMode) {\n\t        this.bindSequenceControls();\n\t    }\n\t\n\t    // Open initial tilesources\n\t    if (this.tileSources) {\n\t        this.open( this.tileSources );\n\t    }\n\t\n\t    // Add custom controls\n\t    for ( i = 0; i < this.customControls.length; i++ ) {\n\t        this.addControl(\n\t            this.customControls[ i ].id,\n\t            {anchor: this.customControls[ i ].anchor}\n\t        );\n\t    }\n\t\n\t    // Initial fade out\n\t    $.requestAnimationFrame( function(){\n\t        beginControlsAutoHide( _this );\n\t    } );\n\t};\n\t\n\t$.extend( $.Viewer.prototype, $.EventSource.prototype, $.ControlDock.prototype, /** @lends OpenSeadragon.Viewer.prototype */{\n\t\n\t\n\t    /**\n\t     * @function\n\t     * @return {Boolean}\n\t     */\n\t    isOpen: function () {\n\t        return !!this.world.getItemCount();\n\t    },\n\t\n\t    // deprecated\n\t    openDzi: function ( dzi ) {\n\t        $.console.error( \"[Viewer.openDzi] this function is deprecated; use Viewer.open() instead.\" );\n\t        return this.open( dzi );\n\t    },\n\t\n\t    // deprecated\n\t    openTileSource: function ( tileSource ) {\n\t        $.console.error( \"[Viewer.openTileSource] this function is deprecated; use Viewer.open() instead.\" );\n\t        return this.open( tileSource );\n\t    },\n\t\n\t    /**\n\t     * Open tiled images into the viewer, closing any others.\n\t     * @function\n\t     * @param {Array|String|Object|Function} tileSources - This can be a TiledImage\n\t     * specifier, a TileSource specifier, or an array of either. A TiledImage specifier\n\t     * is the same as the options parameter for {@link OpenSeadragon.Viewer#addTiledImage},\n\t     * except for the index property; images are added in sequence.\n\t     * A TileSource specifier is anything you could pass as the tileSource property\n\t     * of the options parameter for {@link OpenSeadragon.Viewer#addTiledImage}.\n\t     * @return {OpenSeadragon.Viewer} Chainable.\n\t     * @fires OpenSeadragon.Viewer.event:open\n\t     * @fires OpenSeadragon.Viewer.event:open-failed\n\t     */\n\t    open: function (tileSources) {\n\t        var _this = this;\n\t\n\t        this.close();\n\t\n\t        if (!tileSources) {\n\t            return;\n\t        }\n\t\n\t        if (this.sequenceMode && $.isArray(tileSources)) {\n\t            if (this.referenceStrip) {\n\t                this.referenceStrip.destroy();\n\t                this.referenceStrip = null;\n\t            }\n\t\n\t            this.tileSources = tileSources;\n\t            this._sequenceIndex = Math.max(0, Math.min(this.tileSources.length - 1, this.initialPage));\n\t            if (this.tileSources.length) {\n\t                this.open(this.tileSources[this._sequenceIndex]);\n\t\n\t                if ( this.showReferenceStrip ){\n\t                    this.referenceStrip = new $.ReferenceStrip({\n\t                        id:          this.referenceStripElement,\n\t                        position:    this.referenceStripPosition,\n\t                        sizeRatio:   this.referenceStripSizeRatio,\n\t                        scroll:      this.referenceStripScroll,\n\t                        height:      this.referenceStripHeight,\n\t                        width:       this.referenceStripWidth,\n\t                        tileSources: this.tileSources,\n\t                        prefixUrl:   this.prefixUrl,\n\t                        viewer:      this\n\t                    });\n\t                }\n\t            }\n\t\n\t            this._updateSequenceButtons( this._sequenceIndex );\n\t            return;\n\t        }\n\t\n\t        if (!$.isArray(tileSources)) {\n\t            tileSources = [tileSources];\n\t        }\n\t\n\t        if (!tileSources.length) {\n\t            return;\n\t        }\n\t\n\t        this._opening = true;\n\t\n\t        var expected = tileSources.length;\n\t        var successes = 0;\n\t        var failures = 0;\n\t        var failEvent;\n\t\n\t        var checkCompletion = function() {\n\t            if (successes + failures === expected) {\n\t                if (successes) {\n\t                    if (_this._firstOpen || !_this.preserveViewport) {\n\t                        _this.viewport.goHome( true );\n\t                        _this.viewport.update();\n\t                    }\n\t\n\t                    _this._firstOpen = false;\n\t\n\t                    var source = tileSources[0];\n\t                    if (source.tileSource) {\n\t                        source = source.tileSource;\n\t                    }\n\t\n\t                    // Global overlays\n\t                    if( _this.overlays && !_this.preserveOverlays ){\n\t                        for ( var i = 0; i < _this.overlays.length; i++ ) {\n\t                            _this.currentOverlays[ i ] = getOverlayObject( _this, _this.overlays[ i ] );\n\t                        }\n\t                    }\n\t\n\t                    _this._drawOverlays();\n\t                    _this._opening = false;\n\t\n\t                    /**\n\t                     * Raised when the viewer has opened and loaded one or more TileSources.\n\t                     *\n\t                     * @event open\n\t                     * @memberof OpenSeadragon.Viewer\n\t                     * @type {object}\n\t                     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n\t                     * @property {OpenSeadragon.TileSource} source - The tile source that was opened.\n\t                     * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t                     */\n\t                    // TODO: what if there are multiple sources?\n\t                    _this.raiseEvent( 'open', { source: source } );\n\t                } else {\n\t                    _this._opening = false;\n\t\n\t                    /**\n\t                     * Raised when an error occurs loading a TileSource.\n\t                     *\n\t                     * @event open-failed\n\t                     * @memberof OpenSeadragon.Viewer\n\t                     * @type {object}\n\t                     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n\t                     * @property {String} message - Information about what failed.\n\t                     * @property {String} source - The tile source that failed.\n\t                     * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t                     */\n\t                    _this.raiseEvent( 'open-failed', failEvent );\n\t                }\n\t            }\n\t        };\n\t\n\t        var doOne = function(options) {\n\t            if (!$.isPlainObject(options) || !options.tileSource) {\n\t                options = {\n\t                    tileSource: options\n\t                };\n\t            }\n\t\n\t            if (options.index !== undefined) {\n\t                $.console.error('[Viewer.open] setting indexes here is not supported; use addTiledImage instead');\n\t                delete options.index;\n\t            }\n\t\n\t            if (options.collectionImmediately === undefined) {\n\t                options.collectionImmediately = true;\n\t            }\n\t\n\t            var originalSuccess = options.success;\n\t            options.success = function(event) {\n\t                successes++;\n\t\n\t                // TODO: now that options has other things besides tileSource, the overlays\n\t                // should probably be at the options level, not the tileSource level.\n\t                if (options.tileSource.overlays) {\n\t                    for (var i = 0; i < options.tileSource.overlays.length; i++) {\n\t                        _this.addOverlay(options.tileSource.overlays[i]);\n\t                    }\n\t                }\n\t\n\t                if (originalSuccess) {\n\t                    originalSuccess(event);\n\t                }\n\t\n\t                checkCompletion();\n\t            };\n\t\n\t            var originalError = options.error;\n\t            options.error = function(event) {\n\t                failures++;\n\t\n\t                if (!failEvent) {\n\t                    failEvent = event;\n\t                }\n\t\n\t                if (originalError) {\n\t                    originalError(event);\n\t                }\n\t\n\t                checkCompletion();\n\t            };\n\t\n\t            _this.addTiledImage(options);\n\t        };\n\t\n\t        // TileSources\n\t        for (var i = 0; i < tileSources.length; i++) {\n\t            doOne(tileSources[i]);\n\t        }\n\t\n\t        return this;\n\t    },\n\t\n\t\n\t    /**\n\t     * @function\n\t     * @return {OpenSeadragon.Viewer} Chainable.\n\t     * @fires OpenSeadragon.Viewer.event:close\n\t     */\n\t    close: function ( ) {\n\t        if ( !THIS[ this.hash ] ) {\n\t            //this viewer has already been destroyed: returning immediately\n\t            return this;\n\t        }\n\t\n\t        this._opening = false;\n\t\n\t        if ( this.navigator ) {\n\t            this.navigator.close();\n\t        }\n\t\n\t        if( ! this.preserveOverlays) {\n\t            this.clearOverlays();\n\t            this.overlaysContainer.innerHTML = \"\";\n\t        }\n\t\n\t        THIS[ this.hash ].animating = false;\n\t        this.world.removeAll();\n\t        this.imageLoader.clear();\n\t\n\t        /**\n\t         * Raised when the viewer is closed (see {@link OpenSeadragon.Viewer#close}).\n\t         *\n\t         * @event close\n\t         * @memberof OpenSeadragon.Viewer\n\t         * @type {object}\n\t         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n\t         * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t         */\n\t        this.raiseEvent( 'close' );\n\t\n\t        return this;\n\t    },\n\t\n\t\n\t    /**\n\t     * Function to destroy the viewer and clean up everything created by OpenSeadragon.\n\t     *\n\t     * Example:\n\t     * var viewer = OpenSeadragon({\n\t     *   [...]\n\t     * });\n\t     *\n\t     * //when you are done with the viewer:\n\t     * viewer.destroy();\n\t     * viewer = null; //important\n\t     *\n\t     * @function\n\t     */\n\t    destroy: function( ) {\n\t        if ( !THIS[ this.hash ] ) {\n\t            //this viewer has already been destroyed: returning immediately\n\t            return;\n\t        }\n\t\n\t        this.close();\n\t\n\t        this.clearOverlays();\n\t        this.overlaysContainer.innerHTML = \"\";\n\t\n\t        //TODO: implement this...\n\t        //this.unbindSequenceControls()\n\t        //this.unbindStandardControls()\n\t\n\t        if (this.referenceStrip) {\n\t            this.referenceStrip.destroy();\n\t            this.referenceStrip = null;\n\t        }\n\t\n\t        if ( this._updateRequestId !== null ) {\n\t            $.cancelAnimationFrame( this._updateRequestId );\n\t            this._updateRequestId = null;\n\t        }\n\t\n\t        if ( this.drawer ) {\n\t            this.drawer.destroy();\n\t        }\n\t\n\t        this.removeAllHandlers();\n\t\n\t        // Go through top element (passed to us) and remove all children\n\t        // Use removeChild to make sure it handles SVG or any non-html\n\t        // also it performs better - http://jsperf.com/innerhtml-vs-removechild/15\n\t        if (this.element){\n\t            while (this.element.firstChild) {\n\t                this.element.removeChild(this.element.firstChild);\n\t            }\n\t        }\n\t\n\t        // destroy the mouse trackers\n\t        if (this.innerTracker){\n\t            this.innerTracker.destroy();\n\t        }\n\t        if (this.outerTracker){\n\t            this.outerTracker.destroy();\n\t        }\n\t\n\t        THIS[ this.hash ] = null;\n\t        delete THIS[ this.hash ];\n\t\n\t        // clear all our references to dom objects\n\t        this.canvas = null;\n\t        this.container = null;\n\t\n\t        // clear our reference to the main element - they will need to pass it in again, creating a new viewer\n\t        this.element = null;\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @return {Boolean}\n\t     */\n\t    isMouseNavEnabled: function () {\n\t        return this.innerTracker.isTracking();\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @param {Boolean} enabled - true to enable, false to disable\n\t     * @return {OpenSeadragon.Viewer} Chainable.\n\t     * @fires OpenSeadragon.Viewer.event:mouse-enabled\n\t     */\n\t    setMouseNavEnabled: function( enabled ){\n\t        this.innerTracker.setTracking( enabled );\n\t        this.outerTracker.setTracking( enabled );\n\t        /**\n\t         * Raised when mouse/touch navigation is enabled or disabled (see {@link OpenSeadragon.Viewer#setMouseNavEnabled}).\n\t         *\n\t         * @event mouse-enabled\n\t         * @memberof OpenSeadragon.Viewer\n\t         * @type {object}\n\t         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n\t         * @property {Boolean} enabled\n\t         * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t         */\n\t        this.raiseEvent( 'mouse-enabled', { enabled: enabled } );\n\t        return this;\n\t    },\n\t\n\t\n\t    /**\n\t     * @function\n\t     * @return {Boolean}\n\t     */\n\t    areControlsEnabled: function () {\n\t        var enabled = this.controls.length,\n\t            i;\n\t        for( i = 0; i < this.controls.length; i++ ){\n\t            enabled = enabled && this.controls[ i ].isVisibile();\n\t        }\n\t        return enabled;\n\t    },\n\t\n\t\n\t    /**\n\t     * Shows or hides the controls (e.g. the default navigation buttons).\n\t     *\n\t     * @function\n\t     * @param {Boolean} true to show, false to hide.\n\t     * @return {OpenSeadragon.Viewer} Chainable.\n\t     * @fires OpenSeadragon.Viewer.event:controls-enabled\n\t     */\n\t    setControlsEnabled: function( enabled ) {\n\t        if( enabled ){\n\t            abortControlsAutoHide( this );\n\t        } else {\n\t            beginControlsAutoHide( this );\n\t        }\n\t        /**\n\t         * Raised when the navigation controls are shown or hidden (see {@link OpenSeadragon.Viewer#setControlsEnabled}).\n\t         *\n\t         * @event controls-enabled\n\t         * @memberof OpenSeadragon.Viewer\n\t         * @type {object}\n\t         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n\t         * @property {Boolean} enabled\n\t         * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t         */\n\t        this.raiseEvent( 'controls-enabled', { enabled: enabled } );\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @return {Boolean}\n\t     */\n\t    isFullPage: function () {\n\t        return THIS[ this.hash ].fullPage;\n\t    },\n\t\n\t\n\t    /**\n\t     * Toggle full page mode.\n\t     * @function\n\t     * @param {Boolean} fullPage\n\t     *      If true, enter full page mode.  If false, exit full page mode.\n\t     * @return {OpenSeadragon.Viewer} Chainable.\n\t     * @fires OpenSeadragon.Viewer.event:pre-full-page\n\t     * @fires OpenSeadragon.Viewer.event:full-page\n\t     */\n\t    setFullPage: function( fullPage ) {\n\t\n\t        var body = document.body,\n\t            bodyStyle = body.style,\n\t            docStyle = document.documentElement.style,\n\t            _this = this,\n\t            hash,\n\t            nodes,\n\t            i;\n\t\n\t        //dont bother modifying the DOM if we are already in full page mode.\n\t        if ( fullPage == this.isFullPage() ) {\n\t            return this;\n\t        }\n\t\n\t        var fullPageEventArgs = {\n\t            fullPage: fullPage,\n\t            preventDefaultAction: false\n\t        };\n\t        /**\n\t         * Raised when the viewer is about to change to/from full-page mode (see {@link OpenSeadragon.Viewer#setFullPage}).\n\t         *\n\t         * @event pre-full-page\n\t         * @memberof OpenSeadragon.Viewer\n\t         * @type {object}\n\t         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n\t         * @property {Boolean} fullPage - True if entering full-page mode, false if exiting full-page mode.\n\t         * @property {Boolean} preventDefaultAction - Set to true to prevent full-page mode change. Default: false.\n\t         * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t         */\n\t        this.raiseEvent( 'pre-full-page', fullPageEventArgs );\n\t        if ( fullPageEventArgs.preventDefaultAction ) {\n\t            return this;\n\t        }\n\t\n\t        if ( fullPage ) {\n\t\n\t            this.elementSize = $.getElementSize( this.element );\n\t            this.pageScroll = $.getPageScroll();\n\t\n\t            this.elementMargin = this.element.style.margin;\n\t            this.element.style.margin = \"0\";\n\t            this.elementPadding = this.element.style.padding;\n\t            this.element.style.padding = \"0\";\n\t\n\t            this.bodyMargin = bodyStyle.margin;\n\t            this.docMargin = docStyle.margin;\n\t            bodyStyle.margin = \"0\";\n\t            docStyle.margin = \"0\";\n\t\n\t            this.bodyPadding = bodyStyle.padding;\n\t            this.docPadding = docStyle.padding;\n\t            bodyStyle.padding = \"0\";\n\t            docStyle.padding = \"0\";\n\t\n\t            this.bodyWidth = bodyStyle.width;\n\t            this.docWidth = docStyle.width;\n\t            bodyStyle.width = \"100%\";\n\t            docStyle.width = \"100%\";\n\t\n\t            this.bodyHeight = bodyStyle.height;\n\t            this.docHeight = docStyle.height;\n\t            bodyStyle.height = \"100%\";\n\t            docStyle.height = \"100%\";\n\t\n\t            //when entering full screen on the ipad it wasnt sufficient to leave\n\t            //the body intact as only only the top half of the screen would\n\t            //respond to touch events on the canvas, while the bottom half treated\n\t            //them as touch events on the document body.  Thus we remove and store\n\t            //the bodies elements and replace them when we leave full screen.\n\t            this.previousBody = [];\n\t            THIS[ this.hash ].prevElementParent = this.element.parentNode;\n\t            THIS[ this.hash ].prevNextSibling = this.element.nextSibling;\n\t            THIS[ this.hash ].prevElementWidth = this.element.style.width;\n\t            THIS[ this.hash ].prevElementHeight = this.element.style.height;\n\t            nodes = body.childNodes.length;\n\t            for ( i = 0; i < nodes; i++ ) {\n\t                this.previousBody.push( body.childNodes[ 0 ] );\n\t                body.removeChild( body.childNodes[ 0 ] );\n\t            }\n\t\n\t            //If we've got a toolbar, we need to enable the user to use css to\n\t            //preserve it in fullpage mode\n\t            if ( this.toolbar && this.toolbar.element ) {\n\t                //save a reference to the parent so we can put it back\n\t                //in the long run we need a better strategy\n\t                this.toolbar.parentNode = this.toolbar.element.parentNode;\n\t                this.toolbar.nextSibling = this.toolbar.element.nextSibling;\n\t                body.appendChild( this.toolbar.element );\n\t\n\t                //Make sure the user has some ability to style the toolbar based\n\t                //on the mode\n\t                $.addClass( this.toolbar.element, 'fullpage' );\n\t            }\n\t\n\t            $.addClass( this.element, 'fullpage' );\n\t            body.appendChild( this.element );\n\t\n\t            this.element.style.height = $.getWindowSize().y + 'px';\n\t            this.element.style.width = $.getWindowSize().x + 'px';\n\t\n\t            if ( this.toolbar && this.toolbar.element ) {\n\t                this.element.style.height = (\n\t                    $.getElementSize( this.element ).y - $.getElementSize( this.toolbar.element ).y\n\t                ) + 'px';\n\t            }\n\t\n\t            THIS[ this.hash ].fullPage = true;\n\t\n\t            // mouse will be inside container now\n\t            $.delegate( this, onContainerEnter )( {} );\n\t\n\t        } else {\n\t\n\t            this.element.style.margin = this.elementMargin;\n\t            this.element.style.padding = this.elementPadding;\n\t\n\t            bodyStyle.margin = this.bodyMargin;\n\t            docStyle.margin = this.docMargin;\n\t\n\t            bodyStyle.padding = this.bodyPadding;\n\t            docStyle.padding = this.docPadding;\n\t\n\t            bodyStyle.width = this.bodyWidth;\n\t            docStyle.width = this.docWidth;\n\t\n\t            bodyStyle.height = this.bodyHeight;\n\t            docStyle.height = this.docHeight;\n\t\n\t            body.removeChild( this.element );\n\t            nodes = this.previousBody.length;\n\t            for ( i = 0; i < nodes; i++ ) {\n\t                body.appendChild( this.previousBody.shift() );\n\t            }\n\t\n\t            $.removeClass( this.element, 'fullpage' );\n\t            THIS[ this.hash ].prevElementParent.insertBefore(\n\t                this.element,\n\t                THIS[ this.hash ].prevNextSibling\n\t            );\n\t\n\t            //If we've got a toolbar, we need to enable the user to use css to\n\t            //reset it to its original state\n\t            if ( this.toolbar && this.toolbar.element ) {\n\t                body.removeChild( this.toolbar.element );\n\t\n\t                //Make sure the user has some ability to style the toolbar based\n\t                //on the mode\n\t                $.removeClass( this.toolbar.element, 'fullpage' );\n\t\n\t                this.toolbar.parentNode.insertBefore(\n\t                    this.toolbar.element,\n\t                    this.toolbar.nextSibling\n\t                );\n\t                delete this.toolbar.parentNode;\n\t                delete this.toolbar.nextSibling;\n\t            }\n\t\n\t            this.element.style.width = THIS[ this.hash ].prevElementWidth;\n\t            this.element.style.height = THIS[ this.hash ].prevElementHeight;\n\t\n\t            // After exiting fullPage or fullScreen, it can take some time\n\t            // before the browser can actually set the scroll.\n\t            var restoreScrollCounter = 0;\n\t            var restoreScroll = function() {\n\t                $.setPageScroll( _this.pageScroll );\n\t                var pageScroll = $.getPageScroll();\n\t                restoreScrollCounter++;\n\t                if ( restoreScrollCounter < 10 &&\n\t                    pageScroll.x !== _this.pageScroll.x ||\n\t                    pageScroll.y !== _this.pageScroll.y ) {\n\t                    $.requestAnimationFrame( restoreScroll );\n\t                }\n\t            };\n\t            $.requestAnimationFrame( restoreScroll );\n\t\n\t            THIS[ this.hash ].fullPage = false;\n\t\n\t            // mouse will likely be outside now\n\t            $.delegate( this, onContainerExit )( { } );\n\t\n\t        }\n\t\n\t        if ( this.navigator && this.viewport ) {\n\t            this.navigator.update( this.viewport );\n\t        }\n\t\n\t        /**\n\t         * Raised when the viewer has changed to/from full-page mode (see {@link OpenSeadragon.Viewer#setFullPage}).\n\t         *\n\t         * @event full-page\n\t         * @memberof OpenSeadragon.Viewer\n\t         * @type {object}\n\t         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n\t         * @property {Boolean} fullPage - True if changed to full-page mode, false if exited full-page mode.\n\t         * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t         */\n\t        this.raiseEvent( 'full-page', { fullPage: fullPage } );\n\t\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * Toggle full screen mode if supported. Toggle full page mode otherwise.\n\t     * @function\n\t     * @param {Boolean} fullScreen\n\t     *      If true, enter full screen mode.  If false, exit full screen mode.\n\t     * @return {OpenSeadragon.Viewer} Chainable.\n\t     * @fires OpenSeadragon.Viewer.event:pre-full-screen\n\t     * @fires OpenSeadragon.Viewer.event:full-screen\n\t     */\n\t    setFullScreen: function( fullScreen ) {\n\t        var _this = this;\n\t\n\t        if ( !$.supportsFullScreen ) {\n\t            return this.setFullPage( fullScreen );\n\t        }\n\t\n\t        if ( $.isFullScreen() === fullScreen ) {\n\t            return this;\n\t        }\n\t\n\t        var fullScreeEventArgs = {\n\t            fullScreen: fullScreen,\n\t            preventDefaultAction: false\n\t        };\n\t        /**\n\t         * Raised when the viewer is about to change to/from full-screen mode (see {@link OpenSeadragon.Viewer#setFullScreen}).\n\t         * Note: the pre-full-screen event is not raised when the user is exiting\n\t         * full-screen mode by pressing the Esc key. In that case, consider using\n\t         * the full-screen, pre-full-page or full-page events.\n\t         *\n\t         * @event pre-full-screen\n\t         * @memberof OpenSeadragon.Viewer\n\t         * @type {object}\n\t         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n\t         * @property {Boolean} fullScreen - True if entering full-screen mode, false if exiting full-screen mode.\n\t         * @property {Boolean} preventDefaultAction - Set to true to prevent full-screen mode change. Default: false.\n\t         * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t         */\n\t        this.raiseEvent( 'pre-full-screen', fullScreeEventArgs );\n\t        if ( fullScreeEventArgs.preventDefaultAction ) {\n\t            return this;\n\t        }\n\t\n\t        if ( fullScreen ) {\n\t\n\t            this.setFullPage( true );\n\t            // If the full page mode is not actually entered, we need to prevent\n\t            // the full screen mode.\n\t            if ( !this.isFullPage() ) {\n\t                return this;\n\t            }\n\t\n\t            this.fullPageStyleWidth = this.element.style.width;\n\t            this.fullPageStyleHeight = this.element.style.height;\n\t            this.element.style.width = '100%';\n\t            this.element.style.height = '100%';\n\t\n\t            var onFullScreenChange = function() {\n\t                var isFullScreen = $.isFullScreen();\n\t                if ( !isFullScreen ) {\n\t                    $.removeEvent( document, $.fullScreenEventName, onFullScreenChange );\n\t                    $.removeEvent( document, $.fullScreenErrorEventName, onFullScreenChange );\n\t\n\t                    _this.setFullPage( false );\n\t                    if ( _this.isFullPage() ) {\n\t                        _this.element.style.width = _this.fullPageStyleWidth;\n\t                        _this.element.style.height = _this.fullPageStyleHeight;\n\t                    }\n\t                }\n\t                if ( _this.navigator && _this.viewport ) {\n\t                    _this.navigator.update( _this.viewport );\n\t                }\n\t                /**\n\t                 * Raised when the viewer has changed to/from full-screen mode (see {@link OpenSeadragon.Viewer#setFullScreen}).\n\t                 *\n\t                 * @event full-screen\n\t                 * @memberof OpenSeadragon.Viewer\n\t                 * @type {object}\n\t                 * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n\t                 * @property {Boolean} fullScreen - True if changed to full-screen mode, false if exited full-screen mode.\n\t                 * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t                 */\n\t                _this.raiseEvent( 'full-screen', { fullScreen: isFullScreen } );\n\t            };\n\t            $.addEvent( document, $.fullScreenEventName, onFullScreenChange );\n\t            $.addEvent( document, $.fullScreenErrorEventName, onFullScreenChange );\n\t\n\t            $.requestFullScreen( document.body );\n\t\n\t        } else {\n\t            $.exitFullScreen();\n\t        }\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @return {Boolean}\n\t     */\n\t    isVisible: function () {\n\t        return this.container.style.visibility != \"hidden\";\n\t    },\n\t\n\t\n\t    /**\n\t     * @function\n\t     * @param {Boolean} visible\n\t     * @return {OpenSeadragon.Viewer} Chainable.\n\t     * @fires OpenSeadragon.Viewer.event:visible\n\t     */\n\t    setVisible: function( visible ){\n\t        this.container.style.visibility = visible ? \"\" : \"hidden\";\n\t        /**\n\t         * Raised when the viewer is shown or hidden (see {@link OpenSeadragon.Viewer#setVisible}).\n\t         *\n\t         * @event visible\n\t         * @memberof OpenSeadragon.Viewer\n\t         * @type {object}\n\t         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n\t         * @property {Boolean} visible\n\t         * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t         */\n\t        this.raiseEvent( 'visible', { visible: visible } );\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * Add a tiled image to the viewer.\n\t     * options.tileSource can be anything that {@link OpenSeadragon.Viewer#open}\n\t     *  supports except arrays of images.\n\t     * Note that you can specify options.width or options.height, but not both.\n\t     * The other dimension will be calculated according to the item's aspect ratio.\n\t     * If collectionMode is on (see {@link OpenSeadragon.Options}), the new image is\n\t     * automatically arranged with the others.\n\t     * @function\n\t     * @param {Object} options\n\t     * @param {String|Object|Function} options.tileSource - The TileSource specifier.\n\t     * A String implies a url used to determine the tileSource implementation\n\t     *      based on the file extension of url. JSONP is implied by *.js,\n\t     *      otherwise the url is retrieved as text and the resulting text is\n\t     *      introspected to determine if its json, xml, or text and parsed.\n\t     * An Object implies an inline configuration which has a single\n\t     *      property sufficient for being able to determine tileSource\n\t     *      implementation. If the object has a property which is a function\n\t     *      named 'getTileUrl', it is treated as a custom TileSource.\n\t     * @param {Number} [options.index] The index of the item. Added on top of\n\t     * all other items if not specified.\n\t     * @param {Boolean} [options.replace=false] If true, the item at options.index will be\n\t     * removed and the new item is added in its place. options.tileSource will be\n\t     * interpreted and fetched if necessary before the old item is removed to avoid leaving\n\t     * a gap in the world.\n\t     * @param {Number} [options.x=0] The X position for the image in viewport coordinates.\n\t     * @param {Number} [options.y=0] The Y position for the image in viewport coordinates.\n\t     * @param {Number} [options.width=1] The width for the image in viewport coordinates.\n\t     * @param {Number} [options.height] The height for the image in viewport coordinates.\n\t     * @param {OpenSeadragon.Rect} [options.fitBounds] The bounds in viewport coordinates\n\t     * to fit the image into. If specified, x, y, width and height get ignored.\n\t     * @param {OpenSeadragon.Placement} [options.fitBoundsPlacement=OpenSeadragon.Placement.CENTER]\n\t     * How to anchor the image in the bounds if options.fitBounds is set.\n\t     * @param {OpenSeadragon.Rect} [options.clip] - An area, in image pixels, to clip to\n\t     * (portions of the image outside of this area will not be visible). Only works on\n\t     * browsers that support the HTML5 canvas.\n\t     * @param {Number} [options.opacity] Opacity the tiled image should be drawn at by default.\n\t     * @param {String} [options.compositeOperation] How the image is composited onto other images.\n\t     * @param {Function} [options.success] A function that gets called when the image is\n\t     * successfully added. It's passed the event object which contains a single property:\n\t     * \"item\", the resulting TiledImage.\n\t     * @param {Function} [options.error] A function that gets called if the image is\n\t     * unable to be added. It's passed the error event object, which contains \"message\"\n\t     * and \"source\" properties.\n\t     * @param {Boolean} [options.collectionImmediately=false] If collectionMode is on,\n\t     * specifies whether to snap to the new arrangement immediately or to animate to it.\n\t     * @param {String|CanvasGradient|CanvasPattern|Function} [options.placeholderFillStyle] - See {@link OpenSeadragon.Options}.\n\t     * @fires OpenSeadragon.World.event:add-item\n\t     * @fires OpenSeadragon.Viewer.event:add-item-failed\n\t     */\n\t    addTiledImage: function( options ) {\n\t        $.console.assert(options, \"[Viewer.addTiledImage] options is required\");\n\t        $.console.assert(options.tileSource, \"[Viewer.addTiledImage] options.tileSource is required\");\n\t        $.console.assert(!options.replace || (options.index > -1 && options.index < this.world.getItemCount()),\n\t            \"[Viewer.addTiledImage] if options.replace is used, options.index must be a valid index in Viewer.world\");\n\t\n\t        var _this = this;\n\t\n\t        if (options.replace) {\n\t            options.replaceItem = _this.world.getItemAt(options.index);\n\t        }\n\t\n\t        this._hideMessage();\n\t\n\t        if (options.placeholderFillStyle === undefined) {\n\t            options.placeholderFillStyle = this.placeholderFillStyle;\n\t        }\n\t        if (options.opacity === undefined) {\n\t            options.opacity = this.opacity;\n\t        }\n\t        if (options.compositeOperation === undefined) {\n\t            options.compositeOperation = this.compositeOperation;\n\t        }\n\t\n\t        var myQueueItem = {\n\t            options: options\n\t        };\n\t\n\t        function raiseAddItemFailed( event ) {\n\t            for (var i = 0; i < _this._loadQueue.length; i++) {\n\t                if (_this._loadQueue[i] === myQueueItem) {\n\t                    _this._loadQueue.splice(i, 1);\n\t                    break;\n\t                }\n\t            }\n\t\n\t            if (_this._loadQueue.length === 0) {\n\t                refreshWorld(myQueueItem);\n\t            }\n\t\n\t             /**\n\t             * Raised when an error occurs while adding a item.\n\t             * @event add-item-failed\n\t             * @memberOf OpenSeadragon.Viewer\n\t             * @type {object}\n\t             * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n\t             * @property {String} message\n\t             * @property {String} source\n\t             * @property {Object} options The options passed to the addTiledImage method.\n\t             * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t             */\n\t            _this.raiseEvent( 'add-item-failed', event );\n\t\n\t            if (options.error) {\n\t                options.error(event);\n\t            }\n\t        }\n\t\n\t        function refreshWorld(theItem) {\n\t            if (_this.collectionMode) {\n\t                _this.world.arrange({\n\t                    immediately: theItem.options.collectionImmediately,\n\t                    rows: _this.collectionRows,\n\t                    columns: _this.collectionColumns,\n\t                    layout: _this.collectionLayout,\n\t                    tileSize: _this.collectionTileSize,\n\t                    tileMargin: _this.collectionTileMargin\n\t                });\n\t                _this.world.setAutoRefigureSizes(true);\n\t            }\n\t        }\n\t\n\t        if ($.isArray(options.tileSource)) {\n\t            setTimeout(function() {\n\t                raiseAddItemFailed({\n\t                    message: \"[Viewer.addTiledImage] Sequences can not be added; add them one at a time instead.\",\n\t                    source: options.tileSource,\n\t                    options: options\n\t                });\n\t            });\n\t            return;\n\t        }\n\t\n\t        this._loadQueue.push(myQueueItem);\n\t\n\t        getTileSourceImplementation( this, options.tileSource, function( tileSource ) {\n\t\n\t            myQueueItem.tileSource = tileSource;\n\t\n\t            // add everybody at the front of the queue that's ready to go\n\t            var queueItem, tiledImage, optionsClone;\n\t            while (_this._loadQueue.length) {\n\t                queueItem = _this._loadQueue[0];\n\t                if (!queueItem.tileSource) {\n\t                    break;\n\t                }\n\t\n\t                _this._loadQueue.splice(0, 1);\n\t\n\t                if (queueItem.options.replace) {\n\t                    var newIndex = _this.world.getIndexOfItem(queueItem.options.replaceItem);\n\t                    if (newIndex != -1) {\n\t                        queueItem.options.index = newIndex;\n\t                    }\n\t                    _this.world.removeItem(queueItem.options.replaceItem);\n\t                }\n\t\n\t                tiledImage = new $.TiledImage({\n\t                    viewer: _this,\n\t                    source: queueItem.tileSource,\n\t                    viewport: _this.viewport,\n\t                    drawer: _this.drawer,\n\t                    tileCache: _this.tileCache,\n\t                    imageLoader: _this.imageLoader,\n\t                    x: queueItem.options.x,\n\t                    y: queueItem.options.y,\n\t                    width: queueItem.options.width,\n\t                    height: queueItem.options.height,\n\t                    fitBounds: queueItem.options.fitBounds,\n\t                    fitBoundsPlacement: queueItem.options.fitBoundsPlacement,\n\t                    clip: queueItem.options.clip,\n\t                    placeholderFillStyle: queueItem.options.placeholderFillStyle,\n\t                    opacity: queueItem.options.opacity,\n\t                    compositeOperation: queueItem.options.compositeOperation,\n\t                    springStiffness: _this.springStiffness,\n\t                    animationTime: _this.animationTime,\n\t                    minZoomImageRatio: _this.minZoomImageRatio,\n\t                    wrapHorizontal: _this.wrapHorizontal,\n\t                    wrapVertical: _this.wrapVertical,\n\t                    immediateRender: _this.immediateRender,\n\t                    blendTime: _this.blendTime,\n\t                    alwaysBlend: _this.alwaysBlend,\n\t                    minPixelRatio: _this.minPixelRatio,\n\t                    smoothTileEdgesMinZoom: _this.smoothTileEdgesMinZoom,\n\t                    iOSDevice: _this.iOSDevice,\n\t                    crossOriginPolicy: _this.crossOriginPolicy,\n\t                    debugMode: _this.debugMode\n\t                });\n\t\n\t                if (_this.collectionMode) {\n\t                    _this.world.setAutoRefigureSizes(false);\n\t                }\n\t                _this.world.addItem( tiledImage, {\n\t                    index: queueItem.options.index\n\t                });\n\t\n\t                if (_this._loadQueue.length === 0) {\n\t                    //this restores the autoRefigureSizes flag to true.\n\t                    refreshWorld(queueItem);\n\t                }\n\t\n\t                if (_this.world.getItemCount() === 1 && !_this.preserveViewport) {\n\t                    _this.viewport.goHome(true);\n\t                }\n\t\n\t                if (_this.navigator) {\n\t                    optionsClone = $.extend({}, queueItem.options, {\n\t                        replace: false, // navigator already removed the layer, nothing to replace\n\t                        originalTiledImage: tiledImage,\n\t                        tileSource: queueItem.tileSource\n\t                    });\n\t\n\t                    _this.navigator.addTiledImage(optionsClone);\n\t                }\n\t\n\t                if (queueItem.options.success) {\n\t                    queueItem.options.success({\n\t                        item: tiledImage\n\t                    });\n\t                }\n\t            }\n\t        }, function( event ) {\n\t            event.options = options;\n\t            raiseAddItemFailed(event);\n\t        } );\n\t    },\n\t\n\t    /**\n\t     * Add a simple image to the viewer.\n\t     * The options are the same as the ones in {@link OpenSeadragon.Viewer#addTiledImage}\n\t     * except for options.tileSource which is replaced by options.url.\n\t     * @function\n\t     * @param {Object} options - See {@link OpenSeadragon.Viewer#addTiledImage}\n\t     * for all the options\n\t     * @param {String} options.url - The URL of the image to add.\n\t     * @fires OpenSeadragon.World.event:add-item\n\t     * @fires OpenSeadragon.Viewer.event:add-item-failed\n\t     */\n\t    addSimpleImage: function(options) {\n\t        $.console.assert(options, \"[Viewer.addSimpleImage] options is required\");\n\t        $.console.assert(options.url, \"[Viewer.addSimpleImage] options.url is required\");\n\t\n\t        var opts = $.extend({}, options, {\n\t            tileSource: {\n\t                type: 'image',\n\t                url:  options.url\n\t            }\n\t        });\n\t        delete opts.url;\n\t        this.addTiledImage(opts);\n\t    },\n\t\n\t    // deprecated\n\t    addLayer: function( options ) {\n\t        var _this = this;\n\t\n\t        $.console.error( \"[Viewer.addLayer] this function is deprecated; use Viewer.addTiledImage() instead.\" );\n\t\n\t        var optionsClone = $.extend({}, options, {\n\t            success: function(event) {\n\t                _this.raiseEvent(\"add-layer\", {\n\t                    options: options,\n\t                    drawer: event.item\n\t                });\n\t            },\n\t            error: function(event) {\n\t                _this.raiseEvent(\"add-layer-failed\", event);\n\t            }\n\t        });\n\t\n\t        this.addTiledImage(optionsClone);\n\t        return this;\n\t    },\n\t\n\t    // deprecated\n\t    getLayerAtLevel: function( level ) {\n\t        $.console.error( \"[Viewer.getLayerAtLevel] this function is deprecated; use World.getItemAt() instead.\" );\n\t        return this.world.getItemAt(level);\n\t    },\n\t\n\t    // deprecated\n\t    getLevelOfLayer: function( drawer ) {\n\t        $.console.error( \"[Viewer.getLevelOfLayer] this function is deprecated; use World.getIndexOfItem() instead.\" );\n\t        return this.world.getIndexOfItem(drawer);\n\t    },\n\t\n\t    // deprecated\n\t    getLayersCount: function() {\n\t        $.console.error( \"[Viewer.getLayersCount] this function is deprecated; use World.getItemCount() instead.\" );\n\t        return this.world.getItemCount();\n\t    },\n\t\n\t    // deprecated\n\t    setLayerLevel: function( drawer, level ) {\n\t        $.console.error( \"[Viewer.setLayerLevel] this function is deprecated; use World.setItemIndex() instead.\" );\n\t        return this.world.setItemIndex(drawer, level);\n\t    },\n\t\n\t    // deprecated\n\t    removeLayer: function( drawer ) {\n\t        $.console.error( \"[Viewer.removeLayer] this function is deprecated; use World.removeItem() instead.\" );\n\t        return this.world.removeItem(drawer);\n\t    },\n\t\n\t    /**\n\t     * Force the viewer to redraw its contents.\n\t     * @returns {OpenSeadragon.Viewer} Chainable.\n\t     */\n\t    forceRedraw: function() {\n\t        THIS[ this.hash ].forceRedraw = true;\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @return {OpenSeadragon.Viewer} Chainable.\n\t     */\n\t    bindSequenceControls: function(){\n\t\n\t        //////////////////////////////////////////////////////////////////////////\n\t        // Image Sequence Controls\n\t        //////////////////////////////////////////////////////////////////////////\n\t        var onFocusHandler          = $.delegate( this, onFocus ),\n\t            onBlurHandler           = $.delegate( this, onBlur ),\n\t            onNextHandler           = $.delegate( this, onNext ),\n\t            onPreviousHandler       = $.delegate( this, onPrevious ),\n\t            navImages               = this.navImages,\n\t            useGroup                = true ;\n\t\n\t        if( this.showSequenceControl ){\n\t\n\t            if( this.previousButton || this.nextButton ){\n\t                //if we are binding to custom buttons then layout and\n\t                //grouping is the responsibility of the page author\n\t                useGroup = false;\n\t            }\n\t\n\t            this.previousButton = new $.Button({\n\t                element:    this.previousButton ? $.getElement( this.previousButton ) : null,\n\t                clickTimeThreshold: this.clickTimeThreshold,\n\t                clickDistThreshold: this.clickDistThreshold,\n\t                tooltip:    $.getString( \"Tooltips.PreviousPage\" ),\n\t                srcRest:    resolveUrl( this.prefixUrl, navImages.previous.REST ),\n\t                srcGroup:   resolveUrl( this.prefixUrl, navImages.previous.GROUP ),\n\t                srcHover:   resolveUrl( this.prefixUrl, navImages.previous.HOVER ),\n\t                srcDown:    resolveUrl( this.prefixUrl, navImages.previous.DOWN ),\n\t                onRelease:  onPreviousHandler,\n\t                onFocus:    onFocusHandler,\n\t                onBlur:     onBlurHandler\n\t            });\n\t\n\t            this.nextButton = new $.Button({\n\t                element:    this.nextButton ? $.getElement( this.nextButton ) : null,\n\t                clickTimeThreshold: this.clickTimeThreshold,\n\t                clickDistThreshold: this.clickDistThreshold,\n\t                tooltip:    $.getString( \"Tooltips.NextPage\" ),\n\t                srcRest:    resolveUrl( this.prefixUrl, navImages.next.REST ),\n\t                srcGroup:   resolveUrl( this.prefixUrl, navImages.next.GROUP ),\n\t                srcHover:   resolveUrl( this.prefixUrl, navImages.next.HOVER ),\n\t                srcDown:    resolveUrl( this.prefixUrl, navImages.next.DOWN ),\n\t                onRelease:  onNextHandler,\n\t                onFocus:    onFocusHandler,\n\t                onBlur:     onBlurHandler\n\t            });\n\t\n\t            if( !this.navPrevNextWrap ){\n\t                this.previousButton.disable();\n\t            }\n\t\n\t            if (!this.tileSources || !this.tileSources.length) {\n\t                this.nextButton.disable();\n\t            }\n\t\n\t            if( useGroup ){\n\t                this.paging = new $.ButtonGroup({\n\t                    buttons: [\n\t                        this.previousButton,\n\t                        this.nextButton\n\t                    ],\n\t                    clickTimeThreshold: this.clickTimeThreshold,\n\t                    clickDistThreshold: this.clickDistThreshold\n\t                });\n\t\n\t                this.pagingControl = this.paging.element;\n\t\n\t                if( this.toolbar ){\n\t                    this.toolbar.addControl(\n\t                        this.pagingControl,\n\t                        {anchor: $.ControlAnchor.BOTTOM_RIGHT}\n\t                    );\n\t                }else{\n\t                    this.addControl(\n\t                        this.pagingControl,\n\t                        {anchor: this.sequenceControlAnchor || $.ControlAnchor.TOP_LEFT}\n\t                    );\n\t                }\n\t            }\n\t        }\n\t        return this;\n\t    },\n\t\n\t\n\t    /**\n\t     * @function\n\t     * @return {OpenSeadragon.Viewer} Chainable.\n\t     */\n\t    bindStandardControls: function(){\n\t        //////////////////////////////////////////////////////////////////////////\n\t        // Navigation Controls\n\t        //////////////////////////////////////////////////////////////////////////\n\t        var beginZoomingInHandler   = $.delegate( this, beginZoomingIn ),\n\t            endZoomingHandler       = $.delegate( this, endZooming ),\n\t            doSingleZoomInHandler   = $.delegate( this, doSingleZoomIn ),\n\t            beginZoomingOutHandler  = $.delegate( this, beginZoomingOut ),\n\t            doSingleZoomOutHandler  = $.delegate( this, doSingleZoomOut ),\n\t            onHomeHandler           = $.delegate( this, onHome ),\n\t            onFullScreenHandler     = $.delegate( this, onFullScreen ),\n\t            onRotateLeftHandler     = $.delegate( this, onRotateLeft ),\n\t            onRotateRightHandler    = $.delegate( this, onRotateRight ),\n\t            onFocusHandler          = $.delegate( this, onFocus ),\n\t            onBlurHandler           = $.delegate( this, onBlur ),\n\t            navImages               = this.navImages,\n\t            buttons                 = [],\n\t            useGroup                = true ;\n\t\n\t\n\t        if ( this.showNavigationControl ) {\n\t\n\t            if( this.zoomInButton || this.zoomOutButton ||\n\t                this.homeButton || this.fullPageButton ||\n\t                this.rotateLeftButton || this.rotateRightButton ) {\n\t                //if we are binding to custom buttons then layout and\n\t                //grouping is the responsibility of the page author\n\t                useGroup = false;\n\t            }\n\t\n\t            if ( this.showZoomControl ) {\n\t                buttons.push( this.zoomInButton = new $.Button({\n\t                    element:    this.zoomInButton ? $.getElement( this.zoomInButton ) : null,\n\t                    clickTimeThreshold: this.clickTimeThreshold,\n\t                    clickDistThreshold: this.clickDistThreshold,\n\t                    tooltip:    $.getString( \"Tooltips.ZoomIn\" ),\n\t                    srcRest:    resolveUrl( this.prefixUrl, navImages.zoomIn.REST ),\n\t                    srcGroup:   resolveUrl( this.prefixUrl, navImages.zoomIn.GROUP ),\n\t                    srcHover:   resolveUrl( this.prefixUrl, navImages.zoomIn.HOVER ),\n\t                    srcDown:    resolveUrl( this.prefixUrl, navImages.zoomIn.DOWN ),\n\t                    onPress:    beginZoomingInHandler,\n\t                    onRelease:  endZoomingHandler,\n\t                    onClick:    doSingleZoomInHandler,\n\t                    onEnter:    beginZoomingInHandler,\n\t                    onExit:     endZoomingHandler,\n\t                    onFocus:    onFocusHandler,\n\t                    onBlur:     onBlurHandler\n\t                }));\n\t\n\t                buttons.push( this.zoomOutButton = new $.Button({\n\t                    element:    this.zoomOutButton ? $.getElement( this.zoomOutButton ) : null,\n\t                    clickTimeThreshold: this.clickTimeThreshold,\n\t                    clickDistThreshold: this.clickDistThreshold,\n\t                    tooltip:    $.getString( \"Tooltips.ZoomOut\" ),\n\t                    srcRest:    resolveUrl( this.prefixUrl, navImages.zoomOut.REST ),\n\t                    srcGroup:   resolveUrl( this.prefixUrl, navImages.zoomOut.GROUP ),\n\t                    srcHover:   resolveUrl( this.prefixUrl, navImages.zoomOut.HOVER ),\n\t                    srcDown:    resolveUrl( this.prefixUrl, navImages.zoomOut.DOWN ),\n\t                    onPress:    beginZoomingOutHandler,\n\t                    onRelease:  endZoomingHandler,\n\t                    onClick:    doSingleZoomOutHandler,\n\t                    onEnter:    beginZoomingOutHandler,\n\t                    onExit:     endZoomingHandler,\n\t                    onFocus:    onFocusHandler,\n\t                    onBlur:     onBlurHandler\n\t                }));\n\t            }\n\t\n\t            if ( this.showHomeControl ) {\n\t                buttons.push( this.homeButton = new $.Button({\n\t                    element:    this.homeButton ? $.getElement( this.homeButton ) : null,\n\t                    clickTimeThreshold: this.clickTimeThreshold,\n\t                    clickDistThreshold: this.clickDistThreshold,\n\t                    tooltip:    $.getString( \"Tooltips.Home\" ),\n\t                    srcRest:    resolveUrl( this.prefixUrl, navImages.home.REST ),\n\t                    srcGroup:   resolveUrl( this.prefixUrl, navImages.home.GROUP ),\n\t                    srcHover:   resolveUrl( this.prefixUrl, navImages.home.HOVER ),\n\t                    srcDown:    resolveUrl( this.prefixUrl, navImages.home.DOWN ),\n\t                    onRelease:  onHomeHandler,\n\t                    onFocus:    onFocusHandler,\n\t                    onBlur:     onBlurHandler\n\t                }));\n\t            }\n\t\n\t            if ( this.showFullPageControl ) {\n\t                buttons.push( this.fullPageButton = new $.Button({\n\t                    element:    this.fullPageButton ? $.getElement( this.fullPageButton ) : null,\n\t                    clickTimeThreshold: this.clickTimeThreshold,\n\t                    clickDistThreshold: this.clickDistThreshold,\n\t                    tooltip:    $.getString( \"Tooltips.FullPage\" ),\n\t                    srcRest:    resolveUrl( this.prefixUrl, navImages.fullpage.REST ),\n\t                    srcGroup:   resolveUrl( this.prefixUrl, navImages.fullpage.GROUP ),\n\t                    srcHover:   resolveUrl( this.prefixUrl, navImages.fullpage.HOVER ),\n\t                    srcDown:    resolveUrl( this.prefixUrl, navImages.fullpage.DOWN ),\n\t                    onRelease:  onFullScreenHandler,\n\t                    onFocus:    onFocusHandler,\n\t                    onBlur:     onBlurHandler\n\t                }));\n\t            }\n\t\n\t            if ( this.showRotationControl ) {\n\t                buttons.push( this.rotateLeftButton = new $.Button({\n\t                    element:    this.rotateLeftButton ? $.getElement( this.rotateLeftButton ) : null,\n\t                    clickTimeThreshold: this.clickTimeThreshold,\n\t                    clickDistThreshold: this.clickDistThreshold,\n\t                    tooltip:    $.getString( \"Tooltips.RotateLeft\" ),\n\t                    srcRest:    resolveUrl( this.prefixUrl, navImages.rotateleft.REST ),\n\t                    srcGroup:   resolveUrl( this.prefixUrl, navImages.rotateleft.GROUP ),\n\t                    srcHover:   resolveUrl( this.prefixUrl, navImages.rotateleft.HOVER ),\n\t                    srcDown:    resolveUrl( this.prefixUrl, navImages.rotateleft.DOWN ),\n\t                    onRelease:  onRotateLeftHandler,\n\t                    onFocus:    onFocusHandler,\n\t                    onBlur:     onBlurHandler\n\t                }));\n\t\n\t                buttons.push( this.rotateRightButton = new $.Button({\n\t                    element:    this.rotateRightButton ? $.getElement( this.rotateRightButton ) : null,\n\t                    clickTimeThreshold: this.clickTimeThreshold,\n\t                    clickDistThreshold: this.clickDistThreshold,\n\t                    tooltip:    $.getString( \"Tooltips.RotateRight\" ),\n\t                    srcRest:    resolveUrl( this.prefixUrl, navImages.rotateright.REST ),\n\t                    srcGroup:   resolveUrl( this.prefixUrl, navImages.rotateright.GROUP ),\n\t                    srcHover:   resolveUrl( this.prefixUrl, navImages.rotateright.HOVER ),\n\t                    srcDown:    resolveUrl( this.prefixUrl, navImages.rotateright.DOWN ),\n\t                    onRelease:  onRotateRightHandler,\n\t                    onFocus:    onFocusHandler,\n\t                    onBlur:     onBlurHandler\n\t                }));\n\t\n\t            }\n\t\n\t            if ( useGroup ) {\n\t                this.buttons = new $.ButtonGroup({\n\t                    buttons:            buttons,\n\t                    clickTimeThreshold: this.clickTimeThreshold,\n\t                    clickDistThreshold: this.clickDistThreshold\n\t                });\n\t\n\t                this.navControl  = this.buttons.element;\n\t                this.addHandler( 'open', $.delegate( this, lightUp ) );\n\t\n\t                if( this.toolbar ){\n\t                    this.toolbar.addControl(\n\t                        this.navControl,\n\t                        {anchor: $.ControlAnchor.TOP_LEFT}\n\t                    );\n\t                } else {\n\t                    this.addControl(\n\t                        this.navControl,\n\t                        {anchor: this.navigationControlAnchor || $.ControlAnchor.TOP_LEFT}\n\t                    );\n\t                }\n\t            }\n\t\n\t        }\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * Gets the active page of a sequence\n\t     * @function\n\t     * @return {Number}\n\t     */\n\t    currentPage: function() {\n\t        return this._sequenceIndex;\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @return {OpenSeadragon.Viewer} Chainable.\n\t     * @fires OpenSeadragon.Viewer.event:page\n\t     */\n\t    goToPage: function( page ){\n\t        if( this.tileSources && page >= 0 && page < this.tileSources.length ){\n\t            /**\n\t             * Raised when the page is changed on a viewer configured with multiple image sources (see {@link OpenSeadragon.Viewer#goToPage}).\n\t             *\n\t             * @event page\n\t             * @memberof OpenSeadragon.Viewer\n\t             * @type {Object}\n\t             * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n\t             * @property {Number} page - The page index.\n\t             * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t             */\n\t            this.raiseEvent( 'page', { page: page } );\n\t\n\t            this._sequenceIndex = page;\n\t\n\t            this._updateSequenceButtons( page );\n\t\n\t            this.open( this.tileSources[ page ] );\n\t\n\t            if( this.referenceStrip ){\n\t                this.referenceStrip.setFocus( page );\n\t            }\n\t        }\n\t\n\t        return this;\n\t    },\n\t\n\t   /**\n\t     * Adds an html element as an overlay to the current viewport.  Useful for\n\t     * highlighting words or areas of interest on an image or other zoomable\n\t     * interface. The overlays added via this method are removed when the viewport\n\t     * is closed which include when changing page.\n\t     * @method\n\t     * @param {Element|String|Object} element - A reference to an element or an id for\n\t     *      the element which will be overlayed. Or an Object specifying the configuration for the overlay.\n\t     *      If using an object, see {@link OpenSeadragon.Overlay} for a list of\n\t     *      all available options.\n\t     * @param {OpenSeadragon.Point|OpenSeadragon.Rect} location - The point or\n\t     *      rectangle which will be overlayed. This is a viewport relative location.\n\t     * @param {OpenSeadragon.Placement} placement - The position of the\n\t     *      viewport which the location coordinates will be treated as relative\n\t     *      to.\n\t     * @param {function} onDraw - If supplied the callback is called when the overlay\n\t     *      needs to be drawn. It it the responsibility of the callback to do any drawing/positioning.\n\t     *      It is passed position, size and element.\n\t     * @return {OpenSeadragon.Viewer} Chainable.\n\t     * @fires OpenSeadragon.Viewer.event:add-overlay\n\t     */\n\t    addOverlay: function( element, location, placement, onDraw ) {\n\t        var options;\n\t        if( $.isPlainObject( element ) ){\n\t            options = element;\n\t        } else {\n\t            options = {\n\t                element: element,\n\t                location: location,\n\t                placement: placement,\n\t                onDraw: onDraw\n\t            };\n\t        }\n\t\n\t        element = $.getElement( options.element );\n\t\n\t        if ( getOverlayIndex( this.currentOverlays, element ) >= 0 ) {\n\t            // they're trying to add a duplicate overlay\n\t            return this;\n\t        }\n\t\n\t        var overlay = getOverlayObject( this, options);\n\t        this.currentOverlays.push(overlay);\n\t        overlay.drawHTML( this.overlaysContainer, this.viewport );\n\t\n\t        /**\n\t         * Raised when an overlay is added to the viewer (see {@link OpenSeadragon.Viewer#addOverlay}).\n\t         *\n\t         * @event add-overlay\n\t         * @memberof OpenSeadragon.Viewer\n\t         * @type {object}\n\t         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n\t         * @property {Element} element - The overlay element.\n\t         * @property {OpenSeadragon.Point|OpenSeadragon.Rect} location\n\t         * @property {OpenSeadragon.Placement} placement\n\t         * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t         */\n\t        this.raiseEvent( 'add-overlay', {\n\t            element: element,\n\t            location: options.location,\n\t            placement: options.placement\n\t        });\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * Updates the overlay represented by the reference to the element or\n\t     * element id moving it to the new location, relative to the new placement.\n\t     * @method\n\t     * @param {Element|String} element - A reference to an element or an id for\n\t     *      the element which is overlayed.\n\t     * @param {OpenSeadragon.Point|OpenSeadragon.Rect} location - The point or\n\t     *      rectangle which will be overlayed. This is a viewport relative location.\n\t     * @param {OpenSeadragon.Placement} placement - The position of the\n\t     *      viewport which the location coordinates will be treated as relative\n\t     *      to.\n\t     * @return {OpenSeadragon.Viewer} Chainable.\n\t     * @fires OpenSeadragon.Viewer.event:update-overlay\n\t     */\n\t    updateOverlay: function( element, location, placement ) {\n\t        var i;\n\t\n\t        element = $.getElement( element );\n\t        i = getOverlayIndex( this.currentOverlays, element );\n\t\n\t        if ( i >= 0 ) {\n\t            this.currentOverlays[ i ].update( location, placement );\n\t            THIS[ this.hash ].forceRedraw = true;\n\t            /**\n\t             * Raised when an overlay's location or placement changes\n\t             * (see {@link OpenSeadragon.Viewer#updateOverlay}).\n\t             *\n\t             * @event update-overlay\n\t             * @memberof OpenSeadragon.Viewer\n\t             * @type {object}\n\t             * @property {OpenSeadragon.Viewer} eventSource - A reference to the\n\t             * Viewer which raised the event.\n\t             * @property {Element} element\n\t             * @property {OpenSeadragon.Point|OpenSeadragon.Rect} location\n\t             * @property {OpenSeadragon.Placement} placement\n\t             * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t             */\n\t            this.raiseEvent( 'update-overlay', {\n\t                element: element,\n\t                location: location,\n\t                placement: placement\n\t            });\n\t        }\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * Removes an overlay identified by the reference element or element id\n\t     * and schedules an update.\n\t     * @method\n\t     * @param {Element|String} element - A reference to the element or an\n\t     *      element id which represent the ovelay content to be removed.\n\t     * @return {OpenSeadragon.Viewer} Chainable.\n\t     * @fires OpenSeadragon.Viewer.event:remove-overlay\n\t     */\n\t    removeOverlay: function( element ) {\n\t        var i;\n\t\n\t        element = $.getElement( element );\n\t        i = getOverlayIndex( this.currentOverlays, element );\n\t\n\t        if ( i >= 0 ) {\n\t            this.currentOverlays[ i ].destroy();\n\t            this.currentOverlays.splice( i, 1 );\n\t            THIS[ this.hash ].forceRedraw = true;\n\t            /**\n\t             * Raised when an overlay is removed from the viewer\n\t             * (see {@link OpenSeadragon.Viewer#removeOverlay}).\n\t             *\n\t             * @event remove-overlay\n\t             * @memberof OpenSeadragon.Viewer\n\t             * @type {object}\n\t             * @property {OpenSeadragon.Viewer} eventSource - A reference to the\n\t             * Viewer which raised the event.\n\t             * @property {Element} element - The overlay element.\n\t             * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t             */\n\t            this.raiseEvent( 'remove-overlay', {\n\t                element: element\n\t            });\n\t        }\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * Removes all currently configured Overlays from this Viewer and schedules\n\t     * an update.\n\t     * @method\n\t     * @return {OpenSeadragon.Viewer} Chainable.\n\t     * @fires OpenSeadragon.Viewer.event:clear-overlay\n\t     */\n\t    clearOverlays: function() {\n\t        while ( this.currentOverlays.length > 0 ) {\n\t            this.currentOverlays.pop().destroy();\n\t        }\n\t        THIS[ this.hash ].forceRedraw = true;\n\t        /**\n\t         * Raised when all overlays are removed from the viewer (see {@link OpenSeadragon.Drawer#clearOverlays}).\n\t         *\n\t         * @event clear-overlay\n\t         * @memberof OpenSeadragon.Viewer\n\t         * @type {object}\n\t         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n\t         * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t         */\n\t        this.raiseEvent( 'clear-overlay', {} );\n\t        return this;\n\t    },\n\t\n\t     /**\n\t     * Finds an overlay identified by the reference element or element id\n\t     * and returns it as an object, return null if not found.\n\t     * @method\n\t     * @param {Element|String} element - A reference to the element or an\n\t     *      element id which represents the overlay content.\n\t     * @return {OpenSeadragon.Overlay} the matching overlay or null if none found.\n\t     */\n\t    getOverlayById: function( element ) {\n\t        var i;\n\t\n\t        element = $.getElement( element );\n\t        i = getOverlayIndex( this.currentOverlays, element );\n\t\n\t        if (i>=0) {\n\t            return this.currentOverlays[i];\n\t        } else {\n\t            return null;\n\t        }\n\t    },\n\t\n\t    /**\n\t     * Updates the sequence buttons.\n\t     * @function OpenSeadragon.Viewer.prototype._updateSequenceButtons\n\t     * @private\n\t     * @param {Number} Sequence Value\n\t     */\n\t    _updateSequenceButtons: function( page ) {\n\t\n\t            if ( this.nextButton ) {\n\t                if(!this.tileSources || this.tileSources.length - 1 === page) {\n\t                    //Disable next button\n\t                    if ( !this.navPrevNextWrap ) {\n\t                        this.nextButton.disable();\n\t                    }\n\t                } else {\n\t                    this.nextButton.enable();\n\t                }\n\t            }\n\t            if ( this.previousButton ) {\n\t                if ( page > 0 ) {\n\t                    //Enable previous button\n\t                    this.previousButton.enable();\n\t                } else {\n\t                    if ( !this.navPrevNextWrap ) {\n\t                        this.previousButton.disable();\n\t                    }\n\t                }\n\t            }\n\t      },\n\t\n\t    /**\n\t     * Display a message in the viewport\n\t     * @function OpenSeadragon.Viewer.prototype._showMessage\n\t     * @private\n\t     * @param {String} text message\n\t     */\n\t    _showMessage: function ( message ) {\n\t        this._hideMessage();\n\t\n\t        var div = $.makeNeutralElement( \"div\" );\n\t        div.appendChild( document.createTextNode( message ) );\n\t\n\t        this.messageDiv = $.makeCenteredNode( div );\n\t\n\t        $.addClass(this.messageDiv, \"openseadragon-message\");\n\t\n\t        this.container.appendChild( this.messageDiv );\n\t    },\n\t\n\t    /**\n\t     * Hide any currently displayed viewport message\n\t     * @function OpenSeadragon.Viewer.prototype._hideMessage\n\t     * @private\n\t     */\n\t    _hideMessage: function () {\n\t        var div = this.messageDiv;\n\t        if (div) {\n\t            div.parentNode.removeChild(div);\n\t            delete this.messageDiv;\n\t        }\n\t    },\n\t\n\t    /**\n\t     * Gets this viewer's gesture settings for the given pointer device type.\n\t     * @method\n\t     * @param {String} type - The pointer device type to get the gesture settings for (\"mouse\", \"touch\", \"pen\", etc.).\n\t     * @return {OpenSeadragon.GestureSettings}\n\t     */\n\t    gestureSettingsByDeviceType: function ( type ) {\n\t        switch ( type ) {\n\t            case 'mouse':\n\t                return this.gestureSettingsMouse;\n\t            case 'touch':\n\t                return this.gestureSettingsTouch;\n\t            case 'pen':\n\t                return this.gestureSettingsPen;\n\t            default:\n\t                return this.gestureSettingsUnknown;\n\t        }\n\t    },\n\t\n\t    // private\n\t    _drawOverlays: function() {\n\t        var i,\n\t            length = this.currentOverlays.length;\n\t        for ( i = 0; i < length; i++ ) {\n\t            this.currentOverlays[ i ].drawHTML( this.overlaysContainer, this.viewport );\n\t        }\n\t    },\n\t\n\t    /**\n\t     * Cancel the \"in flight\" images.\n\t     */\n\t    _cancelPendingImages: function() {\n\t        this._loadQueue = [];\n\t    }\n\t});\n\t\n\t\n\t/**\n\t * _getSafeElemSize is like getElementSize(), but refuses to return 0 for x or y,\n\t * which was causing some calling operations to return NaN.\n\t * @returns {Point}\n\t * @private\n\t */\n\tfunction _getSafeElemSize (oElement) {\n\t    oElement = $.getElement( oElement );\n\t\n\t    return new $.Point(\n\t        (oElement.clientWidth === 0 ? 1 : oElement.clientWidth),\n\t        (oElement.clientHeight === 0 ? 1 : oElement.clientHeight)\n\t    );\n\t}\n\t\n\t/**\n\t * @function\n\t * @private\n\t */\n\tfunction getTileSourceImplementation( viewer, tileSource, successCallback,\n\t    failCallback ) {\n\t    var _this = viewer;\n\t\n\t    //allow plain xml strings or json strings to be parsed here\n\t    if ( $.type( tileSource ) == 'string' ) {\n\t        if ( tileSource.match( /\\s*<.*/ ) ) {\n\t            tileSource = $.parseXml( tileSource );\n\t        } else if ( tileSource.match( /\\s*[\\{\\[].*/ ) ) {\n\t            tileSource = $.parseJSON(tileSource);\n\t        }\n\t    }\n\t\n\t    function waitUntilReady(tileSource, originalTileSource) {\n\t        if (tileSource.ready) {\n\t            successCallback(tileSource);\n\t        } else {\n\t            tileSource.addHandler('ready', function () {\n\t                successCallback(tileSource);\n\t            });\n\t            tileSource.addHandler('open-failed', function (event) {\n\t                failCallback({\n\t                    message: event.message,\n\t                    source: originalTileSource\n\t                });\n\t            });\n\t        }\n\t    }\n\t\n\t    setTimeout( function() {\n\t        if ( $.type( tileSource ) == 'string' ) {\n\t            //If its still a string it means it must be a url at this point\n\t            tileSource = new $.TileSource({\n\t                url: tileSource,\n\t                crossOriginPolicy: viewer.crossOriginPolicy,\n\t                ajaxWithCredentials: viewer.ajaxWithCredentials,\n\t                useCanvas: viewer.useCanvas,\n\t                success: function( event ) {\n\t                    successCallback( event.tileSource );\n\t                }\n\t            });\n\t            tileSource.addHandler( 'open-failed', function( event ) {\n\t                failCallback( event );\n\t            } );\n\t\n\t        } else if ($.isPlainObject(tileSource) || tileSource.nodeType) {\n\t            if (!tileSource.crossOriginPolicy && viewer.crossOriginPolicy) {\n\t                tileSource.crossOriginPolicy = viewer.crossOriginPolicy;\n\t            }\n\t            if (tileSource.ajaxWithCredentials === undefined) {\n\t                tileSource.ajaxWithCredentials = viewer.ajaxWithCredentials;\n\t            }\n\t            if (tileSource.useCanvas === undefined) {\n\t                tileSource.useCanvas = viewer.useCanvas;\n\t            }\n\t\n\t            if ( $.isFunction( tileSource.getTileUrl ) ) {\n\t                //Custom tile source\n\t                var customTileSource = new $.TileSource( tileSource );\n\t                customTileSource.getTileUrl = tileSource.getTileUrl;\n\t                successCallback( customTileSource );\n\t            } else {\n\t                //inline configuration\n\t                var $TileSource = $.TileSource.determineType( _this, tileSource );\n\t                if ( !$TileSource ) {\n\t                    failCallback( {\n\t                        message: \"Unable to load TileSource\",\n\t                        source: tileSource\n\t                    });\n\t                    return;\n\t                }\n\t                var options = $TileSource.prototype.configure.apply( _this, [ tileSource ] );\n\t                waitUntilReady(new $TileSource(options), tileSource);\n\t            }\n\t        } else {\n\t            //can assume it's already a tile source implementation\n\t            waitUntilReady(tileSource, tileSource);\n\t        }\n\t    });\n\t}\n\t\n\tfunction getOverlayObject( viewer, overlay ) {\n\t    if ( overlay instanceof $.Overlay ) {\n\t        return overlay;\n\t    }\n\t\n\t    var element = null;\n\t    if ( overlay.element ) {\n\t        element = $.getElement( overlay.element );\n\t    } else {\n\t        var id = overlay.id ?\n\t            overlay.id :\n\t            \"openseadragon-overlay-\" + Math.floor( Math.random() * 10000000 );\n\t\n\t        element = $.getElement( overlay.id );\n\t        if ( !element ) {\n\t            element         = document.createElement( \"a\" );\n\t            element.href    = \"#/overlay/\" + id;\n\t        }\n\t        element.id = id;\n\t        $.addClass( element, overlay.className ?\n\t            overlay.className :\n\t            \"openseadragon-overlay\"\n\t        );\n\t    }\n\t\n\t    var location = overlay.location;\n\t    var width = overlay.width;\n\t    var height = overlay.height;\n\t    if (!location) {\n\t        var x = overlay.x;\n\t        var y = overlay.y;\n\t        if (overlay.px !== undefined) {\n\t            var rect = viewer.viewport.imageToViewportRectangle(new $.Rect(\n\t                overlay.px,\n\t                overlay.py,\n\t                width || 0,\n\t                height || 0));\n\t            x = rect.x;\n\t            y = rect.y;\n\t            width = width !== undefined ? rect.width : undefined;\n\t            height = height !== undefined ? rect.height : undefined;\n\t        }\n\t        location = new $.Point(x, y);\n\t    }\n\t\n\t    var placement = overlay.placement;\n\t    if (placement && $.type(placement) === \"string\") {\n\t        placement = $.Placement[overlay.placement.toUpperCase()];\n\t    }\n\t\n\t    return new $.Overlay({\n\t        element: element,\n\t        location: location,\n\t        placement: placement,\n\t        onDraw: overlay.onDraw,\n\t        checkResize: overlay.checkResize,\n\t        width: width,\n\t        height: height,\n\t        rotationMode: overlay.rotationMode\n\t    });\n\t}\n\t\n\t/**\n\t * @private\n\t * @inner\n\t * Determines the index of the given overlay in the given overlays array.\n\t */\n\tfunction getOverlayIndex( overlays, element ) {\n\t    var i;\n\t    for ( i = overlays.length - 1; i >= 0; i-- ) {\n\t        if ( overlays[ i ].element === element ) {\n\t            return i;\n\t        }\n\t    }\n\t\n\t    return -1;\n\t}\n\t\n\t///////////////////////////////////////////////////////////////////////////////\n\t// Schedulers provide the general engine for animation\n\t///////////////////////////////////////////////////////////////////////////////\n\tfunction scheduleUpdate( viewer, updateFunc ){\n\t    return $.requestAnimationFrame( function(){\n\t        updateFunc( viewer );\n\t    } );\n\t}\n\t\n\t\n\t//provides a sequence in the fade animation\n\tfunction scheduleControlsFade( viewer ) {\n\t    $.requestAnimationFrame( function(){\n\t        updateControlsFade( viewer );\n\t    });\n\t}\n\t\n\t\n\t//initiates an animation to hide the controls\n\tfunction beginControlsAutoHide( viewer ) {\n\t    if ( !viewer.autoHideControls ) {\n\t        return;\n\t    }\n\t    viewer.controlsShouldFade = true;\n\t    viewer.controlsFadeBeginTime =\n\t        $.now() +\n\t        viewer.controlsFadeDelay;\n\t\n\t    window.setTimeout( function(){\n\t        scheduleControlsFade( viewer );\n\t    }, viewer.controlsFadeDelay );\n\t}\n\t\n\t\n\t//determines if fade animation is done or continues the animation\n\tfunction updateControlsFade( viewer ) {\n\t    var currentTime,\n\t        deltaTime,\n\t        opacity,\n\t        i;\n\t    if ( viewer.controlsShouldFade ) {\n\t        currentTime = $.now();\n\t        deltaTime = currentTime - viewer.controlsFadeBeginTime;\n\t        opacity = 1.0 - deltaTime / viewer.controlsFadeLength;\n\t\n\t        opacity = Math.min( 1.0, opacity );\n\t        opacity = Math.max( 0.0, opacity );\n\t\n\t        for ( i = viewer.controls.length - 1; i >= 0; i--) {\n\t            if (viewer.controls[ i ].autoFade) {\n\t                viewer.controls[ i ].setOpacity( opacity );\n\t            }\n\t        }\n\t\n\t        if ( opacity > 0 ) {\n\t            // fade again\n\t            scheduleControlsFade( viewer );\n\t        }\n\t    }\n\t}\n\t\n\t\n\t//stop the fade animation on the controls and show them\n\tfunction abortControlsAutoHide( viewer ) {\n\t    var i;\n\t    viewer.controlsShouldFade = false;\n\t    for ( i = viewer.controls.length - 1; i >= 0; i-- ) {\n\t        viewer.controls[ i ].setOpacity( 1.0 );\n\t    }\n\t}\n\t\n\t\n\t\n\t///////////////////////////////////////////////////////////////////////////////\n\t// Default view event handlers.\n\t///////////////////////////////////////////////////////////////////////////////\n\tfunction onFocus(){\n\t    abortControlsAutoHide( this );\n\t}\n\t\n\tfunction onBlur(){\n\t    beginControlsAutoHide( this );\n\t\n\t}\n\t\n\tfunction onCanvasKeyDown( event ) {\n\t    if ( !event.preventDefaultAction && !event.ctrl && !event.alt && !event.meta ) {\n\t        switch( event.keyCode ){\n\t            case 38://up arrow\n\t                if ( event.shift ) {\n\t                    this.viewport.zoomBy(1.1);\n\t                } else {\n\t                    this.viewport.panBy(this.viewport.deltaPointsFromPixels(new $.Point(0, -40)));\n\t                }\n\t                this.viewport.applyConstraints();\n\t                return false;\n\t            case 40://down arrow\n\t                if ( event.shift ) {\n\t                    this.viewport.zoomBy(0.9);\n\t                } else {\n\t                    this.viewport.panBy(this.viewport.deltaPointsFromPixels(new $.Point(0, 40)));\n\t                }\n\t                this.viewport.applyConstraints();\n\t                return false;\n\t            case 37://left arrow\n\t                this.viewport.panBy(this.viewport.deltaPointsFromPixels(new $.Point(-40, 0)));\n\t                this.viewport.applyConstraints();\n\t                return false;\n\t            case 39://right arrow\n\t                this.viewport.panBy(this.viewport.deltaPointsFromPixels(new $.Point(40, 0)));\n\t                this.viewport.applyConstraints();\n\t                return false;\n\t            default:\n\t                //console.log( 'navigator keycode %s', event.keyCode );\n\t                return true;\n\t        }\n\t    } else {\n\t        return true;\n\t    }\n\t}\n\t\n\tfunction onCanvasKeyPress( event ) {\n\t    if ( !event.preventDefaultAction && !event.ctrl && !event.alt && !event.meta ) {\n\t        switch( event.keyCode ){\n\t            case 43://=|+\n\t            case 61://=|+\n\t                this.viewport.zoomBy(1.1);\n\t                this.viewport.applyConstraints();\n\t                return false;\n\t            case 45://-|_\n\t                this.viewport.zoomBy(0.9);\n\t                this.viewport.applyConstraints();\n\t                return false;\n\t            case 48://0|)\n\t                this.viewport.goHome();\n\t                this.viewport.applyConstraints();\n\t                return false;\n\t            case 119://w\n\t            case 87://W\n\t                if ( event.shift ) {\n\t                    this.viewport.zoomBy(1.1);\n\t                } else {\n\t                    this.viewport.panBy(this.viewport.deltaPointsFromPixels(new $.Point(0, -40)));\n\t                }\n\t                this.viewport.applyConstraints();\n\t                return false;\n\t            case 115://s\n\t            case 83://S\n\t                if ( event.shift ) {\n\t                    this.viewport.zoomBy(0.9);\n\t                } else {\n\t                    this.viewport.panBy(this.viewport.deltaPointsFromPixels(new $.Point(0, 40)));\n\t                }\n\t                this.viewport.applyConstraints();\n\t                return false;\n\t            case 97://a\n\t                this.viewport.panBy(this.viewport.deltaPointsFromPixels(new $.Point(-40, 0)));\n\t                this.viewport.applyConstraints();\n\t                return false;\n\t            case 100://d\n\t                this.viewport.panBy(this.viewport.deltaPointsFromPixels(new $.Point(40, 0)));\n\t                this.viewport.applyConstraints();\n\t                return false;\n\t            default:\n\t                //console.log( 'navigator keycode %s', event.keyCode );\n\t                return true;\n\t        }\n\t    } else {\n\t        return true;\n\t    }\n\t}\n\t\n\tfunction onCanvasClick( event ) {\n\t    var gestureSettings;\n\t\n\t    var haveKeyboardFocus = document.activeElement == this.canvas;\n\t\n\t    // If we don't have keyboard focus, request it.\n\t    if ( !haveKeyboardFocus ) {\n\t        this.canvas.focus();\n\t    }\n\t\n\t    if ( !event.preventDefaultAction && this.viewport && event.quick ) {\n\t        gestureSettings = this.gestureSettingsByDeviceType( event.pointerType );\n\t        if ( gestureSettings.clickToZoom ) {\n\t            this.viewport.zoomBy(\n\t                event.shift ? 1.0 / this.zoomPerClick : this.zoomPerClick,\n\t                this.viewport.pointFromPixel( event.position, true )\n\t            );\n\t            this.viewport.applyConstraints();\n\t        }\n\t    }\n\t    /**\n\t     * Raised when a mouse press/release or touch/remove occurs on the {@link OpenSeadragon.Viewer#canvas} element.\n\t     *\n\t     * @event canvas-click\n\t     * @memberof OpenSeadragon.Viewer\n\t     * @type {object}\n\t     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n\t     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n\t     * @property {Boolean} quick - True only if the clickDistThreshold and clickTimeThreshold are both passed. Useful for differentiating between clicks and drags.\n\t     * @property {Boolean} shift - True if the shift key was pressed during this event.\n\t     * @property {Object} originalEvent - The original DOM event.\n\t     * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t     */\n\t    this.raiseEvent( 'canvas-click', {\n\t        tracker: event.eventSource,\n\t        position: event.position,\n\t        quick: event.quick,\n\t        shift: event.shift,\n\t        originalEvent: event.originalEvent\n\t    });\n\t}\n\t\n\tfunction onCanvasDblClick( event ) {\n\t    var gestureSettings;\n\t\n\t    if ( !event.preventDefaultAction && this.viewport ) {\n\t        gestureSettings = this.gestureSettingsByDeviceType( event.pointerType );\n\t        if ( gestureSettings.dblClickToZoom ) {\n\t            this.viewport.zoomBy(\n\t                event.shift ? 1.0 / this.zoomPerClick : this.zoomPerClick,\n\t                this.viewport.pointFromPixel( event.position, true )\n\t            );\n\t            this.viewport.applyConstraints();\n\t        }\n\t    }\n\t    /**\n\t     * Raised when a double mouse press/release or touch/remove occurs on the {@link OpenSeadragon.Viewer#canvas} element.\n\t     *\n\t     * @event canvas-double-click\n\t     * @memberof OpenSeadragon.Viewer\n\t     * @type {object}\n\t     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n\t     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n\t     * @property {Boolean} shift - True if the shift key was pressed during this event.\n\t     * @property {Object} originalEvent - The original DOM event.\n\t     * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t     */\n\t    this.raiseEvent( 'canvas-double-click', {\n\t        tracker: event.eventSource,\n\t        position: event.position,\n\t        shift: event.shift,\n\t        originalEvent: event.originalEvent\n\t    });\n\t}\n\t\n\tfunction onCanvasDrag( event ) {\n\t    var gestureSettings;\n\t\n\t    if ( !event.preventDefaultAction && this.viewport ) {\n\t        gestureSettings = this.gestureSettingsByDeviceType( event.pointerType );\n\t        if( !this.panHorizontal ){\n\t            event.delta.x = 0;\n\t        }\n\t        if( !this.panVertical ){\n\t            event.delta.y = 0;\n\t        }\n\t        this.viewport.panBy( this.viewport.deltaPointsFromPixels( event.delta.negate() ), gestureSettings.flickEnabled );\n\t        if( this.constrainDuringPan ){\n\t            this.viewport.applyConstraints();\n\t        }\n\t    }\n\t    /**\n\t     * Raised when a mouse or touch drag operation occurs on the {@link OpenSeadragon.Viewer#canvas} element.\n\t     *\n\t     * @event canvas-drag\n\t     * @memberof OpenSeadragon.Viewer\n\t     * @type {object}\n\t     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n\t     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n\t     * @property {OpenSeadragon.Point} delta - The x,y components of the difference between start drag and end drag.\n\t     * @property {Number} speed - Current computed speed, in pixels per second.\n\t     * @property {Number} direction - Current computed direction, expressed as an angle counterclockwise relative to the positive X axis (-pi to pi, in radians). Only valid if speed > 0.\n\t     * @property {Boolean} shift - True if the shift key was pressed during this event.\n\t     * @property {Object} originalEvent - The original DOM event.\n\t     * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t     */\n\t    this.raiseEvent( 'canvas-drag', {\n\t        tracker: event.eventSource,\n\t        position: event.position,\n\t        delta: event.delta,\n\t        speed: event.speed,\n\t        direction: event.direction,\n\t        shift: event.shift,\n\t        originalEvent: event.originalEvent\n\t    });\n\t}\n\t\n\tfunction onCanvasDragEnd( event ) {\n\t    if (!event.preventDefaultAction && this.viewport) {\n\t        var gestureSettings = this.gestureSettingsByDeviceType(event.pointerType);\n\t        if (gestureSettings.flickEnabled &&\n\t            event.speed >= gestureSettings.flickMinSpeed) {\n\t            var amplitudeX = 0;\n\t            if (this.panHorizontal) {\n\t                amplitudeX = gestureSettings.flickMomentum * event.speed *\n\t                    Math.cos(event.direction);\n\t            }\n\t            var amplitudeY = 0;\n\t            if (this.panVertical) {\n\t                amplitudeY = gestureSettings.flickMomentum * event.speed *\n\t                    Math.sin(event.direction);\n\t            }\n\t            var center = this.viewport.pixelFromPoint(\n\t                this.viewport.getCenter(true));\n\t            var target = this.viewport.pointFromPixel(\n\t                new $.Point(center.x - amplitudeX, center.y - amplitudeY));\n\t            this.viewport.panTo(target, false);\n\t        }\n\t        this.viewport.applyConstraints();\n\t    }\n\t    /**\n\t     * Raised when a mouse or touch drag operation ends on the {@link OpenSeadragon.Viewer#canvas} element.\n\t     *\n\t     * @event canvas-drag-end\n\t     * @memberof OpenSeadragon.Viewer\n\t     * @type {object}\n\t     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n\t     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n\t     * @property {Number} speed - Speed at the end of a drag gesture, in pixels per second.\n\t     * @property {Number} direction - Direction at the end of a drag gesture, expressed as an angle counterclockwise relative to the positive X axis (-pi to pi, in radians). Only valid if speed > 0.\n\t     * @property {Boolean} shift - True if the shift key was pressed during this event.\n\t     * @property {Object} originalEvent - The original DOM event.\n\t     * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t     */\n\t    this.raiseEvent('canvas-drag-end', {\n\t        tracker: event.eventSource,\n\t        position: event.position,\n\t        speed: event.speed,\n\t        direction: event.direction,\n\t        shift: event.shift,\n\t        originalEvent: event.originalEvent\n\t    });\n\t}\n\t\n\tfunction onCanvasEnter( event ) {\n\t    /**\n\t     * Raised when a pointer enters the {@link OpenSeadragon.Viewer#canvas} element.\n\t     *\n\t     * @event canvas-enter\n\t     * @memberof OpenSeadragon.Viewer\n\t     * @type {object}\n\t     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n\t     * @property {String} pointerType - \"mouse\", \"touch\", \"pen\", etc.\n\t     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n\t     * @property {Number} buttons - Current buttons pressed. A combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n\t     * @property {Number} pointers - Number of pointers (all types) active in the tracked element.\n\t     * @property {Boolean} insideElementPressed - True if the left mouse button is currently being pressed and was initiated inside the tracked element, otherwise false.\n\t     * @property {Boolean} buttonDownAny - Was the button down anywhere in the screen during the event. <span style=\"color:red;\">Deprecated. Use buttons instead.</span>\n\t     * @property {Object} originalEvent - The original DOM event.\n\t     * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t     */\n\t    this.raiseEvent( 'canvas-enter', {\n\t        tracker: event.eventSource,\n\t        pointerType: event.pointerType,\n\t        position: event.position,\n\t        buttons: event.buttons,\n\t        pointers: event.pointers,\n\t        insideElementPressed: event.insideElementPressed,\n\t        buttonDownAny: event.buttonDownAny,\n\t        originalEvent: event.originalEvent\n\t    });\n\t}\n\t\n\tfunction onCanvasExit( event ) {\n\t    /**\n\t     * Raised when a pointer leaves the {@link OpenSeadragon.Viewer#canvas} element.\n\t     *\n\t     * @event canvas-exit\n\t     * @memberof OpenSeadragon.Viewer\n\t     * @type {object}\n\t     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n\t     * @property {String} pointerType - \"mouse\", \"touch\", \"pen\", etc.\n\t     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n\t     * @property {Number} buttons - Current buttons pressed. A combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n\t     * @property {Number} pointers - Number of pointers (all types) active in the tracked element.\n\t     * @property {Boolean} insideElementPressed - True if the left mouse button is currently being pressed and was initiated inside the tracked element, otherwise false.\n\t     * @property {Boolean} buttonDownAny - Was the button down anywhere in the screen during the event. <span style=\"color:red;\">Deprecated. Use buttons instead.</span>\n\t     * @property {Object} originalEvent - The original DOM event.\n\t     * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t     */\n\t    this.raiseEvent( 'canvas-exit', {\n\t        tracker: event.eventSource,\n\t        pointerType: event.pointerType,\n\t        position: event.position,\n\t        buttons: event.buttons,\n\t        pointers: event.pointers,\n\t        insideElementPressed: event.insideElementPressed,\n\t        buttonDownAny: event.buttonDownAny,\n\t        originalEvent: event.originalEvent\n\t    });\n\t}\n\t\n\tfunction onCanvasPress( event ) {\n\t    /**\n\t     * Raised when the primary mouse button is pressed or touch starts on the {@link OpenSeadragon.Viewer#canvas} element.\n\t     *\n\t     * @event canvas-press\n\t     * @memberof OpenSeadragon.Viewer\n\t     * @type {object}\n\t     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n\t     * @property {String} pointerType - \"mouse\", \"touch\", \"pen\", etc.\n\t     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n\t     * @property {Boolean} insideElementPressed - True if the left mouse button is currently being pressed and was initiated inside the tracked element, otherwise false.\n\t     * @property {Boolean} insideElementReleased - True if the cursor still inside the tracked element when the button was released.\n\t     * @property {Object} originalEvent - The original DOM event.\n\t     * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t     */\n\t    this.raiseEvent( 'canvas-press', {\n\t        tracker: event.eventSource,\n\t        pointerType: event.pointerType,\n\t        position: event.position,\n\t        insideElementPressed: event.insideElementPressed,\n\t        insideElementReleased: event.insideElementReleased,\n\t        originalEvent: event.originalEvent\n\t    });\n\t}\n\t\n\tfunction onCanvasRelease( event ) {\n\t    /**\n\t     * Raised when the primary mouse button is released or touch ends on the {@link OpenSeadragon.Viewer#canvas} element.\n\t     *\n\t     * @event canvas-release\n\t     * @memberof OpenSeadragon.Viewer\n\t     * @type {object}\n\t     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n\t     * @property {String} pointerType - \"mouse\", \"touch\", \"pen\", etc.\n\t     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n\t     * @property {Boolean} insideElementPressed - True if the left mouse button is currently being pressed and was initiated inside the tracked element, otherwise false.\n\t     * @property {Boolean} insideElementReleased - True if the cursor still inside the tracked element when the button was released.\n\t     * @property {Object} originalEvent - The original DOM event.\n\t     * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t     */\n\t    this.raiseEvent( 'canvas-release', {\n\t        tracker: event.eventSource,\n\t        pointerType: event.pointerType,\n\t        position: event.position,\n\t        insideElementPressed: event.insideElementPressed,\n\t        insideElementReleased: event.insideElementReleased,\n\t        originalEvent: event.originalEvent\n\t    });\n\t}\n\t\n\tfunction onCanvasNonPrimaryPress( event ) {\n\t    /**\n\t     * Raised when any non-primary pointer button is pressed on the {@link OpenSeadragon.Viewer#canvas} element.\n\t     *\n\t     * @event canvas-nonprimary-press\n\t     * @memberof OpenSeadragon.Viewer\n\t     * @type {object}\n\t     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n\t     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n\t     * @property {String} pointerType - \"mouse\", \"touch\", \"pen\", etc.\n\t     * @property {Number} button - Button which caused the event.\n\t     *      -1: none, 0: primary/left, 1: aux/middle, 2: secondary/right, 3: X1/back, 4: X2/forward, 5: pen eraser.\n\t     * @property {Number} buttons - Current buttons pressed.\n\t     *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n\t     * @property {Object} originalEvent - The original DOM event.\n\t     * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t     */\n\t    this.raiseEvent( 'canvas-nonprimary-press', {\n\t        tracker: event.eventSource,\n\t        position: event.position,\n\t        pointerType: event.pointerType,\n\t        button: event.button,\n\t        buttons: event.buttons,\n\t        originalEvent: event.originalEvent\n\t    });\n\t}\n\t\n\tfunction onCanvasNonPrimaryRelease( event ) {\n\t    /**\n\t     * Raised when any non-primary pointer button is released on the {@link OpenSeadragon.Viewer#canvas} element.\n\t     *\n\t     * @event canvas-nonprimary-release\n\t     * @memberof OpenSeadragon.Viewer\n\t     * @type {object}\n\t     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n\t     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n\t     * @property {String} pointerType - \"mouse\", \"touch\", \"pen\", etc.\n\t     * @property {Number} button - Button which caused the event.\n\t     *      -1: none, 0: primary/left, 1: aux/middle, 2: secondary/right, 3: X1/back, 4: X2/forward, 5: pen eraser.\n\t     * @property {Number} buttons - Current buttons pressed.\n\t     *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n\t     * @property {Object} originalEvent - The original DOM event.\n\t     * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t     */\n\t    this.raiseEvent( 'canvas-nonprimary-release', {\n\t        tracker: event.eventSource,\n\t        position: event.position,\n\t        pointerType: event.pointerType,\n\t        button: event.button,\n\t        buttons: event.buttons,\n\t        originalEvent: event.originalEvent\n\t    });\n\t}\n\t\n\tfunction onCanvasPinch( event ) {\n\t    var gestureSettings,\n\t        centerPt,\n\t        lastCenterPt,\n\t        panByPt;\n\t\n\t    if ( !event.preventDefaultAction && this.viewport ) {\n\t        gestureSettings = this.gestureSettingsByDeviceType( event.pointerType );\n\t        if ( gestureSettings.pinchToZoom ) {\n\t            centerPt = this.viewport.pointFromPixel( event.center, true );\n\t            lastCenterPt = this.viewport.pointFromPixel( event.lastCenter, true );\n\t            panByPt = lastCenterPt.minus( centerPt );\n\t            if( !this.panHorizontal ) {\n\t                panByPt.x = 0;\n\t            }\n\t            if( !this.panVertical ) {\n\t                panByPt.y = 0;\n\t            }\n\t            this.viewport.zoomBy( event.distance / event.lastDistance, centerPt, true );\n\t            this.viewport.panBy( panByPt, true );\n\t            this.viewport.applyConstraints();\n\t        }\n\t        if ( gestureSettings.pinchRotate ) {\n\t            // Pinch rotate\n\t            var angle1 = Math.atan2(event.gesturePoints[0].currentPos.y - event.gesturePoints[1].currentPos.y,\n\t                event.gesturePoints[0].currentPos.x - event.gesturePoints[1].currentPos.x);\n\t            var angle2 = Math.atan2(event.gesturePoints[0].lastPos.y - event.gesturePoints[1].lastPos.y,\n\t                event.gesturePoints[0].lastPos.x - event.gesturePoints[1].lastPos.x);\n\t            this.viewport.setRotation(this.viewport.getRotation() + ((angle1 - angle2) * (180 / Math.PI)));\n\t        }\n\t    }\n\t    /**\n\t     * Raised when a pinch event occurs on the {@link OpenSeadragon.Viewer#canvas} element.\n\t     *\n\t     * @event canvas-pinch\n\t     * @memberof OpenSeadragon.Viewer\n\t     * @type {object}\n\t     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n\t     * @property {Array.<OpenSeadragon.MouseTracker.GesturePoint>} gesturePoints - Gesture points associated with the gesture. Velocity data can be found here.\n\t     * @property {OpenSeadragon.Point} lastCenter - The previous center point of the two pinch contact points relative to the tracked element.\n\t     * @property {OpenSeadragon.Point} center - The center point of the two pinch contact points relative to the tracked element.\n\t     * @property {Number} lastDistance - The previous distance between the two pinch contact points in CSS pixels.\n\t     * @property {Number} distance - The distance between the two pinch contact points in CSS pixels.\n\t     * @property {Boolean} shift - True if the shift key was pressed during this event.\n\t     * @property {Object} originalEvent - The original DOM event.\n\t     * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t     */\n\t    this.raiseEvent('canvas-pinch', {\n\t        tracker: event.eventSource,\n\t        gesturePoints: event.gesturePoints,\n\t        lastCenter: event.lastCenter,\n\t        center: event.center,\n\t        lastDistance: event.lastDistance,\n\t        distance: event.distance,\n\t        shift: event.shift,\n\t        originalEvent: event.originalEvent\n\t    });\n\t    //cancels event\n\t    return false;\n\t}\n\t\n\tfunction onCanvasScroll( event ) {\n\t    var gestureSettings,\n\t        factor,\n\t        thisScrollTime,\n\t        deltaScrollTime;\n\t\n\t    /* Certain scroll devices fire the scroll event way too fast so we are injecting a simple adjustment to keep things\n\t     * partially normalized. If we have already fired an event within the last 'minScrollDelta' milliseconds we skip\n\t     * this one and wait for the next event. */\n\t    thisScrollTime = $.now();\n\t    deltaScrollTime = thisScrollTime - this._lastScrollTime;\n\t    if (deltaScrollTime > this.minScrollDeltaTime) {\n\t        this._lastScrollTime = thisScrollTime;\n\t\n\t        if ( !event.preventDefaultAction && this.viewport ) {\n\t            gestureSettings = this.gestureSettingsByDeviceType( event.pointerType );\n\t            if ( gestureSettings.scrollToZoom ) {\n\t                factor = Math.pow( this.zoomPerScroll, event.scroll );\n\t                this.viewport.zoomBy(\n\t                    factor,\n\t                    this.viewport.pointFromPixel( event.position, true )\n\t                );\n\t                this.viewport.applyConstraints();\n\t            }\n\t        }\n\t        /**\n\t         * Raised when a scroll event occurs on the {@link OpenSeadragon.Viewer#canvas} element (mouse wheel).\n\t         *\n\t         * @event canvas-scroll\n\t         * @memberof OpenSeadragon.Viewer\n\t         * @type {object}\n\t         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t         * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n\t         * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n\t         * @property {Number} scroll - The scroll delta for the event.\n\t         * @property {Boolean} shift - True if the shift key was pressed during this event.\n\t         * @property {Object} originalEvent - The original DOM event.\n\t         * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t         */\n\t        this.raiseEvent( 'canvas-scroll', {\n\t            tracker: event.eventSource,\n\t            position: event.position,\n\t            scroll: event.scroll,\n\t            shift: event.shift,\n\t            originalEvent: event.originalEvent\n\t        });\n\t        if (gestureSettings && gestureSettings.scrollToZoom) {\n\t            //cancels event\n\t            return false;\n\t        }\n\t    }\n\t    else {\n\t        gestureSettings = this.gestureSettingsByDeviceType( event.pointerType );\n\t        if (gestureSettings && gestureSettings.scrollToZoom) {\n\t            return false;   // We are swallowing this event\n\t        }\n\t    }\n\t}\n\t\n\tfunction onContainerEnter( event ) {\n\t    THIS[ this.hash ].mouseInside = true;\n\t    abortControlsAutoHide( this );\n\t    /**\n\t     * Raised when the cursor enters the {@link OpenSeadragon.Viewer#container} element.\n\t     *\n\t     * @event container-enter\n\t     * @memberof OpenSeadragon.Viewer\n\t     * @type {object}\n\t     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n\t     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n\t     * @property {Number} buttons - Current buttons pressed. A combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n\t     * @property {Number} pointers - Number of pointers (all types) active in the tracked element.\n\t     * @property {Boolean} insideElementPressed - True if the left mouse button is currently being pressed and was initiated inside the tracked element, otherwise false.\n\t     * @property {Boolean} buttonDownAny - Was the button down anywhere in the screen during the event. <span style=\"color:red;\">Deprecated. Use buttons instead.</span>\n\t     * @property {Object} originalEvent - The original DOM event.\n\t     * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t     */\n\t    this.raiseEvent( 'container-enter', {\n\t        tracker: event.eventSource,\n\t        position: event.position,\n\t        buttons: event.buttons,\n\t        pointers: event.pointers,\n\t        insideElementPressed: event.insideElementPressed,\n\t        buttonDownAny: event.buttonDownAny,\n\t        originalEvent: event.originalEvent\n\t    });\n\t}\n\t\n\tfunction onContainerExit( event ) {\n\t    if ( event.pointers < 1 ) {\n\t        THIS[ this.hash ].mouseInside = false;\n\t        if ( !THIS[ this.hash ].animating ) {\n\t            beginControlsAutoHide( this );\n\t        }\n\t    }\n\t    /**\n\t     * Raised when the cursor leaves the {@link OpenSeadragon.Viewer#container} element.\n\t     *\n\t     * @event container-exit\n\t     * @memberof OpenSeadragon.Viewer\n\t     * @type {object}\n\t     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n\t     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n\t     * @property {Number} buttons - Current buttons pressed. A combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n\t     * @property {Number} pointers - Number of pointers (all types) active in the tracked element.\n\t     * @property {Boolean} insideElementPressed - True if the left mouse button is currently being pressed and was initiated inside the tracked element, otherwise false.\n\t     * @property {Boolean} buttonDownAny - Was the button down anywhere in the screen during the event. <span style=\"color:red;\">Deprecated. Use buttons instead.</span>\n\t     * @property {Object} originalEvent - The original DOM event.\n\t     * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t     */\n\t    this.raiseEvent( 'container-exit', {\n\t        tracker: event.eventSource,\n\t        position: event.position,\n\t        buttons: event.buttons,\n\t        pointers: event.pointers,\n\t        insideElementPressed: event.insideElementPressed,\n\t        buttonDownAny: event.buttonDownAny,\n\t        originalEvent: event.originalEvent\n\t    });\n\t}\n\t\n\t\n\t///////////////////////////////////////////////////////////////////////////////\n\t// Page update routines ( aka Views - for future reference )\n\t///////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction updateMulti( viewer ) {\n\t    updateOnce( viewer );\n\t\n\t    // Request the next frame, unless we've been closed\n\t    if ( viewer.isOpen() ) {\n\t        viewer._updateRequestId = scheduleUpdate( viewer, updateMulti );\n\t    } else {\n\t        viewer._updateRequestId = false;\n\t    }\n\t}\n\t\n\tfunction updateOnce( viewer ) {\n\t\n\t    //viewer.profiler.beginUpdate();\n\t\n\t    if (viewer._opening) {\n\t        return;\n\t    }\n\t\n\t    if (viewer.autoResize) {\n\t        var containerSize = _getSafeElemSize(viewer.container);\n\t        var prevContainerSize = THIS[viewer.hash].prevContainerSize;\n\t        if (!containerSize.equals(prevContainerSize)) {\n\t            var viewport = viewer.viewport;\n\t            if (viewer.preserveImageSizeOnResize) {\n\t                var resizeRatio = prevContainerSize.x / containerSize.x;\n\t                var zoom = viewport.getZoom() * resizeRatio;\n\t                var center = viewport.getCenter();\n\t                viewport.resize(containerSize, false);\n\t                viewport.zoomTo(zoom, null, true);\n\t                viewport.panTo(center, true);\n\t            } else {\n\t                // maintain image position\n\t                var oldBounds = viewport.getBounds();\n\t                viewport.resize(containerSize, true);\n\t                viewport.fitBoundsWithConstraints(oldBounds, true);\n\t            }\n\t            THIS[viewer.hash].prevContainerSize = containerSize;\n\t            THIS[viewer.hash].forceRedraw = true;\n\t        }\n\t    }\n\t\n\t    var viewportChange = viewer.viewport.update();\n\t    var animated = viewer.world.update() || viewportChange;\n\t\n\t    if (viewportChange) {\n\t        /**\n\t         * Raised when any spring animation update occurs (zoom, pan, etc.),\n\t         * before the viewer has drawn the new location.\n\t         *\n\t         * @event viewport-change\n\t         * @memberof OpenSeadragon.Viewer\n\t         * @type {object}\n\t         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t         * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t         */\n\t        viewer.raiseEvent('viewport-change');\n\t    }\n\t\n\t    if( viewer.referenceStrip ){\n\t        animated = viewer.referenceStrip.update( viewer.viewport ) || animated;\n\t    }\n\t\n\t    if ( !THIS[ viewer.hash ].animating && animated ) {\n\t        /**\n\t         * Raised when any spring animation starts (zoom, pan, etc.).\n\t         *\n\t         * @event animation-start\n\t         * @memberof OpenSeadragon.Viewer\n\t         * @type {object}\n\t         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t         * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t         */\n\t        viewer.raiseEvent( \"animation-start\" );\n\t        abortControlsAutoHide( viewer );\n\t    }\n\t\n\t    if ( animated || THIS[ viewer.hash ].forceRedraw || viewer.world.needsDraw() ) {\n\t        drawWorld( viewer );\n\t        viewer._drawOverlays();\n\t        if( viewer.navigator ){\n\t            viewer.navigator.update( viewer.viewport );\n\t        }\n\t\n\t        THIS[ viewer.hash ].forceRedraw = false;\n\t\n\t        if (animated) {\n\t            /**\n\t             * Raised when any spring animation update occurs (zoom, pan, etc.),\n\t             * after the viewer has drawn the new location.\n\t             *\n\t             * @event animation\n\t             * @memberof OpenSeadragon.Viewer\n\t             * @type {object}\n\t             * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t             * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t             */\n\t            viewer.raiseEvent( \"animation\" );\n\t        }\n\t    }\n\t\n\t    if ( THIS[ viewer.hash ].animating && !animated ) {\n\t        /**\n\t         * Raised when any spring animation ends (zoom, pan, etc.).\n\t         *\n\t         * @event animation-finish\n\t         * @memberof OpenSeadragon.Viewer\n\t         * @type {object}\n\t         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t         * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t         */\n\t        viewer.raiseEvent( \"animation-finish\" );\n\t\n\t        if ( !THIS[ viewer.hash ].mouseInside ) {\n\t            beginControlsAutoHide( viewer );\n\t        }\n\t    }\n\t\n\t    THIS[ viewer.hash ].animating = animated;\n\t\n\t    //viewer.profiler.endUpdate();\n\t}\n\t\n\tfunction drawWorld( viewer ) {\n\t    viewer.imageLoader.clear();\n\t    viewer.drawer.clear();\n\t    viewer.world.draw();\n\t\n\t    /**\n\t     * <em>- Needs documentation -</em>\n\t     *\n\t     * @event update-viewport\n\t     * @memberof OpenSeadragon.Viewer\n\t     * @type {object}\n\t     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n\t     * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t     */\n\t    viewer.raiseEvent( 'update-viewport', {} );\n\t}\n\t\n\t///////////////////////////////////////////////////////////////////////////////\n\t// Navigation Controls\n\t///////////////////////////////////////////////////////////////////////////////\n\tfunction resolveUrl( prefix, url ) {\n\t    return prefix ? prefix + url : url;\n\t}\n\t\n\t\n\t\n\tfunction beginZoomingIn() {\n\t    THIS[ this.hash ].lastZoomTime = $.now();\n\t    THIS[ this.hash ].zoomFactor = this.zoomPerSecond;\n\t    THIS[ this.hash ].zooming = true;\n\t    scheduleZoom( this );\n\t}\n\t\n\t\n\tfunction beginZoomingOut() {\n\t    THIS[ this.hash ].lastZoomTime = $.now();\n\t    THIS[ this.hash ].zoomFactor = 1.0 / this.zoomPerSecond;\n\t    THIS[ this.hash ].zooming = true;\n\t    scheduleZoom( this );\n\t}\n\t\n\t\n\tfunction endZooming() {\n\t    THIS[ this.hash ].zooming = false;\n\t}\n\t\n\t\n\tfunction scheduleZoom( viewer ) {\n\t    $.requestAnimationFrame( $.delegate( viewer, doZoom ) );\n\t}\n\t\n\t\n\tfunction doZoom() {\n\t    var currentTime,\n\t        deltaTime,\n\t        adjustedFactor;\n\t\n\t    if ( THIS[ this.hash ].zooming && this.viewport) {\n\t        currentTime     = $.now();\n\t        deltaTime       = currentTime - THIS[ this.hash ].lastZoomTime;\n\t        adjustedFactor  = Math.pow( THIS[ this.hash ].zoomFactor, deltaTime / 1000 );\n\t\n\t        this.viewport.zoomBy( adjustedFactor );\n\t        this.viewport.applyConstraints();\n\t        THIS[ this.hash ].lastZoomTime = currentTime;\n\t        scheduleZoom( this );\n\t    }\n\t}\n\t\n\t\n\tfunction doSingleZoomIn() {\n\t    if ( this.viewport ) {\n\t        THIS[ this.hash ].zooming = false;\n\t        this.viewport.zoomBy(\n\t            this.zoomPerClick / 1.0\n\t        );\n\t        this.viewport.applyConstraints();\n\t    }\n\t}\n\t\n\t\n\tfunction doSingleZoomOut() {\n\t    if ( this.viewport ) {\n\t        THIS[ this.hash ].zooming = false;\n\t        this.viewport.zoomBy(\n\t            1.0 / this.zoomPerClick\n\t        );\n\t        this.viewport.applyConstraints();\n\t    }\n\t}\n\t\n\t\n\tfunction lightUp() {\n\t    this.buttons.emulateEnter();\n\t    this.buttons.emulateExit();\n\t}\n\t\n\t\n\tfunction onHome() {\n\t    if ( this.viewport ) {\n\t        this.viewport.goHome();\n\t    }\n\t}\n\t\n\t\n\tfunction onFullScreen() {\n\t    if ( this.isFullPage() && !$.isFullScreen() ) {\n\t        // Is fullPage but not fullScreen\n\t        this.setFullPage( false );\n\t    } else {\n\t        this.setFullScreen( !this.isFullPage() );\n\t    }\n\t    // correct for no mouseout event on change\n\t    if ( this.buttons ) {\n\t        this.buttons.emulateExit();\n\t    }\n\t    this.fullPageButton.element.focus();\n\t    if ( this.viewport ) {\n\t        this.viewport.applyConstraints();\n\t    }\n\t}\n\t\n\t/**\n\t * Note: The current rotation feature is limited to 90 degree turns.\n\t */\n\tfunction onRotateLeft() {\n\t    if ( this.viewport ) {\n\t        var currRotation = this.viewport.getRotation();\n\t        if (currRotation === 0) {\n\t            currRotation = 270;\n\t        }\n\t        else {\n\t            currRotation -= 90;\n\t        }\n\t        this.viewport.setRotation(currRotation);\n\t    }\n\t}\n\t\n\t/**\n\t * Note: The current rotation feature is limited to 90 degree turns.\n\t */\n\tfunction onRotateRight() {\n\t    if ( this.viewport ) {\n\t        var currRotation = this.viewport.getRotation();\n\t        if (currRotation === 270) {\n\t            currRotation = 0;\n\t        }\n\t        else {\n\t            currRotation += 90;\n\t        }\n\t        this.viewport.setRotation(currRotation);\n\t    }\n\t}\n\t\n\t\n\tfunction onPrevious(){\n\t    var previous = this._sequenceIndex - 1;\n\t    if(this.navPrevNextWrap && previous < 0){\n\t        previous += this.tileSources.length;\n\t    }\n\t    this.goToPage( previous );\n\t}\n\t\n\t\n\tfunction onNext(){\n\t    var next = this._sequenceIndex + 1;\n\t    if(this.navPrevNextWrap && next >= this.tileSources.length){\n\t        next = 0;\n\t    }\n\t    this.goToPage( next );\n\t}\n\t\n\t\n\t}( OpenSeadragon ));\n\t\n\t/*\n\t * OpenSeadragon - Navigator\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function( $ ){\n\t\n\t/**\n\t * @class Navigator\n\t * @classdesc The Navigator provides a small view of the current image as fixed\n\t * while representing the viewport as a moving box serving as a frame\n\t * of reference in the larger viewport as to which portion of the image\n\t * is currently being examined.  The navigator's viewport can be interacted\n\t * with using the keyboard or the mouse.\n\t *\n\t * @memberof OpenSeadragon\n\t * @extends OpenSeadragon.Viewer\n\t * @extends OpenSeadragon.EventSource\n\t * @param {Object} options\n\t */\n\t$.Navigator = function( options ){\n\t\n\t    var viewer      = options.viewer,\n\t        _this = this,\n\t        viewerSize,\n\t        navigatorSize;\n\t\n\t    //We may need to create a new element and id if they did not\n\t    //provide the id for the existing element\n\t    if( !options.id ){\n\t        options.id              = 'navigator-' + $.now();\n\t        this.element            = $.makeNeutralElement( \"div\" );\n\t        options.controlOptions  = {\n\t            anchor:           $.ControlAnchor.TOP_RIGHT,\n\t            attachToViewer:   true,\n\t            autoFade:         options.autoFade\n\t        };\n\t\n\t        if( options.position ){\n\t            if( 'BOTTOM_RIGHT' == options.position ){\n\t               options.controlOptions.anchor = $.ControlAnchor.BOTTOM_RIGHT;\n\t            } else if( 'BOTTOM_LEFT' == options.position ){\n\t               options.controlOptions.anchor = $.ControlAnchor.BOTTOM_LEFT;\n\t            } else if( 'TOP_RIGHT' == options.position ){\n\t               options.controlOptions.anchor = $.ControlAnchor.TOP_RIGHT;\n\t            } else if( 'TOP_LEFT' == options.position ){\n\t               options.controlOptions.anchor = $.ControlAnchor.TOP_LEFT;\n\t            } else if( 'ABSOLUTE' == options.position ){\n\t               options.controlOptions.anchor = $.ControlAnchor.ABSOLUTE;\n\t               options.controlOptions.top = options.top;\n\t               options.controlOptions.left = options.left;\n\t               options.controlOptions.height = options.height;\n\t               options.controlOptions.width = options.width;\n\t            }\n\t        }\n\t\n\t    } else {\n\t        this.element            = document.getElementById( options.id );\n\t        options.controlOptions  = {\n\t            anchor:           $.ControlAnchor.NONE,\n\t            attachToViewer:   false,\n\t            autoFade:         false\n\t        };\n\t    }\n\t    this.element.id         = options.id;\n\t    this.element.className  += ' navigator';\n\t\n\t    options = $.extend( true, {\n\t        sizeRatio:     $.DEFAULT_SETTINGS.navigatorSizeRatio\n\t    }, options, {\n\t        element:                this.element,\n\t        tabIndex:               -1, // No keyboard navigation, omit from tab order\n\t        //These need to be overridden to prevent recursion since\n\t        //the navigator is a viewer and a viewer has a navigator\n\t        showNavigator:          false,\n\t        mouseNavEnabled:        false,\n\t        showNavigationControl:  false,\n\t        showSequenceControl:    false,\n\t        immediateRender:        true,\n\t        blendTime:              0,\n\t        animationTime:          0,\n\t        autoResize:             options.autoResize,\n\t        // prevent resizing the navigator from adding unwanted space around the image\n\t        minZoomImageRatio:      1.0\n\t    });\n\t\n\t    options.minPixelRatio = this.minPixelRatio = viewer.minPixelRatio;\n\t\n\t    $.setElementTouchActionNone( this.element );\n\t\n\t    this.borderWidth = 2;\n\t    //At some browser magnification levels the display regions lines up correctly, but at some there appears to\n\t    //be a one pixel gap.\n\t    this.fudge = new $.Point(1, 1);\n\t    this.totalBorderWidths = new $.Point(this.borderWidth*2, this.borderWidth*2).minus(this.fudge);\n\t\n\t\n\t    if ( options.controlOptions.anchor != $.ControlAnchor.NONE ) {\n\t        (function( style, borderWidth ){\n\t            style.margin        = '0px';\n\t            style.border        = borderWidth + 'px solid #555';\n\t            style.padding       = '0px';\n\t            style.background    = '#000';\n\t            style.opacity       = 0.8;\n\t            style.overflow      = 'hidden';\n\t        }( this.element.style, this.borderWidth));\n\t    }\n\t\n\t    this.displayRegion           = $.makeNeutralElement( \"div\" );\n\t    this.displayRegion.id        = this.element.id + '-displayregion';\n\t    this.displayRegion.className = 'displayregion';\n\t\n\t    (function( style, borderWidth ){\n\t        style.position      = 'relative';\n\t        style.top           = '0px';\n\t        style.left          = '0px';\n\t        style.fontSize      = '0px';\n\t        style.overflow      = 'hidden';\n\t        style.border        = borderWidth + 'px solid #900';\n\t        style.margin        = '0px';\n\t        style.padding       = '0px';\n\t        //TODO: IE doesnt like this property being set\n\t        //try{ style.outline  = '2px auto #909'; }catch(e){/*ignore*/}\n\t\n\t        style.background    = 'transparent';\n\t\n\t        // We use square bracket notation on the statement below, because float is a keyword.\n\t        // This is important for the Google Closure compiler, if nothing else.\n\t        /*jshint sub:true */\n\t        style['float']      = 'left'; //Webkit\n\t\n\t        style.cssFloat      = 'left'; //Firefox\n\t        style.styleFloat    = 'left'; //IE\n\t        style.zIndex        = 999999999;\n\t        style.cursor        = 'default';\n\t    }( this.displayRegion.style, this.borderWidth ));\n\t\n\t    this.displayRegionContainer = $.makeNeutralElement(\"div\");\n\t    this.displayRegionContainer.id = this.element.id + '-displayregioncontainer';\n\t    this.displayRegionContainer.className = \"displayregioncontainer\";\n\t    this.displayRegionContainer.style.width = \"100%\";\n\t    this.displayRegionContainer.style.height = \"100%\";\n\t\n\t    viewer.addControl(\n\t        this.element,\n\t        options.controlOptions\n\t    );\n\t\n\t    this._resizeWithViewer = options.controlOptions.anchor != $.ControlAnchor.ABSOLUTE &&\n\t        options.controlOptions.anchor != $.ControlAnchor.NONE;\n\t\n\t    if ( this._resizeWithViewer ) {\n\t        if ( options.width && options.height ) {\n\t            this.element.style.height = typeof ( options.height )  == \"number\" ? ( options.height + 'px' ) : options.height;\n\t            this.element.style.width  = typeof ( options.width )  == \"number\" ? ( options.width + 'px' ) : options.width;\n\t        } else {\n\t            viewerSize = $.getElementSize( viewer.element );\n\t            this.element.style.height = Math.round( viewerSize.y * options.sizeRatio ) + 'px';\n\t            this.element.style.width  = Math.round( viewerSize.x * options.sizeRatio ) + 'px';\n\t            this.oldViewerSize = viewerSize;\n\t        }\n\t        navigatorSize = $.getElementSize( this.element );\n\t        this.elementArea = navigatorSize.x * navigatorSize.y;\n\t    }\n\t\n\t    this.oldContainerSize = new $.Point( 0, 0 );\n\t\n\t    $.Viewer.apply( this, [ options ] );\n\t\n\t    this.displayRegionContainer.appendChild(this.displayRegion);\n\t    this.element.getElementsByTagName('div')[0].appendChild(this.displayRegionContainer);\n\t\n\t    function rotate(degrees) {\n\t        _setTransformRotate(_this.displayRegionContainer, degrees);\n\t        _setTransformRotate(_this.displayRegion, -degrees);\n\t        _this.viewport.setRotation(degrees);\n\t    }\n\t    if (options.navigatorRotate) {\n\t        var degrees = options.viewer.viewport ?\n\t            options.viewer.viewport.getRotation() :\n\t            options.viewer.degrees || 0;\n\t        rotate(degrees);\n\t        options.viewer.addHandler(\"rotate\", function (args) {\n\t            rotate(args.degrees);\n\t        });\n\t    }\n\t\n\t    // Remove the base class' (Viewer's) innerTracker and replace it with our own\n\t    this.innerTracker.destroy();\n\t    this.innerTracker = new $.MouseTracker({\n\t        element:         this.element,\n\t        dragHandler:     $.delegate( this, onCanvasDrag ),\n\t        clickHandler:    $.delegate( this, onCanvasClick ),\n\t        releaseHandler:  $.delegate( this, onCanvasRelease ),\n\t        scrollHandler:   $.delegate( this, onCanvasScroll )\n\t    });\n\t\n\t    this.addHandler(\"reset-size\", function() {\n\t        if (_this.viewport) {\n\t            _this.viewport.goHome(true);\n\t        }\n\t    });\n\t\n\t    viewer.world.addHandler(\"item-index-change\", function(event) {\n\t        var item = _this.world.getItemAt(event.previousIndex);\n\t        _this.world.setItemIndex(item, event.newIndex);\n\t    });\n\t\n\t    viewer.world.addHandler(\"remove-item\", function(event) {\n\t        var theirItem = event.item;\n\t        var myItem = _this._getMatchingItem(theirItem);\n\t        if (myItem) {\n\t            _this.world.removeItem(myItem);\n\t        }\n\t    });\n\t\n\t    this.update(viewer.viewport);\n\t};\n\t\n\t$.extend( $.Navigator.prototype, $.EventSource.prototype, $.Viewer.prototype, /** @lends OpenSeadragon.Navigator.prototype */{\n\t\n\t    /**\n\t     * Used to notify the navigator when its size has changed.\n\t     * Especially useful when {@link OpenSeadragon.Options}.navigatorAutoResize is set to false and the navigator is resizable.\n\t     * @function\n\t     */\n\t    updateSize: function () {\n\t        if ( this.viewport ) {\n\t            var containerSize = new $.Point(\n\t                    (this.container.clientWidth === 0 ? 1 : this.container.clientWidth),\n\t                    (this.container.clientHeight === 0 ? 1 : this.container.clientHeight)\n\t                );\n\t\n\t            if ( !containerSize.equals( this.oldContainerSize ) ) {\n\t                this.viewport.resize( containerSize, true );\n\t                this.viewport.goHome(true);\n\t                this.oldContainerSize = containerSize;\n\t                this.drawer.clear();\n\t                this.world.draw();\n\t            }\n\t        }\n\t    },\n\t\n\t    /**\n\t     * Used to update the navigator minimap's viewport rectangle when a change in the viewer's viewport occurs.\n\t     * @function\n\t     * @param {OpenSeadragon.Viewport} The viewport this navigator is tracking.\n\t     */\n\t    update: function( viewport ) {\n\t\n\t        var viewerSize,\n\t            newWidth,\n\t            newHeight,\n\t            bounds,\n\t            topleft,\n\t            bottomright;\n\t\n\t        viewerSize = $.getElementSize( this.viewer.element );\n\t        if ( this._resizeWithViewer && viewerSize.x && viewerSize.y && !viewerSize.equals( this.oldViewerSize ) ) {\n\t            this.oldViewerSize = viewerSize;\n\t\n\t            if ( this.maintainSizeRatio || !this.elementArea) {\n\t                newWidth  = viewerSize.x * this.sizeRatio;\n\t                newHeight = viewerSize.y * this.sizeRatio;\n\t            } else {\n\t                newWidth = Math.sqrt(this.elementArea * (viewerSize.x / viewerSize.y));\n\t                newHeight = this.elementArea / newWidth;\n\t            }\n\t\n\t            this.element.style.width  = Math.round( newWidth ) + 'px';\n\t            this.element.style.height = Math.round( newHeight ) + 'px';\n\t\n\t            if (!this.elementArea) {\n\t                this.elementArea = newWidth * newHeight;\n\t            }\n\t\n\t            this.updateSize();\n\t        }\n\t\n\t        if (viewport && this.viewport) {\n\t            bounds      = viewport.getBoundsNoRotate(true);\n\t            topleft     = this.viewport.pixelFromPointNoRotate(bounds.getTopLeft(), false);\n\t            bottomright = this.viewport.pixelFromPointNoRotate(bounds.getBottomRight(), false)\n\t                .minus( this.totalBorderWidths );\n\t\n\t            //update style for navigator-box\n\t            var style = this.displayRegion.style;\n\t            style.display = this.world.getItemCount() ? 'block' : 'none';\n\t\n\t            style.top    = Math.round( topleft.y ) + 'px';\n\t            style.left   = Math.round( topleft.x ) + 'px';\n\t\n\t            var width = Math.abs( topleft.x - bottomright.x );\n\t            var height = Math.abs( topleft.y - bottomright.y );\n\t            // make sure width and height are non-negative so IE doesn't throw\n\t            style.width  = Math.round( Math.max( width, 0 ) ) + 'px';\n\t            style.height = Math.round( Math.max( height, 0 ) ) + 'px';\n\t        }\n\t\n\t    },\n\t\n\t    // overrides Viewer.addTiledImage\n\t    addTiledImage: function(options) {\n\t        var _this = this;\n\t\n\t        var original = options.originalTiledImage;\n\t        delete options.original;\n\t\n\t        var optionsClone = $.extend({}, options, {\n\t            success: function(event) {\n\t                var myItem = event.item;\n\t                myItem._originalForNavigator = original;\n\t                _this._matchBounds(myItem, original, true);\n\t\n\t                original.addHandler('bounds-change', function() {\n\t                    _this._matchBounds(myItem, original);\n\t                });\n\t            }\n\t        });\n\t\n\t        return $.Viewer.prototype.addTiledImage.apply(this, [optionsClone]);\n\t    },\n\t\n\t    // private\n\t    _getMatchingItem: function(theirItem) {\n\t        var count = this.world.getItemCount();\n\t        var item;\n\t        for (var i = 0; i < count; i++) {\n\t            item = this.world.getItemAt(i);\n\t            if (item._originalForNavigator === theirItem) {\n\t                return item;\n\t            }\n\t        }\n\t\n\t        return null;\n\t    },\n\t\n\t    // private\n\t    _matchBounds: function(myItem, theirItem, immediately) {\n\t        var bounds = theirItem.getBounds();\n\t        myItem.setPosition(bounds.getTopLeft(), immediately);\n\t        myItem.setWidth(bounds.width, immediately);\n\t    }\n\t});\n\t\n\t/**\n\t * @private\n\t * @inner\n\t * @function\n\t */\n\tfunction onCanvasClick( event ) {\n\t    if ( event.quick && this.viewer.viewport ) {\n\t        this.viewer.viewport.panTo(this.viewport.pointFromPixel(event.position));\n\t        this.viewer.viewport.applyConstraints();\n\t    }\n\t}\n\t\n\t/**\n\t * @private\n\t * @inner\n\t * @function\n\t */\n\tfunction onCanvasDrag( event ) {\n\t    if ( this.viewer.viewport ) {\n\t        if( !this.panHorizontal ){\n\t            event.delta.x = 0;\n\t        }\n\t        if( !this.panVertical ){\n\t            event.delta.y = 0;\n\t        }\n\t        this.viewer.viewport.panBy(\n\t            this.viewport.deltaPointsFromPixels(\n\t                event.delta\n\t            )\n\t        );\n\t    }\n\t}\n\t\n\t\n\t/**\n\t * @private\n\t * @inner\n\t * @function\n\t */\n\tfunction onCanvasRelease( event ) {\n\t    if ( event.insideElementPressed && this.viewer.viewport ) {\n\t        this.viewer.viewport.applyConstraints();\n\t    }\n\t}\n\t\n\t\n\t/**\n\t * @private\n\t * @inner\n\t * @function\n\t */\n\tfunction onCanvasScroll( event ) {\n\t    /**\n\t     * Raised when a scroll event occurs on the {@link OpenSeadragon.Viewer#navigator} element (mouse wheel, touch pinch, etc.).\n\t     *\n\t     * @event navigator-scroll\n\t     * @memberof OpenSeadragon.Viewer\n\t     * @type {object}\n\t     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n\t     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n\t     * @property {Number} scroll - The scroll delta for the event.\n\t     * @property {Boolean} shift - True if the shift key was pressed during this event.\n\t     * @property {Object} originalEvent - The original DOM event.\n\t     * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t     */\n\t    this.viewer.raiseEvent( 'navigator-scroll', {\n\t        tracker: event.eventSource,\n\t        position: event.position,\n\t        scroll: event.scroll,\n\t        shift: event.shift,\n\t        originalEvent: event.originalEvent\n\t    });\n\t\n\t    //dont scroll the page up and down if the user is scrolling\n\t    //in the navigator\n\t    return false;\n\t}\n\t\n\t/**\n\t    * @function\n\t    * @private\n\t    * @param {Object} element\n\t    * @param {Number} degrees\n\t    */\n\tfunction _setTransformRotate (element, degrees) {\n\t    element.style.webkitTransform = \"rotate(\" + degrees + \"deg)\";\n\t    element.style.mozTransform = \"rotate(\" + degrees + \"deg)\";\n\t    element.style.msTransform = \"rotate(\" + degrees + \"deg)\";\n\t    element.style.oTransform = \"rotate(\" + degrees + \"deg)\";\n\t    element.style.transform = \"rotate(\" + degrees + \"deg)\";\n\t}\n\t\n\t}( OpenSeadragon ));\n\t\n\t/*\n\t * OpenSeadragon - getString/setString\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function( $ ){\n\t\n\t//TODO: I guess this is where the i18n needs to be reimplemented.  I'll look\n\t//      into existing patterns for i18n in javascript but i think that mimicking\n\t//      pythons gettext might be a reasonable approach.\n\tvar I18N = {\n\t    Errors: {\n\t        Dzc:            \"Sorry, we don't support Deep Zoom Collections!\",\n\t        Dzi:            \"Hmm, this doesn't appear to be a valid Deep Zoom Image.\",\n\t        Xml:            \"Hmm, this doesn't appear to be a valid Deep Zoom Image.\",\n\t        ImageFormat:    \"Sorry, we don't support {0}-based Deep Zoom Images.\",\n\t        Security:       \"It looks like a security restriction stopped us from \" +\n\t                        \"loading this Deep Zoom Image.\",\n\t        Status:         \"This space unintentionally left blank ({0} {1}).\",\n\t        OpenFailed:     \"Unable to open {0}: {1}\"\n\t    },\n\t\n\t    Tooltips: {\n\t        FullPage:       \"Toggle full page\",\n\t        Home:           \"Go home\",\n\t        ZoomIn:         \"Zoom in\",\n\t        ZoomOut:        \"Zoom out\",\n\t        NextPage:       \"Next page\",\n\t        PreviousPage:   \"Previous page\",\n\t        RotateLeft:     \"Rotate left\",\n\t        RotateRight:    \"Rotate right\"\n\t    }\n\t};\n\t\n\t$.extend( $, /** @lends OpenSeadragon */{\n\t\n\t    /**\n\t     * @function\n\t     * @param {String} property\n\t     */\n\t    getString: function( prop ) {\n\t\n\t        var props   = prop.split('.'),\n\t            string  = null,\n\t            args    = arguments,\n\t            container = I18N,\n\t            i;\n\t\n\t        for ( i = 0; i < props.length-1; i++ ) {\n\t            // in case not a subproperty\n\t            container = container[ props[ i ] ] || {};\n\t        }\n\t        string = container[ props[ i ] ];\n\t\n\t        if ( typeof( string ) != \"string\" ) {\n\t            $.console.debug( \"Untranslated source string:\", prop );\n\t            string = \"\"; // FIXME: this breaks gettext()-style convention, which would return source\n\t        }\n\t\n\t        return string.replace(/\\{\\d+\\}/g, function(capture) {\n\t            var i = parseInt( capture.match( /\\d+/ ), 10 ) + 1;\n\t            return i < args.length ?\n\t                args[ i ] :\n\t                \"\";\n\t        });\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @param {String} property\n\t     * @param {*} value\n\t     */\n\t    setString: function( prop, value ) {\n\t\n\t        var props     = prop.split('.'),\n\t            container = I18N,\n\t            i;\n\t\n\t        for ( i = 0; i < props.length - 1; i++ ) {\n\t            if ( !container[ props[ i ] ] ) {\n\t                container[ props[ i ] ] = {};\n\t            }\n\t            container = container[ props[ i ] ];\n\t        }\n\t\n\t        container[ props[ i ] ] = value;\n\t    }\n\t\n\t});\n\t\n\t}( OpenSeadragon ));\n\t\n\t/*\n\t * OpenSeadragon - Point\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function( $ ){\n\t\n\t/**\n\t * @class Point\n\t * @classdesc A Point is really used as a 2-dimensional vector, equally useful for\n\t * representing a point on a plane, or the height and width of a plane\n\t * not requiring any other frame of reference.\n\t *\n\t * @memberof OpenSeadragon\n\t * @param {Number} [x] The vector component 'x'. Defaults to the origin at 0.\n\t * @param {Number} [y] The vector component 'y'. Defaults to the origin at 0.\n\t */\n\t$.Point = function( x, y ) {\n\t    /**\n\t     * The vector component 'x'.\n\t     * @member {Number} x\n\t     * @memberof OpenSeadragon.Point#\n\t     */\n\t    this.x = typeof ( x ) == \"number\" ? x : 0;\n\t    /**\n\t     * The vector component 'y'.\n\t     * @member {Number} y\n\t     * @memberof OpenSeadragon.Point#\n\t     */\n\t    this.y = typeof ( y ) == \"number\" ? y : 0;\n\t};\n\t\n\t/** @lends OpenSeadragon.Point.prototype */\n\t$.Point.prototype = {\n\t    /**\n\t     * @function\n\t     * @returns {OpenSeadragon.Point} a duplicate of this Point\n\t     */\n\t    clone: function() {\n\t        return new $.Point(this.x, this.y);\n\t    },\n\t\n\t    /**\n\t     * Add another Point to this point and return a new Point.\n\t     * @function\n\t     * @param {OpenSeadragon.Point} point The point to add vector components.\n\t     * @returns {OpenSeadragon.Point} A new point representing the sum of the\n\t     *  vector components\n\t     */\n\t    plus: function( point ) {\n\t        return new $.Point(\n\t            this.x + point.x,\n\t            this.y + point.y\n\t        );\n\t    },\n\t\n\t    /**\n\t     * Substract another Point to this point and return a new Point.\n\t     * @function\n\t     * @param {OpenSeadragon.Point} point The point to substract vector components.\n\t     * @returns {OpenSeadragon.Point} A new point representing the substraction of the\n\t     *  vector components\n\t     */\n\t    minus: function( point ) {\n\t        return new $.Point(\n\t            this.x - point.x,\n\t            this.y - point.y\n\t        );\n\t    },\n\t\n\t    /**\n\t     * Multiply this point by a factor and return a new Point.\n\t     * @function\n\t     * @param {Number} factor The factor to multiply vector components.\n\t     * @returns {OpenSeadragon.Point} A new point representing the multiplication\n\t     *  of the vector components by the factor\n\t     */\n\t    times: function( factor ) {\n\t        return new $.Point(\n\t            this.x * factor,\n\t            this.y * factor\n\t        );\n\t    },\n\t\n\t    /**\n\t     * Divide this point by a factor and return a new Point.\n\t     * @function\n\t     * @param {Number} factor The factor to divide vector components.\n\t     * @returns {OpenSeadragon.Point} A new point representing the division of the\n\t     *  vector components by the factor\n\t     */\n\t    divide: function( factor ) {\n\t        return new $.Point(\n\t            this.x / factor,\n\t            this.y / factor\n\t        );\n\t    },\n\t\n\t    /**\n\t     * Compute the opposite of this point and return a new Point.\n\t     * @function\n\t     * @returns {OpenSeadragon.Point} A new point representing the opposite of the\n\t     *  vector components\n\t     */\n\t    negate: function() {\n\t        return new $.Point( -this.x, -this.y );\n\t    },\n\t\n\t    /**\n\t     * Compute the distance between this point and another point.\n\t     * @function\n\t     * @param {OpenSeadragon.Point} point The point to compute the distance with.\n\t     * @returns {Number} The distance between the 2 points\n\t     */\n\t    distanceTo: function( point ) {\n\t        return Math.sqrt(\n\t            Math.pow( this.x - point.x, 2 ) +\n\t            Math.pow( this.y - point.y, 2 )\n\t        );\n\t    },\n\t\n\t    /**\n\t     * Apply a function to each coordinate of this point and return a new point.\n\t     * @function\n\t     * @param {function} func The function to apply to each coordinate.\n\t     * @returns {OpenSeadragon.Point} A new point with the coordinates computed\n\t     * by the specified function\n\t     */\n\t    apply: function( func ) {\n\t        return new $.Point( func( this.x ), func( this.y ) );\n\t    },\n\t\n\t    /**\n\t     * Check if this point is equal to another one.\n\t     * @function\n\t     * @param {OpenSeadragon.Point} point The point to compare this point with.\n\t     * @returns {Boolean} true if they are equal, false otherwise.\n\t     */\n\t    equals: function( point ) {\n\t        return (\n\t            point instanceof $.Point\n\t        ) && (\n\t            this.x === point.x\n\t        ) && (\n\t            this.y === point.y\n\t        );\n\t    },\n\t\n\t    /**\n\t     * Rotates the point around the specified pivot\n\t     * From http://stackoverflow.com/questions/4465931/rotate-rectangle-around-a-point\n\t     * @function\n\t     * @param {Number} degress to rotate around the pivot.\n\t     * @param {OpenSeadragon.Point} [pivot=(0,0)] Point around which to rotate.\n\t     * Defaults to the origin.\n\t     * @returns {OpenSeadragon.Point}. A new point representing the point rotated around the specified pivot\n\t     */\n\t    rotate: function (degrees, pivot) {\n\t        pivot = pivot || new $.Point(0, 0);\n\t        var cos;\n\t        var sin;\n\t        // Avoid float computations when possible\n\t        if (degrees % 90 === 0) {\n\t            var d = degrees % 360;\n\t            if (d < 0) {\n\t                d += 360;\n\t            }\n\t            switch (d) {\n\t                case 0:\n\t                    cos = 1;\n\t                    sin = 0;\n\t                    break;\n\t                case 90:\n\t                    cos = 0;\n\t                    sin = 1;\n\t                    break;\n\t                case 180:\n\t                    cos = -1;\n\t                    sin = 0;\n\t                    break;\n\t                case 270:\n\t                    cos = 0;\n\t                    sin = -1;\n\t                    break;\n\t            }\n\t        } else {\n\t            var angle = degrees * Math.PI / 180.0;\n\t            cos = Math.cos(angle);\n\t            sin = Math.sin(angle);\n\t        }\n\t        var x = cos * (this.x - pivot.x) - sin * (this.y - pivot.y) + pivot.x;\n\t        var y = sin * (this.x - pivot.x) + cos * (this.y - pivot.y) + pivot.y;\n\t        return new $.Point(x, y);\n\t    },\n\t\n\t    /**\n\t     * Convert this point to a string in the format (x,y) where x and y are\n\t     * rounded to the nearest integer.\n\t     * @function\n\t     * @returns {String} A string representation of this point.\n\t     */\n\t    toString: function() {\n\t        return \"(\" + (Math.round(this.x * 100) / 100) + \",\" + (Math.round(this.y * 100) / 100) + \")\";\n\t    }\n\t};\n\t\n\t}( OpenSeadragon ));\n\t\n\t/*\n\t * OpenSeadragon - TileSource\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function( $ ){\n\t\n\t\n\t/**\n\t * @class TileSource\n\t * @classdesc The TileSource contains the most basic implementation required to create a\n\t * smooth transition between layers in an image pyramid. It has only a single key\n\t * interface that must be implemented to complete its key functionality:\n\t * 'getTileUrl'.  It also has several optional interfaces that can be\n\t * implemented if a new TileSource wishes to support configuration via a simple\n\t * object or array ('configure') and if the tile source supports or requires\n\t * configuration via retrieval of a document on the network ala AJAX or JSONP,\n\t * ('getImageInfo').\n\t * <br/>\n\t * By default the image pyramid is split into N layers where the image's longest\n\t * side in M (in pixels), where N is the smallest integer which satisfies\n\t *      <strong>2^(N+1) >= M</strong>.\n\t *\n\t * @memberof OpenSeadragon\n\t * @extends OpenSeadragon.EventSource\n\t * @param {Object} options\n\t *      You can either specify a URL, or literally define the TileSource (by specifying\n\t *      width, height, tileSize, tileOverlap, minLevel, and maxLevel). For the former,\n\t *      the extending class is expected to implement 'getImageInfo' and 'configure'.\n\t *      For the latter, the construction is assumed to occur through\n\t *      the extending classes implementation of 'configure'.\n\t * @param {String} [options.url]\n\t *      The URL for the data necessary for this TileSource.\n\t * @param {Function} [options.success]\n\t *      A function to be called upon successful creation.\n\t * @param {Boolean} [options.ajaxWithCredentials]\n\t *      If this TileSource needs to make an AJAX call, this specifies whether to set\n\t *      the XHR's withCredentials (for accessing secure data).\n\t * @param {Number} [options.width]\n\t *      Width of the source image at max resolution in pixels.\n\t * @param {Number} [options.height]\n\t *      Height of the source image at max resolution in pixels.\n\t * @param {Number} [options.tileSize]\n\t *      The size of the tiles to assumed to make up each pyramid layer in pixels.\n\t *      Tile size determines the point at which the image pyramid must be\n\t *      divided into a matrix of smaller images.\n\t *      Use options.tileWidth and options.tileHeight to support non-square tiles.\n\t * @param {Number} [options.tileWidth]\n\t *      The width of the tiles to assumed to make up each pyramid layer in pixels.\n\t * @param {Number} [options.tileHeight]\n\t *      The height of the tiles to assumed to make up each pyramid layer in pixels.\n\t * @param {Number} [options.tileOverlap]\n\t *      The number of pixels each tile is expected to overlap touching tiles.\n\t * @param {Number} [options.minLevel]\n\t *      The minimum level to attempt to load.\n\t * @param {Number} [options.maxLevel]\n\t *      The maximum level to attempt to load.\n\t */\n\t$.TileSource = function( width, height, tileSize, tileOverlap, minLevel, maxLevel ) {\n\t    var _this = this;\n\t\n\t    var args = arguments,\n\t        options,\n\t        i;\n\t\n\t    if( $.isPlainObject( width ) ){\n\t        options = width;\n\t    }else{\n\t        options = {\n\t            width: args[0],\n\t            height: args[1],\n\t            tileSize: args[2],\n\t            tileOverlap: args[3],\n\t            minLevel: args[4],\n\t            maxLevel: args[5]\n\t        };\n\t    }\n\t\n\t    //Tile sources supply some events, namely 'ready' when they must be configured\n\t    //by asynchronously fetching their configuration data.\n\t    $.EventSource.call( this );\n\t\n\t    //we allow options to override anything we dont treat as\n\t    //required via idiomatic options or which is functionally\n\t    //set depending on the state of the readiness of this tile\n\t    //source\n\t    $.extend( true, this, options );\n\t\n\t    if (!this.success) {\n\t        //Any functions that are passed as arguments are bound to the ready callback\n\t        for ( i = 0; i < arguments.length; i++ ) {\n\t            if ( $.isFunction( arguments[ i ] ) ) {\n\t                this.success = arguments[ i ];\n\t                //only one callback per constructor\n\t                break;\n\t            }\n\t        }\n\t    }\n\t\n\t    if (this.success) {\n\t        this.addHandler( 'ready', function ( event ) {\n\t            _this.success( event );\n\t        } );\n\t    }\n\t\n\t    /**\n\t     * Ratio of width to height\n\t     * @member {Number} aspectRatio\n\t     * @memberof OpenSeadragon.TileSource#\n\t     */\n\t    /**\n\t     * Vector storing x and y dimensions ( width and height respectively ).\n\t     * @member {OpenSeadragon.Point} dimensions\n\t     * @memberof OpenSeadragon.TileSource#\n\t     */\n\t    /**\n\t     * The overlap in pixels each tile shares with its adjacent neighbors.\n\t     * @member {Number} tileOverlap\n\t     * @memberof OpenSeadragon.TileSource#\n\t     */\n\t    /**\n\t     * The minimum pyramid level this tile source supports or should attempt to load.\n\t     * @member {Number} minLevel\n\t     * @memberof OpenSeadragon.TileSource#\n\t     */\n\t    /**\n\t     * The maximum pyramid level this tile source supports or should attempt to load.\n\t     * @member {Number} maxLevel\n\t     * @memberof OpenSeadragon.TileSource#\n\t     */\n\t    /**\n\t     *\n\t     * @member {Boolean} ready\n\t     * @memberof OpenSeadragon.TileSource#\n\t     */\n\t\n\t    if( 'string' == $.type( arguments[ 0 ] ) ){\n\t        this.url = arguments[0];\n\t    }\n\t\n\t    if (this.url) {\n\t        //in case the getImageInfo method is overriden and/or implies an\n\t        //async mechanism set some safe defaults first\n\t        this.aspectRatio = 1;\n\t        this.dimensions  = new $.Point( 10, 10 );\n\t        this._tileWidth  = 0;\n\t        this._tileHeight = 0;\n\t        this.tileOverlap = 0;\n\t        this.minLevel    = 0;\n\t        this.maxLevel    = 0;\n\t        this.ready       = false;\n\t        //configuration via url implies the extending class\n\t        //implements and 'configure'\n\t        this.getImageInfo( this.url );\n\t\n\t    } else {\n\t\n\t        //explicit configuration via positional args in constructor\n\t        //or the more idiomatic 'options' object\n\t        this.ready       = true;\n\t        this.aspectRatio = ( options.width && options.height ) ?\n\t            (  options.width / options.height ) : 1;\n\t        this.dimensions  = new $.Point( options.width, options.height );\n\t\n\t        if ( this.tileSize ){\n\t            this._tileWidth = this._tileHeight = this.tileSize;\n\t            delete this.tileSize;\n\t        } else {\n\t            if( this.tileWidth ){\n\t                // We were passed tileWidth in options, but we want to rename it\n\t                // with a leading underscore to make clear that it is not safe to directly modify it\n\t                this._tileWidth = this.tileWidth;\n\t                delete this.tileWidth;\n\t            } else {\n\t                this._tileWidth = 0;\n\t            }\n\t\n\t            if( this.tileHeight ){\n\t                // See note above about renaming this.tileWidth\n\t                this._tileHeight = this.tileHeight;\n\t                delete this.tileHeight;\n\t            } else {\n\t                this._tileHeight = 0;\n\t            }\n\t        }\n\t\n\t        this.tileOverlap = options.tileOverlap ? options.tileOverlap : 0;\n\t        this.minLevel    = options.minLevel ? options.minLevel : 0;\n\t        this.maxLevel    = ( undefined !== options.maxLevel && null !== options.maxLevel ) ?\n\t            options.maxLevel : (\n\t                ( options.width && options.height ) ? Math.ceil(\n\t                    Math.log( Math.max( options.width, options.height ) ) /\n\t                    Math.log( 2 )\n\t                ) : 0\n\t            );\n\t        if( this.success && $.isFunction( this.success ) ){\n\t            this.success( this );\n\t        }\n\t    }\n\t\n\t\n\t};\n\t\n\t/** @lends OpenSeadragon.TileSource.prototype */\n\t$.TileSource.prototype = {\n\t\n\t    getTileSize: function( level ) {\n\t        $.console.error(\n\t            \"[TileSource.getTileSize] is deprecated.\" +\n\t            \"Use TileSource.getTileWidth() and TileSource.getTileHeight() instead\"\n\t        );\n\t        return this._tileWidth;\n\t    },\n\t\n\t    /**\n\t     * Return the tileWidth for a given level.\n\t     * Subclasses should override this if tileWidth can be different at different levels\n\t     *   such as in IIIFTileSource.  Code should use this function rather than reading\n\t     *   from ._tileWidth directly.\n\t     * @function\n\t     * @param {Number} level\n\t     */\n\t    getTileWidth: function( level ) {\n\t        if (!this._tileWidth) {\n\t            return this.getTileSize(level);\n\t        }\n\t        return this._tileWidth;\n\t    },\n\t\n\t    /**\n\t     * Return the tileHeight for a given level.\n\t     * Subclasses should override this if tileHeight can be different at different levels\n\t     *   such as in IIIFTileSource.  Code should use this function rather than reading\n\t     *   from ._tileHeight directly.\n\t     * @function\n\t     * @param {Number} level\n\t     */\n\t    getTileHeight: function( level ) {\n\t        if (!this._tileHeight) {\n\t            return this.getTileSize(level);\n\t        }\n\t        return this._tileHeight;\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @param {Number} level\n\t     */\n\t    getLevelScale: function( level ) {\n\t\n\t        // see https://github.com/openseadragon/openseadragon/issues/22\n\t        // we use the tilesources implementation of getLevelScale to generate\n\t        // a memoized re-implementation\n\t        var levelScaleCache = {},\n\t            i;\n\t        for( i = 0; i <= this.maxLevel; i++ ){\n\t            levelScaleCache[ i ] = 1 / Math.pow(2, this.maxLevel - i);\n\t        }\n\t        this.getLevelScale = function( _level ){\n\t            return levelScaleCache[ _level ];\n\t        };\n\t        return this.getLevelScale( level );\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @param {Number} level\n\t     */\n\t    getNumTiles: function( level ) {\n\t        var scale = this.getLevelScale( level ),\n\t            x = Math.ceil( scale * this.dimensions.x / this.getTileWidth(level) ),\n\t            y = Math.ceil( scale * this.dimensions.y / this.getTileHeight(level) );\n\t\n\t        return new $.Point( x, y );\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @param {Number} level\n\t     */\n\t    getPixelRatio: function( level ) {\n\t        var imageSizeScaled = this.dimensions.times( this.getLevelScale( level ) ),\n\t            rx = 1.0 / imageSizeScaled.x,\n\t            ry = 1.0 / imageSizeScaled.y;\n\t\n\t        return new $.Point(rx, ry);\n\t    },\n\t\n\t\n\t    /**\n\t     * @function\n\t     * @param {Number} level\n\t     */\n\t    getClosestLevel: function( rect ) {\n\t        var i,\n\t            tilesPerSide,\n\t            tiles;\n\t\n\t        for( i = this.minLevel; i < this.maxLevel; i++ ){\n\t            tiles = this.getNumTiles( i );\n\t            tilesPerSide = new $.Point(\n\t              Math.floor( rect.x / this.getTileWidth(i) ),\n\t              Math.floor( rect.y / this.getTileHeight(i) )\n\t            );\n\t\n\t            if( tiles.x + 1 >= tilesPerSide.x && tiles.y + 1 >= tilesPerSide.y ){\n\t                break;\n\t            }\n\t        }\n\t        return Math.max( 0, i - 1 );\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @param {Number} level\n\t     * @param {OpenSeadragon.Point} point\n\t     */\n\t    getTileAtPoint: function( level, point ) {\n\t        var pixel = point.times( this.dimensions.x ).times( this.getLevelScale(level) ),\n\t            tx = Math.floor( pixel.x / this.getTileWidth(level) ),\n\t            ty = Math.floor( pixel.y / this.getTileHeight(level) );\n\t\n\t        return new $.Point( tx, ty );\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @param {Number} level\n\t     * @param {Number} x\n\t     * @param {Number} y\n\t     */\n\t    getTileBounds: function( level, x, y ) {\n\t        var dimensionsScaled = this.dimensions.times( this.getLevelScale( level ) ),\n\t            tileWidth = this.getTileWidth(level),\n\t            tileHeight = this.getTileHeight(level),\n\t            px = ( x === 0 ) ? 0 : tileWidth * x - this.tileOverlap,\n\t            py = ( y === 0 ) ? 0 : tileHeight * y - this.tileOverlap,\n\t            sx = tileWidth + ( x === 0 ? 1 : 2 ) * this.tileOverlap,\n\t            sy = tileHeight + ( y === 0 ? 1 : 2 ) * this.tileOverlap,\n\t            scale = 1.0 / dimensionsScaled.x;\n\t\n\t        sx = Math.min( sx, dimensionsScaled.x - px );\n\t        sy = Math.min( sy, dimensionsScaled.y - py );\n\t\n\t        return new $.Rect( px * scale, py * scale, sx * scale, sy * scale );\n\t    },\n\t\n\t\n\t    /**\n\t     * Responsible for retrieving, and caching the\n\t     * image metadata pertinent to this TileSources implementation.\n\t     * @function\n\t     * @param {String} url\n\t     * @throws {Error}\n\t     */\n\t    getImageInfo: function( url ) {\n\t        var _this = this,\n\t            callbackName,\n\t            callback,\n\t            readySource,\n\t            options,\n\t            urlParts,\n\t            filename,\n\t            lastDot;\n\t\n\t\n\t        if( url ) {\n\t            urlParts = url.split( '/' );\n\t            filename = urlParts[ urlParts.length - 1 ];\n\t            lastDot  = filename.lastIndexOf( '.' );\n\t            if ( lastDot > -1 ) {\n\t                urlParts[ urlParts.length - 1 ] = filename.slice( 0, lastDot );\n\t            }\n\t        }\n\t\n\t        callback = function( data ){\n\t            if( typeof(data) === \"string\" ) {\n\t                data = $.parseXml( data );\n\t            }\n\t            var $TileSource = $.TileSource.determineType( _this, data, url );\n\t            if ( !$TileSource ) {\n\t                /**\n\t                 * Raised when an error occurs loading a TileSource.\n\t                 *\n\t                 * @event open-failed\n\t                 * @memberof OpenSeadragon.TileSource\n\t                 * @type {object}\n\t                 * @property {OpenSeadragon.TileSource} eventSource - A reference to the TileSource which raised the event.\n\t                 * @property {String} message\n\t                 * @property {String} source\n\t                 * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t                 */\n\t                _this.raiseEvent( 'open-failed', { message: \"Unable to load TileSource\", source: url } );\n\t                return;\n\t            }\n\t\n\t            options = $TileSource.prototype.configure.apply( _this, [ data, url ]);\n\t            if (options.ajaxWithCredentials === undefined) {\n\t                options.ajaxWithCredentials = _this.ajaxWithCredentials;\n\t            }\n\t\n\t            readySource = new $TileSource( options );\n\t            _this.ready = true;\n\t            /**\n\t             * Raised when a TileSource is opened and initialized.\n\t             *\n\t             * @event ready\n\t             * @memberof OpenSeadragon.TileSource\n\t             * @type {object}\n\t             * @property {OpenSeadragon.TileSource} eventSource - A reference to the TileSource which raised the event.\n\t             * @property {Object} tileSource\n\t             * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t             */\n\t            _this.raiseEvent( 'ready', { tileSource: readySource } );\n\t        };\n\t\n\t        if( url.match(/\\.js$/) ){\n\t            //TODO: Its not very flexible to require tile sources to end jsonp\n\t            //      request for info  with a url that ends with '.js' but for\n\t            //      now it's the only way I see to distinguish uniformly.\n\t            callbackName = url.split( '/' ).pop().replace('.js','');\n\t            $.jsonp({\n\t                url: url,\n\t                async: false,\n\t                callbackName: callbackName,\n\t                callback: callback\n\t            });\n\t        } else {\n\t            // request info via xhr asynchronously.\n\t            $.makeAjaxRequest( {\n\t                url: url,\n\t                withCredentials: this.ajaxWithCredentials,\n\t                success: function( xhr ) {\n\t                    var data = processResponse( xhr );\n\t                    callback( data );\n\t                },\n\t                error: function ( xhr, exc ) {\n\t                    var msg;\n\t\n\t                    /*\n\t                        IE < 10 will block XHR requests to different origins. Any property access on the request\n\t                        object will raise an exception which we'll attempt to handle by formatting the original\n\t                        exception rather than the second one raised when we try to access xhr.status\n\t                     */\n\t                    try {\n\t                        msg = \"HTTP \" + xhr.status + \" attempting to load TileSource\";\n\t                    } catch ( e ) {\n\t                        var formattedExc;\n\t                        if ( typeof( exc ) == \"undefined\" || !exc.toString ) {\n\t                            formattedExc = \"Unknown error\";\n\t                        } else {\n\t                            formattedExc = exc.toString();\n\t                        }\n\t\n\t                        msg = formattedExc + \" attempting to load TileSource\";\n\t                    }\n\t\n\t                    /***\n\t                     * Raised when an error occurs loading a TileSource.\n\t                     *\n\t                     * @event open-failed\n\t                     * @memberof OpenSeadragon.TileSource\n\t                     * @type {object}\n\t                     * @property {OpenSeadragon.TileSource} eventSource - A reference to the TileSource which raised the event.\n\t                     * @property {String} message\n\t                     * @property {String} source\n\t                     * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t                     */\n\t                    _this.raiseEvent( 'open-failed', {\n\t                        message: msg,\n\t                        source: url\n\t                    });\n\t                }\n\t            });\n\t        }\n\t\n\t    },\n\t\n\t    /**\n\t     * Responsible determining if a the particular TileSource supports the\n\t     * data format ( and allowed to apply logic against the url the data was\n\t     * loaded from, if any ). Overriding implementations are expected to do\n\t     * something smart with data and / or url to determine support.  Also\n\t     * understand that iteration order of TileSources is not guarunteed so\n\t     * please make sure your data or url is expressive enough to ensure a simple\n\t     * and sufficient mechanisim for clear determination.\n\t     * @function\n\t     * @param {String|Object|Array|Document} data\n\t     * @param {String} url - the url the data was loaded\n\t     *      from if any.\n\t     * @return {Boolean}\n\t     */\n\t    supports: function( data, url ) {\n\t        return false;\n\t    },\n\t\n\t    /**\n\t     * Responsible for parsing and configuring the\n\t     * image metadata pertinent to this TileSources implementation.\n\t     * This method is not implemented by this class other than to throw an Error\n\t     * announcing you have to implement it.  Because of the variety of tile\n\t     * server technologies, and various specifications for building image\n\t     * pyramids, this method is here to allow easy integration.\n\t     * @function\n\t     * @param {String|Object|Array|Document} data\n\t     * @param {String} url - the url the data was loaded\n\t     *      from if any.\n\t     * @return {Object} options - A dictionary of keyword arguments sufficient\n\t     *      to configure this tile sources constructor.\n\t     * @throws {Error}\n\t     */\n\t    configure: function( data, url ) {\n\t        throw new Error( \"Method not implemented.\" );\n\t    },\n\t\n\t    /**\n\t     * Responsible for retriving the url which will return an image for the\n\t     * region specified by the given x, y, and level components.\n\t     * This method is not implemented by this class other than to throw an Error\n\t     * announcing you have to implement it.  Because of the variety of tile\n\t     * server technologies, and various specifications for building image\n\t     * pyramids, this method is here to allow easy integration.\n\t     * @function\n\t     * @param {Number} level\n\t     * @param {Number} x\n\t     * @param {Number} y\n\t     * @throws {Error}\n\t     */\n\t    getTileUrl: function( level, x, y ) {\n\t        throw new Error( \"Method not implemented.\" );\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @param {Number} level\n\t     * @param {Number} x\n\t     * @param {Number} y\n\t     */\n\t    tileExists: function( level, x, y ) {\n\t        var numTiles = this.getNumTiles( level );\n\t        return  level >= this.minLevel &&\n\t                level <= this.maxLevel &&\n\t                x >= 0 &&\n\t                y >= 0 &&\n\t                x < numTiles.x &&\n\t                y < numTiles.y;\n\t    }\n\t};\n\t\n\t\n\t$.extend( true, $.TileSource.prototype, $.EventSource.prototype );\n\t\n\t\n\t/**\n\t * Decides whether to try to process the response as xml, json, or hand back\n\t * the text\n\t * @private\n\t * @inner\n\t * @function\n\t * @param {XMLHttpRequest} xhr - the completed network request\n\t */\n\tfunction processResponse( xhr ){\n\t    var responseText = xhr.responseText,\n\t        status       = xhr.status,\n\t        statusText,\n\t        data;\n\t\n\t    if ( !xhr ) {\n\t        throw new Error( $.getString( \"Errors.Security\" ) );\n\t    } else if ( xhr.status !== 200 && xhr.status !== 0 ) {\n\t        status     = xhr.status;\n\t        statusText = ( status == 404 ) ?\n\t            \"Not Found\" :\n\t            xhr.statusText;\n\t        throw new Error( $.getString( \"Errors.Status\", status, statusText ) );\n\t    }\n\t\n\t    if( responseText.match(/\\s*<.*/) ){\n\t        try{\n\t        data = ( xhr.responseXML && xhr.responseXML.documentElement ) ?\n\t            xhr.responseXML :\n\t            $.parseXml( responseText );\n\t        } catch (e){\n\t            data = xhr.responseText;\n\t        }\n\t    }else if( responseText.match(/\\s*[\\{\\[].*/) ){\n\t        data = $.parseJSON(responseText);\n\t    }else{\n\t        data = responseText;\n\t    }\n\t    return data;\n\t}\n\t\n\t\n\t/**\n\t * Determines the TileSource Implementation by introspection of OpenSeadragon\n\t * namespace, calling each TileSource implementation of 'isType'\n\t * @private\n\t * @inner\n\t * @function\n\t * @param {Object|Array|Document} data - the tile source configuration object\n\t * @param {String} url - the url where the tile source configuration object was\n\t *      loaded from, if any.\n\t */\n\t$.TileSource.determineType = function( tileSource, data, url ){\n\t    var property;\n\t    for( property in OpenSeadragon ){\n\t        if( property.match(/.+TileSource$/) &&\n\t            $.isFunction( OpenSeadragon[ property ] ) &&\n\t            $.isFunction( OpenSeadragon[ property ].prototype.supports ) &&\n\t            OpenSeadragon[ property ].prototype.supports.call( tileSource, data, url )\n\t        ){\n\t            return OpenSeadragon[ property ];\n\t        }\n\t    }\n\t\n\t    $.console.error( \"No TileSource was able to open %s %s\", url, data );\n\t};\n\t\n\t\n\t}( OpenSeadragon ));\n\t\n\t/*\n\t * OpenSeadragon - DziTileSource\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function( $ ){\n\t\n\t/**\n\t * @class DziTileSource\n\t * @memberof OpenSeadragon\n\t * @extends OpenSeadragon.TileSource\n\t * @param {Number|Object} width - the pixel width of the image or the idiomatic\n\t *      options object which is used instead of positional arguments.\n\t * @param {Number} height\n\t * @param {Number} tileSize\n\t * @param {Number} tileOverlap\n\t * @param {String} tilesUrl\n\t * @param {String} fileFormat\n\t * @param {OpenSeadragon.DisplayRect[]} displayRects\n\t * @property {String} tilesUrl\n\t * @property {String} fileFormat\n\t * @property {OpenSeadragon.DisplayRect[]} displayRects\n\t */\n\t$.DziTileSource = function( width, height, tileSize, tileOverlap, tilesUrl, fileFormat, displayRects, minLevel, maxLevel ) {\n\t    var i,\n\t        rect,\n\t        level,\n\t        options;\n\t\n\t    if( $.isPlainObject( width ) ){\n\t        options = width;\n\t    }else{\n\t        options = {\n\t            width: arguments[ 0 ],\n\t            height: arguments[ 1 ],\n\t            tileSize: arguments[ 2 ],\n\t            tileOverlap: arguments[ 3 ],\n\t            tilesUrl: arguments[ 4 ],\n\t            fileFormat: arguments[ 5 ],\n\t            displayRects: arguments[ 6 ],\n\t            minLevel: arguments[ 7 ],\n\t            maxLevel: arguments[ 8 ]\n\t        };\n\t    }\n\t\n\t    this._levelRects  = {};\n\t    this.tilesUrl     = options.tilesUrl;\n\t    this.fileFormat   = options.fileFormat;\n\t    this.displayRects = options.displayRects;\n\t\n\t    if ( this.displayRects ) {\n\t        for ( i = this.displayRects.length - 1; i >= 0; i-- ) {\n\t            rect = this.displayRects[ i ];\n\t            for ( level = rect.minLevel; level <= rect.maxLevel; level++ ) {\n\t                if ( !this._levelRects[ level ] ) {\n\t                    this._levelRects[ level ] = [];\n\t                }\n\t                this._levelRects[ level ].push( rect );\n\t            }\n\t        }\n\t    }\n\t\n\t    $.TileSource.apply( this, [ options ] );\n\t\n\t};\n\t\n\t$.extend( $.DziTileSource.prototype, $.TileSource.prototype, /** @lends OpenSeadragon.DziTileSource.prototype */{\n\t\n\t\n\t    /**\n\t     * Determine if the data and/or url imply the image service is supported by\n\t     * this tile source.\n\t     * @function\n\t     * @param {Object|Array} data\n\t     * @param {String} optional - url\n\t     */\n\t    supports: function( data, url ){\n\t        var ns;\n\t        if ( data.Image ) {\n\t            ns = data.Image.xmlns;\n\t        } else if ( data.documentElement) {\n\t            if (\"Image\" == data.documentElement.localName || \"Image\" == data.documentElement.tagName) {\n\t                ns = data.documentElement.namespaceURI;\n\t            }\n\t        }\n\t\n\t        return ( \"http://schemas.microsoft.com/deepzoom/2008\" == ns ||\n\t            \"http://schemas.microsoft.com/deepzoom/2009\" == ns );\n\t    },\n\t\n\t    /**\n\t     *\n\t     * @function\n\t     * @param {Object|XMLDocument} data - the raw configuration\n\t     * @param {String} url - the url the data was retreived from if any.\n\t     * @return {Object} options - A dictionary of keyword arguments sufficient\n\t     *      to configure this tile sources constructor.\n\t     */\n\t    configure: function( data, url ){\n\t\n\t        var options;\n\t\n\t        if( !$.isPlainObject(data) ){\n\t\n\t            options = configureFromXML( this, data );\n\t\n\t        }else{\n\t\n\t            options = configureFromObject( this, data );\n\t        }\n\t\n\t        if (url && !options.tilesUrl) {\n\t            options.tilesUrl = url.replace(\n\t                    /([^\\/]+?)(\\.(dzi|xml|js))?\\/?(\\?.*)?$/, '$1_files/');\n\t\n\t            if (url.search(/\\.(dzi|xml|js)\\?/) != -1) {\n\t                options.queryParams = url.match(/\\?.*/);\n\t            }else{\n\t                options.queryParams = '';\n\t            }\n\t        }\n\t\n\t        return options;\n\t    },\n\t\n\t\n\t    /**\n\t     * @function\n\t     * @param {Number} level\n\t     * @param {Number} x\n\t     * @param {Number} y\n\t     */\n\t    getTileUrl: function( level, x, y ) {\n\t        return [ this.tilesUrl, level, '/', x, '_', y, '.', this.fileFormat, this.queryParams ].join( '' );\n\t    },\n\t\n\t\n\t    /**\n\t     * @function\n\t     * @param {Number} level\n\t     * @param {Number} x\n\t     * @param {Number} y\n\t     */\n\t    tileExists: function( level, x, y ) {\n\t        var rects = this._levelRects[ level ],\n\t            rect,\n\t            scale,\n\t            xMin,\n\t            yMin,\n\t            xMax,\n\t            yMax,\n\t            i;\n\t\n\t        if ( !rects || !rects.length ) {\n\t            return true;\n\t        }\n\t\n\t        for ( i = rects.length - 1; i >= 0; i-- ) {\n\t            rect = rects[ i ];\n\t\n\t            if ( level < rect.minLevel || level > rect.maxLevel ) {\n\t                continue;\n\t            }\n\t\n\t            scale = this.getLevelScale( level );\n\t            xMin = rect.x * scale;\n\t            yMin = rect.y * scale;\n\t            xMax = xMin + rect.width * scale;\n\t            yMax = yMin + rect.height * scale;\n\t\n\t            xMin = Math.floor( xMin / this.tileSize );\n\t            yMin = Math.floor( yMin / this.tileSize );\n\t            xMax = Math.ceil( xMax / this.tileSize );\n\t            yMax = Math.ceil( yMax / this.tileSize );\n\t\n\t            if ( xMin <= x && x < xMax && yMin <= y && y < yMax ) {\n\t                return true;\n\t            }\n\t        }\n\t\n\t        return false;\n\t    }\n\t});\n\t\n\t\n\t/**\n\t * @private\n\t * @inner\n\t * @function\n\t */\n\tfunction configureFromXML( tileSource, xmlDoc ){\n\t\n\t    if ( !xmlDoc || !xmlDoc.documentElement ) {\n\t        throw new Error( $.getString( \"Errors.Xml\" ) );\n\t    }\n\t\n\t    var root           = xmlDoc.documentElement,\n\t        rootName       = root.localName || root.tagName,\n\t        ns             = xmlDoc.documentElement.namespaceURI,\n\t        configuration  = null,\n\t        displayRects   = [],\n\t        dispRectNodes,\n\t        dispRectNode,\n\t        rectNode,\n\t        sizeNode,\n\t        i;\n\t\n\t    if ( rootName == \"Image\" ) {\n\t\n\t        try {\n\t            sizeNode = root.getElementsByTagName(\"Size\" )[ 0 ];\n\t            if (sizeNode === undefined) {\n\t                sizeNode = root.getElementsByTagNameNS(ns, \"Size\" )[ 0 ];\n\t            }\n\t\n\t            configuration = {\n\t                Image: {\n\t                    xmlns:       \"http://schemas.microsoft.com/deepzoom/2008\",\n\t                    Url:         root.getAttribute( \"Url\" ),\n\t                    Format:      root.getAttribute( \"Format\" ),\n\t                    DisplayRect: null,\n\t                    Overlap:     parseInt( root.getAttribute( \"Overlap\" ), 10 ),\n\t                    TileSize:    parseInt( root.getAttribute( \"TileSize\" ), 10 ),\n\t                    Size: {\n\t                        Height: parseInt( sizeNode.getAttribute( \"Height\" ), 10 ),\n\t                        Width:  parseInt( sizeNode.getAttribute( \"Width\" ), 10 )\n\t                    }\n\t                }\n\t            };\n\t\n\t            if ( !$.imageFormatSupported( configuration.Image.Format ) ) {\n\t                throw new Error(\n\t                    $.getString( \"Errors.ImageFormat\", configuration.Image.Format.toUpperCase() )\n\t                );\n\t            }\n\t\n\t            dispRectNodes = root.getElementsByTagName(\"DisplayRect\" );\n\t            if (dispRectNodes === undefined) {\n\t                dispRectNodes = root.getElementsByTagNameNS(ns, \"DisplayRect\" )[ 0 ];\n\t            }\n\t\n\t            for ( i = 0; i < dispRectNodes.length; i++ ) {\n\t                dispRectNode = dispRectNodes[ i ];\n\t                rectNode     = dispRectNode.getElementsByTagName(\"Rect\" )[ 0 ];\n\t                if (rectNode === undefined) {\n\t                    rectNode = dispRectNode.getElementsByTagNameNS(ns, \"Rect\" )[ 0 ];\n\t                }\n\t\n\t                displayRects.push({\n\t                    Rect: {\n\t                        X: parseInt( rectNode.getAttribute( \"X\" ), 10 ),\n\t                        Y: parseInt( rectNode.getAttribute( \"Y\" ), 10 ),\n\t                        Width: parseInt( rectNode.getAttribute( \"Width\" ), 10 ),\n\t                        Height: parseInt( rectNode.getAttribute( \"Height\" ), 10 ),\n\t                        MinLevel: parseInt( dispRectNode.getAttribute( \"MinLevel\" ), 10 ),\n\t                        MaxLevel: parseInt( dispRectNode.getAttribute( \"MaxLevel\" ), 10 )\n\t                    }\n\t                });\n\t            }\n\t\n\t            if( displayRects.length ){\n\t                configuration.Image.DisplayRect = displayRects;\n\t            }\n\t\n\t            return configureFromObject( tileSource, configuration );\n\t\n\t        } catch ( e ) {\n\t            throw (e instanceof Error) ?\n\t                e :\n\t                new Error( $.getString(\"Errors.Dzi\") );\n\t        }\n\t    } else if ( rootName == \"Collection\" ) {\n\t        throw new Error( $.getString( \"Errors.Dzc\" ) );\n\t    } else if ( rootName == \"Error\" ) {\n\t        var messageNode = root.getElementsByTagName(\"Message\")[0];\n\t        var message = messageNode.firstChild.nodeValue;\n\t        throw new Error(message);\n\t    }\n\t\n\t    throw new Error( $.getString( \"Errors.Dzi\" ) );\n\t}\n\t\n\t/**\n\t * @private\n\t * @inner\n\t * @function\n\t */\n\tfunction configureFromObject( tileSource, configuration ){\n\t    var imageData     = configuration.Image,\n\t        tilesUrl      = imageData.Url,\n\t        fileFormat    = imageData.Format,\n\t        sizeData      = imageData.Size,\n\t        dispRectData  = imageData.DisplayRect || [],\n\t        width         = parseInt( sizeData.Width, 10 ),\n\t        height        = parseInt( sizeData.Height, 10 ),\n\t        tileSize      = parseInt( imageData.TileSize, 10 ),\n\t        tileOverlap   = parseInt( imageData.Overlap, 10 ),\n\t        displayRects  = [],\n\t        rectData,\n\t        i;\n\t\n\t    //TODO: need to figure out out to better handle image format compatibility\n\t    //      which actually includes additional file formats like xml and pdf\n\t    //      and plain text for various tilesource implementations to avoid low\n\t    //      level errors.\n\t    //\n\t    //      For now, just don't perform the check.\n\t    //\n\t    /*if ( !imageFormatSupported( fileFormat ) ) {\n\t        throw new Error(\n\t            $.getString( \"Errors.ImageFormat\", fileFormat.toUpperCase() )\n\t        );\n\t    }*/\n\t\n\t    for ( i = 0; i < dispRectData.length; i++ ) {\n\t        rectData = dispRectData[ i ].Rect;\n\t\n\t        displayRects.push( new $.DisplayRect(\n\t            parseInt( rectData.X, 10 ),\n\t            parseInt( rectData.Y, 10 ),\n\t            parseInt( rectData.Width, 10 ),\n\t            parseInt( rectData.Height, 10 ),\n\t            parseInt( rectData.MinLevel, 10 ),\n\t            parseInt( rectData.MaxLevel, 10 )\n\t        ));\n\t    }\n\t\n\t    return $.extend(true, {\n\t        width: width, /* width *required */\n\t        height: height, /* height *required */\n\t        tileSize: tileSize, /* tileSize *required */\n\t        tileOverlap: tileOverlap, /* tileOverlap *required */\n\t        minLevel: null, /* minLevel */\n\t        maxLevel: null, /* maxLevel */\n\t        tilesUrl: tilesUrl, /* tilesUrl */\n\t        fileFormat: fileFormat, /* fileFormat */\n\t        displayRects: displayRects /* displayRects */\n\t    }, configuration );\n\t\n\t}\n\t\n\t}( OpenSeadragon ));\n\t\n\t/*\n\t * OpenSeadragon - IIIFTileSource\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function( $ ){\n\t\n\t/**\n\t * @class IIIFTileSource\n\t * @classdesc A client implementation of the International Image Interoperability Framework\n\t * Format: Image API 1.0 - 2.1\n\t *\n\t * @memberof OpenSeadragon\n\t * @extends OpenSeadragon.TileSource\n\t * @see http://iiif.io/api/image/\n\t */\n\t$.IIIFTileSource = function( options ){\n\t\n\t\n\t    $.extend( true, this, options );\n\t\n\t    if ( !( this.height && this.width && this['@id'] ) ) {\n\t        throw new Error( 'IIIF required parameters not provided.' );\n\t    }\n\t\n\t    options.tileSizePerScaleFactor = {};\n\t\n\t    // N.B. 2.0 renamed scale_factors to scaleFactors\n\t    if ( this.tile_width && this.tile_height ) {\n\t        options.tileWidth = this.tile_width;\n\t        options.tileHeight = this.tile_height;\n\t    } else if ( this.tile_width ) {\n\t        options.tileSize = this.tile_width;\n\t    } else if ( this.tile_height ) {\n\t        options.tileSize = this.tile_height;\n\t    } else if ( this.tiles ) {\n\t        // Version 2.0 forwards\n\t        if ( this.tiles.length == 1 ) {\n\t            options.tileWidth  = this.tiles[0].width;\n\t            // Use height if provided, otherwise assume square tiles and use width.\n\t            options.tileHeight = this.tiles[0].height || this.tiles[0].width;\n\t            this.scale_factors = this.tiles[0].scaleFactors;\n\t        } else {\n\t            // Multiple tile sizes at different levels\n\t            this.scale_factors = [];\n\t            for (var t = 0; t < this.tiles.length; t++ ) {\n\t                for (var sf = 0; sf < this.tiles[t].scaleFactors.length; sf++) {\n\t                    var scaleFactor = this.tiles[t].scaleFactors[sf];\n\t                    this.scale_factors.push(scaleFactor);\n\t                    options.tileSizePerScaleFactor[scaleFactor] = {\n\t                        width: this.tiles[t].width,\n\t                        height: this.tiles[t].height || this.tiles[t].width\n\t                    };\n\t                }\n\t            }\n\t        }\n\t    } else if ( canBeTiled(options.profile) ) {\n\t        // use the largest of tileOptions that is smaller than the short dimension\n\t        var shortDim = Math.min( this.height, this.width ),\n\t            tileOptions = [256,512,1024],\n\t            smallerTiles = [];\n\t\n\t        for ( var c = 0; c < tileOptions.length; c++ ) {\n\t            if ( tileOptions[c] <= shortDim ) {\n\t                smallerTiles.push( tileOptions[c] );\n\t            }\n\t        }\n\t\n\t        if ( smallerTiles.length > 0 ) {\n\t            options.tileSize = Math.max.apply( null, smallerTiles );\n\t        } else {\n\t            // If we're smaller than 256, just use the short side.\n\t            options.tileSize = shortDim;\n\t        }\n\t    } else if (this.sizes && this.sizes.length > 0) {\n\t        // This info.json can't be tiled, but we can still construct a legacy pyramid from the sizes array. \n\t        // In this mode, IIIFTileSource will call functions from the abstract baseTileSource or the \n\t        // LegacyTileSource instead of performing IIIF tiling.      \n\t        this.emulateLegacyImagePyramid = true;\n\t        \n\t        options.levels = constructLevels( this );\n\t        // use the largest available size to define tiles\n\t        $.extend( true, options, {\n\t            width: options.levels[ options.levels.length - 1 ].width,\n\t            height: options.levels[ options.levels.length - 1 ].height,\n\t            tileSize: Math.max( options.height, options.width ),\n\t            tileOverlap: 0,\n\t            minLevel: 0,\n\t            maxLevel: options.levels.length - 1\n\t        });\n\t        this.levels = options.levels;\n\t    } else {\n\t        $.console.error(\"Nothing in the info.json to construct image pyramids from\");\n\t    }\n\t\n\t    if (!options.maxLevel && !this.emulateLegacyImagePyramid) {\n\t        if (!this.scale_factors) {\n\t            options.maxLevel = Number(Math.ceil(Math.log(Math.max(this.width, this.height), 2)));\n\t        } else {\n\t            options.maxLevel = Math.floor(Math.pow(Math.max.apply(null, this.scale_factors), 0.5));\n\t        }\n\t    }\n\t\n\t    $.TileSource.apply( this, [ options ] );\n\t};\n\t\n\t$.extend( $.IIIFTileSource.prototype, $.TileSource.prototype, /** @lends OpenSeadragon.IIIFTileSource.prototype */{\n\t    /**\n\t     * Determine if the data and/or url imply the image service is supported by\n\t     * this tile source.\n\t     * @function\n\t     * @param {Object|Array} data\n\t     * @param {String} optional - url\n\t     */\n\t     \n\t    supports: function( data, url ) {\n\t        // Version 2.0 and forwards\n\t        if (data.protocol && data.protocol == 'http://iiif.io/api/image') {\n\t            return true;\n\t        // Version 1.1\n\t        } else if ( data['@context'] && (\n\t            data['@context'] == \"http://library.stanford.edu/iiif/image-api/1.1/context.json\" ||\n\t            data['@context'] == \"http://iiif.io/api/image/1/context.json\") ) {\n\t            // N.B. the iiif.io context is wrong, but where the representation lives so likely to be used\n\t            return true;\n\t\n\t        // Version 1.0\n\t        } else if ( data.profile &&\n\t            data.profile.indexOf(\"http://library.stanford.edu/iiif/image-api/compliance.html\") === 0) {\n\t            return true;\n\t        } else if ( data.identifier && data.width && data.height ) {\n\t            return true;\n\t        } else if ( data.documentElement &&\n\t            \"info\" == data.documentElement.tagName &&\n\t            \"http://library.stanford.edu/iiif/image-api/ns/\" ==\n\t                data.documentElement.namespaceURI) {\n\t            return true;\n\t\n\t        // Not IIIF\n\t        } else {\n\t            return false;\n\t        }\n\t    },\n\t\n\t    /**\n\t     *\n\t     * @function\n\t     * @param {Object} data - the raw configuration\n\t     * @example <caption>IIIF 1.1 Info Looks like this</caption>\n\t     * {\n\t     *   \"@context\" : \"http://library.stanford.edu/iiif/image-api/1.1/context.json\",\n\t     *   \"@id\" : \"http://iiif.example.com/prefix/1E34750D-38DB-4825-A38A-B60A345E591C\",\n\t     *   \"width\" : 6000,\n\t     *   \"height\" : 4000,\n\t     *   \"scale_factors\" : [ 1, 2, 4 ],\n\t     *   \"tile_width\" : 1024,\n\t     *   \"tile_height\" : 1024,\n\t     *   \"formats\" : [ \"jpg\", \"png\" ],\n\t     *   \"qualities\" : [ \"native\", \"grey\" ],\n\t     *   \"profile\" : \"http://library.stanford.edu/iiif/image-api/1.1/compliance.html#level0\"\n\t     * }\n\t     */\n\t    configure: function( data, url ){\n\t        // Try to deduce our version and fake it upwards if needed\n\t        if ( !$.isPlainObject(data) ) {\n\t            var options = configureFromXml10( data );\n\t            options['@context'] = \"http://iiif.io/api/image/1.0/context.json\";\n\t            options['@id'] = url.replace('/info.xml', '');\n\t            return options;\n\t        } else if ( !data['@context'] ) {\n\t            data['@context'] = 'http://iiif.io/api/image/1.0/context.json';\n\t            data['@id'] = url.replace('/info.json', '');\n\t            return data;\n\t        } else {\n\t            return data;\n\t        }\n\t    },\n\t\n\t    /**\n\t     * Return the tileWidth for the given level.\n\t     * @function\n\t     * @param {Number} level\n\t     */\n\t    getTileWidth: function( level ) {\n\t\n\t        if(this.emulateLegacyImagePyramid) {\n\t            return $.TileSource.prototype.getTileWidth.call(this, level);\n\t        }\n\t\n\t        var scaleFactor = Math.pow(2, this.maxLevel - level);\n\t\n\t        if (this.tileSizePerScaleFactor && this.tileSizePerScaleFactor[scaleFactor]) {\n\t            return this.tileSizePerScaleFactor[scaleFactor].width;\n\t        }\n\t        return this._tileWidth;\n\t    },\n\t\n\t    /**\n\t     * Return the tileHeight for the given level.\n\t     * @function\n\t     * @param {Number} level\n\t     */\n\t    getTileHeight: function( level ) {\n\t\n\t        if(this.emulateLegacyImagePyramid) {\n\t            return $.TileSource.prototype.getTileHeight.call(this, level);\n\t        }\n\t\n\t        var scaleFactor = Math.pow(2, this.maxLevel - level);\n\t\n\t        if (this.tileSizePerScaleFactor && this.tileSizePerScaleFactor[scaleFactor]) {\n\t            return this.tileSizePerScaleFactor[scaleFactor].height;\n\t        }\n\t        return this._tileHeight;\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @param {Number} level\n\t     */\n\t    getLevelScale: function ( level ) {\n\t\n\t        if(this.emulateLegacyImagePyramid) {\n\t            var levelScale = NaN;\n\t            if (this.levels.length > 0 && level >= this.minLevel && level <= this.maxLevel) {\n\t                levelScale =\n\t                    this.levels[level].width /\n\t                    this.levels[this.maxLevel].width;\n\t            }\n\t            return levelScale;\n\t        }\n\t\n\t        return $.TileSource.prototype.getLevelScale.call(this, level);\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @param {Number} level\n\t     */\n\t    getNumTiles: function( level ) {\n\t\n\t        if(this.emulateLegacyImagePyramid) {\n\t            var scale = this.getLevelScale(level);\n\t            if (scale) {\n\t                return new $.Point(1, 1);\n\t            } else {\n\t                return new $.Point(0, 0);\n\t            }\n\t        }\n\t\n\t        return $.TileSource.prototype.getNumTiles.call(this, level);\n\t    },\n\t\n\t\n\t    /**\n\t     * @function\n\t     * @param {Number} level\n\t     * @param {OpenSeadragon.Point} point\n\t     */\n\t    getTileAtPoint: function( level, point ) {\n\t\n\t        if(this.emulateLegacyImagePyramid) {\n\t            return new $.Point(0, 0);\n\t        }\n\t\n\t        return $.TileSource.prototype.getTileAtPoint.call(this, level, point);\n\t    },\n\t\n\t\n\t    /**\n\t     * Responsible for retrieving the url which will return an image for the\n\t     * region specified by the given x, y, and level components.\n\t     * @function\n\t     * @param {Number} level - z index\n\t     * @param {Number} x\n\t     * @param {Number} y\n\t     * @throws {Error}\n\t     */\n\t    getTileUrl: function( level, x, y ){\n\t\n\t        if(this.emulateLegacyImagePyramid) {\n\t            var url = null;\n\t            if ( this.levels.length > 0 && level >= this.minLevel && level <= this.maxLevel ) {\n\t                url = this.levels[ level ].url;\n\t            }\n\t            return url;\n\t        }\n\t\n\t        //# constants\n\t        var IIIF_ROTATION = '0',\n\t            //## get the scale (level as a decimal)\n\t            scale = Math.pow( 0.5, this.maxLevel - level ),\n\t\n\t            //# image dimensions at this level\n\t            levelWidth = Math.ceil( this.width * scale ),\n\t            levelHeight = Math.ceil( this.height * scale ),\n\t\n\t            //## iiif region\n\t            tileWidth,\n\t            tileHeight,\n\t            iiifTileSizeWidth,\n\t            iiifTileSizeHeight,\n\t            iiifRegion,\n\t            iiifTileX,\n\t            iiifTileY,\n\t            iiifTileW,\n\t            iiifTileH,\n\t            iiifSize,\n\t            iiifQuality,\n\t            uri;\n\t\n\t        tileWidth = this.getTileWidth(level);\n\t        tileHeight = this.getTileHeight(level);\n\t        iiifTileSizeWidth = Math.ceil( tileWidth / scale );\n\t        iiifTileSizeHeight = Math.ceil( tileHeight / scale );\n\t\n\t        if ( this['@context'].indexOf('/1.0/context.json') > -1 ||\n\t             this['@context'].indexOf('/1.1/context.json') > -1 ||\n\t             this['@context'].indexOf('/1/context.json') > -1 ) {\n\t            iiifQuality = \"native.jpg\";\n\t        } else {\n\t            iiifQuality = \"default.jpg\";\n\t        }\n\t\n\t        if ( levelWidth < tileWidth && levelHeight < tileHeight ){\n\t            iiifSize = levelWidth + \",\";\n\t            iiifRegion = 'full';\n\t        } else {\n\t            iiifTileX = x * iiifTileSizeWidth;\n\t            iiifTileY = y * iiifTileSizeHeight;\n\t            iiifTileW = Math.min( iiifTileSizeWidth, this.width - iiifTileX );\n\t            iiifTileH = Math.min( iiifTileSizeHeight, this.height - iiifTileY );\n\t            iiifSize = Math.ceil( iiifTileW * scale ) + \",\";\n\t            iiifRegion = [ iiifTileX, iiifTileY, iiifTileW, iiifTileH ].join( ',' );\n\t        }\n\t        uri = [ this['@id'], iiifRegion, iiifSize, IIIF_ROTATION, iiifQuality ].join( '/' );\n\t\n\t        return uri;\n\t    }\n\t\n\t  });\n\t\n\t    /**\n\t     * Determine whether arbitrary tile requests can be made against a service with the given profile\n\t     * @function\n\t     * @param {object} profile - IIIF profile object\n\t     * @throws {Error}\n\t     */\n\t    function canBeTiled (profile ) {\n\t        var level0Profiles = [\n\t            \"http://library.stanford.edu/iiif/image-api/compliance.html#level0\",\n\t            \"http://library.stanford.edu/iiif/image-api/1.1/compliance.html#level0\",\n\t            \"http://iiif.io/api/image/2/level0.json\"\n\t        ];\n\t        var isLevel0 = (level0Profiles.indexOf(profile[0]) != -1);\n\t        return !isLevel0 || (profile.indexOf(\"sizeByW\") != -1);\n\t    }\n\t\n\t    /**\n\t     * Build the legacy pyramid URLs (one tile per level)\n\t     * @function\n\t     * @param {object} options - infoJson\n\t     * @throws {Error}\n\t     */\n\t    function constructLevels(options) {\n\t        var levels = [];\n\t        for(var i=0; i<options.sizes.length; i++) {\n\t            levels.push({\n\t                url: options['@id'] + '/full/' + options.sizes[i].width + ',/0/default.jpg',\n\t                width: options.sizes[i].width,\n\t                height: options.sizes[i].height\n\t            });\n\t        }\n\t        return levels.sort(function(a,b){return a.width - b.width;});\n\t    }\n\t\n\t\n\t    function configureFromXml10(xmlDoc) {\n\t        //parse the xml\n\t        if ( !xmlDoc || !xmlDoc.documentElement ) {\n\t            throw new Error( $.getString( \"Errors.Xml\" ) );\n\t        }\n\t\n\t        var root            = xmlDoc.documentElement,\n\t            rootName        = root.tagName,\n\t            configuration   = null;\n\t\n\t        if ( rootName == \"info\" ) {\n\t            try {\n\t                configuration = {};\n\t                parseXML10( root, configuration );\n\t                return configuration;\n\t\n\t            } catch ( e ) {\n\t                throw (e instanceof Error) ?\n\t                    e :\n\t                    new Error( $.getString(\"Errors.IIIF\") );\n\t            }\n\t        }\n\t        throw new Error( $.getString( \"Errors.IIIF\" ) );\n\t    }\n\t\n\t    function parseXML10( node, configuration, property ) {\n\t        var i,\n\t            value;\n\t        if ( node.nodeType == 3 && property ) {//text node\n\t            value = node.nodeValue.trim();\n\t            if( value.match(/^\\d*$/)){\n\t                value = Number( value );\n\t            }\n\t            if( !configuration[ property ] ){\n\t                configuration[ property ] = value;\n\t            }else{\n\t                if( !$.isArray( configuration[ property ] ) ){\n\t                    configuration[ property ] = [ configuration[ property ] ];\n\t                }\n\t                configuration[ property ].push( value );\n\t            }\n\t        } else if( node.nodeType == 1 ){\n\t            for( i = 0; i < node.childNodes.length; i++ ){\n\t                parseXML10( node.childNodes[ i ], configuration, node.nodeName );\n\t            }\n\t        }\n\t    }\n\t\n\t\n\t\n\t}( OpenSeadragon ));\n\t\n\t/*\n\t * OpenSeadragon - OsmTileSource\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t/*\n\t * Derived from the OSM tile source in Rainer Simon's seajax-utils project\n\t * <http://github.com/rsimon/seajax-utils>.  Rainer Simon has contributed\n\t * the included code to the OpenSeadragon project under the New BSD license;\n\t * see <https://github.com/openseadragon/openseadragon/issues/58>.\n\t */\n\t\n\t\n\t(function( $ ){\n\t\n\t/**\n\t * @class OsmTileSource\n\t * @classdesc A tilesource implementation for OpenStreetMap.<br><br>\n\t *\n\t * Note 1. Zoomlevels. Deep Zoom and OSM define zoom levels differently. In  Deep\n\t * Zoom, level 0 equals an image of 1x1 pixels. In OSM, level 0 equals an image of\n\t * 256x256 levels (see http://gasi.ch/blog/inside-deep-zoom-2). I.e. there is a\n\t * difference of log2(256)=8 levels.<br><br>\n\t *\n\t * Note 2. Image dimension. According to the OSM Wiki\n\t * (http://wiki.openstreetmap.org/wiki/Slippy_map_tilenames#Zoom_levels)\n\t * the highest Mapnik zoom level has 256.144x256.144 tiles, with a 256x256\n\t * pixel size. I.e. the Deep Zoom image dimension is 65.572.864x65.572.864\n\t * pixels.\n\t *\n\t * @memberof OpenSeadragon\n\t * @extends OpenSeadragon.TileSource\n\t * @param {Number|Object} width - the pixel width of the image or the idiomatic\n\t *      options object which is used instead of positional arguments.\n\t * @param {Number} height\n\t * @param {Number} tileSize\n\t * @param {Number} tileOverlap\n\t * @param {String} tilesUrl\n\t */\n\t$.OsmTileSource = function( width, height, tileSize, tileOverlap, tilesUrl ) {\n\t    var options;\n\t\n\t    if( $.isPlainObject( width ) ){\n\t        options = width;\n\t    }else{\n\t        options = {\n\t            width: arguments[0],\n\t            height: arguments[1],\n\t            tileSize: arguments[2],\n\t            tileOverlap: arguments[3],\n\t            tilesUrl: arguments[4]\n\t        };\n\t    }\n\t    //apply default setting for standard public OpenStreatMaps service\n\t    //but allow them to be specified so fliks can host there own instance\n\t    //or apply against other services supportting the same standard\n\t    if( !options.width || !options.height ){\n\t        options.width = 65572864;\n\t        options.height = 65572864;\n\t    }\n\t    if( !options.tileSize ){\n\t        options.tileSize = 256;\n\t        options.tileOverlap = 0;\n\t    }\n\t    if( !options.tilesUrl ){\n\t        options.tilesUrl = \"http://tile.openstreetmap.org/\";\n\t    }\n\t    options.minLevel = 8;\n\t\n\t    $.TileSource.apply( this, [ options ] );\n\t\n\t};\n\t\n\t$.extend( $.OsmTileSource.prototype, $.TileSource.prototype, /** @lends OpenSeadragon.OsmTileSource.prototype */{\n\t\n\t\n\t    /**\n\t     * Determine if the data and/or url imply the image service is supported by\n\t     * this tile source.\n\t     * @function\n\t     * @param {Object|Array} data\n\t     * @param {String} optional - url\n\t     */\n\t    supports: function( data, url ){\n\t        return (\n\t            data.type &&\n\t            \"openstreetmaps\" == data.type\n\t        );\n\t    },\n\t\n\t    /**\n\t     *\n\t     * @function\n\t     * @param {Object} data - the raw configuration\n\t     * @param {String} url - the url the data was retreived from if any.\n\t     * @return {Object} options - A dictionary of keyword arguments sufficient\n\t     *      to configure this tile sources constructor.\n\t     */\n\t    configure: function( data, url ){\n\t        return data;\n\t    },\n\t\n\t\n\t    /**\n\t     * @function\n\t     * @param {Number} level\n\t     * @param {Number} x\n\t     * @param {Number} y\n\t     */\n\t    getTileUrl: function( level, x, y ) {\n\t        return this.tilesUrl + (level - 8) + \"/\" + x + \"/\" + y + \".png\";\n\t    }\n\t});\n\t\n\t\n\t}( OpenSeadragon ));\n\t\n\t/*\n\t * OpenSeadragon - TmsTileSource\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t/*\n\t * Derived from the TMS tile source in Rainer Simon's seajax-utils project\n\t * <http://github.com/rsimon/seajax-utils>.  Rainer Simon has contributed\n\t * the included code to the OpenSeadragon project under the New BSD license;\n\t * see <https://github.com/openseadragon/openseadragon/issues/58>.\n\t */\n\t\n\t\n\t(function( $ ){\n\t\n\t/**\n\t * @class TmsTileSource\n\t * @classdesc A tilesource implementation for Tiled Map Services (TMS).\n\t * TMS tile scheme ( [ as supported by OpenLayers ] is described here\n\t * ( http://openlayers.org/dev/examples/tms.html ).\n\t *\n\t * @memberof OpenSeadragon\n\t * @extends OpenSeadragon.TileSource\n\t * @param {Number|Object} width - the pixel width of the image or the idiomatic\n\t *      options object which is used instead of positional arguments.\n\t * @param {Number} height\n\t * @param {Number} tileSize\n\t * @param {Number} tileOverlap\n\t * @param {String} tilesUrl\n\t */\n\t$.TmsTileSource = function( width, height, tileSize, tileOverlap, tilesUrl ) {\n\t    var options;\n\t\n\t    if( $.isPlainObject( width ) ){\n\t        options = width;\n\t    }else{\n\t        options = {\n\t            width: arguments[0],\n\t            height: arguments[1],\n\t            tileSize: arguments[2],\n\t            tileOverlap: arguments[3],\n\t            tilesUrl: arguments[4]\n\t        };\n\t    }\n\t    // TMS has integer multiples of 256 for width/height and adds buffer\n\t    // if necessary -> account for this!\n\t    var bufferedWidth = Math.ceil(options.width / 256) * 256,\n\t        bufferedHeight = Math.ceil(options.height / 256) * 256,\n\t        max;\n\t\n\t    // Compute number of zoomlevels in this tileset\n\t    if (bufferedWidth > bufferedHeight) {\n\t        max = bufferedWidth / 256;\n\t    } else {\n\t        max = bufferedHeight / 256;\n\t    }\n\t    options.maxLevel = Math.ceil(Math.log(max)/Math.log(2)) - 1;\n\t    options.tileSize = 256;\n\t    options.width = bufferedWidth;\n\t    options.height = bufferedHeight;\n\t\n\t    $.TileSource.apply( this, [ options ] );\n\t\n\t};\n\t\n\t$.extend( $.TmsTileSource.prototype, $.TileSource.prototype, /** @lends OpenSeadragon.TmsTileSource.prototype */{\n\t\n\t\n\t    /**\n\t     * Determine if the data and/or url imply the image service is supported by\n\t     * this tile source.\n\t     * @function\n\t     * @param {Object|Array} data\n\t     * @param {String} optional - url\n\t     */\n\t    supports: function( data, url ){\n\t        return ( data.type && \"tiledmapservice\" == data.type );\n\t    },\n\t\n\t    /**\n\t     *\n\t     * @function\n\t     * @param {Object} data - the raw configuration\n\t     * @param {String} url - the url the data was retreived from if any.\n\t     * @return {Object} options - A dictionary of keyword arguments sufficient\n\t     *      to configure this tile sources constructor.\n\t     */\n\t    configure: function( data, url ){\n\t        return data;\n\t    },\n\t\n\t\n\t    /**\n\t     * @function\n\t     * @param {Number} level\n\t     * @param {Number} x\n\t     * @param {Number} y\n\t     */\n\t    getTileUrl: function( level, x, y ) {\n\t        // Convert from Deep Zoom definition to TMS zoom definition\n\t        var yTiles = this.getNumTiles( level ).y - 1;\n\t\n\t        return this.tilesUrl + level + \"/\" + x + \"/\" +  (yTiles - y) + \".png\";\n\t    }\n\t});\n\t\n\t\n\t}( OpenSeadragon ));\n\t\n\t/*\n\t * OpenSeadragon - LegacyTileSource\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function( $ ){\n\t\n\t/**\n\t * @class LegacyTileSource\n\t * @classdesc The LegacyTileSource allows simple, traditional image pyramids to be loaded\n\t * into an OpenSeadragon Viewer.  Basically, this translates to the historically\n\t * common practice of starting with a 'master' image, maybe a tiff for example,\n\t * and generating a set of 'service' images like one or more thumbnails, a medium\n\t * resolution image and a high resolution image in standard web formats like\n\t * png or jpg.\n\t *\n\t * @memberof OpenSeadragon\n\t * @extends OpenSeadragon.TileSource\n\t * @param {Array} levels An array of file descriptions, each is an object with\n\t *      a 'url', a 'width', and a 'height'.  Overriding classes can expect more\n\t *      properties but these properties are sufficient for this implementation.\n\t *      Additionally, the levels are required to be listed in order from\n\t *      smallest to largest.\n\t * @property {Number} aspectRatio\n\t * @property {Number} dimensions\n\t * @property {Number} tileSize\n\t * @property {Number} tileOverlap\n\t * @property {Number} minLevel\n\t * @property {Number} maxLevel\n\t * @property {Array}  levels\n\t */\n\t$.LegacyTileSource = function( levels ) {\n\t\n\t    var options,\n\t        width,\n\t        height;\n\t\n\t    if( $.isArray( levels ) ){\n\t        options = {\n\t            type: 'legacy-image-pyramid',\n\t            levels: levels\n\t        };\n\t    }\n\t\n\t    //clean up the levels to make sure we support all formats\n\t    options.levels = filterFiles( options.levels );\n\t\n\t    if ( options.levels.length > 0 ) {\n\t        width = options.levels[ options.levels.length - 1 ].width;\n\t        height = options.levels[ options.levels.length - 1 ].height;\n\t    }\n\t    else {\n\t        width = 0;\n\t        height = 0;\n\t        $.console.error( \"No supported image formats found\" );\n\t    }\n\t\n\t    $.extend( true, options, {\n\t        width: width,\n\t        height: height,\n\t        tileSize: Math.max( height, width ),\n\t        tileOverlap: 0,\n\t        minLevel: 0,\n\t        maxLevel: options.levels.length > 0 ? options.levels.length - 1 : 0\n\t    } );\n\t\n\t    $.TileSource.apply( this, [ options ] );\n\t\n\t    this.levels = options.levels;\n\t};\n\t\n\t$.extend( $.LegacyTileSource.prototype, $.TileSource.prototype, /** @lends OpenSeadragon.LegacyTileSource.prototype */{\n\t    /**\n\t     * Determine if the data and/or url imply the image service is supported by\n\t     * this tile source.\n\t     * @function\n\t     * @param {Object|Array} data\n\t     * @param {String} optional - url\n\t     */\n\t    supports: function( data, url ){\n\t        return (\n\t            data.type &&\n\t            \"legacy-image-pyramid\" == data.type\n\t        ) || (\n\t            data.documentElement &&\n\t            \"legacy-image-pyramid\" == data.documentElement.getAttribute('type')\n\t        );\n\t    },\n\t\n\t\n\t    /**\n\t     *\n\t     * @function\n\t     * @param {Object|XMLDocument} configuration - the raw configuration\n\t     * @param {String} dataUrl - the url the data was retreived from if any.\n\t     * @return {Object} options - A dictionary of keyword arguments sufficient\n\t     *      to configure this tile sources constructor.\n\t     */\n\t    configure: function( configuration, dataUrl ){\n\t\n\t        var options;\n\t\n\t        if( !$.isPlainObject(configuration) ){\n\t\n\t            options = configureFromXML( this, configuration );\n\t\n\t        }else{\n\t\n\t            options = configureFromObject( this, configuration );\n\t        }\n\t\n\t        return options;\n\t\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @param {Number} level\n\t     */\n\t    getLevelScale: function ( level ) {\n\t        var levelScale = NaN;\n\t        if ( this.levels.length > 0 && level >= this.minLevel && level <= this.maxLevel ) {\n\t            levelScale =\n\t                this.levels[ level ].width /\n\t                this.levels[ this.maxLevel ].width;\n\t        }\n\t        return levelScale;\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @param {Number} level\n\t     */\n\t    getNumTiles: function( level ) {\n\t        var scale = this.getLevelScale( level );\n\t        if ( scale ){\n\t            return new $.Point( 1, 1 );\n\t        } else {\n\t            return new $.Point( 0, 0 );\n\t        }\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @param {Number} level\n\t     * @param {OpenSeadragon.Point} point\n\t     */\n\t    getTileAtPoint: function( level, point ) {\n\t        return new $.Point( 0, 0 );\n\t    },\n\t\n\t\n\t    /**\n\t     * This method is not implemented by this class other than to throw an Error\n\t     * announcing you have to implement it.  Because of the variety of tile\n\t     * server technologies, and various specifications for building image\n\t     * pyramids, this method is here to allow easy integration.\n\t     * @function\n\t     * @param {Number} level\n\t     * @param {Number} x\n\t     * @param {Number} y\n\t     * @throws {Error}\n\t     */\n\t    getTileUrl: function ( level, x, y ) {\n\t        var url = null;\n\t        if ( this.levels.length > 0 && level >= this.minLevel && level <= this.maxLevel ) {\n\t            url = this.levels[ level ].url;\n\t        }\n\t        return url;\n\t    }\n\t} );\n\t\n\t/**\n\t * This method removes any files from the Array which dont conform to our\n\t * basic requirements for a 'level' in the LegacyTileSource.\n\t * @private\n\t * @inner\n\t * @function\n\t */\n\tfunction filterFiles( files ){\n\t    var filtered = [],\n\t        file,\n\t        i;\n\t    for( i = 0; i < files.length; i++ ){\n\t        file = files[ i ];\n\t        if( file.height &&\n\t            file.width &&\n\t            file.url && (\n\t                file.url.toLowerCase().match(/^.*\\.(png|jpg|jpeg|gif)(?:\\?.*)?$/) || (\n\t                    file.mimetype &&\n\t                    file.mimetype.toLowerCase().match(/^.*\\/(png|jpg|jpeg|gif)$/)\n\t                )\n\t            ) ){\n\t            //This is sufficient to serve as a level\n\t            filtered.push({\n\t                url: file.url,\n\t                width: Number( file.width ),\n\t                height: Number( file.height )\n\t            });\n\t        }\n\t        else {\n\t            $.console.error( 'Unsupported image format: %s', file.url ? file.url : '<no URL>' );\n\t        }\n\t    }\n\t\n\t    return filtered.sort(function(a,b){\n\t        return a.height - b.height;\n\t    });\n\t\n\t}\n\t\n\t/**\n\t * @private\n\t * @inner\n\t * @function\n\t */\n\tfunction configureFromXML( tileSource, xmlDoc ){\n\t\n\t    if ( !xmlDoc || !xmlDoc.documentElement ) {\n\t        throw new Error( $.getString( \"Errors.Xml\" ) );\n\t    }\n\t\n\t    var root         = xmlDoc.documentElement,\n\t        rootName     = root.tagName,\n\t        conf         = null,\n\t        levels       = [],\n\t        level,\n\t        i;\n\t\n\t    if ( rootName == \"image\" ) {\n\t\n\t        try {\n\t            conf = {\n\t                type:        root.getAttribute( \"type\" ),\n\t                levels:      []\n\t            };\n\t\n\t            levels = root.getElementsByTagName( \"level\" );\n\t            for ( i = 0; i < levels.length; i++ ) {\n\t                level = levels[ i ];\n\t\n\t                conf.levels .push({\n\t                    url:    level.getAttribute( \"url\" ),\n\t                    width:  parseInt( level.getAttribute( \"width\" ), 10 ),\n\t                    height: parseInt( level.getAttribute( \"height\" ), 10 )\n\t                });\n\t            }\n\t\n\t            return configureFromObject( tileSource, conf );\n\t\n\t        } catch ( e ) {\n\t            throw (e instanceof Error) ?\n\t                e :\n\t                new Error( 'Unknown error parsing Legacy Image Pyramid XML.' );\n\t        }\n\t    } else if ( rootName == \"collection\" ) {\n\t        throw new Error( 'Legacy Image Pyramid Collections not yet supported.' );\n\t    } else if ( rootName == \"error\" ) {\n\t        throw new Error( 'Error: ' + xmlDoc );\n\t    }\n\t\n\t    throw new Error( 'Unknown element ' + rootName );\n\t}\n\t\n\t/**\n\t * @private\n\t * @inner\n\t * @function\n\t */\n\tfunction configureFromObject( tileSource, configuration ){\n\t\n\t    return configuration.levels;\n\t\n\t}\n\t\n\t}( OpenSeadragon ));\n\t\n\t/*\n\t * OpenSeadragon - ImageTileSource\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function ($) {\n\t\n\t    /**\n\t     * @class ImageTileSource\n\t     * @classdesc The ImageTileSource allows a simple image to be loaded\n\t     * into an OpenSeadragon Viewer.\n\t     * There are 2 ways to open an ImageTileSource:\n\t     * 1. viewer.open({type: 'image', url: fooUrl});\n\t     * 2. viewer.open(new OpenSeadragon.ImageTileSource({url: fooUrl}));\n\t     *\n\t     * With the first syntax, the crossOriginPolicy, ajaxWithCredentials and\n\t     * useCanvas options are inherited from the viewer if they are not\n\t     * specified directly in the options object.\n\t     *\n\t     * @memberof OpenSeadragon\n\t     * @extends OpenSeadragon.TileSource\n\t     * @param {Object} options Options object.\n\t     * @param {String} options.url URL of the image\n\t     * @param {Boolean} [options.buildPyramid=true] If set to true (default), a\n\t     * pyramid will be built internally to provide a better downsampling.\n\t     * @param {String|Boolean} [options.crossOriginPolicy=false] Valid values are\n\t     * 'Anonymous', 'use-credentials', and false. If false, image requests will\n\t     * not use CORS preventing internal pyramid building for images from other\n\t     * domains.\n\t     * @param {String|Boolean} [options.ajaxWithCredentials=false] Whether to set\n\t     * the withCredentials XHR flag for AJAX requests (when loading tile sources).\n\t     * @param {Boolean} [options.useCanvas=true] Set to false to prevent any use\n\t     * of the canvas API.\n\t     */\n\t    $.ImageTileSource = function (options) {\n\t\n\t        options = $.extend({\n\t            buildPyramid: true,\n\t            crossOriginPolicy: false,\n\t            ajaxWithCredentials: false,\n\t            useCanvas: true\n\t        }, options);\n\t        $.TileSource.apply(this, [options]);\n\t\n\t    };\n\t\n\t    $.extend($.ImageTileSource.prototype, $.TileSource.prototype, /** @lends OpenSeadragon.ImageTileSource.prototype */{\n\t        /**\n\t         * Determine if the data and/or url imply the image service is supported by\n\t         * this tile source.\n\t         * @function\n\t         * @param {Object|Array} data\n\t         * @param {String} optional - url\n\t         */\n\t        supports: function (data, url) {\n\t            return data.type && data.type === \"image\";\n\t        },\n\t        /**\n\t         *\n\t         * @function\n\t         * @param {Object} options - the options\n\t         * @param {String} dataUrl - the url the image was retreived from, if any.\n\t         * @return {Object} options - A dictionary of keyword arguments sufficient\n\t         *      to configure this tile sources constructor.\n\t         */\n\t        configure: function (options, dataUrl) {\n\t            return options;\n\t        },\n\t        /**\n\t         * Responsible for retrieving, and caching the\n\t         * image metadata pertinent to this TileSources implementation.\n\t         * @function\n\t         * @param {String} url\n\t         * @throws {Error}\n\t         */\n\t        getImageInfo: function (url) {\n\t            var image = this._image = new Image();\n\t            var _this = this;\n\t\n\t            if (this.crossOriginPolicy) {\n\t                image.crossOrigin = this.crossOriginPolicy;\n\t            }\n\t            if (this.ajaxWithCredentials) {\n\t                image.useCredentials = this.ajaxWithCredentials;\n\t            }\n\t\n\t            $.addEvent(image, 'load', function () {\n\t                _this.width = image.naturalWidth;\n\t                _this.height = image.naturalHeight;\n\t                _this.aspectRatio = _this.width / _this.height;\n\t                _this.dimensions = new $.Point(_this.width, _this.height);\n\t                _this._tileWidth = _this.width;\n\t                _this._tileHeight = _this.height;\n\t                _this.tileOverlap = 0;\n\t                _this.minLevel = 0;\n\t                _this.levels = _this._buildLevels();\n\t                _this.maxLevel = _this.levels.length - 1;\n\t\n\t                _this.ready = true;\n\t\n\t                // Note: this event is documented elsewhere, in TileSource\n\t                _this.raiseEvent('ready', {tileSource: _this});\n\t            });\n\t\n\t            $.addEvent(image, 'error', function () {\n\t                // Note: this event is documented elsewhere, in TileSource\n\t                _this.raiseEvent('open-failed', {\n\t                    message: \"Error loading image at \" + url,\n\t                    source: url\n\t                });\n\t            });\n\t\n\t            image.src = url;\n\t        },\n\t        /**\n\t         * @function\n\t         * @param {Number} level\n\t         */\n\t        getLevelScale: function (level) {\n\t            var levelScale = NaN;\n\t            if (level >= this.minLevel && level <= this.maxLevel) {\n\t                levelScale =\n\t                        this.levels[level].width /\n\t                        this.levels[this.maxLevel].width;\n\t            }\n\t            return levelScale;\n\t        },\n\t        /**\n\t         * @function\n\t         * @param {Number} level\n\t         */\n\t        getNumTiles: function (level) {\n\t            var scale = this.getLevelScale(level);\n\t            if (scale) {\n\t                return new $.Point(1, 1);\n\t            } else {\n\t                return new $.Point(0, 0);\n\t            }\n\t        },\n\t        /**\n\t         * @function\n\t         * @param {Number} level\n\t         * @param {OpenSeadragon.Point} point\n\t         */\n\t        getTileAtPoint: function (level, point) {\n\t            return new $.Point(0, 0);\n\t        },\n\t        /**\n\t         * Retrieves a tile url\n\t         * @function\n\t         * @param {Number} level Level of the tile\n\t         * @param {Number} x x coordinate of the tile\n\t         * @param {Number} y y coordinate of the tile\n\t         */\n\t        getTileUrl: function (level, x, y) {\n\t            var url = null;\n\t            if (level >= this.minLevel && level <= this.maxLevel) {\n\t                url = this.levels[level].url;\n\t            }\n\t            return url;\n\t        },\n\t        /**\n\t         * Retrieves a tile context 2D\n\t         * @function\n\t         * @param {Number} level Level of the tile\n\t         * @param {Number} x x coordinate of the tile\n\t         * @param {Number} y y coordinate of the tile\n\t         */\n\t        getContext2D: function (level, x, y) {\n\t            var context = null;\n\t            if (level >= this.minLevel && level <= this.maxLevel) {\n\t                context = this.levels[level].context2D;\n\t            }\n\t            return context;\n\t        },\n\t\n\t        // private\n\t        //\n\t        // Builds the differents levels of the pyramid if possible\n\t        // (i.e. if canvas API enabled and no canvas tainting issue).\n\t        _buildLevels: function () {\n\t            var levels = [{\n\t                    url: this._image.src,\n\t                    width: this._image.naturalWidth,\n\t                    height: this._image.naturalHeight\n\t                }];\n\t\n\t            if (!this.buildPyramid || !$.supportsCanvas || !this.useCanvas) {\n\t                // We don't need the image anymore. Allows it to be GC.\n\t                delete this._image;\n\t                return levels;\n\t            }\n\t\n\t            var currentWidth = this._image.naturalWidth;\n\t            var currentHeight = this._image.naturalHeight;\n\t\n\t            var bigCanvas = document.createElement(\"canvas\");\n\t            var bigContext = bigCanvas.getContext(\"2d\");\n\t\n\t            bigCanvas.width = currentWidth;\n\t            bigCanvas.height = currentHeight;\n\t            bigContext.drawImage(this._image, 0, 0, currentWidth, currentHeight);\n\t            // We cache the context of the highest level because the browser\n\t            // is a lot faster at downsampling something it already has\n\t            // downsampled before.\n\t            levels[0].context2D = bigContext;\n\t            // We don't need the image anymore. Allows it to be GC.\n\t            delete this._image;\n\t\n\t            if ($.isCanvasTainted(bigCanvas)) {\n\t                // If the canvas is tainted, we can't compute the pyramid.\n\t                return levels;\n\t            }\n\t\n\t            // We build smaller levels until either width or height becomes\n\t            // 1 pixel wide.\n\t            while (currentWidth >= 2 && currentHeight >= 2) {\n\t                currentWidth = Math.floor(currentWidth / 2);\n\t                currentHeight = Math.floor(currentHeight / 2);\n\t                var smallCanvas = document.createElement(\"canvas\");\n\t                var smallContext = smallCanvas.getContext(\"2d\");\n\t                smallCanvas.width = currentWidth;\n\t                smallCanvas.height = currentHeight;\n\t                smallContext.drawImage(bigCanvas, 0, 0, currentWidth, currentHeight);\n\t\n\t                levels.splice(0, 0, {\n\t                    context2D: smallContext,\n\t                    width: currentWidth,\n\t                    height: currentHeight\n\t                });\n\t\n\t                bigCanvas = smallCanvas;\n\t                bigContext = smallContext;\n\t            }\n\t            return levels;\n\t        }\n\t    });\n\t\n\t}(OpenSeadragon));\n\t\n\t/*\n\t * OpenSeadragon - TileSourceCollection\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function( $ ){\n\t\n\t// deprecated\n\t$.TileSourceCollection = function( tileSize, tileSources, rows, layout  ) {\n\t    $.console.error('TileSourceCollection is deprecated; use World instead');\n\t};\n\t\n\t}( OpenSeadragon ));\n\t\n\t/*\n\t * OpenSeadragon - Button\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function( $ ){\n\t\n\t/**\n\t * An enumeration of button states\n\t * @member ButtonState\n\t * @memberof OpenSeadragon\n\t * @static\n\t * @type {Object}\n\t * @property {Number} REST\n\t * @property {Number} GROUP\n\t * @property {Number} HOVER\n\t * @property {Number} DOWN\n\t */\n\t$.ButtonState = {\n\t    REST:   0,\n\t    GROUP:  1,\n\t    HOVER:  2,\n\t    DOWN:   3\n\t};\n\t\n\t/**\n\t * @class Button\n\t * @classdesc Manages events, hover states for individual buttons, tool-tips, as well\n\t * as fading the buttons out when the user has not interacted with them\n\t * for a specified period.\n\t *\n\t * @memberof OpenSeadragon\n\t * @extends OpenSeadragon.EventSource\n\t * @param {Object} options\n\t * @param {Element} [options.element=null] Element to use as the button. If not specified, an HTML &lt;button&gt; element is created.\n\t * @param {String} [options.tooltip=null] Provides context help for the button when the\n\t *  user hovers over it.\n\t * @param {String} [options.srcRest=null] URL of image to use in 'rest' state.\n\t * @param {String} [options.srcGroup=null] URL of image to use in 'up' state.\n\t * @param {String} [options.srcHover=null] URL of image to use in 'hover' state.\n\t * @param {String} [options.srcDown=null] URL of image to use in 'down' state.\n\t * @param {Number} [options.fadeDelay=0] How long to wait before fading.\n\t * @param {Number} [options.fadeLength=2000] How long should it take to fade the button.\n\t * @param {OpenSeadragon.EventHandler} [options.onPress=null] Event handler callback for {@link OpenSeadragon.Button.event:press}.\n\t * @param {OpenSeadragon.EventHandler} [options.onRelease=null] Event handler callback for {@link OpenSeadragon.Button.event:release}.\n\t * @param {OpenSeadragon.EventHandler} [options.onClick=null] Event handler callback for {@link OpenSeadragon.Button.event:click}.\n\t * @param {OpenSeadragon.EventHandler} [options.onEnter=null] Event handler callback for {@link OpenSeadragon.Button.event:enter}.\n\t * @param {OpenSeadragon.EventHandler} [options.onExit=null] Event handler callback for {@link OpenSeadragon.Button.event:exit}.\n\t * @param {OpenSeadragon.EventHandler} [options.onFocus=null] Event handler callback for {@link OpenSeadragon.Button.event:focus}.\n\t * @param {OpenSeadragon.EventHandler} [options.onBlur=null] Event handler callback for {@link OpenSeadragon.Button.event:blur}.\n\t */\n\t$.Button = function( options ) {\n\t\n\t    var _this = this;\n\t\n\t    $.EventSource.call( this );\n\t\n\t    $.extend( true, this, {\n\t\n\t        tooltip:            null,\n\t        srcRest:            null,\n\t        srcGroup:           null,\n\t        srcHover:           null,\n\t        srcDown:            null,\n\t        clickTimeThreshold: $.DEFAULT_SETTINGS.clickTimeThreshold,\n\t        clickDistThreshold: $.DEFAULT_SETTINGS.clickDistThreshold,\n\t        /**\n\t         * How long to wait before fading.\n\t         * @member {Number} fadeDelay\n\t         * @memberof OpenSeadragon.Button#\n\t         */\n\t        fadeDelay:          0,\n\t        /**\n\t         * How long should it take to fade the button.\n\t         * @member {Number} fadeLength\n\t         * @memberof OpenSeadragon.Button#\n\t         */\n\t        fadeLength:         2000,\n\t        onPress:            null,\n\t        onRelease:          null,\n\t        onClick:            null,\n\t        onEnter:            null,\n\t        onExit:             null,\n\t        onFocus:            null,\n\t        onBlur:             null\n\t\n\t    }, options );\n\t\n\t    /**\n\t     * The button element.\n\t     * @member {Element} element\n\t     * @memberof OpenSeadragon.Button#\n\t     */\n\t    this.element        = options.element   || $.makeNeutralElement( \"div\" );\n\t\n\t    //if the user has specified the element to bind the control to explicitly\n\t    //then do not add the default control images\n\t    if ( !options.element ) {\n\t        this.imgRest      = $.makeTransparentImage( this.srcRest );\n\t        this.imgGroup     = $.makeTransparentImage( this.srcGroup );\n\t        this.imgHover     = $.makeTransparentImage( this.srcHover );\n\t        this.imgDown      = $.makeTransparentImage( this.srcDown );\n\t\n\t        this.imgRest.alt  =\n\t        this.imgGroup.alt =\n\t        this.imgHover.alt =\n\t        this.imgDown.alt  =\n\t            this.tooltip;\n\t\n\t        this.element.style.position = \"relative\";\n\t        $.setElementTouchActionNone( this.element );\n\t\n\t        this.imgGroup.style.position =\n\t        this.imgHover.style.position =\n\t        this.imgDown.style.position  =\n\t            \"absolute\";\n\t\n\t        this.imgGroup.style.top =\n\t        this.imgHover.style.top =\n\t        this.imgDown.style.top  =\n\t            \"0px\";\n\t\n\t        this.imgGroup.style.left =\n\t        this.imgHover.style.left =\n\t        this.imgDown.style.left  =\n\t            \"0px\";\n\t\n\t        this.imgHover.style.visibility =\n\t        this.imgDown.style.visibility  =\n\t            \"hidden\";\n\t\n\t        if ( $.Browser.vendor == $.BROWSERS.FIREFOX  && $.Browser.version < 3 ){\n\t            this.imgGroup.style.top =\n\t            this.imgHover.style.top =\n\t            this.imgDown.style.top  =\n\t                \"\";\n\t        }\n\t\n\t        this.element.appendChild( this.imgRest );\n\t        this.element.appendChild( this.imgGroup );\n\t        this.element.appendChild( this.imgHover );\n\t        this.element.appendChild( this.imgDown );\n\t    }\n\t\n\t\n\t    this.addHandler( \"press\",     this.onPress );\n\t    this.addHandler( \"release\",   this.onRelease );\n\t    this.addHandler( \"click\",     this.onClick );\n\t    this.addHandler( \"enter\",     this.onEnter );\n\t    this.addHandler( \"exit\",      this.onExit );\n\t    this.addHandler( \"focus\",     this.onFocus );\n\t    this.addHandler( \"blur\",      this.onBlur );\n\t\n\t    /**\n\t     * The button's current state.\n\t     * @member {OpenSeadragon.ButtonState} currentState\n\t     * @memberof OpenSeadragon.Button#\n\t     */\n\t    this.currentState = $.ButtonState.GROUP;\n\t\n\t    // When the button last began to fade.\n\t    this.fadeBeginTime  = null;\n\t    // Whether this button should fade after user stops interacting with the viewport.\n\t    this.shouldFade     = false;\n\t\n\t    this.element.style.display  = \"inline-block\";\n\t    this.element.style.position = \"relative\";\n\t    this.element.title          = this.tooltip;\n\t\n\t    /**\n\t     * Tracks mouse/touch/key events on the button.\n\t     * @member {OpenSeadragon.MouseTracker} tracker\n\t     * @memberof OpenSeadragon.Button#\n\t     */\n\t    this.tracker = new $.MouseTracker({\n\t\n\t        element:            this.element,\n\t        clickTimeThreshold: this.clickTimeThreshold,\n\t        clickDistThreshold: this.clickDistThreshold,\n\t\n\t        enterHandler: function( event ) {\n\t            if ( event.insideElementPressed ) {\n\t                inTo( _this, $.ButtonState.DOWN );\n\t                /**\n\t                 * Raised when the cursor enters the Button element.\n\t                 *\n\t                 * @event enter\n\t                 * @memberof OpenSeadragon.Button\n\t                 * @type {object}\n\t                 * @property {OpenSeadragon.Button} eventSource - A reference to the Button which raised the event.\n\t                 * @property {Object} originalEvent - The original DOM event.\n\t                 * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t                 */\n\t                _this.raiseEvent( \"enter\", { originalEvent: event.originalEvent } );\n\t            } else if ( !event.buttonDownAny ) {\n\t                inTo( _this, $.ButtonState.HOVER );\n\t            }\n\t        },\n\t\n\t        focusHandler: function ( event ) {\n\t            this.enterHandler( event );\n\t            /**\n\t             * Raised when the Button element receives focus.\n\t             *\n\t             * @event focus\n\t             * @memberof OpenSeadragon.Button\n\t             * @type {object}\n\t             * @property {OpenSeadragon.Button} eventSource - A reference to the Button which raised the event.\n\t             * @property {Object} originalEvent - The original DOM event.\n\t             * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t             */\n\t            _this.raiseEvent( \"focus\", { originalEvent: event.originalEvent } );\n\t        },\n\t\n\t        exitHandler: function( event ) {\n\t            outTo( _this, $.ButtonState.GROUP );\n\t            if ( event.insideElementPressed ) {\n\t                /**\n\t                 * Raised when the cursor leaves the Button element.\n\t                 *\n\t                 * @event exit\n\t                 * @memberof OpenSeadragon.Button\n\t                 * @type {object}\n\t                 * @property {OpenSeadragon.Button} eventSource - A reference to the Button which raised the event.\n\t                 * @property {Object} originalEvent - The original DOM event.\n\t                 * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t                 */\n\t                _this.raiseEvent( \"exit\", { originalEvent: event.originalEvent } );\n\t            }\n\t        },\n\t\n\t        blurHandler: function ( event ) {\n\t            this.exitHandler( event );\n\t            /**\n\t             * Raised when the Button element loses focus.\n\t             *\n\t             * @event blur\n\t             * @memberof OpenSeadragon.Button\n\t             * @type {object}\n\t             * @property {OpenSeadragon.Button} eventSource - A reference to the Button which raised the event.\n\t             * @property {Object} originalEvent - The original DOM event.\n\t             * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t             */\n\t            _this.raiseEvent( \"blur\", { originalEvent: event.originalEvent } );\n\t        },\n\t\n\t        pressHandler: function ( event ) {\n\t            inTo( _this, $.ButtonState.DOWN );\n\t            /**\n\t             * Raised when a mouse button is pressed or touch occurs in the Button element.\n\t             *\n\t             * @event press\n\t             * @memberof OpenSeadragon.Button\n\t             * @type {object}\n\t             * @property {OpenSeadragon.Button} eventSource - A reference to the Button which raised the event.\n\t             * @property {Object} originalEvent - The original DOM event.\n\t             * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t             */\n\t            _this.raiseEvent( \"press\", { originalEvent: event.originalEvent } );\n\t        },\n\t\n\t        releaseHandler: function( event ) {\n\t            if ( event.insideElementPressed && event.insideElementReleased ) {\n\t                outTo( _this, $.ButtonState.HOVER );\n\t                /**\n\t                 * Raised when the mouse button is released or touch ends in the Button element.\n\t                 *\n\t                 * @event release\n\t                 * @memberof OpenSeadragon.Button\n\t                 * @type {object}\n\t                 * @property {OpenSeadragon.Button} eventSource - A reference to the Button which raised the event.\n\t                 * @property {Object} originalEvent - The original DOM event.\n\t                 * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t                 */\n\t                _this.raiseEvent( \"release\", { originalEvent: event.originalEvent } );\n\t            } else if ( event.insideElementPressed ) {\n\t                outTo( _this, $.ButtonState.GROUP );\n\t            } else {\n\t                inTo( _this, $.ButtonState.HOVER );\n\t            }\n\t        },\n\t\n\t        clickHandler: function( event ) {\n\t            if ( event.quick ) {\n\t                /**\n\t                 * Raised when a mouse button is pressed and released or touch is initiated and ended in the Button element within the time and distance threshold.\n\t                 *\n\t                 * @event click\n\t                 * @memberof OpenSeadragon.Button\n\t                 * @type {object}\n\t                 * @property {OpenSeadragon.Button} eventSource - A reference to the Button which raised the event.\n\t                 * @property {Object} originalEvent - The original DOM event.\n\t                 * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t                 */\n\t                _this.raiseEvent(\"click\", { originalEvent: event.originalEvent });\n\t            }\n\t        },\n\t\n\t        keyHandler: function( event ){\n\t            //console.log( \"%s : handling key %s!\", _this.tooltip, event.keyCode);\n\t            if( 13 === event.keyCode ){\n\t                /***\n\t                 * Raised when a mouse button is pressed and released or touch is initiated and ended in the Button element within the time and distance threshold.\n\t                 *\n\t                 * @event click\n\t                 * @memberof OpenSeadragon.Button\n\t                 * @type {object}\n\t                 * @property {OpenSeadragon.Button} eventSource - A reference to the Button which raised the event.\n\t                 * @property {Object} originalEvent - The original DOM event.\n\t                 * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t                 */\n\t                _this.raiseEvent( \"click\", { originalEvent: event.originalEvent } );\n\t                /***\n\t                 * Raised when the mouse button is released or touch ends in the Button element.\n\t                 *\n\t                 * @event release\n\t                 * @memberof OpenSeadragon.Button\n\t                 * @type {object}\n\t                 * @property {OpenSeadragon.Button} eventSource - A reference to the Button which raised the event.\n\t                 * @property {Object} originalEvent - The original DOM event.\n\t                 * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t                 */\n\t                _this.raiseEvent( \"release\", { originalEvent: event.originalEvent } );\n\t                return false;\n\t            }\n\t            return true;\n\t        }\n\t\n\t    });\n\t\n\t    outTo( this, $.ButtonState.REST );\n\t};\n\t\n\t$.extend( $.Button.prototype, $.EventSource.prototype, /** @lends OpenSeadragon.Button.prototype */{\n\t\n\t    /**\n\t     * TODO: Determine what this function is intended to do and if it's actually\n\t     * useful as an API point.\n\t     * @function\n\t     */\n\t    notifyGroupEnter: function() {\n\t        inTo( this, $.ButtonState.GROUP );\n\t    },\n\t\n\t    /**\n\t     * TODO: Determine what this function is intended to do and if it's actually\n\t     * useful as an API point.\n\t     * @function\n\t     */\n\t    notifyGroupExit: function() {\n\t        outTo( this, $.ButtonState.REST );\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     */\n\t    disable: function(){\n\t        this.notifyGroupExit();\n\t        this.element.disabled = true;\n\t        $.setElementOpacity( this.element, 0.2, true );\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     */\n\t    enable: function(){\n\t        this.element.disabled = false;\n\t        $.setElementOpacity( this.element, 1.0, true );\n\t        this.notifyGroupEnter();\n\t    }\n\t\n\t});\n\t\n\t\n\tfunction scheduleFade( button ) {\n\t    $.requestAnimationFrame(function(){\n\t        updateFade( button );\n\t    });\n\t}\n\t\n\tfunction updateFade( button ) {\n\t    var currentTime,\n\t        deltaTime,\n\t        opacity;\n\t\n\t    if ( button.shouldFade ) {\n\t        currentTime = $.now();\n\t        deltaTime   = currentTime - button.fadeBeginTime;\n\t        opacity     = 1.0 - deltaTime / button.fadeLength;\n\t        opacity     = Math.min( 1.0, opacity );\n\t        opacity     = Math.max( 0.0, opacity );\n\t\n\t        if( button.imgGroup ){\n\t            $.setElementOpacity( button.imgGroup, opacity, true );\n\t        }\n\t        if ( opacity > 0 ) {\n\t            // fade again\n\t            scheduleFade( button );\n\t        }\n\t    }\n\t}\n\t\n\tfunction beginFading( button ) {\n\t    button.shouldFade = true;\n\t    button.fadeBeginTime = $.now() + button.fadeDelay;\n\t    window.setTimeout( function(){\n\t        scheduleFade( button );\n\t    }, button.fadeDelay );\n\t}\n\t\n\tfunction stopFading( button ) {\n\t    button.shouldFade = false;\n\t    if( button.imgGroup ){\n\t        $.setElementOpacity( button.imgGroup, 1.0, true );\n\t    }\n\t}\n\t\n\tfunction inTo( button, newState ) {\n\t\n\t    if( button.element.disabled ){\n\t        return;\n\t    }\n\t\n\t    if ( newState >= $.ButtonState.GROUP &&\n\t         button.currentState == $.ButtonState.REST ) {\n\t        stopFading( button );\n\t        button.currentState = $.ButtonState.GROUP;\n\t    }\n\t\n\t    if ( newState >= $.ButtonState.HOVER &&\n\t         button.currentState == $.ButtonState.GROUP ) {\n\t        if( button.imgHover ){\n\t            button.imgHover.style.visibility = \"\";\n\t        }\n\t        button.currentState = $.ButtonState.HOVER;\n\t    }\n\t\n\t    if ( newState >= $.ButtonState.DOWN &&\n\t         button.currentState == $.ButtonState.HOVER ) {\n\t        if( button.imgDown ){\n\t            button.imgDown.style.visibility = \"\";\n\t        }\n\t        button.currentState = $.ButtonState.DOWN;\n\t    }\n\t}\n\t\n\t\n\tfunction outTo( button, newState ) {\n\t\n\t    if( button.element.disabled ){\n\t        return;\n\t    }\n\t\n\t    if ( newState <= $.ButtonState.HOVER &&\n\t         button.currentState == $.ButtonState.DOWN ) {\n\t        if( button.imgDown ){\n\t            button.imgDown.style.visibility = \"hidden\";\n\t        }\n\t        button.currentState = $.ButtonState.HOVER;\n\t    }\n\t\n\t    if ( newState <= $.ButtonState.GROUP &&\n\t         button.currentState == $.ButtonState.HOVER ) {\n\t        if( button.imgHover ){\n\t            button.imgHover.style.visibility = \"hidden\";\n\t        }\n\t        button.currentState = $.ButtonState.GROUP;\n\t    }\n\t\n\t    if ( newState <= $.ButtonState.REST &&\n\t         button.currentState == $.ButtonState.GROUP ) {\n\t        beginFading( button );\n\t        button.currentState = $.ButtonState.REST;\n\t    }\n\t}\n\t\n\t\n\t\n\t}( OpenSeadragon ));\n\t\n\t/*\n\t * OpenSeadragon - ButtonGroup\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function( $ ){\n\t/**\n\t * @class ButtonGroup\n\t * @classdesc Manages events on groups of buttons.\n\t *\n\t * @memberof OpenSeadragon\n\t * @param {Object} options - A dictionary of settings applied against the entire group of buttons.\n\t * @param {Array} options.buttons Array of buttons\n\t * @param {Element} [options.element] Element to use as the container\n\t **/\n\t$.ButtonGroup = function( options ) {\n\t\n\t    $.extend( true, this, {\n\t        /**\n\t         * An array containing the buttons themselves.\n\t         * @member {Array} buttons\n\t         * @memberof OpenSeadragon.ButtonGroup#\n\t         */\n\t        buttons:            [],\n\t        clickTimeThreshold: $.DEFAULT_SETTINGS.clickTimeThreshold,\n\t        clickDistThreshold: $.DEFAULT_SETTINGS.clickDistThreshold,\n\t        labelText:          \"\"\n\t    }, options );\n\t\n\t    // copy the button elements  TODO: Why?\n\t    var buttons = this.buttons.concat([]),\n\t        _this = this,\n\t        i;\n\t\n\t    /**\n\t     * The shared container for the buttons.\n\t     * @member {Element} element\n\t     * @memberof OpenSeadragon.ButtonGroup#\n\t     */\n\t    this.element = options.element || $.makeNeutralElement( \"div\" );\n\t\n\t    // TODO What if there IS an options.group specified?\n\t    if( !options.group ){\n\t        this.label   = $.makeNeutralElement( \"label\" );\n\t        //TODO: support labels for ButtonGroups\n\t        //this.label.innerHTML = this.labelText;\n\t        this.element.style.display = \"inline-block\";\n\t        this.element.appendChild( this.label );\n\t        for ( i = 0; i < buttons.length; i++ ) {\n\t            this.element.appendChild( buttons[ i ].element );\n\t        }\n\t    }\n\t\n\t    $.setElementTouchActionNone( this.element );\n\t\n\t    /**\n\t     * Tracks mouse/touch/key events accross the group of buttons.\n\t     * @member {OpenSeadragon.MouseTracker} tracker\n\t     * @memberof OpenSeadragon.ButtonGroup#\n\t     */\n\t    this.tracker = new $.MouseTracker({\n\t        element:            this.element,\n\t        clickTimeThreshold: this.clickTimeThreshold,\n\t        clickDistThreshold: this.clickDistThreshold,\n\t        enterHandler: function ( event ) {\n\t            var i;\n\t            for ( i = 0; i < _this.buttons.length; i++ ) {\n\t                _this.buttons[ i ].notifyGroupEnter();\n\t            }\n\t        },\n\t        exitHandler: function ( event ) {\n\t            var i;\n\t            if ( !event.insideElementPressed ) {\n\t                for ( i = 0; i < _this.buttons.length; i++ ) {\n\t                    _this.buttons[ i ].notifyGroupExit();\n\t                }\n\t            }\n\t        },\n\t    });\n\t};\n\t\n\t/** @lends OpenSeadragon.ButtonGroup.prototype */\n\t$.ButtonGroup.prototype = {\n\t\n\t    /**\n\t     * TODO: Figure out why this is used on the public API and if a more useful\n\t     * api can be created.\n\t     * @function\n\t     * @private\n\t     */\n\t    emulateEnter: function() {\n\t        this.tracker.enterHandler( { eventSource: this.tracker } );\n\t    },\n\t\n\t    /**\n\t     * TODO: Figure out why this is used on the public API and if a more useful\n\t     * api can be created.\n\t     * @function\n\t     * @private\n\t     */\n\t    emulateExit: function() {\n\t        this.tracker.exitHandler( { eventSource: this.tracker } );\n\t    }\n\t};\n\t\n\t\n\t}( OpenSeadragon ));\n\t\n\t/*\n\t * OpenSeadragon - Rect\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function($) {\n\t\n\t/**\n\t * @class Rect\n\t * @classdesc A Rectangle is described by it top left coordinates (x, y), width,\n\t * height and degrees of rotation around (x, y).\n\t * Note that the coordinate system used is the one commonly used with images:\n\t * x increases when going to the right\n\t * y increases when going to the bottom\n\t * degrees increases clockwise with 0 being the horizontal\n\t *\n\t * The constructor normalizes the rectangle to always have 0 <= degrees < 90\n\t *\n\t * @memberof OpenSeadragon\n\t * @param {Number} [x=0] The vector component 'x'.\n\t * @param {Number} [y=0] The vector component 'y'.\n\t * @param {Number} [width=0] The vector component 'width'.\n\t * @param {Number} [height=0] The vector component 'height'.\n\t * @param {Number} [degrees=0] Rotation of the rectangle around (x,y) in degrees.\n\t */\n\t$.Rect = function(x, y, width, height, degrees) {\n\t    /**\n\t     * The vector component 'x'.\n\t     * @member {Number} x\n\t     * @memberof OpenSeadragon.Rect#\n\t     */\n\t    this.x = typeof(x) === \"number\" ? x : 0;\n\t    /**\n\t     * The vector component 'y'.\n\t     * @member {Number} y\n\t     * @memberof OpenSeadragon.Rect#\n\t     */\n\t    this.y = typeof(y) === \"number\" ? y : 0;\n\t    /**\n\t     * The vector component 'width'.\n\t     * @member {Number} width\n\t     * @memberof OpenSeadragon.Rect#\n\t     */\n\t    this.width  = typeof(width) === \"number\" ? width : 0;\n\t    /**\n\t     * The vector component 'height'.\n\t     * @member {Number} height\n\t     * @memberof OpenSeadragon.Rect#\n\t     */\n\t    this.height = typeof(height) === \"number\" ? height : 0;\n\t\n\t    this.degrees = typeof(degrees) === \"number\" ? degrees : 0;\n\t\n\t    // Normalizes the rectangle.\n\t    this.degrees = this.degrees % 360;\n\t    if (this.degrees < 0) {\n\t        this.degrees += 360;\n\t    }\n\t    var newTopLeft, newWidth;\n\t    if (this.degrees >= 270) {\n\t        newTopLeft = this.getTopRight();\n\t        this.x = newTopLeft.x;\n\t        this.y = newTopLeft.y;\n\t        newWidth = this.height;\n\t        this.height = this.width;\n\t        this.width = newWidth;\n\t        this.degrees -= 270;\n\t    } else if (this.degrees >= 180) {\n\t        newTopLeft = this.getBottomRight();\n\t        this.x = newTopLeft.x;\n\t        this.y = newTopLeft.y;\n\t        this.degrees -= 180;\n\t    } else if (this.degrees >= 90) {\n\t        newTopLeft = this.getBottomLeft();\n\t        this.x = newTopLeft.x;\n\t        this.y = newTopLeft.y;\n\t        newWidth = this.height;\n\t        this.height = this.width;\n\t        this.width = newWidth;\n\t        this.degrees -= 90;\n\t    }\n\t};\n\t\n\t/**\n\t * Builds a rectangle having the 3 specified points as summits.\n\t * @static\n\t * @memberof OpenSeadragon.Rect\n\t * @param {OpenSeadragon.Point} topLeft\n\t * @param {OpenSeadragon.Point} topRight\n\t * @param {OpenSeadragon.Point} bottomLeft\n\t * @returns {OpenSeadragon.Rect}\n\t */\n\t$.Rect.fromSummits = function(topLeft, topRight, bottomLeft) {\n\t    var width = topLeft.distanceTo(topRight);\n\t    var height = topLeft.distanceTo(bottomLeft);\n\t    var diff = topRight.minus(topLeft);\n\t    var radians = Math.atan(diff.y / diff.x);\n\t    if (diff.x < 0) {\n\t        radians += Math.PI;\n\t    } else if (diff.y < 0) {\n\t        radians += 2 * Math.PI;\n\t    }\n\t    return new $.Rect(\n\t        topLeft.x,\n\t        topLeft.y,\n\t        width,\n\t        height,\n\t        radians / Math.PI * 180);\n\t};\n\t\n\t/** @lends OpenSeadragon.Rect.prototype */\n\t$.Rect.prototype = {\n\t    /**\n\t     * @function\n\t     * @returns {OpenSeadragon.Rect} a duplicate of this Rect\n\t     */\n\t    clone: function() {\n\t        return new $.Rect(\n\t            this.x,\n\t            this.y,\n\t            this.width,\n\t            this.height,\n\t            this.degrees);\n\t    },\n\t\n\t    /**\n\t     * The aspect ratio is simply the ratio of width to height.\n\t     * @function\n\t     * @returns {Number} The ratio of width to height.\n\t     */\n\t    getAspectRatio: function() {\n\t        return this.width / this.height;\n\t    },\n\t\n\t    /**\n\t     * Provides the coordinates of the upper-left corner of the rectangle as a\n\t     * point.\n\t     * @function\n\t     * @returns {OpenSeadragon.Point} The coordinate of the upper-left corner of\n\t     *  the rectangle.\n\t     */\n\t    getTopLeft: function() {\n\t        return new $.Point(\n\t            this.x,\n\t            this.y\n\t        );\n\t    },\n\t\n\t    /**\n\t     * Provides the coordinates of the bottom-right corner of the rectangle as a\n\t     * point.\n\t     * @function\n\t     * @returns {OpenSeadragon.Point} The coordinate of the bottom-right corner of\n\t     *  the rectangle.\n\t     */\n\t    getBottomRight: function() {\n\t        return new $.Point(this.x + this.width, this.y + this.height)\n\t            .rotate(this.degrees, this.getTopLeft());\n\t    },\n\t\n\t    /**\n\t     * Provides the coordinates of the top-right corner of the rectangle as a\n\t     * point.\n\t     * @function\n\t     * @returns {OpenSeadragon.Point} The coordinate of the top-right corner of\n\t     *  the rectangle.\n\t     */\n\t    getTopRight: function() {\n\t        return new $.Point(this.x + this.width, this.y)\n\t            .rotate(this.degrees, this.getTopLeft());\n\t    },\n\t\n\t    /**\n\t     * Provides the coordinates of the bottom-left corner of the rectangle as a\n\t     * point.\n\t     * @function\n\t     * @returns {OpenSeadragon.Point} The coordinate of the bottom-left corner of\n\t     *  the rectangle.\n\t     */\n\t    getBottomLeft: function() {\n\t        return new $.Point(this.x, this.y + this.height)\n\t            .rotate(this.degrees, this.getTopLeft());\n\t    },\n\t\n\t    /**\n\t     * Computes the center of the rectangle.\n\t     * @function\n\t     * @returns {OpenSeadragon.Point} The center of the rectangle as represented\n\t     *  as represented by a 2-dimensional vector (x,y)\n\t     */\n\t    getCenter: function() {\n\t        return new $.Point(\n\t            this.x + this.width / 2.0,\n\t            this.y + this.height / 2.0\n\t        ).rotate(this.degrees, this.getTopLeft());\n\t    },\n\t\n\t    /**\n\t     * Returns the width and height component as a vector OpenSeadragon.Point\n\t     * @function\n\t     * @returns {OpenSeadragon.Point} The 2 dimensional vector representing the\n\t     *  the width and height of the rectangle.\n\t     */\n\t    getSize: function() {\n\t        return new $.Point(this.width, this.height);\n\t    },\n\t\n\t    /**\n\t     * Determines if two Rectangles have equivalent components.\n\t     * @function\n\t     * @param {OpenSeadragon.Rect} rectangle The Rectangle to compare to.\n\t     * @return {Boolean} 'true' if all components are equal, otherwise 'false'.\n\t     */\n\t    equals: function(other) {\n\t        return (other instanceof $.Rect) &&\n\t            this.x === other.x &&\n\t            this.y === other.y &&\n\t            this.width === other.width &&\n\t            this.height === other.height &&\n\t            this.degrees === other.degrees;\n\t    },\n\t\n\t    /**\n\t    * Multiply all dimensions (except degrees) in this Rect by a factor and\n\t    * return a new Rect.\n\t    * @function\n\t    * @param {Number} factor The factor to multiply vector components.\n\t    * @returns {OpenSeadragon.Rect} A new rect representing the multiplication\n\t    *  of the vector components by the factor\n\t    */\n\t    times: function(factor) {\n\t        return new $.Rect(\n\t            this.x * factor,\n\t            this.y * factor,\n\t            this.width * factor,\n\t            this.height * factor,\n\t            this.degrees);\n\t    },\n\t\n\t    /**\n\t    * Translate/move this Rect by a vector and return new Rect.\n\t    * @function\n\t    * @param {OpenSeadragon.Point} delta The translation vector.\n\t    * @returns {OpenSeadragon.Rect} A new rect with altered position\n\t    */\n\t    translate: function(delta) {\n\t        return new $.Rect(\n\t            this.x + delta.x,\n\t            this.y + delta.y,\n\t            this.width,\n\t            this.height,\n\t            this.degrees);\n\t    },\n\t\n\t    /**\n\t     * Returns the smallest rectangle that will contain this and the given\n\t     * rectangle bounding boxes.\n\t     * @param {OpenSeadragon.Rect} rect\n\t     * @return {OpenSeadragon.Rect} The new rectangle.\n\t     */\n\t    union: function(rect) {\n\t        var thisBoundingBox = this.getBoundingBox();\n\t        var otherBoundingBox = rect.getBoundingBox();\n\t\n\t        var left = Math.min(thisBoundingBox.x, otherBoundingBox.x);\n\t        var top = Math.min(thisBoundingBox.y, otherBoundingBox.y);\n\t        var right = Math.max(\n\t            thisBoundingBox.x + thisBoundingBox.width,\n\t            otherBoundingBox.x + otherBoundingBox.width);\n\t        var bottom = Math.max(\n\t            thisBoundingBox.y + thisBoundingBox.height,\n\t            otherBoundingBox.y + otherBoundingBox.height);\n\t\n\t        return new $.Rect(\n\t            left,\n\t            top,\n\t            right - left,\n\t            bottom - top);\n\t    },\n\t\n\t    /**\n\t     * Returns the bounding box of the intersection of this rectangle with the\n\t     * given rectangle.\n\t     * @param {OpenSeadragon.Rect} rect\n\t     * @return {OpenSeadragon.Rect} the bounding box of the intersection\n\t     * or null if the rectangles don't intersect.\n\t     */\n\t    intersection: function(rect) {\n\t        // Simplified version of Weiler Atherton clipping algorithm\n\t        // https://en.wikipedia.org/wiki/Weiler%E2%80%93Atherton_clipping_algorithm\n\t        // Because we just want the bounding box of the intersection,\n\t        // we can just compute the bounding box of:\n\t        // 1. all the summits of this which are inside rect\n\t        // 2. all the summits of rect which are inside this\n\t        // 3. all the intersections of rect and this\n\t        var EPSILON = 0.0000000001;\n\t\n\t        var intersectionPoints = [];\n\t\n\t        var thisTopLeft = this.getTopLeft();\n\t        if (rect.containsPoint(thisTopLeft, EPSILON)) {\n\t            intersectionPoints.push(thisTopLeft);\n\t        }\n\t        var thisTopRight = this.getTopRight();\n\t        if (rect.containsPoint(thisTopRight, EPSILON)) {\n\t            intersectionPoints.push(thisTopRight);\n\t        }\n\t        var thisBottomLeft = this.getBottomLeft();\n\t        if (rect.containsPoint(thisBottomLeft, EPSILON)) {\n\t            intersectionPoints.push(thisBottomLeft);\n\t        }\n\t        var thisBottomRight = this.getBottomRight();\n\t        if (rect.containsPoint(thisBottomRight, EPSILON)) {\n\t            intersectionPoints.push(thisBottomRight);\n\t        }\n\t\n\t        var rectTopLeft = rect.getTopLeft();\n\t        if (this.containsPoint(rectTopLeft, EPSILON)) {\n\t            intersectionPoints.push(rectTopLeft);\n\t        }\n\t        var rectTopRight = rect.getTopRight();\n\t        if (this.containsPoint(rectTopRight, EPSILON)) {\n\t            intersectionPoints.push(rectTopRight);\n\t        }\n\t        var rectBottomLeft = rect.getBottomLeft();\n\t        if (this.containsPoint(rectBottomLeft, EPSILON)) {\n\t            intersectionPoints.push(rectBottomLeft);\n\t        }\n\t        var rectBottomRight = rect.getBottomRight();\n\t        if (this.containsPoint(rectBottomRight, EPSILON)) {\n\t            intersectionPoints.push(rectBottomRight);\n\t        }\n\t\n\t        var thisSegments = this._getSegments();\n\t        var rectSegments = rect._getSegments();\n\t        for (var i = 0; i < thisSegments.length; i++) {\n\t            var thisSegment = thisSegments[i];\n\t            for (var j = 0; j < rectSegments.length; j++) {\n\t                var rectSegment = rectSegments[j];\n\t                var intersect = getIntersection(thisSegment[0], thisSegment[1],\n\t                    rectSegment[0], rectSegment[1]);\n\t                if (intersect) {\n\t                    intersectionPoints.push(intersect);\n\t                }\n\t            }\n\t        }\n\t\n\t        // Get intersection point of segments [a,b] and [c,d]\n\t        function getIntersection(a, b, c, d) {\n\t            // http://stackoverflow.com/a/1968345/1440403\n\t            var abVector = b.minus(a);\n\t            var cdVector = d.minus(c);\n\t\n\t            var denom = -cdVector.x * abVector.y + abVector.x * cdVector.y;\n\t            if (denom === 0) {\n\t                return null;\n\t            }\n\t\n\t            var s = (abVector.x * (a.y - c.y) - abVector.y * (a.x - c.x)) / denom;\n\t            var t = (cdVector.x * (a.y - c.y) - cdVector.y * (a.x - c.x)) / denom;\n\t\n\t            if (-EPSILON <= s && s <= 1 - EPSILON &&\n\t                -EPSILON <= t && t <= 1 - EPSILON) {\n\t                return new $.Point(a.x + t * abVector.x, a.y + t * abVector.y);\n\t            }\n\t            return null;\n\t        }\n\t\n\t        if (intersectionPoints.length === 0) {\n\t            return null;\n\t        }\n\t\n\t        var minX = intersectionPoints[0].x;\n\t        var maxX = intersectionPoints[0].x;\n\t        var minY = intersectionPoints[0].y;\n\t        var maxY = intersectionPoints[0].y;\n\t        for (var k = 1; k < intersectionPoints.length; k++) {\n\t            var point = intersectionPoints[k];\n\t            if (point.x < minX) {\n\t                minX = point.x;\n\t            }\n\t            if (point.x > maxX) {\n\t                maxX = point.x;\n\t            }\n\t            if (point.y < minY) {\n\t                minY = point.y;\n\t            }\n\t            if (point.y > maxY) {\n\t                maxY = point.y;\n\t            }\n\t        }\n\t        return new $.Rect(minX, minY, maxX - minX, maxY - minY);\n\t    },\n\t\n\t    // private\n\t    _getSegments: function() {\n\t        var topLeft = this.getTopLeft();\n\t        var topRight = this.getTopRight();\n\t        var bottomLeft = this.getBottomLeft();\n\t        var bottomRight = this.getBottomRight();\n\t        return [[topLeft, topRight],\n\t            [topRight, bottomRight],\n\t            [bottomRight, bottomLeft],\n\t            [bottomLeft, topLeft]];\n\t    },\n\t\n\t    /**\n\t     * Rotates a rectangle around a point.\n\t     * @function\n\t     * @param {Number} degrees The angle in degrees to rotate.\n\t     * @param {OpenSeadragon.Point} [pivot] The point about which to rotate.\n\t     * Defaults to the center of the rectangle.\n\t     * @return {OpenSeadragon.Rect}\n\t     */\n\t    rotate: function(degrees, pivot) {\n\t        degrees = degrees % 360;\n\t        if (degrees === 0) {\n\t            return this.clone();\n\t        }\n\t        if (degrees < 0) {\n\t            degrees += 360;\n\t        }\n\t\n\t        pivot = pivot || this.getCenter();\n\t        var newTopLeft = this.getTopLeft().rotate(degrees, pivot);\n\t        var newTopRight = this.getTopRight().rotate(degrees, pivot);\n\t\n\t        var diff = newTopRight.minus(newTopLeft);\n\t        var radians = Math.atan(diff.y / diff.x);\n\t        if (diff.x < 0) {\n\t            radians += Math.PI;\n\t        } else if (diff.y < 0) {\n\t            radians += 2 * Math.PI;\n\t        }\n\t        return new $.Rect(\n\t            newTopLeft.x,\n\t            newTopLeft.y,\n\t            this.width,\n\t            this.height,\n\t            radians / Math.PI * 180);\n\t    },\n\t\n\t    /**\n\t     * Retrieves the smallest horizontal (degrees=0) rectangle which contains\n\t     * this rectangle.\n\t     * @returns {OpenSeadragon.Rect}\n\t     */\n\t    getBoundingBox: function() {\n\t        if (this.degrees === 0) {\n\t            return this.clone();\n\t        }\n\t        var topLeft = this.getTopLeft();\n\t        var topRight = this.getTopRight();\n\t        var bottomLeft = this.getBottomLeft();\n\t        var bottomRight = this.getBottomRight();\n\t        var minX = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n\t        var maxX = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n\t        var minY = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n\t        var maxY = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n\t        return new $.Rect(\n\t            minX,\n\t            minY,\n\t            maxX - minX,\n\t            maxY - minY);\n\t    },\n\t\n\t    /**\n\t     * Retrieves the smallest horizontal (degrees=0) rectangle which contains\n\t     * this rectangle and has integers x, y, width and height\n\t     * @returns {OpenSeadragon.Rect}\n\t     */\n\t    getIntegerBoundingBox: function() {\n\t        var boundingBox = this.getBoundingBox();\n\t        var x = Math.floor(boundingBox.x);\n\t        var y = Math.floor(boundingBox.y);\n\t        var width = Math.ceil(boundingBox.width + boundingBox.x - x);\n\t        var height = Math.ceil(boundingBox.height + boundingBox.y - y);\n\t        return new $.Rect(x, y, width, height);\n\t    },\n\t\n\t    /**\n\t     * Determines whether a point is inside this rectangle (edge included).\n\t     * @function\n\t     * @param {OpenSeadragon.Point} point\n\t     * @param {Number} [epsilon=0] the margin of error allowed\n\t     * @returns {Boolean} true if the point is inside this rectangle, false\n\t     * otherwise.\n\t     */\n\t    containsPoint: function(point, epsilon) {\n\t        epsilon = epsilon || 0;\n\t\n\t        // See http://stackoverflow.com/a/2752754/1440403 for explanation\n\t        var topLeft = this.getTopLeft();\n\t        var topRight = this.getTopRight();\n\t        var bottomLeft = this.getBottomLeft();\n\t        var topDiff = topRight.minus(topLeft);\n\t        var leftDiff = bottomLeft.minus(topLeft);\n\t\n\t        return ((point.x - topLeft.x) * topDiff.x +\n\t            (point.y - topLeft.y) * topDiff.y >= -epsilon) &&\n\t\n\t            ((point.x - topRight.x) * topDiff.x +\n\t            (point.y - topRight.y) * topDiff.y <= epsilon) &&\n\t\n\t            ((point.x - topLeft.x) * leftDiff.x +\n\t            (point.y - topLeft.y) * leftDiff.y >= -epsilon) &&\n\t\n\t            ((point.x - bottomLeft.x) * leftDiff.x +\n\t            (point.y - bottomLeft.y) * leftDiff.y <= epsilon);\n\t    },\n\t\n\t    /**\n\t     * Provides a string representation of the rectangle which is useful for\n\t     * debugging.\n\t     * @function\n\t     * @returns {String} A string representation of the rectangle.\n\t     */\n\t    toString: function() {\n\t        return \"[\" +\n\t            (Math.round(this.x * 100) / 100) + \", \" +\n\t            (Math.round(this.y * 100) / 100) + \", \" +\n\t            (Math.round(this.width * 100) / 100) + \"x\" +\n\t            (Math.round(this.height * 100) / 100) + \", \" +\n\t            (Math.round(this.degrees * 100) / 100) + \"deg\" +\n\t            \"]\";\n\t    }\n\t};\n\t\n\t\n\t}(OpenSeadragon));\n\t\n\t/*\n\t * OpenSeadragon - ReferenceStrip\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function ( $ ) {\n\t\n\t// dictionary from id to private properties\n\tvar THIS = {};\n\t\n\t/**\n\t *  The CollectionDrawer is a reimplementation if the Drawer API that\n\t *  focuses on allowing a viewport to be redefined as a collection\n\t *  of smaller viewports, defined by a clear number of rows and / or\n\t *  columns of which each item in the matrix of viewports has its own\n\t *  source.\n\t *\n\t *  This idea is a reexpression of the idea of dzi collections\n\t *  which allows a clearer algorithm to reuse the tile sources already\n\t *  supported by OpenSeadragon, in heterogenious or homogenious\n\t *  sequences just like mixed groups already supported by the viewer\n\t *  for the purpose of image sequnces.\n\t *\n\t *  TODO:   The difficult part of this feature is figuring out how to express\n\t *          this functionality as a combination of the functionality already\n\t *          provided by Drawer, Viewport, TileSource, and Navigator.  It may\n\t *          require better abstraction at those points in order to effeciently\n\t *          reuse those paradigms.\n\t */\n\t/**\n\t * @class ReferenceStrip\n\t * @memberof OpenSeadragon\n\t * @param {Object} options\n\t */\n\t$.ReferenceStrip = function ( options ) {\n\t\n\t    var _this       = this,\n\t        viewer      = options.viewer,\n\t        viewerSize  = $.getElementSize( viewer.element ),\n\t        element,\n\t        style,\n\t        i;\n\t\n\t    //We may need to create a new element and id if they did not\n\t    //provide the id for the existing element\n\t    if ( !options.id ) {\n\t        options.id              = 'referencestrip-' + $.now();\n\t        this.element            = $.makeNeutralElement( \"div\" );\n\t        this.element.id         = options.id;\n\t        this.element.className  = 'referencestrip';\n\t    }\n\t\n\t    options = $.extend( true, {\n\t        sizeRatio:  $.DEFAULT_SETTINGS.referenceStripSizeRatio,\n\t        position:   $.DEFAULT_SETTINGS.referenceStripPosition,\n\t        scroll:     $.DEFAULT_SETTINGS.referenceStripScroll,\n\t        clickTimeThreshold:  $.DEFAULT_SETTINGS.clickTimeThreshold\n\t    }, options, {\n\t        //required overrides\n\t        element:                this.element,\n\t        //These need to be overridden to prevent recursion since\n\t        //the navigator is a viewer and a viewer has a navigator\n\t        showNavigator:          false,\n\t        mouseNavEnabled:        false,\n\t        showNavigationControl:  false,\n\t        showSequenceControl:    false\n\t    } );\n\t\n\t    $.extend( this, options );\n\t    //Private state properties\n\t    THIS[this.id] = {\n\t        \"animating\":           false\n\t    };\n\t\n\t    this.minPixelRatio = this.viewer.minPixelRatio;\n\t\n\t    style = this.element.style;\n\t    style.marginTop     = '0px';\n\t    style.marginRight   = '0px';\n\t    style.marginBottom  = '0px';\n\t    style.marginLeft    = '0px';\n\t    style.left          = '0px';\n\t    style.bottom        = '0px';\n\t    style.border        = '0px';\n\t    style.background    = '#000';\n\t    style.position      = 'relative';\n\t\n\t    $.setElementTouchActionNone( this.element );\n\t\n\t    $.setElementOpacity( this.element, 0.8 );\n\t\n\t    this.viewer = viewer;\n\t    this.innerTracker = new $.MouseTracker( {\n\t        element:        this.element,\n\t        dragHandler:    $.delegate( this, onStripDrag ),\n\t        scrollHandler:  $.delegate( this, onStripScroll ),\n\t        enterHandler:   $.delegate( this, onStripEnter ),\n\t        exitHandler:    $.delegate( this, onStripExit ),\n\t        keyDownHandler: $.delegate( this, onKeyDown ),\n\t        keyHandler:     $.delegate( this, onKeyPress )\n\t    } );\n\t\n\t    //Controls the position and orientation of the reference strip and sets the\n\t    //appropriate width and height\n\t    if ( options.width && options.height ) {\n\t        this.element.style.width  = options.width + 'px';\n\t        this.element.style.height = options.height + 'px';\n\t        viewer.addControl(\n\t            this.element,\n\t            { anchor: $.ControlAnchor.BOTTOM_LEFT }\n\t        );\n\t    } else {\n\t        if ( \"horizontal\" == options.scroll ) {\n\t            this.element.style.width = (\n\t                viewerSize.x *\n\t                options.sizeRatio *\n\t                viewer.tileSources.length\n\t            ) + ( 12 * viewer.tileSources.length ) + 'px';\n\t\n\t            this.element.style.height = (\n\t                viewerSize.y *\n\t                options.sizeRatio\n\t            ) + 'px';\n\t\n\t            viewer.addControl(\n\t                this.element,\n\t                { anchor: $.ControlAnchor.BOTTOM_LEFT }\n\t            );\n\t        } else {\n\t            this.element.style.height = (\n\t                viewerSize.y *\n\t                options.sizeRatio *\n\t                viewer.tileSources.length\n\t            ) + ( 12 * viewer.tileSources.length ) + 'px';\n\t\n\t            this.element.style.width = (\n\t                viewerSize.x *\n\t                options.sizeRatio\n\t            ) + 'px';\n\t\n\t            viewer.addControl(\n\t                this.element,\n\t                { anchor: $.ControlAnchor.TOP_LEFT }\n\t            );\n\t\n\t        }\n\t    }\n\t\n\t    this.panelWidth = ( viewerSize.x * this.sizeRatio ) + 8;\n\t    this.panelHeight = ( viewerSize.y * this.sizeRatio ) + 8;\n\t    this.panels = [];\n\t\n\t    /*jshint loopfunc:true*/\n\t    for ( i = 0; i < viewer.tileSources.length; i++ ) {\n\t\n\t        element = $.makeNeutralElement( 'div' );\n\t        element.id = this.element.id + \"-\" + i;\n\t\n\t        element.style.width         = _this.panelWidth + 'px';\n\t        element.style.height        = _this.panelHeight + 'px';\n\t        element.style.display       = 'inline';\n\t        element.style.float         = 'left'; //Webkit\n\t        element.style.cssFloat      = 'left'; //Firefox\n\t        element.style.styleFloat    = 'left'; //IE\n\t        element.style.padding       = '2px';\n\t        $.setElementTouchActionNone( element );\n\t\n\t        element.innerTracker = new $.MouseTracker( {\n\t            element:            element,\n\t            clickTimeThreshold: this.clickTimeThreshold,\n\t            clickDistThreshold: this.clickDistThreshold,\n\t            pressHandler: function ( event ) {\n\t                event.eventSource.dragging = $.now();\n\t            },\n\t            releaseHandler: function ( event ) {\n\t                var tracker = event.eventSource,\n\t                    id      = tracker.element.id,\n\t                    page    = Number( id.split( '-' )[2] ),\n\t                    now     = $.now();\n\t\n\t                if ( event.insideElementPressed &&\n\t                     event.insideElementReleased &&\n\t                     tracker.dragging &&\n\t                     ( now - tracker.dragging ) < tracker.clickTimeThreshold ) {\n\t                    tracker.dragging = null;\n\t                    viewer.goToPage( page );\n\t                }\n\t            }\n\t        } );\n\t\n\t        this.element.appendChild( element );\n\t\n\t        element.activePanel = false;\n\t\n\t        this.panels.push( element );\n\t\n\t    }\n\t    loadPanels( this, this.scroll == 'vertical' ? viewerSize.y : viewerSize.x, 0 );\n\t    this.setFocus( 0 );\n\t\n\t};\n\t\n\t$.extend( $.ReferenceStrip.prototype, $.EventSource.prototype, $.Viewer.prototype, /** @lends OpenSeadragon.ReferenceStrip.prototype */{\n\t\n\t    /**\n\t     * @function\n\t     */\n\t    setFocus: function ( page ) {\n\t        var element      = $.getElement( this.element.id + '-' + page ),\n\t            viewerSize   = $.getElementSize( this.viewer.canvas ),\n\t            scrollWidth  = Number( this.element.style.width.replace( 'px', '' ) ),\n\t            scrollHeight = Number( this.element.style.height.replace( 'px', '' ) ),\n\t            offsetLeft   = -Number( this.element.style.marginLeft.replace( 'px', '' ) ),\n\t            offsetTop    = -Number( this.element.style.marginTop.replace( 'px', '' ) ),\n\t            offset;\n\t\n\t        if ( this.currentSelected !== element ) {\n\t            if ( this.currentSelected ) {\n\t                this.currentSelected.style.background = '#000';\n\t            }\n\t            this.currentSelected = element;\n\t            this.currentSelected.style.background = '#999';\n\t\n\t            if ( 'horizontal' == this.scroll ) {\n\t                //right left\n\t                offset = ( Number( page ) ) * ( this.panelWidth + 3 );\n\t                if ( offset > offsetLeft + viewerSize.x - this.panelWidth ) {\n\t                    offset = Math.min( offset, ( scrollWidth - viewerSize.x ) );\n\t                    this.element.style.marginLeft = -offset + 'px';\n\t                    loadPanels( this, viewerSize.x, -offset );\n\t                } else if ( offset < offsetLeft ) {\n\t                    offset = Math.max( 0, offset - viewerSize.x / 2 );\n\t                    this.element.style.marginLeft = -offset + 'px';\n\t                    loadPanels( this, viewerSize.x, -offset );\n\t                }\n\t            } else {\n\t                offset = ( Number( page ) ) * ( this.panelHeight + 3 );\n\t                if ( offset > offsetTop + viewerSize.y - this.panelHeight ) {\n\t                    offset = Math.min( offset, ( scrollHeight - viewerSize.y ) );\n\t                    this.element.style.marginTop = -offset + 'px';\n\t                    loadPanels( this, viewerSize.y, -offset );\n\t                } else if ( offset < offsetTop ) {\n\t                    offset = Math.max( 0, offset - viewerSize.y / 2 );\n\t                    this.element.style.marginTop = -offset + 'px';\n\t                    loadPanels( this, viewerSize.y, -offset );\n\t                }\n\t            }\n\t\n\t            this.currentPage = page;\n\t            onStripEnter.call( this, { eventSource: this.innerTracker } );\n\t        }\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     */\n\t    update: function () {\n\t        if ( THIS[this.id].animating ) {\n\t            $.console.log( 'image reference strip update' );\n\t            return true;\n\t        }\n\t        return false;\n\t    },\n\t\n\t    // Overrides Viewer.destroy\n\t    destroy: function() {\n\t        if (this.element) {\n\t            this.element.parentNode.removeChild(this.element);\n\t        }\n\t    }\n\t\n\t} );\n\t\n\t\n\t\n\t\n\t/**\n\t * @private\n\t * @inner\n\t * @function\n\t */\n\tfunction onStripDrag( event ) {\n\t\n\t    var offsetLeft   = Number( this.element.style.marginLeft.replace( 'px', '' ) ),\n\t        offsetTop    = Number( this.element.style.marginTop.replace( 'px', '' ) ),\n\t        scrollWidth  = Number( this.element.style.width.replace( 'px', '' ) ),\n\t        scrollHeight = Number( this.element.style.height.replace( 'px', '' ) ),\n\t        viewerSize   = $.getElementSize( this.viewer.canvas );\n\t    this.dragging = true;\n\t    if ( this.element ) {\n\t        if ( 'horizontal' == this.scroll ) {\n\t            if ( -event.delta.x > 0 ) {\n\t                //forward\n\t                if ( offsetLeft > -( scrollWidth - viewerSize.x ) ) {\n\t                    this.element.style.marginLeft = ( offsetLeft + ( event.delta.x * 2 ) ) + 'px';\n\t                    loadPanels( this, viewerSize.x, offsetLeft + ( event.delta.x * 2 ) );\n\t                }\n\t            } else if ( -event.delta.x < 0 ) {\n\t                //reverse\n\t                if ( offsetLeft < 0 ) {\n\t                    this.element.style.marginLeft = ( offsetLeft + ( event.delta.x * 2 ) ) + 'px';\n\t                    loadPanels( this, viewerSize.x, offsetLeft + ( event.delta.x * 2 ) );\n\t                }\n\t            }\n\t        } else {\n\t            if ( -event.delta.y > 0 ) {\n\t                //forward\n\t                if ( offsetTop > -( scrollHeight - viewerSize.y ) ) {\n\t                    this.element.style.marginTop = ( offsetTop + ( event.delta.y * 2 ) ) + 'px';\n\t                    loadPanels( this, viewerSize.y, offsetTop + ( event.delta.y * 2 ) );\n\t                }\n\t            } else if ( -event.delta.y < 0 ) {\n\t                //reverse\n\t                if ( offsetTop < 0 ) {\n\t                    this.element.style.marginTop = ( offsetTop + ( event.delta.y * 2 ) ) + 'px';\n\t                    loadPanels( this, viewerSize.y, offsetTop + ( event.delta.y * 2 ) );\n\t                }\n\t            }\n\t        }\n\t    }\n\t    return false;\n\t\n\t}\n\t\n\t\n\t\n\t/**\n\t * @private\n\t * @inner\n\t * @function\n\t */\n\tfunction onStripScroll( event ) {\n\t    var offsetLeft   = Number( this.element.style.marginLeft.replace( 'px', '' ) ),\n\t        offsetTop    = Number( this.element.style.marginTop.replace( 'px', '' ) ),\n\t        scrollWidth  = Number( this.element.style.width.replace( 'px', '' ) ),\n\t        scrollHeight = Number( this.element.style.height.replace( 'px', '' ) ),\n\t        viewerSize   = $.getElementSize( this.viewer.canvas );\n\t    if ( this.element ) {\n\t        if ( 'horizontal' == this.scroll ) {\n\t            if ( event.scroll > 0 ) {\n\t                //forward\n\t                if ( offsetLeft > -( scrollWidth - viewerSize.x ) ) {\n\t                    this.element.style.marginLeft = ( offsetLeft - ( event.scroll * 60 ) ) + 'px';\n\t                    loadPanels( this, viewerSize.x, offsetLeft - ( event.scroll * 60 ) );\n\t                }\n\t            } else if ( event.scroll < 0 ) {\n\t                //reverse\n\t                if ( offsetLeft < 0 ) {\n\t                    this.element.style.marginLeft = ( offsetLeft - ( event.scroll * 60 ) ) + 'px';\n\t                    loadPanels( this, viewerSize.x, offsetLeft - ( event.scroll * 60 ) );\n\t                }\n\t            }\n\t        } else {\n\t            if ( event.scroll < 0 ) {\n\t                //scroll up\n\t                if ( offsetTop > viewerSize.y - scrollHeight ) {\n\t                    this.element.style.marginTop = ( offsetTop + ( event.scroll * 60 ) ) + 'px';\n\t                    loadPanels( this, viewerSize.y, offsetTop + ( event.scroll * 60 ) );\n\t                }\n\t            } else if ( event.scroll > 0 ) {\n\t                //scroll dowm\n\t                if ( offsetTop < 0 ) {\n\t                    this.element.style.marginTop = ( offsetTop + ( event.scroll * 60 ) ) + 'px';\n\t                    loadPanels( this, viewerSize.y, offsetTop + ( event.scroll * 60 ) );\n\t                }\n\t            }\n\t        }\n\t    }\n\t    //cancels event\n\t    return false;\n\t}\n\t\n\t\n\tfunction loadPanels( strip, viewerSize, scroll ) {\n\t    var panelSize,\n\t        activePanelsStart,\n\t        activePanelsEnd,\n\t        miniViewer,\n\t        style,\n\t        i,\n\t        element;\n\t    if ( 'horizontal' == strip.scroll ) {\n\t        panelSize = strip.panelWidth;\n\t    } else {\n\t        panelSize = strip.panelHeight;\n\t    }\n\t    activePanelsStart = Math.ceil( viewerSize / panelSize ) + 5;\n\t    activePanelsEnd = Math.ceil( ( Math.abs( scroll ) + viewerSize ) / panelSize ) + 1;\n\t    activePanelsStart = activePanelsEnd - activePanelsStart;\n\t    activePanelsStart = activePanelsStart < 0 ? 0 : activePanelsStart;\n\t\n\t    for ( i = activePanelsStart; i < activePanelsEnd && i < strip.panels.length; i++ ) {\n\t        element = strip.panels[i];\n\t        if ( !element.activePanel ) {\n\t            miniViewer = new $.Viewer( {\n\t                id:                     element.id,\n\t                tileSources:            [strip.viewer.tileSources[i]],\n\t                element:                element,\n\t                navigatorSizeRatio:     strip.sizeRatio,\n\t                showNavigator:          false,\n\t                mouseNavEnabled:        false,\n\t                showNavigationControl:  false,\n\t                showSequenceControl:    false,\n\t                immediateRender:        true,\n\t                blendTime:              0,\n\t                animationTime:          0\n\t            } );\n\t\n\t            miniViewer.displayRegion           = $.makeNeutralElement( \"div\" );\n\t            miniViewer.displayRegion.id        = element.id + '-displayregion';\n\t            miniViewer.displayRegion.className = 'displayregion';\n\t\n\t            style               = miniViewer.displayRegion.style;\n\t            style.position      = 'relative';\n\t            style.top           = '0px';\n\t            style.left          = '0px';\n\t            style.fontSize      = '0px';\n\t            style.overflow      = 'hidden';\n\t            style.float         = 'left'; //Webkit\n\t            style.cssFloat      = 'left'; //Firefox\n\t            style.styleFloat    = 'left'; //IE\n\t            style.zIndex        = 999999999;\n\t            style.cursor        = 'default';\n\t            style.width         = ( strip.panelWidth - 4 ) + 'px';\n\t            style.height        = ( strip.panelHeight - 4 ) + 'px';\n\t\n\t            // TODO: What is this for? Future keyboard navigation support?\n\t            miniViewer.displayRegion.innerTracker = new $.MouseTracker( {\n\t                element: miniViewer.displayRegion,\n\t                startDisabled: true\n\t            } );\n\t\n\t            element.getElementsByTagName( 'div' )[0].appendChild(\n\t                miniViewer.displayRegion\n\t            );\n\t\n\t            element.activePanel = true;\n\t        }\n\t    }\n\t}\n\t\n\t\n\t/**\n\t * @private\n\t * @inner\n\t * @function\n\t */\n\tfunction onStripEnter( event ) {\n\t    var element = event.eventSource.element;\n\t\n\t    //$.setElementOpacity(element, 0.8);\n\t\n\t    //element.style.border = '1px solid #555';\n\t    //element.style.background = '#000';\n\t\n\t    if ( 'horizontal' == this.scroll ) {\n\t\n\t        //element.style.paddingTop = \"0px\";\n\t        element.style.marginBottom = \"0px\";\n\t\n\t    } else {\n\t\n\t        //element.style.paddingRight = \"0px\";\n\t        element.style.marginLeft = \"0px\";\n\t\n\t    }\n\t    return false;\n\t}\n\t\n\t\n\t/**\n\t * @private\n\t * @inner\n\t * @function\n\t */\n\tfunction onStripExit( event ) {\n\t    var element = event.eventSource.element;\n\t\n\t    if ( 'horizontal' == this.scroll ) {\n\t\n\t        //element.style.paddingTop = \"10px\";\n\t        element.style.marginBottom = \"-\" + ( $.getElementSize( element ).y / 2 ) + \"px\";\n\t\n\t    } else {\n\t\n\t        //element.style.paddingRight = \"10px\";\n\t        element.style.marginLeft = \"-\" + ( $.getElementSize( element ).x / 2 ) + \"px\";\n\t\n\t    }\n\t    return false;\n\t}\n\t\n\t\n\t/**\n\t * @private\n\t * @inner\n\t * @function\n\t */\n\tfunction onKeyDown( event ) {\n\t    //console.log( event.keyCode );\n\t\n\t    if ( !event.preventDefaultAction && !event.ctrl && !event.alt && !event.meta ) {\n\t        switch ( event.keyCode ) {\n\t            case 38: //up arrow\n\t                onStripScroll.call( this, { eventSource: this.tracker, position: null, scroll: 1, shift: null } );\n\t                return false;\n\t            case 40: //down arrow\n\t                onStripScroll.call( this, { eventSource: this.tracker, position: null, scroll: -1, shift: null } );\n\t                return false;\n\t            case 37: //left arrow\n\t                onStripScroll.call( this, { eventSource: this.tracker, position: null, scroll: -1, shift: null } );\n\t                return false;\n\t            case 39: //right arrow\n\t                onStripScroll.call( this, { eventSource: this.tracker, position: null, scroll: 1, shift: null } );\n\t                return false;\n\t            default:\n\t                //console.log( 'navigator keycode %s', event.keyCode );\n\t                return true;\n\t        }\n\t    } else {\n\t        return true;\n\t    }\n\t}\n\t\n\t\n\t/**\n\t * @private\n\t * @inner\n\t * @function\n\t */\n\tfunction onKeyPress( event ) {\n\t    //console.log( event.keyCode );\n\t\n\t    if ( !event.preventDefaultAction && !event.ctrl && !event.alt && !event.meta ) {\n\t        switch ( event.keyCode ) {\n\t            case 61: //=|+\n\t                onStripScroll.call( this, { eventSource: this.tracker, position: null, scroll: 1, shift: null } );\n\t                return false;\n\t            case 45: //-|_\n\t                onStripScroll.call( this, { eventSource: this.tracker, position: null, scroll: -1, shift: null } );\n\t                return false;\n\t            case 48: //0|)\n\t            case 119: //w\n\t            case 87: //W\n\t                onStripScroll.call( this, { eventSource: this.tracker, position: null, scroll: 1, shift: null } );\n\t                return false;\n\t            case 115: //s\n\t            case 83: //S\n\t                onStripScroll.call( this, { eventSource: this.tracker, position: null, scroll: -1, shift: null } );\n\t                return false;\n\t            case 97: //a\n\t                onStripScroll.call( this, { eventSource: this.tracker, position: null, scroll: -1, shift: null } );\n\t                return false;\n\t            case 100: //d\n\t                onStripScroll.call( this, { eventSource: this.tracker, position: null, scroll: 1, shift: null } );\n\t                return false;\n\t            default:\n\t                //console.log( 'navigator keycode %s', event.keyCode );\n\t                return true;\n\t        }\n\t    } else {\n\t        return true;\n\t    }\n\t}\n\t\n\t\n\t\n\t} ( OpenSeadragon ) );\n\t\n\t/*\n\t * OpenSeadragon - DisplayRect\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function( $ ){\n\t\n\t/**\n\t * @class DisplayRect\n\t * @classdesc A display rectangle is very similar to {@link OpenSeadragon.Rect} but adds two\n\t * fields, 'minLevel' and 'maxLevel' which denote the supported zoom levels\n\t * for this rectangle.\n\t *\n\t * @memberof OpenSeadragon\n\t * @extends OpenSeadragon.Rect\n\t * @param {Number} x The vector component 'x'.\n\t * @param {Number} y The vector component 'y'.\n\t * @param {Number} width The vector component 'height'.\n\t * @param {Number} height The vector component 'width'.\n\t * @param {Number} minLevel The lowest zoom level supported.\n\t * @param {Number} maxLevel The highest zoom level supported.\n\t */\n\t$.DisplayRect = function( x, y, width, height, minLevel, maxLevel ) {\n\t    $.Rect.apply( this, [ x, y, width, height ] );\n\t\n\t    /**\n\t     * The lowest zoom level supported.\n\t     * @member {Number} minLevel\n\t     * @memberof OpenSeadragon.DisplayRect#\n\t     */\n\t    this.minLevel = minLevel;\n\t    /**\n\t     * The highest zoom level supported.\n\t     * @member {Number} maxLevel\n\t     * @memberof OpenSeadragon.DisplayRect#\n\t     */\n\t    this.maxLevel = maxLevel;\n\t};\n\t\n\t$.extend( $.DisplayRect.prototype, $.Rect.prototype );\n\t\n\t}( OpenSeadragon ));\n\t\n\t/*\n\t * OpenSeadragon - Spring\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function( $ ){\n\t\n\t/**\n\t * @class Spring\n\t * @memberof OpenSeadragon\n\t * @param {Object} options - Spring configuration settings.\n\t * @param {Number} options.springStiffness - Spring stiffness. Must be greater than zero.\n\t * The closer to zero, the closer to linear animation.\n\t * @param {Number} options.animationTime - Animation duration per spring, in seconds.\n\t * Must be zero or greater.\n\t * @param {Number} [options.initial=0] - Initial value of spring.\n\t * @param {Boolean} [options.exponential=false] - Whether this spring represents\n\t * an exponential scale (such as zoom) and should be animated accordingly. Note that\n\t * exponential springs must have non-zero values.\n\t */\n\t$.Spring = function( options ) {\n\t    var args = arguments;\n\t\n\t    if( typeof( options ) != 'object' ){\n\t        //allows backward compatible use of ( initialValue, config ) as\n\t        //constructor parameters\n\t        options = {\n\t            initial: args.length && typeof ( args[ 0 ] ) == \"number\" ?\n\t                args[ 0 ] :\n\t                undefined,\n\t            /**\n\t             * Spring stiffness.\n\t             * @member {Number} springStiffness\n\t             * @memberof OpenSeadragon.Spring#\n\t             */\n\t            springStiffness: args.length > 1 ?\n\t                args[ 1 ].springStiffness :\n\t                5.0,\n\t            /**\n\t             * Animation duration per spring.\n\t             * @member {Number} animationTime\n\t             * @memberof OpenSeadragon.Spring#\n\t             */\n\t            animationTime: args.length > 1 ?\n\t                args[ 1 ].animationTime :\n\t                1.5\n\t        };\n\t    }\n\t\n\t    $.console.assert(typeof options.springStiffness === \"number\" && options.springStiffness !== 0,\n\t        \"[OpenSeadragon.Spring] options.springStiffness must be a non-zero number\");\n\t\n\t    $.console.assert(typeof options.animationTime === \"number\" && options.animationTime >= 0,\n\t        \"[OpenSeadragon.Spring] options.animationTime must be a number greater than or equal to 0\");\n\t\n\t    if (options.exponential) {\n\t        this._exponential = true;\n\t        delete options.exponential;\n\t    }\n\t\n\t    $.extend( true, this, options);\n\t\n\t    /**\n\t     * @member {Object} current\n\t     * @memberof OpenSeadragon.Spring#\n\t     * @property {Number} value\n\t     * @property {Number} time\n\t     */\n\t    this.current = {\n\t        value: typeof ( this.initial ) == \"number\" ?\n\t            this.initial :\n\t            (this._exponential ? 0 : 1),\n\t        time:  $.now() // always work in milliseconds\n\t    };\n\t\n\t    $.console.assert(!this._exponential || this.current.value !== 0,\n\t        \"[OpenSeadragon.Spring] value must be non-zero for exponential springs\");\n\t\n\t    /**\n\t     * @member {Object} start\n\t     * @memberof OpenSeadragon.Spring#\n\t     * @property {Number} value\n\t     * @property {Number} time\n\t     */\n\t    this.start = {\n\t        value: this.current.value,\n\t        time:  this.current.time\n\t    };\n\t\n\t    /**\n\t     * @member {Object} target\n\t     * @memberof OpenSeadragon.Spring#\n\t     * @property {Number} value\n\t     * @property {Number} time\n\t     */\n\t    this.target = {\n\t        value: this.current.value,\n\t        time:  this.current.time\n\t    };\n\t\n\t    if (this._exponential) {\n\t        this.start._logValue = Math.log(this.start.value);\n\t        this.target._logValue = Math.log(this.target.value);\n\t        this.current._logValue = Math.log(this.current.value);\n\t    }\n\t};\n\t\n\t/** @lends OpenSeadragon.Spring.prototype */\n\t$.Spring.prototype = {\n\t\n\t    /**\n\t     * @function\n\t     * @param {Number} target\n\t     */\n\t    resetTo: function( target ) {\n\t        $.console.assert(!this._exponential || target !== 0,\n\t            \"[OpenSeadragon.Spring.resetTo] target must be non-zero for exponential springs\");\n\t\n\t        this.start.value = this.target.value = this.current.value = target;\n\t        this.start.time = this.target.time = this.current.time = $.now();\n\t\n\t        if (this._exponential) {\n\t            this.start._logValue = Math.log(this.start.value);\n\t            this.target._logValue = Math.log(this.target.value);\n\t            this.current._logValue = Math.log(this.current.value);\n\t        }\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @param {Number} target\n\t     */\n\t    springTo: function( target ) {\n\t        $.console.assert(!this._exponential || target !== 0,\n\t            \"[OpenSeadragon.Spring.springTo] target must be non-zero for exponential springs\");\n\t\n\t        this.start.value  = this.current.value;\n\t        this.start.time   = this.current.time;\n\t        this.target.value = target;\n\t        this.target.time  = this.start.time + 1000 * this.animationTime;\n\t\n\t        if (this._exponential) {\n\t            this.start._logValue = Math.log(this.start.value);\n\t            this.target._logValue = Math.log(this.target.value);\n\t        }\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @param {Number} delta\n\t     */\n\t    shiftBy: function( delta ) {\n\t        this.start.value  += delta;\n\t        this.target.value += delta;\n\t\n\t        if (this._exponential) {\n\t            $.console.assert(this.target.value !== 0 && this.start.value !== 0,\n\t                \"[OpenSeadragon.Spring.shiftBy] spring value must be non-zero for exponential springs\");\n\t\n\t            this.start._logValue = Math.log(this.start.value);\n\t            this.target._logValue = Math.log(this.target.value);\n\t        }\n\t    },\n\t\n\t    setExponential: function(value) {\n\t        this._exponential = value;\n\t\n\t        if (this._exponential) {\n\t            $.console.assert(this.current.value !== 0 && this.target.value !== 0 && this.start.value !== 0,\n\t                \"[OpenSeadragon.Spring.setExponential] spring value must be non-zero for exponential springs\");\n\t\n\t            this.start._logValue = Math.log(this.start.value);\n\t            this.target._logValue = Math.log(this.target.value);\n\t            this.current._logValue = Math.log(this.current.value);\n\t        }\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     */\n\t    update: function() {\n\t        this.current.time  = $.now();\n\t\n\t        var startValue, targetValue;\n\t        if (this._exponential) {\n\t            startValue = this.start._logValue;\n\t            targetValue = this.target._logValue;\n\t        } else {\n\t            startValue = this.start.value;\n\t            targetValue = this.target.value;\n\t        }\n\t\n\t        var currentValue = (this.current.time >= this.target.time) ?\n\t            targetValue :\n\t            startValue +\n\t                ( targetValue - startValue ) *\n\t                transform(\n\t                    this.springStiffness,\n\t                    ( this.current.time - this.start.time ) /\n\t                    ( this.target.time  - this.start.time )\n\t                );\n\t\n\t        if (this._exponential) {\n\t            this.current.value = Math.exp(currentValue);\n\t        } else {\n\t            this.current.value = currentValue;\n\t        }\n\t    },\n\t\n\t    /**\n\t     * Returns whether the spring is at the target value\n\t     * @function\n\t     * @returns {Boolean} True if at target value, false otherwise\n\t     */\n\t    isAtTargetValue: function() {\n\t        return this.current.value === this.target.value;\n\t    }\n\t};\n\t\n\t/**\n\t * @private\n\t */\n\tfunction transform( stiffness, x ) {\n\t    return ( 1.0 - Math.exp( stiffness * -x ) ) /\n\t        ( 1.0 - Math.exp( -stiffness ) );\n\t}\n\t\n\t}( OpenSeadragon ));\n\t\n\t/*\n\t * OpenSeadragon - ImageLoader\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function( $ ){\n\t\n\t// private class\n\tfunction ImageJob ( options ) {\n\t\n\t    $.extend( true, this, {\n\t        timeout:        $.DEFAULT_SETTINGS.timeout,\n\t        jobId:          null\n\t    }, options );\n\t\n\t    /**\n\t     * Image object which will contain downloaded image.\n\t     * @member {Image} image\n\t     * @memberof OpenSeadragon.ImageJob#\n\t     */\n\t    this.image = null;\n\t}\n\t\n\tImageJob.prototype = {\n\t    errorMsg: null,\n\t    start: function(){\n\t        var _this = this;\n\t\n\t        this.image = new Image();\n\t\n\t        if ( this.crossOriginPolicy !== false ) {\n\t            this.image.crossOrigin = this.crossOriginPolicy;\n\t        }\n\t\n\t        this.image.onload = function(){\n\t            _this.finish( true );\n\t        };\n\t        this.image.onabort = this.image.onerror = function(){\n\t            _this.errorMsg = \"Image load aborted\";\n\t            _this.finish( false );\n\t        };\n\t\n\t        this.jobId = window.setTimeout( function(){\n\t            _this.errorMsg = \"Image load exceeded timeout\";\n\t            _this.finish( false );\n\t        }, this.timeout);\n\t\n\t        this.image.src = this.src;\n\t    },\n\t\n\t    finish: function( successful ) {\n\t        this.image.onload = this.image.onerror = this.image.onabort = null;\n\t        if (!successful) {\n\t            this.image = null;\n\t        }\n\t\n\t        if ( this.jobId ) {\n\t            window.clearTimeout( this.jobId );\n\t        }\n\t\n\t        this.callback( this );\n\t    }\n\t\n\t};\n\t\n\t/**\n\t * @class ImageLoader\n\t * @memberof OpenSeadragon\n\t * @classdesc Handles downloading of a set of images using asynchronous queue pattern.\n\t * You generally won't have to interact with the ImageLoader directly.\n\t * @param {Object} options - Options for this ImageLoader.\n\t * @param {Number} [options.jobLimit] - The number of concurrent image requests. See imageLoaderLimit in {@link OpenSeadragon.Options} for details.\n\t */\n\t$.ImageLoader = function( options ) {\n\t\n\t    $.extend( true, this, {\n\t        jobLimit:       $.DEFAULT_SETTINGS.imageLoaderLimit,\n\t        jobQueue:       [],\n\t        jobsInProgress: 0\n\t    }, options );\n\t\n\t};\n\t\n\t/** @lends OpenSeadragon.ImageLoader.prototype */\n\t$.ImageLoader.prototype = {\n\t\n\t    /**\n\t     * Add an unloaded image to the loader queue.\n\t     * @method\n\t     * @param {String} src - URL of image to download.\n\t     * @param {String} crossOriginPolicy - CORS policy to use for downloads\n\t     * @param {Function} callback - Called once image has been downloaded.\n\t     */\n\t    addJob: function( options ) {\n\t        var _this = this,\n\t            complete = function( job ) {\n\t                completeJob( _this, job, options.callback );\n\t            },\n\t            jobOptions = {\n\t                src: options.src,\n\t                crossOriginPolicy: options.crossOriginPolicy,\n\t                callback: complete,\n\t                abort: options.abort\n\t            },\n\t            newJob = new ImageJob( jobOptions );\n\t\n\t        if ( !this.jobLimit || this.jobsInProgress < this.jobLimit ) {\n\t            newJob.start();\n\t            this.jobsInProgress++;\n\t        }\n\t        else {\n\t            this.jobQueue.push( newJob );\n\t        }\n\t    },\n\t\n\t    /**\n\t     * Clear any unstarted image loading jobs from the queue.\n\t     * @method\n\t     */\n\t    clear: function() {\n\t        for( var i = 0; i < this.jobQueue.length; i++ ) {\n\t            var job = this.jobQueue[i];\n\t            if ( typeof job.abort === \"function\" ) {\n\t                job.abort();\n\t            }\n\t        }\n\t\n\t        this.jobQueue = [];\n\t    }\n\t};\n\t\n\t/**\n\t * Cleans up ImageJob once completed.\n\t * @method\n\t * @private\n\t * @param loader - ImageLoader used to start job.\n\t * @param job - The ImageJob that has completed.\n\t * @param callback - Called once cleanup is finished.\n\t */\n\tfunction completeJob( loader, job, callback ) {\n\t    var nextJob;\n\t\n\t    loader.jobsInProgress--;\n\t\n\t    if ( (!loader.jobLimit || loader.jobsInProgress < loader.jobLimit) && loader.jobQueue.length > 0) {\n\t        nextJob = loader.jobQueue.shift();\n\t        nextJob.start();\n\t        loader.jobsInProgress++;\n\t    }\n\t\n\t    callback( job.image, job.errorMsg );\n\t}\n\t\n\t}( OpenSeadragon ));\n\t\n\t/*\n\t * OpenSeadragon - Tile\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function( $ ){\n\t\n\t/**\n\t * @class Tile\n\t * @memberof OpenSeadragon\n\t * @param {Number} level The zoom level this tile belongs to.\n\t * @param {Number} x The vector component 'x'.\n\t * @param {Number} y The vector component 'y'.\n\t * @param {OpenSeadragon.Point} bounds Where this tile fits, in normalized\n\t *      coordinates.\n\t * @param {Boolean} exists Is this tile a part of a sparse image? ( Also has\n\t *      this tile failed to load? )\n\t * @param {String} url The URL of this tile's image.\n\t * @param {CanvasRenderingContext2D} context2D The context2D of this tile if it\n\t * is provided directly by the tile source.\n\t */\n\t$.Tile = function(level, x, y, bounds, exists, url, context2D) {\n\t    /**\n\t     * The zoom level this tile belongs to.\n\t     * @member {Number} level\n\t     * @memberof OpenSeadragon.Tile#\n\t     */\n\t    this.level   = level;\n\t    /**\n\t     * The vector component 'x'.\n\t     * @member {Number} x\n\t     * @memberof OpenSeadragon.Tile#\n\t     */\n\t    this.x       = x;\n\t    /**\n\t     * The vector component 'y'.\n\t     * @member {Number} y\n\t     * @memberof OpenSeadragon.Tile#\n\t     */\n\t    this.y       = y;\n\t    /**\n\t     * Where this tile fits, in normalized coordinates\n\t     * @member {OpenSeadragon.Rect} bounds\n\t     * @memberof OpenSeadragon.Tile#\n\t     */\n\t    this.bounds  = bounds;\n\t    /**\n\t     * Is this tile a part of a sparse image? Also has this tile failed to load?\n\t     * @member {Boolean} exists\n\t     * @memberof OpenSeadragon.Tile#\n\t     */\n\t    this.exists  = exists;\n\t    /**\n\t     * The URL of this tile's image.\n\t     * @member {String} url\n\t     * @memberof OpenSeadragon.Tile#\n\t     */\n\t    this.url     = url;\n\t    /**\n\t     * The context2D of this tile if it is provided directly by the tile source.\n\t     * @member {CanvasRenderingContext2D} context2D\n\t     * @memberOf OpenSeadragon.Tile#\n\t     */\n\t    this.context2D = context2D;\n\t    /**\n\t     * Is this tile loaded?\n\t     * @member {Boolean} loaded\n\t     * @memberof OpenSeadragon.Tile#\n\t     */\n\t    this.loaded  = false;\n\t    /**\n\t     * Is this tile loading?\n\t     * @member {Boolean} loading\n\t     * @memberof OpenSeadragon.Tile#\n\t     */\n\t    this.loading = false;\n\t\n\t    /**\n\t     * The HTML div element for this tile\n\t     * @member {Element} element\n\t     * @memberof OpenSeadragon.Tile#\n\t     */\n\t    this.element    = null;\n\t    /**\n\t     * The HTML img element for this tile.\n\t     * @member {Element} imgElement\n\t     * @memberof OpenSeadragon.Tile#\n\t     */\n\t    this.imgElement = null;\n\t    /**\n\t     * The Image object for this tile.\n\t     * @member {Object} image\n\t     * @memberof OpenSeadragon.Tile#\n\t     */\n\t    this.image      = null;\n\t\n\t    /**\n\t     * The alias of this.element.style.\n\t     * @member {String} style\n\t     * @memberof OpenSeadragon.Tile#\n\t     */\n\t    this.style      = null;\n\t    /**\n\t     * This tile's position on screen, in pixels.\n\t     * @member {OpenSeadragon.Point} position\n\t     * @memberof OpenSeadragon.Tile#\n\t     */\n\t    this.position   = null;\n\t    /**\n\t     * This tile's size on screen, in pixels.\n\t     * @member {OpenSeadragon.Point} size\n\t     * @memberof OpenSeadragon.Tile#\n\t     */\n\t    this.size       = null;\n\t    /**\n\t     * The start time of this tile's blending.\n\t     * @member {Number} blendStart\n\t     * @memberof OpenSeadragon.Tile#\n\t     */\n\t    this.blendStart = null;\n\t    /**\n\t     * The current opacity this tile should be.\n\t     * @member {Number} opacity\n\t     * @memberof OpenSeadragon.Tile#\n\t     */\n\t    this.opacity    = null;\n\t    /**\n\t     * The distance of this tile to the viewport center.\n\t     * @member {Number} distance\n\t     * @memberof OpenSeadragon.Tile#\n\t     */\n\t    this.distance   = null;\n\t    /**\n\t     * The visibility score of this tile.\n\t     * @member {Number} visibility\n\t     * @memberof OpenSeadragon.Tile#\n\t     */\n\t    this.visibility = null;\n\t\n\t    /**\n\t     * Whether this tile is currently being drawn.\n\t     * @member {Boolean} beingDrawn\n\t     * @memberof OpenSeadragon.Tile#\n\t     */\n\t    this.beingDrawn     = false;\n\t    /**\n\t     * Timestamp the tile was last touched.\n\t     * @member {Number} lastTouchTime\n\t     * @memberof OpenSeadragon.Tile#\n\t     */\n\t    this.lastTouchTime  = 0;\n\t};\n\t\n\t/** @lends OpenSeadragon.Tile.prototype */\n\t$.Tile.prototype = {\n\t\n\t    /**\n\t     * Provides a string representation of this tiles level and (x,y)\n\t     * components.\n\t     * @function\n\t     * @returns {String}\n\t     */\n\t    toString: function() {\n\t        return this.level + \"/\" + this.x + \"_\" + this.y;\n\t    },\n\t\n\t    // private\n\t    _hasTransparencyChannel: function() {\n\t        return !!this.context2D || this.url.match('.png');\n\t    },\n\t\n\t    /**\n\t     * Renders the tile in an html container.\n\t     * @function\n\t     * @param {Element} container\n\t     */\n\t    drawHTML: function( container ) {\n\t        if (!this.cacheImageRecord) {\n\t            $.console.warn(\n\t                '[Tile.drawHTML] attempting to draw tile %s when it\\'s not cached',\n\t                this.toString());\n\t            return;\n\t        }\n\t\n\t        if ( !this.loaded ) {\n\t            $.console.warn(\n\t                \"Attempting to draw tile %s when it's not yet loaded.\",\n\t                this.toString()\n\t            );\n\t            return;\n\t        }\n\t\n\t        //EXPERIMENTAL - trying to figure out how to scale the container\n\t        //               content during animation of the container size.\n\t\n\t        if ( !this.element ) {\n\t            this.element                              = $.makeNeutralElement( \"div\" );\n\t            this.imgElement                           = this.cacheImageRecord.getImage().cloneNode();\n\t            this.imgElement.style.msInterpolationMode = \"nearest-neighbor\";\n\t            this.imgElement.style.width               = \"100%\";\n\t            this.imgElement.style.height              = \"100%\";\n\t\n\t            this.style                     = this.element.style;\n\t            this.style.position            = \"absolute\";\n\t        }\n\t        if ( this.element.parentNode != container ) {\n\t            container.appendChild( this.element );\n\t        }\n\t        if ( this.imgElement.parentNode != this.element ) {\n\t            this.element.appendChild( this.imgElement );\n\t        }\n\t\n\t        this.style.top     = this.position.y + \"px\";\n\t        this.style.left    = this.position.x + \"px\";\n\t        this.style.height  = this.size.y + \"px\";\n\t        this.style.width   = this.size.x + \"px\";\n\t\n\t        $.setElementOpacity( this.element, this.opacity );\n\t    },\n\t\n\t    /**\n\t     * Renders the tile in a canvas-based context.\n\t     * @function\n\t     * @param {Canvas} context\n\t     * @param {Function} drawingHandler - Method for firing the drawing event.\n\t     * drawingHandler({context, tile, rendered})\n\t     * where <code>rendered</code> is the context with the pre-drawn image.\n\t     * @param {Number} [scale=1] - Apply a scale to position and size\n\t     * @param {OpenSeadragon.Point} [translate] - A translation vector\n\t     */\n\t    drawCanvas: function( context, drawingHandler, scale, translate ) {\n\t\n\t        var position = this.position.times($.pixelDensityRatio),\n\t            size     = this.size.times($.pixelDensityRatio),\n\t            rendered;\n\t\n\t        if (!this.context2D && !this.cacheImageRecord) {\n\t            $.console.warn(\n\t                '[Tile.drawCanvas] attempting to draw tile %s when it\\'s not cached',\n\t                this.toString());\n\t            return;\n\t        }\n\t\n\t        rendered = this.context2D || this.cacheImageRecord.getRenderedContext();\n\t\n\t        if ( !this.loaded || !rendered ){\n\t            $.console.warn(\n\t                \"Attempting to draw tile %s when it's not yet loaded.\",\n\t                this.toString()\n\t            );\n\t\n\t            return;\n\t        }\n\t\n\t        context.save();\n\t\n\t        context.globalAlpha = this.opacity;\n\t\n\t        if (typeof scale === 'number' && scale !== 1) {\n\t            // draw tile at a different scale\n\t            position = position.times(scale);\n\t            size = size.times(scale);\n\t        }\n\t\n\t        if (translate instanceof $.Point) {\n\t            // shift tile position slightly\n\t            position = position.plus(translate);\n\t        }\n\t\n\t        //if we are supposed to be rendering fully opaque rectangle,\n\t        //ie its done fading or fading is turned off, and if we are drawing\n\t        //an image with an alpha channel, then the only way\n\t        //to avoid seeing the tile underneath is to clear the rectangle\n\t        if (context.globalAlpha === 1 && this._hasTransparencyChannel()) {\n\t            //clearing only the inside of the rectangle occupied\n\t            //by the png prevents edge flikering\n\t            context.clearRect(\n\t                position.x + 1,\n\t                position.y + 1,\n\t                size.x - 2,\n\t                size.y - 2\n\t            );\n\t        }\n\t\n\t        // This gives the application a chance to make image manipulation\n\t        // changes as we are rendering the image\n\t        drawingHandler({context: context, tile: this, rendered: rendered});\n\t\n\t        context.drawImage(\n\t            rendered.canvas,\n\t            0,\n\t            0,\n\t            rendered.canvas.width,\n\t            rendered.canvas.height,\n\t            position.x,\n\t            position.y,\n\t            size.x,\n\t            size.y\n\t        );\n\t\n\t        context.restore();\n\t    },\n\t\n\t    /**\n\t     * Get the ratio between current and original size.\n\t     * @function\n\t     * @return {Float}\n\t     */\n\t    getScaleForEdgeSmoothing: function() {\n\t        var context;\n\t        if (this.cacheImageRecord) {\n\t            context = this.cacheImageRecord.getRenderedContext();\n\t        } else if (this.context2D) {\n\t            context = this.context2D;\n\t        } else {\n\t            $.console.warn(\n\t                '[Tile.drawCanvas] attempting to get tile scale %s when tile\\'s not cached',\n\t                this.toString());\n\t            return 1;\n\t        }\n\t        return context.canvas.width / (this.size.x * $.pixelDensityRatio);\n\t    },\n\t\n\t    /**\n\t     * Get a translation vector that when applied to the tile position produces integer coordinates.\n\t     * Needed to avoid swimming and twitching.\n\t     * @function\n\t     * @param {Number} [scale=1] - Scale to be applied to position.\n\t     * @return {OpenSeadragon.Point}\n\t     */\n\t    getTranslationForEdgeSmoothing: function(scale, canvasSize, sketchCanvasSize) {\n\t        // The translation vector must have positive values, otherwise the image goes a bit off\n\t        // the sketch canvas to the top and left and we must use negative coordinates to repaint it\n\t        // to the main canvas. In that case, some browsers throw:\n\t        // INDEX_SIZE_ERR: DOM Exception 1: Index or size was negative, or greater than the allowed value.\n\t        var x = Math.max(1, Math.ceil((sketchCanvasSize.x - canvasSize.x) / 2));\n\t        var y = Math.max(1, Math.ceil((sketchCanvasSize.y - canvasSize.y) / 2));\n\t        return new $.Point(x, y).minus(\n\t            this.position\n\t                .times($.pixelDensityRatio)\n\t                .times(scale || 1)\n\t                .apply(function(x) {\n\t                    return x % 1;\n\t                })\n\t        );\n\t    },\n\t\n\t    /**\n\t     * Removes tile from its container.\n\t     * @function\n\t     */\n\t    unload: function() {\n\t        if ( this.imgElement && this.imgElement.parentNode ) {\n\t            this.imgElement.parentNode.removeChild( this.imgElement );\n\t        }\n\t        if ( this.element && this.element.parentNode ) {\n\t            this.element.parentNode.removeChild( this.element );\n\t        }\n\t\n\t        this.element    = null;\n\t        this.imgElement = null;\n\t        this.loaded     = false;\n\t        this.loading    = false;\n\t    }\n\t};\n\t\n\t}( OpenSeadragon ));\n\t\n\t/*\n\t * OpenSeadragon - Overlay\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function($) {\n\t\n\t    /**\n\t     * An enumeration of positions that an overlay may be assigned relative to\n\t     * the viewport.\n\t     * It is identical to OpenSeadragon.Placement but is kept for backward\n\t     * compatibility.\n\t     * @member OverlayPlacement\n\t     * @memberof OpenSeadragon\n\t     * @static\n\t     * @readonly\n\t     * @type {Object}\n\t     * @property {Number} CENTER\n\t     * @property {Number} TOP_LEFT\n\t     * @property {Number} TOP\n\t     * @property {Number} TOP_RIGHT\n\t     * @property {Number} RIGHT\n\t     * @property {Number} BOTTOM_RIGHT\n\t     * @property {Number} BOTTOM\n\t     * @property {Number} BOTTOM_LEFT\n\t     * @property {Number} LEFT\n\t     */\n\t    $.OverlayPlacement = $.Placement;\n\t\n\t    /**\n\t     * An enumeration of possible ways to handle overlays rotation\n\t     * @member OverlayRotationMode\n\t     * @memberOf OpenSeadragon\n\t     * @static\n\t     * @readonly\n\t     * @property {Number} NO_ROTATION The overlay ignore the viewport rotation.\n\t     * @property {Number} EXACT The overlay use CSS 3 transforms to rotate with\n\t     * the viewport. If the overlay contains text, it will get rotated as well.\n\t     * @property {Number} BOUNDING_BOX The overlay adjusts for rotation by\n\t     * taking the size of the bounding box of the rotated bounds.\n\t     * Only valid for overlays with Rect location and scalable in both directions.\n\t     */\n\t    $.OverlayRotationMode = $.freezeObject({\n\t        NO_ROTATION: 1,\n\t        EXACT: 2,\n\t        BOUNDING_BOX: 3\n\t    });\n\t\n\t    /**\n\t     * @class Overlay\n\t     * @classdesc Provides a way to float an HTML element on top of the viewer element.\n\t     *\n\t     * @memberof OpenSeadragon\n\t     * @param {Object} options\n\t     * @param {Element} options.element\n\t     * @param {OpenSeadragon.Point|OpenSeadragon.Rect} options.location - The\n\t     * location of the overlay on the image. If a {@link OpenSeadragon.Point}\n\t     * is specified, the overlay will be located at this location with respect\n\t     * to the placement option. If a {@link OpenSeadragon.Rect} is specified,\n\t     * the overlay will be placed at this location with the corresponding width\n\t     * and height and placement TOP_LEFT.\n\t     * @param {OpenSeadragon.Placement} [options.placement=OpenSeadragon.Placement.TOP_LEFT]\n\t     * Defines what part of the overlay should be at the specified options.location\n\t     * @param {OpenSeadragon.Overlay.OnDrawCallback} [options.onDraw]\n\t     * @param {Boolean} [options.checkResize=true] Set to false to avoid to\n\t     * check the size of the overlay everytime it is drawn in the directions\n\t     * which are not scaled. It will improve performances but will cause a\n\t     * misalignment if the overlay size changes.\n\t     * @param {Number} [options.width] The width of the overlay in viewport\n\t     * coordinates. If specified, the width of the overlay will be adjusted when\n\t     * the zoom changes.\n\t     * @param {Number} [options.height] The height of the overlay in viewport\n\t     * coordinates. If specified, the height of the overlay will be adjusted when\n\t     * the zoom changes.\n\t     * @param {Boolean} [options.rotationMode=OpenSeadragon.OverlayRotationMode.EXACT]\n\t     * How to handle the rotation of the viewport.\n\t     */\n\t    $.Overlay = function(element, location, placement) {\n\t\n\t        /**\n\t         * onDraw callback signature used by {@link OpenSeadragon.Overlay}.\n\t         *\n\t         * @callback OnDrawCallback\n\t         * @memberof OpenSeadragon.Overlay\n\t         * @param {OpenSeadragon.Point} position\n\t         * @param {OpenSeadragon.Point} size\n\t         * @param {Element} element\n\t         */\n\t\n\t        var options;\n\t        if ($.isPlainObject(element)) {\n\t            options = element;\n\t        } else {\n\t            options = {\n\t                element: element,\n\t                location: location,\n\t                placement: placement\n\t            };\n\t        }\n\t\n\t        this.element = options.element;\n\t        this.style = options.element.style;\n\t        this._init(options);\n\t    };\n\t\n\t    /** @lends OpenSeadragon.Overlay.prototype */\n\t    $.Overlay.prototype = {\n\t\n\t        // private\n\t        _init: function(options) {\n\t            this.location = options.location;\n\t            this.placement = options.placement === undefined ?\n\t                $.Placement.TOP_LEFT : options.placement;\n\t            this.onDraw = options.onDraw;\n\t            this.checkResize = options.checkResize === undefined ?\n\t                true : options.checkResize;\n\t\n\t            // When this.width is not null, the overlay get scaled horizontally\n\t            this.width = options.width === undefined ? null : options.width;\n\t\n\t            // When this.height is not null, the overlay get scaled vertically\n\t            this.height = options.height === undefined ? null : options.height;\n\t\n\t            this.rotationMode = options.rotationMode || $.OverlayRotationMode.EXACT;\n\t\n\t            // Having a rect as location is a syntactic sugar\n\t            if (this.location instanceof $.Rect) {\n\t                this.width = this.location.width;\n\t                this.height = this.location.height;\n\t                this.location = this.location.getTopLeft();\n\t                this.placement = $.Placement.TOP_LEFT;\n\t            }\n\t\n\t            // Deprecated properties kept for backward compatibility.\n\t            this.scales = this.width !== null && this.height !== null;\n\t            this.bounds = new $.Rect(\n\t                this.location.x, this.location.y, this.width, this.height);\n\t            this.position = this.location;\n\t        },\n\t\n\t        /**\n\t         * Internal function to adjust the position of an overlay\n\t         * depending on it size and placement.\n\t         * @function\n\t         * @param {OpenSeadragon.Point} position\n\t         * @param {OpenSeadragon.Point} size\n\t         */\n\t        adjust: function(position, size) {\n\t            var properties = $.Placement.properties[this.placement];\n\t            if (!properties) {\n\t                return;\n\t            }\n\t            if (properties.isHorizontallyCentered) {\n\t                position.x -= size.x / 2;\n\t            } else if (properties.isRight) {\n\t                position.x -= size.x;\n\t            }\n\t            if (properties.isVerticallyCentered) {\n\t                position.y -= size.y / 2;\n\t            } else if (properties.isBottom) {\n\t                position.y -= size.y;\n\t            }\n\t        },\n\t\n\t        /**\n\t         * @function\n\t         */\n\t        destroy: function() {\n\t            var element = this.element;\n\t            var style = this.style;\n\t\n\t            if (element.parentNode) {\n\t                element.parentNode.removeChild(element);\n\t                //this should allow us to preserve overlays when required between\n\t                //pages\n\t                if (element.prevElementParent) {\n\t                    style.display = 'none';\n\t                    //element.prevElementParent.insertBefore(\n\t                    //    element,\n\t                    //    element.prevNextSibling\n\t                    //);\n\t                    document.body.appendChild(element);\n\t                }\n\t            }\n\t\n\t            // clear the onDraw callback\n\t            this.onDraw = null;\n\t\n\t            style.top = \"\";\n\t            style.left = \"\";\n\t            style.position = \"\";\n\t\n\t            if (this.width !== null) {\n\t                style.width = \"\";\n\t            }\n\t            if (this.height !== null) {\n\t                style.height = \"\";\n\t            }\n\t            var transformOriginProp = $.getCssPropertyWithVendorPrefix(\n\t                'transformOrigin');\n\t            var transformProp = $.getCssPropertyWithVendorPrefix(\n\t                'transform');\n\t            if (transformOriginProp && transformProp) {\n\t                style[transformOriginProp] = \"\";\n\t                style[transformProp] = \"\";\n\t            }\n\t        },\n\t\n\t        /**\n\t         * @function\n\t         * @param {Element} container\n\t         */\n\t        drawHTML: function(container, viewport) {\n\t            var element = this.element;\n\t            if (element.parentNode !== container) {\n\t                //save the source parent for later if we need it\n\t                element.prevElementParent = element.parentNode;\n\t                element.prevNextSibling = element.nextSibling;\n\t                container.appendChild(element);\n\t\n\t                // this.size is used by overlays which don't get scaled in at\n\t                // least one direction when this.checkResize is set to false.\n\t                this.size = $.getElementSize(element);\n\t            }\n\t\n\t            var positionAndSize = this._getOverlayPositionAndSize(viewport);\n\t\n\t            var position = positionAndSize.position;\n\t            var size = this.size = positionAndSize.size;\n\t            var rotate = positionAndSize.rotate;\n\t\n\t            // call the onDraw callback if it exists to allow one to overwrite\n\t            // the drawing/positioning/sizing of the overlay\n\t            if (this.onDraw) {\n\t                this.onDraw(position, size, this.element);\n\t            } else {\n\t                var style = this.style;\n\t                style.left = position.x + \"px\";\n\t                style.top = position.y + \"px\";\n\t                if (this.width !== null) {\n\t                    style.width = size.x + \"px\";\n\t                }\n\t                if (this.height !== null) {\n\t                    style.height = size.y + \"px\";\n\t                }\n\t                var transformOriginProp = $.getCssPropertyWithVendorPrefix(\n\t                    'transformOrigin');\n\t                var transformProp = $.getCssPropertyWithVendorPrefix(\n\t                    'transform');\n\t                if (transformOriginProp && transformProp) {\n\t                    if (rotate) {\n\t                        style[transformOriginProp] = this._getTransformOrigin();\n\t                        style[transformProp] = \"rotate(\" + rotate + \"deg)\";\n\t                    } else {\n\t                        style[transformOriginProp] = \"\";\n\t                        style[transformProp] = \"\";\n\t                    }\n\t                }\n\t                style.position = \"absolute\";\n\t\n\t                if (style.display !== 'none') {\n\t                    style.display = 'block';\n\t                }\n\t            }\n\t        },\n\t\n\t        // private\n\t        _getOverlayPositionAndSize: function(viewport) {\n\t            var position = viewport.pixelFromPoint(this.location, true);\n\t            var size = this._getSizeInPixels(viewport);\n\t            this.adjust(position, size);\n\t\n\t            var rotate = 0;\n\t            if (viewport.degrees &&\n\t                this.rotationMode !== $.OverlayRotationMode.NO_ROTATION) {\n\t                // BOUNDING_BOX is only valid if both directions get scaled.\n\t                // Get replaced by EXACT otherwise.\n\t                if (this.rotationMode === $.OverlayRotationMode.BOUNDING_BOX &&\n\t                    this.width !== null && this.height !== null) {\n\t                    var rect = new $.Rect(position.x, position.y, size.x, size.y);\n\t                    var boundingBox = this._getBoundingBox(rect, viewport.degrees);\n\t                    position = boundingBox.getTopLeft();\n\t                    size = boundingBox.getSize();\n\t                } else {\n\t                    rotate = viewport.degrees;\n\t                }\n\t            }\n\t\n\t            return {\n\t                position: position,\n\t                size: size,\n\t                rotate: rotate\n\t            };\n\t        },\n\t\n\t        // private\n\t        _getSizeInPixels: function(viewport) {\n\t            var width = this.size.x;\n\t            var height = this.size.y;\n\t            if (this.width !== null || this.height !== null) {\n\t                var scaledSize = viewport.deltaPixelsFromPointsNoRotate(\n\t                    new $.Point(this.width || 0, this.height || 0), true);\n\t                if (this.width !== null) {\n\t                    width = scaledSize.x;\n\t                }\n\t                if (this.height !== null) {\n\t                    height = scaledSize.y;\n\t                }\n\t            }\n\t            if (this.checkResize &&\n\t                (this.width === null || this.height === null)) {\n\t                var eltSize = this.size = $.getElementSize(this.element);\n\t                if (this.width === null) {\n\t                    width = eltSize.x;\n\t                }\n\t                if (this.height === null) {\n\t                    height = eltSize.y;\n\t                }\n\t            }\n\t            return new $.Point(width, height);\n\t        },\n\t\n\t        // private\n\t        _getBoundingBox: function(rect, degrees) {\n\t            var refPoint = this._getPlacementPoint(rect);\n\t            return rect.rotate(degrees, refPoint).getBoundingBox();\n\t        },\n\t\n\t        // private\n\t        _getPlacementPoint: function(rect) {\n\t            var result = new $.Point(rect.x, rect.y);\n\t            var properties = $.Placement.properties[this.placement];\n\t            if (properties) {\n\t                if (properties.isHorizontallyCentered) {\n\t                    result.x += rect.width / 2;\n\t                } else if (properties.isRight) {\n\t                    result.x += rect.width;\n\t                }\n\t                if (properties.isVerticallyCentered) {\n\t                    result.y += rect.height / 2;\n\t                } else if (properties.isBottom) {\n\t                    result.y += rect.height;\n\t                }\n\t            }\n\t            return result;\n\t        },\n\t\n\t        // private\n\t        _getTransformOrigin: function() {\n\t            var result = \"\";\n\t            var properties = $.Placement.properties[this.placement];\n\t            if (!properties) {\n\t                return result;\n\t            }\n\t            if (properties.isLeft) {\n\t                result = \"left\";\n\t            } else if (properties.isRight) {\n\t                result = \"right\";\n\t            }\n\t            if (properties.isTop) {\n\t                result += \" top\";\n\t            } else if (properties.isBottom) {\n\t                result += \" bottom\";\n\t            }\n\t            return result;\n\t        },\n\t\n\t        /**\n\t         * Changes the overlay settings.\n\t         * @function\n\t         * @param {OpenSeadragon.Point|OpenSeadragon.Rect|Object} location\n\t         * If an object is specified, the options are the same than the constructor\n\t         * except for the element which can not be changed.\n\t         * @param {OpenSeadragon.Placement} position\n\t         */\n\t        update: function(location, placement) {\n\t            var options = $.isPlainObject(location) ? location : {\n\t                location: location,\n\t                placement: placement\n\t            };\n\t            this._init({\n\t                location: options.location || this.location,\n\t                placement: options.placement !== undefined ?\n\t                    options.placement : this.placement,\n\t                onDraw: options.onDraw || this.onDraw,\n\t                checkResize: options.checkResize || this.checkResize,\n\t                width: options.width !== undefined ? options.width : this.width,\n\t                height: options.height !== undefined ? options.height : this.height,\n\t                rotationMode: options.rotationMode || this.rotationMode\n\t            });\n\t        },\n\t\n\t        /**\n\t         * Returns the current bounds of the overlay in viewport coordinates\n\t         * @function\n\t         * @param {OpenSeadragon.Viewport} viewport the viewport\n\t         * @returns {OpenSeadragon.Rect} overlay bounds\n\t         */\n\t        getBounds: function(viewport) {\n\t            $.console.assert(viewport,\n\t                'A viewport must now be passed to Overlay.getBounds.');\n\t            var width = this.width;\n\t            var height = this.height;\n\t            if (width === null || height === null) {\n\t                var size = viewport.deltaPointsFromPixelsNoRotate(this.size, true);\n\t                if (width === null) {\n\t                    width = size.x;\n\t                }\n\t                if (height === null) {\n\t                    height = size.y;\n\t                }\n\t            }\n\t            var location = this.location.clone();\n\t            this.adjust(location, new $.Point(width, height));\n\t            return this._adjustBoundsForRotation(\n\t                viewport, new $.Rect(location.x, location.y, width, height));\n\t        },\n\t\n\t        // private\n\t        _adjustBoundsForRotation: function(viewport, bounds) {\n\t            if (!viewport ||\n\t                viewport.degrees === 0 ||\n\t                this.rotationMode === $.OverlayRotationMode.EXACT) {\n\t                return bounds;\n\t            }\n\t            if (this.rotationMode === $.OverlayRotationMode.BOUNDING_BOX) {\n\t                // If overlay not fully scalable, BOUNDING_BOX falls back to EXACT\n\t                if (this.width === null || this.height === null) {\n\t                    return bounds;\n\t                }\n\t                // It is easier to just compute the position and size and\n\t                // convert to viewport coordinates.\n\t                var positionAndSize = this._getOverlayPositionAndSize(viewport);\n\t                return viewport.viewerElementToViewportRectangle(new $.Rect(\n\t                    positionAndSize.position.x,\n\t                    positionAndSize.position.y,\n\t                    positionAndSize.size.x,\n\t                    positionAndSize.size.y));\n\t            }\n\t\n\t            // NO_ROTATION case\n\t            return bounds.rotate(-viewport.degrees,\n\t                this._getPlacementPoint(bounds));\n\t        }\n\t    };\n\t\n\t}(OpenSeadragon));\n\t\n\t/*\n\t * OpenSeadragon - Drawer\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function( $ ){\n\t\n\t/**\n\t * @class Drawer\n\t * @memberof OpenSeadragon\n\t * @classdesc Handles rendering of tiles for an {@link OpenSeadragon.Viewer}.\n\t * @param {Object} options - Options for this Drawer.\n\t * @param {OpenSeadragon.Viewer} options.viewer - The Viewer that owns this Drawer.\n\t * @param {OpenSeadragon.Viewport} options.viewport - Reference to Viewer viewport.\n\t * @param {Element} options.element - Parent element.\n\t * @param {Number} [options.debugGridColor] - See debugGridColor in {@link OpenSeadragon.Options} for details.\n\t */\n\t$.Drawer = function( options ) {\n\t\n\t    $.console.assert( options.viewer, \"[Drawer] options.viewer is required\" );\n\t\n\t    //backward compatibility for positional args while prefering more\n\t    //idiomatic javascript options object as the only argument\n\t    var args  = arguments;\n\t\n\t    if( !$.isPlainObject( options ) ){\n\t        options = {\n\t            source:     args[ 0 ], // Reference to Viewer tile source.\n\t            viewport:   args[ 1 ], // Reference to Viewer viewport.\n\t            element:    args[ 2 ]  // Parent element.\n\t        };\n\t    }\n\t\n\t    $.console.assert( options.viewport, \"[Drawer] options.viewport is required\" );\n\t    $.console.assert( options.element, \"[Drawer] options.element is required\" );\n\t\n\t    if ( options.source ) {\n\t        $.console.error( \"[Drawer] options.source is no longer accepted; use TiledImage instead\" );\n\t    }\n\t\n\t    this.viewer = options.viewer;\n\t    this.viewport = options.viewport;\n\t    this.debugGridColor = options.debugGridColor || $.DEFAULT_SETTINGS.debugGridColor;\n\t    if (options.opacity) {\n\t        $.console.error( \"[Drawer] options.opacity is no longer accepted; set the opacity on the TiledImage instead\" );\n\t    }\n\t\n\t    this.useCanvas  = $.supportsCanvas && ( this.viewer ? this.viewer.useCanvas : true );\n\t    /**\n\t     * The parent element of this Drawer instance, passed in when the Drawer was created.\n\t     * The parent of {@link OpenSeadragon.Drawer#canvas}.\n\t     * @member {Element} container\n\t     * @memberof OpenSeadragon.Drawer#\n\t     */\n\t    this.container  = $.getElement( options.element );\n\t    /**\n\t     * A &lt;canvas&gt; element if the browser supports them, otherwise a &lt;div&gt; element.\n\t     * Child element of {@link OpenSeadragon.Drawer#container}.\n\t     * @member {Element} canvas\n\t     * @memberof OpenSeadragon.Drawer#\n\t     */\n\t    this.canvas     = $.makeNeutralElement( this.useCanvas ? \"canvas\" : \"div\" );\n\t    /**\n\t     * 2d drawing context for {@link OpenSeadragon.Drawer#canvas} if it's a &lt;canvas&gt; element, otherwise null.\n\t     * @member {Object} context\n\t     * @memberof OpenSeadragon.Drawer#\n\t     */\n\t    this.context    = this.useCanvas ? this.canvas.getContext( \"2d\" ) : null;\n\t\n\t    /**\n\t     * Sketch canvas used to temporarily draw tiles which cannot be drawn directly\n\t     * to the main canvas due to opacity. Lazily initialized.\n\t     */\n\t    this.sketchCanvas = null;\n\t    this.sketchContext = null;\n\t\n\t    /**\n\t     * @member {Element} element\n\t     * @memberof OpenSeadragon.Drawer#\n\t     * @deprecated Alias for {@link OpenSeadragon.Drawer#container}.\n\t     */\n\t    this.element    = this.container;\n\t\n\t    // We force our container to ltr because our drawing math doesn't work in rtl.\n\t    // This issue only affects our canvas renderer, but we do it always for consistency.\n\t    // Note that this means overlays you want to be rtl need to be explicitly set to rtl.\n\t    this.container.dir = 'ltr';\n\t\n\t    // check canvas available width and height, set canvas width and height such that the canvas backing store is set to the proper pixel density\n\t    if (this.useCanvas) {\n\t        var viewportSize = this._calculateCanvasSize();\n\t        this.canvas.width = viewportSize.x;\n\t        this.canvas.height = viewportSize.y;\n\t    }\n\t\n\t    this.canvas.style.width     = \"100%\";\n\t    this.canvas.style.height    = \"100%\";\n\t    this.canvas.style.position  = \"absolute\";\n\t    $.setElementOpacity( this.canvas, this.opacity, true );\n\t\n\t    // explicit left-align\n\t    this.container.style.textAlign = \"left\";\n\t    this.container.appendChild( this.canvas );\n\t};\n\t\n\t/** @lends OpenSeadragon.Drawer.prototype */\n\t$.Drawer.prototype = {\n\t    // deprecated\n\t    addOverlay: function( element, location, placement, onDraw ) {\n\t        $.console.error(\"drawer.addOverlay is deprecated. Use viewer.addOverlay instead.\");\n\t        this.viewer.addOverlay( element, location, placement, onDraw );\n\t        return this;\n\t    },\n\t\n\t    // deprecated\n\t    updateOverlay: function( element, location, placement ) {\n\t        $.console.error(\"drawer.updateOverlay is deprecated. Use viewer.updateOverlay instead.\");\n\t        this.viewer.updateOverlay( element, location, placement );\n\t        return this;\n\t    },\n\t\n\t    // deprecated\n\t    removeOverlay: function( element ) {\n\t        $.console.error(\"drawer.removeOverlay is deprecated. Use viewer.removeOverlay instead.\");\n\t        this.viewer.removeOverlay( element );\n\t        return this;\n\t    },\n\t\n\t    // deprecated\n\t    clearOverlays: function() {\n\t        $.console.error(\"drawer.clearOverlays is deprecated. Use viewer.clearOverlays instead.\");\n\t        this.viewer.clearOverlays();\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * Set the opacity of the drawer.\n\t     * @param {Number} opacity\n\t     * @return {OpenSeadragon.Drawer} Chainable.\n\t     */\n\t    setOpacity: function( opacity ) {\n\t        $.console.error(\"drawer.setOpacity is deprecated. Use tiledImage.setOpacity instead.\");\n\t        var world = this.viewer.world;\n\t        for (var i = 0; i < world.getItemCount(); i++) {\n\t            world.getItemAt( i ).setOpacity( opacity );\n\t        }\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * Get the opacity of the drawer.\n\t     * @returns {Number}\n\t     */\n\t    getOpacity: function() {\n\t        $.console.error(\"drawer.getOpacity is deprecated. Use tiledImage.getOpacity instead.\");\n\t        var world = this.viewer.world;\n\t        var maxOpacity = 0;\n\t        for (var i = 0; i < world.getItemCount(); i++) {\n\t            var opacity = world.getItemAt( i ).getOpacity();\n\t            if ( opacity > maxOpacity ) {\n\t                maxOpacity = opacity;\n\t            }\n\t        }\n\t        return maxOpacity;\n\t    },\n\t\n\t    // deprecated\n\t    needsUpdate: function() {\n\t        $.console.error( \"[Drawer.needsUpdate] this function is deprecated. Use World.needsDraw instead.\" );\n\t        return this.viewer.world.needsDraw();\n\t    },\n\t\n\t    // deprecated\n\t    numTilesLoaded: function() {\n\t        $.console.error( \"[Drawer.numTilesLoaded] this function is deprecated. Use TileCache.numTilesLoaded instead.\" );\n\t        return this.viewer.tileCache.numTilesLoaded();\n\t    },\n\t\n\t    // deprecated\n\t    reset: function() {\n\t        $.console.error( \"[Drawer.reset] this function is deprecated. Use World.resetItems instead.\" );\n\t        this.viewer.world.resetItems();\n\t        return this;\n\t    },\n\t\n\t    // deprecated\n\t    update: function() {\n\t        $.console.error( \"[Drawer.update] this function is deprecated. Use Drawer.clear and World.draw instead.\" );\n\t        this.clear();\n\t        this.viewer.world.draw();\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * @return {Boolean} True if rotation is supported.\n\t     */\n\t    canRotate: function() {\n\t        return this.useCanvas;\n\t    },\n\t\n\t    /**\n\t     * Destroy the drawer (unload current loaded tiles)\n\t     */\n\t    destroy: function() {\n\t        //force unloading of current canvas (1x1 will be gc later, trick not necessarily needed)\n\t        this.canvas.width  = 1;\n\t        this.canvas.height = 1;\n\t        this.sketchCanvas = null;\n\t        this.sketchContext = null;\n\t    },\n\t\n\t    /**\n\t     * Clears the Drawer so it's ready to draw another frame.\n\t     */\n\t    clear: function() {\n\t        this.canvas.innerHTML = \"\";\n\t        if ( this.useCanvas ) {\n\t            var viewportSize = this._calculateCanvasSize();\n\t            if( this.canvas.width != viewportSize.x ||\n\t                this.canvas.height != viewportSize.y ) {\n\t                this.canvas.width = viewportSize.x;\n\t                this.canvas.height = viewportSize.y;\n\t                if ( this.sketchCanvas !== null ) {\n\t                    var sketchCanvasSize = this._calculateSketchCanvasSize();\n\t                    this.sketchCanvas.width = sketchCanvasSize.x;\n\t                    this.sketchCanvas.height = sketchCanvasSize.y;\n\t                }\n\t            }\n\t            this._clear();\n\t        }\n\t    },\n\t\n\t    _clear: function (useSketch, bounds) {\n\t        if (!this.useCanvas) {\n\t            return;\n\t        }\n\t        var context = this._getContext(useSketch);\n\t        if (bounds) {\n\t            context.clearRect(bounds.x, bounds.y, bounds.width, bounds.height);\n\t        } else {\n\t            var canvas = context.canvas;\n\t            context.clearRect(0, 0, canvas.width, canvas.height);\n\t        }\n\t    },\n\t\n\t    /**\n\t     * Scale from OpenSeadragon viewer rectangle to drawer rectangle\n\t     * (ignoring rotation)\n\t     * @param {OpenSeadragon.Rect} rectangle - The rectangle in viewport coordinate system.\n\t     * @return {OpenSeadragon.Rect} Rectangle in drawer coordinate system.\n\t     */\n\t    viewportToDrawerRectangle: function(rectangle) {\n\t        var topLeft = this.viewport.pixelFromPointNoRotate(rectangle.getTopLeft(), true);\n\t        var size = this.viewport.deltaPixelsFromPointsNoRotate(rectangle.getSize(), true);\n\t\n\t        return new $.Rect(\n\t            topLeft.x * $.pixelDensityRatio,\n\t            topLeft.y * $.pixelDensityRatio,\n\t            size.x    * $.pixelDensityRatio,\n\t            size.y    * $.pixelDensityRatio\n\t        );\n\t    },\n\t\n\t    /**\n\t     * Draws the given tile.\n\t     * @param {OpenSeadragon.Tile} tile - The tile to draw.\n\t     * @param {Function} drawingHandler - Method for firing the drawing event if using canvas.\n\t     * drawingHandler({context, tile, rendered})\n\t     * @param {Boolean} useSketch - Whether to use the sketch canvas or not.\n\t     * where <code>rendered</code> is the context with the pre-drawn image.\n\t     * @param {Float} [scale=1] - Apply a scale to tile position and size. Defaults to 1.\n\t     * @param {OpenSeadragon.Point} [translate] A translation vector to offset tile position\n\t     */\n\t    drawTile: function(tile, drawingHandler, useSketch, scale, translate) {\n\t        $.console.assert(tile, '[Drawer.drawTile] tile is required');\n\t        $.console.assert(drawingHandler, '[Drawer.drawTile] drawingHandler is required');\n\t\n\t        if (this.useCanvas) {\n\t            var context = this._getContext(useSketch);\n\t            scale = scale || 1;\n\t            tile.drawCanvas(context, drawingHandler, scale, translate);\n\t        } else {\n\t            tile.drawHTML( this.canvas );\n\t        }\n\t    },\n\t\n\t    _getContext: function( useSketch ) {\n\t        var context = this.context;\n\t        if ( useSketch ) {\n\t            if (this.sketchCanvas === null) {\n\t                this.sketchCanvas = document.createElement( \"canvas\" );\n\t                var sketchCanvasSize = this._calculateSketchCanvasSize();\n\t                this.sketchCanvas.width = sketchCanvasSize.x;\n\t                this.sketchCanvas.height = sketchCanvasSize.y;\n\t                this.sketchContext = this.sketchCanvas.getContext( \"2d\" );\n\t\n\t                // If the viewport is not currently rotated, the sketchCanvas\n\t                // will have the same size as the main canvas. However, if\n\t                // the viewport get rotated later on, we will need to resize it.\n\t                if (this.viewport.getRotation() === 0) {\n\t                    var self = this;\n\t                    this.viewer.addHandler('rotate', function resizeSketchCanvas() {\n\t                        self.viewer.removeHandler('rotate', resizeSketchCanvas);\n\t                        var sketchCanvasSize = self._calculateSketchCanvasSize();\n\t                        self.sketchCanvas.width = sketchCanvasSize.x;\n\t                        self.sketchCanvas.height = sketchCanvasSize.y;\n\t                    });\n\t                }\n\t            }\n\t            context = this.sketchContext;\n\t        }\n\t        return context;\n\t    },\n\t\n\t    // private\n\t    saveContext: function( useSketch ) {\n\t        if (!this.useCanvas) {\n\t            return;\n\t        }\n\t\n\t        this._getContext( useSketch ).save();\n\t    },\n\t\n\t    // private\n\t    restoreContext: function( useSketch ) {\n\t        if (!this.useCanvas) {\n\t            return;\n\t        }\n\t\n\t        this._getContext( useSketch ).restore();\n\t    },\n\t\n\t    // private\n\t    setClip: function(rect, useSketch) {\n\t        if (!this.useCanvas) {\n\t            return;\n\t        }\n\t\n\t        var context = this._getContext( useSketch );\n\t        context.beginPath();\n\t        context.rect(rect.x, rect.y, rect.width, rect.height);\n\t        context.clip();\n\t    },\n\t\n\t    // private\n\t    drawRectangle: function(rect, fillStyle, useSketch) {\n\t        if (!this.useCanvas) {\n\t            return;\n\t        }\n\t\n\t        var context = this._getContext( useSketch );\n\t        context.save();\n\t        context.fillStyle = fillStyle;\n\t        context.fillRect(rect.x, rect.y, rect.width, rect.height);\n\t        context.restore();\n\t    },\n\t\n\t    /**\n\t     * Blends the sketch canvas in the main canvas.\n\t     * @param {Object} options The options\n\t     * @param {Float} options.opacity The opacity of the blending.\n\t     * @param {Float} [options.scale=1] The scale at which tiles were drawn on\n\t     * the sketch. Default is 1.\n\t     * Use scale to draw at a lower scale and then enlarge onto the main canvas.\n\t     * @param {OpenSeadragon.Point} [options.translate] A translation vector\n\t     * that was used to draw the tiles\n\t     * @param {String} [options.compositeOperation] - How the image is\n\t     * composited onto other images; see compositeOperation in\n\t     * {@link OpenSeadragon.Options} for possible values.\n\t     * @param {OpenSeadragon.Rect} [options.bounds] The part of the sketch\n\t     * canvas to blend in the main canvas. If specified, options.scale and\n\t     * options.translate get ignored.\n\t     */\n\t    blendSketch: function(opacity, scale, translate, compositeOperation) {\n\t        var options = opacity;\n\t        if (!$.isPlainObject(options)) {\n\t            options = {\n\t                opacity: opacity,\n\t                scale: scale,\n\t                translate: translate,\n\t                compositeOperation: compositeOperation\n\t            };\n\t        }\n\t        if (!this.useCanvas || !this.sketchCanvas) {\n\t            return;\n\t        }\n\t        opacity = options.opacity;\n\t        compositeOperation = options.compositeOperation;\n\t        var bounds = options.bounds;\n\t\n\t        this.context.save();\n\t        this.context.globalAlpha = opacity;\n\t        if (compositeOperation) {\n\t            this.context.globalCompositeOperation = compositeOperation;\n\t        }\n\t        if (bounds) {\n\t            this.context.drawImage(\n\t                this.sketchCanvas,\n\t                bounds.x,\n\t                bounds.y,\n\t                bounds.width,\n\t                bounds.height,\n\t                bounds.x,\n\t                bounds.y,\n\t                bounds.width,\n\t                bounds.height\n\t            );\n\t        } else {\n\t            scale = options.scale || 1;\n\t            translate = options.translate;\n\t            var position = translate instanceof $.Point ?\n\t                translate : new $.Point(0, 0);\n\t\n\t            var widthExt = 0;\n\t            var heightExt = 0;\n\t            if (translate) {\n\t                var widthDiff = this.sketchCanvas.width - this.canvas.width;\n\t                var heightDiff = this.sketchCanvas.height - this.canvas.height;\n\t                widthExt = Math.round(widthDiff / 2);\n\t                heightExt = Math.round(heightDiff / 2);\n\t            }\n\t            this.context.drawImage(\n\t                this.sketchCanvas,\n\t                position.x - widthExt * scale,\n\t                position.y - heightExt * scale,\n\t                (this.canvas.width + 2 * widthExt) * scale,\n\t                (this.canvas.height  + 2 * heightExt) * scale,\n\t                -widthExt,\n\t                -heightExt,\n\t                this.canvas.width + 2 * widthExt,\n\t                this.canvas.height + 2 * heightExt\n\t            );\n\t        }\n\t        this.context.restore();\n\t    },\n\t\n\t    // private\n\t    drawDebugInfo: function( tile, count, i ){\n\t        if ( !this.useCanvas ) {\n\t            return;\n\t        }\n\t\n\t        var context = this.context;\n\t        context.save();\n\t        context.lineWidth = 2 * $.pixelDensityRatio;\n\t        context.font = 'small-caps bold ' + (13 * $.pixelDensityRatio) + 'px arial';\n\t        context.strokeStyle = this.debugGridColor;\n\t        context.fillStyle = this.debugGridColor;\n\t\n\t        if ( this.viewport.degrees !== 0 ) {\n\t            this._offsetForRotation(this.viewport.degrees);\n\t        }\n\t\n\t        context.strokeRect(\n\t            tile.position.x * $.pixelDensityRatio,\n\t            tile.position.y * $.pixelDensityRatio,\n\t            tile.size.x * $.pixelDensityRatio,\n\t            tile.size.y * $.pixelDensityRatio\n\t        );\n\t\n\t        var tileCenterX = (tile.position.x + (tile.size.x / 2)) * $.pixelDensityRatio;\n\t        var tileCenterY = (tile.position.y + (tile.size.y / 2)) * $.pixelDensityRatio;\n\t\n\t        // Rotate the text the right way around.\n\t        context.translate( tileCenterX, tileCenterY );\n\t        context.rotate( Math.PI / 180 * -this.viewport.degrees );\n\t        context.translate( -tileCenterX, -tileCenterY );\n\t\n\t        if( tile.x === 0 && tile.y === 0 ){\n\t            context.fillText(\n\t                \"Zoom: \" + this.viewport.getZoom(),\n\t                tile.position.x * $.pixelDensityRatio,\n\t                (tile.position.y - 30) * $.pixelDensityRatio\n\t            );\n\t            context.fillText(\n\t                \"Pan: \" + this.viewport.getBounds().toString(),\n\t                tile.position.x * $.pixelDensityRatio,\n\t                (tile.position.y - 20) * $.pixelDensityRatio\n\t            );\n\t        }\n\t        context.fillText(\n\t            \"Level: \" + tile.level,\n\t            (tile.position.x + 10) * $.pixelDensityRatio,\n\t            (tile.position.y + 20) * $.pixelDensityRatio\n\t        );\n\t        context.fillText(\n\t            \"Column: \" + tile.x,\n\t            (tile.position.x + 10) * $.pixelDensityRatio,\n\t            (tile.position.y + 30) * $.pixelDensityRatio\n\t        );\n\t        context.fillText(\n\t            \"Row: \" + tile.y,\n\t            (tile.position.x + 10) * $.pixelDensityRatio,\n\t            (tile.position.y + 40) * $.pixelDensityRatio\n\t        );\n\t        context.fillText(\n\t            \"Order: \" + i + \" of \" + count,\n\t            (tile.position.x + 10) * $.pixelDensityRatio,\n\t            (tile.position.y + 50) * $.pixelDensityRatio\n\t        );\n\t        context.fillText(\n\t            \"Size: \" + tile.size.toString(),\n\t            (tile.position.x + 10) * $.pixelDensityRatio,\n\t            (tile.position.y + 60) * $.pixelDensityRatio\n\t        );\n\t        context.fillText(\n\t            \"Position: \" + tile.position.toString(),\n\t            (tile.position.x + 10) * $.pixelDensityRatio,\n\t            (tile.position.y + 70) * $.pixelDensityRatio\n\t        );\n\t\n\t        if ( this.viewport.degrees !== 0 ) {\n\t            this._restoreRotationChanges();\n\t        }\n\t        context.restore();\n\t    },\n\t\n\t    // private\n\t    debugRect: function(rect) {\n\t        if ( this.useCanvas ) {\n\t            var context = this.context;\n\t            context.save();\n\t            context.lineWidth = 2 * $.pixelDensityRatio;\n\t            context.strokeStyle = this.debugGridColor;\n\t            context.fillStyle = this.debugGridColor;\n\t\n\t            context.strokeRect(\n\t                rect.x * $.pixelDensityRatio,\n\t                rect.y * $.pixelDensityRatio,\n\t                rect.width * $.pixelDensityRatio,\n\t                rect.height * $.pixelDensityRatio\n\t            );\n\t\n\t            context.restore();\n\t        }\n\t    },\n\t\n\t    /**\n\t     * Get the canvas size\n\t     * @param {Boolean} sketch If set to true return the size of the sketch canvas\n\t     * @returns {OpenSeadragon.Point} The size of the canvas\n\t     */\n\t    getCanvasSize: function(sketch) {\n\t        var canvas = this._getContext(sketch).canvas;\n\t        return new $.Point(canvas.width, canvas.height);\n\t    },\n\t\n\t    // private\n\t    _offsetForRotation: function(degrees, useSketch) {\n\t        var cx = this.canvas.width / 2;\n\t        var cy = this.canvas.height / 2;\n\t\n\t        var context = this._getContext(useSketch);\n\t        context.save();\n\t\n\t        context.translate(cx, cy);\n\t        context.rotate(Math.PI / 180 * degrees);\n\t        context.translate(-cx, -cy);\n\t    },\n\t\n\t    // private\n\t    _restoreRotationChanges: function(useSketch) {\n\t        var context = this._getContext(useSketch);\n\t        context.restore();\n\t    },\n\t\n\t    // private\n\t    _calculateCanvasSize: function() {\n\t        var pixelDensityRatio = $.pixelDensityRatio;\n\t        var viewportSize = this.viewport.getContainerSize();\n\t        return {\n\t            x: viewportSize.x * pixelDensityRatio,\n\t            y: viewportSize.y * pixelDensityRatio\n\t        };\n\t    },\n\t\n\t    // private\n\t    _calculateSketchCanvasSize: function() {\n\t        var canvasSize = this._calculateCanvasSize();\n\t        if (this.viewport.getRotation() === 0) {\n\t            return canvasSize;\n\t        }\n\t        // If the viewport is rotated, we need a larger sketch canvas in order\n\t        // to support edge smoothing.\n\t        var sketchCanvasSize = Math.ceil(Math.sqrt(\n\t            canvasSize.x * canvasSize.x +\n\t            canvasSize.y * canvasSize.y));\n\t        return {\n\t            x: sketchCanvasSize,\n\t            y: sketchCanvasSize\n\t        };\n\t    }\n\t};\n\t\n\t}( OpenSeadragon ));\n\t\n\t/*\n\t * OpenSeadragon - Viewport\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function( $ ){\n\t\n\t\n\t/**\n\t * @class Viewport\n\t * @memberof OpenSeadragon\n\t * @classdesc Handles coordinate-related functionality (zoom, pan, rotation, etc.)\n\t * for an {@link OpenSeadragon.Viewer}.\n\t * @param {Object} options - Options for this Viewport.\n\t * @param {Object} [options.margins] - See viewportMargins in {@link OpenSeadragon.Options}.\n\t * @param {Number} [options.springStiffness] - See springStiffness in {@link OpenSeadragon.Options}.\n\t * @param {Number} [options.animationTime] - See animationTime in {@link OpenSeadragon.Options}.\n\t * @param {Number} [options.minZoomImageRatio] - See minZoomImageRatio in {@link OpenSeadragon.Options}.\n\t * @param {Number} [options.maxZoomPixelRatio] - See maxZoomPixelRatio in {@link OpenSeadragon.Options}.\n\t * @param {Number} [options.visibilityRatio] - See visibilityRatio in {@link OpenSeadragon.Options}.\n\t * @param {Boolean} [options.wrapHorizontal] - See wrapHorizontal in {@link OpenSeadragon.Options}.\n\t * @param {Boolean} [options.wrapVertical] - See wrapVertical in {@link OpenSeadragon.Options}.\n\t * @param {Number} [options.defaultZoomLevel] - See defaultZoomLevel in {@link OpenSeadragon.Options}.\n\t * @param {Number} [options.minZoomLevel] - See minZoomLevel in {@link OpenSeadragon.Options}.\n\t * @param {Number} [options.maxZoomLevel] - See maxZoomLevel in {@link OpenSeadragon.Options}.\n\t * @param {Number} [options.degrees] - See degrees in {@link OpenSeadragon.Options}.\n\t * @param {Boolean} [options.homeFillsViewer] - See homeFillsViewer in {@link OpenSeadragon.Options}.\n\t */\n\t$.Viewport = function( options ) {\n\t\n\t    //backward compatibility for positional args while prefering more\n\t    //idiomatic javascript options object as the only argument\n\t    var args = arguments;\n\t    if(  args.length && args[ 0 ] instanceof $.Point ){\n\t        options = {\n\t            containerSize:  args[ 0 ],\n\t            contentSize:    args[ 1 ],\n\t            config:         args[ 2 ]\n\t        };\n\t    }\n\t\n\t    //options.config and the general config argument are deprecated\n\t    //in favor of the more direct specification of optional settings\n\t    //being passed directly on the options object\n\t    if ( options.config ){\n\t        $.extend( true, options, options.config );\n\t        delete options.config;\n\t    }\n\t\n\t    this._margins = $.extend({\n\t        left: 0,\n\t        top: 0,\n\t        right: 0,\n\t        bottom: 0\n\t    }, options.margins || {});\n\t\n\t    delete options.margins;\n\t\n\t    $.extend( true, this, {\n\t\n\t        //required settings\n\t        containerSize:      null,\n\t        contentSize:        null,\n\t\n\t        //internal state properties\n\t        zoomPoint:          null,\n\t        viewer:           null,\n\t\n\t        //configurable options\n\t        springStiffness:    $.DEFAULT_SETTINGS.springStiffness,\n\t        animationTime:      $.DEFAULT_SETTINGS.animationTime,\n\t        minZoomImageRatio:  $.DEFAULT_SETTINGS.minZoomImageRatio,\n\t        maxZoomPixelRatio:  $.DEFAULT_SETTINGS.maxZoomPixelRatio,\n\t        visibilityRatio:    $.DEFAULT_SETTINGS.visibilityRatio,\n\t        wrapHorizontal:     $.DEFAULT_SETTINGS.wrapHorizontal,\n\t        wrapVertical:       $.DEFAULT_SETTINGS.wrapVertical,\n\t        defaultZoomLevel:   $.DEFAULT_SETTINGS.defaultZoomLevel,\n\t        minZoomLevel:       $.DEFAULT_SETTINGS.minZoomLevel,\n\t        maxZoomLevel:       $.DEFAULT_SETTINGS.maxZoomLevel,\n\t        degrees:            $.DEFAULT_SETTINGS.degrees,\n\t        homeFillsViewer:    $.DEFAULT_SETTINGS.homeFillsViewer\n\t\n\t    }, options );\n\t\n\t    this._updateContainerInnerSize();\n\t\n\t    this.centerSpringX = new $.Spring({\n\t        initial: 0,\n\t        springStiffness: this.springStiffness,\n\t        animationTime:   this.animationTime\n\t    });\n\t    this.centerSpringY = new $.Spring({\n\t        initial: 0,\n\t        springStiffness: this.springStiffness,\n\t        animationTime:   this.animationTime\n\t    });\n\t    this.zoomSpring    = new $.Spring({\n\t        exponential: true,\n\t        initial: 1,\n\t        springStiffness: this.springStiffness,\n\t        animationTime:   this.animationTime\n\t    });\n\t\n\t    this._oldCenterX = this.centerSpringX.current.value;\n\t    this._oldCenterY = this.centerSpringY.current.value;\n\t    this._oldZoom    = this.zoomSpring.current.value;\n\t\n\t    this._setContentBounds(new $.Rect(0, 0, 1, 1), 1);\n\t\n\t    this.goHome(true);\n\t    this.update();\n\t};\n\t\n\t/** @lends OpenSeadragon.Viewport.prototype */\n\t$.Viewport.prototype = {\n\t    /**\n\t     * Updates the viewport's home bounds and constraints for the given content size.\n\t     * @function\n\t     * @param {OpenSeadragon.Point} contentSize - size of the content in content units\n\t     * @return {OpenSeadragon.Viewport} Chainable.\n\t     * @fires OpenSeadragon.Viewer.event:reset-size\n\t     */\n\t    resetContentSize: function(contentSize) {\n\t        $.console.assert(contentSize, \"[Viewport.resetContentSize] contentSize is required\");\n\t        $.console.assert(contentSize instanceof $.Point, \"[Viewport.resetContentSize] contentSize must be an OpenSeadragon.Point\");\n\t        $.console.assert(contentSize.x > 0, \"[Viewport.resetContentSize] contentSize.x must be greater than 0\");\n\t        $.console.assert(contentSize.y > 0, \"[Viewport.resetContentSize] contentSize.y must be greater than 0\");\n\t\n\t        this._setContentBounds(new $.Rect(0, 0, 1, contentSize.y / contentSize.x), contentSize.x);\n\t        return this;\n\t    },\n\t\n\t    // deprecated\n\t    setHomeBounds: function(bounds, contentFactor) {\n\t        $.console.error(\"[Viewport.setHomeBounds] this function is deprecated; The content bounds should not be set manually.\");\n\t        this._setContentBounds(bounds, contentFactor);\n\t    },\n\t\n\t    // Set the viewport's content bounds\n\t    // @param {OpenSeadragon.Rect} bounds - the new bounds in viewport coordinates\n\t    // without rotation\n\t    // @param {Number} contentFactor - how many content units per viewport unit\n\t    // @fires OpenSeadragon.Viewer.event:reset-size\n\t    // @private\n\t    _setContentBounds: function(bounds, contentFactor) {\n\t        $.console.assert(bounds, \"[Viewport._setContentBounds] bounds is required\");\n\t        $.console.assert(bounds instanceof $.Rect, \"[Viewport._setContentBounds] bounds must be an OpenSeadragon.Rect\");\n\t        $.console.assert(bounds.width > 0, \"[Viewport._setContentBounds] bounds.width must be greater than 0\");\n\t        $.console.assert(bounds.height > 0, \"[Viewport._setContentBounds] bounds.height must be greater than 0\");\n\t\n\t        this._contentBoundsNoRotate = bounds.clone();\n\t        this._contentSizeNoRotate = this._contentBoundsNoRotate.getSize().times(\n\t            contentFactor);\n\t\n\t        this._contentBounds = bounds.rotate(this.degrees).getBoundingBox();\n\t        this._contentSize = this._contentBounds.getSize().times(contentFactor);\n\t        this._contentAspectRatio = this._contentSize.x / this._contentSize.y;\n\t\n\t        if (this.viewer) {\n\t            /**\n\t             * Raised when the viewer's content size or home bounds are reset\n\t             * (see {@link OpenSeadragon.Viewport#resetContentSize}).\n\t             *\n\t             * @event reset-size\n\t             * @memberof OpenSeadragon.Viewer\n\t             * @type {object}\n\t             * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t             * @property {OpenSeadragon.Point} contentSize\n\t             * @property {OpenSeadragon.Rect} contentBounds - Content bounds.\n\t             * @property {OpenSeadragon.Rect} homeBounds - Content bounds.\n\t             * Deprecated use contentBounds instead.\n\t             * @property {Number} contentFactor\n\t             * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t             */\n\t            this.viewer.raiseEvent('reset-size', {\n\t                contentSize: this._contentSizeNoRotate.clone(),\n\t                contentFactor: contentFactor,\n\t                homeBounds: this._contentBoundsNoRotate.clone(),\n\t                contentBounds: this._contentBounds.clone()\n\t            });\n\t        }\n\t    },\n\t\n\t    /**\n\t     * Returns the home zoom in \"viewport zoom\" value.\n\t     * @function\n\t     * @returns {Number} The home zoom in \"viewport zoom\".\n\t     */\n\t    getHomeZoom: function() {\n\t        if (this.defaultZoomLevel) {\n\t            return this.defaultZoomLevel;\n\t        }\n\t\n\t        var aspectFactor = this._contentAspectRatio / this.getAspectRatio();\n\t        var output;\n\t        if (this.homeFillsViewer) { // fill the viewer and clip the image\n\t            output = aspectFactor >= 1 ? aspectFactor : 1;\n\t        } else {\n\t            output = aspectFactor >= 1 ? 1 : aspectFactor;\n\t        }\n\t\n\t        return output / this._contentBounds.width;\n\t    },\n\t\n\t    /**\n\t     * Returns the home bounds in viewport coordinates.\n\t     * @function\n\t     * @returns {OpenSeadragon.Rect} The home bounds in vewport coordinates.\n\t     */\n\t    getHomeBounds: function() {\n\t        return this.getHomeBoundsNoRotate().rotate(-this.getRotation());\n\t    },\n\t\n\t    /**\n\t     * Returns the home bounds in viewport coordinates.\n\t     * This method ignores the viewport rotation. Use\n\t     * {@link OpenSeadragon.Viewport#getHomeBounds} to take it into account.\n\t     * @function\n\t     * @returns {OpenSeadragon.Rect} The home bounds in vewport coordinates.\n\t     */\n\t    getHomeBoundsNoRotate: function() {\n\t        var center = this._contentBounds.getCenter();\n\t        var width  = 1.0 / this.getHomeZoom();\n\t        var height = width / this.getAspectRatio();\n\t\n\t        return new $.Rect(\n\t            center.x - (width / 2.0),\n\t            center.y - (height / 2.0),\n\t            width,\n\t            height\n\t        );\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @param {Boolean} immediately\n\t     * @fires OpenSeadragon.Viewer.event:home\n\t     */\n\t    goHome: function(immediately) {\n\t        if (this.viewer) {\n\t            /**\n\t             * Raised when the \"home\" operation occurs (see {@link OpenSeadragon.Viewport#goHome}).\n\t             *\n\t             * @event home\n\t             * @memberof OpenSeadragon.Viewer\n\t             * @type {object}\n\t             * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t             * @property {Boolean} immediately\n\t             * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t             */\n\t            this.viewer.raiseEvent('home', {\n\t                immediately: immediately\n\t            });\n\t        }\n\t        return this.fitBounds(this.getHomeBounds(), immediately);\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     */\n\t    getMinZoom: function() {\n\t        var homeZoom = this.getHomeZoom(),\n\t            zoom = this.minZoomLevel ?\n\t            this.minZoomLevel :\n\t                this.minZoomImageRatio * homeZoom;\n\t\n\t        return zoom;\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     */\n\t    getMaxZoom: function() {\n\t        var zoom = this.maxZoomLevel;\n\t        if (!zoom) {\n\t            zoom = this._contentSize.x * this.maxZoomPixelRatio / this._containerInnerSize.x;\n\t            zoom /= this._contentBounds.width;\n\t        }\n\t\n\t        return Math.max( zoom, this.getHomeZoom() );\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     */\n\t    getAspectRatio: function() {\n\t        return this._containerInnerSize.x / this._containerInnerSize.y;\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @returns {OpenSeadragon.Point} The size of the container, in screen coordinates.\n\t     */\n\t    getContainerSize: function() {\n\t        return new $.Point(\n\t            this.containerSize.x,\n\t            this.containerSize.y\n\t        );\n\t    },\n\t\n\t    /**\n\t     * The margins push the \"home\" region in from the sides by the specified amounts.\n\t     * @function\n\t     * @returns {Object} Properties (Numbers, in screen coordinates): left, top, right, bottom.\n\t     */\n\t    getMargins: function() {\n\t        return $.extend({}, this._margins); // Make a copy so we are not returning our original\n\t    },\n\t\n\t    /**\n\t     * The margins push the \"home\" region in from the sides by the specified amounts.\n\t     * @function\n\t     * @param {Object} margins - Properties (Numbers, in screen coordinates): left, top, right, bottom.\n\t     */\n\t    setMargins: function(margins) {\n\t        $.console.assert($.type(margins) === 'object', '[Viewport.setMargins] margins must be an object');\n\t\n\t        this._margins = $.extend({\n\t            left: 0,\n\t            top: 0,\n\t            right: 0,\n\t            bottom: 0\n\t        }, margins);\n\t\n\t        this._updateContainerInnerSize();\n\t        if (this.viewer) {\n\t            this.viewer.forceRedraw();\n\t        }\n\t    },\n\t\n\t    /**\n\t     * Returns the bounds of the visible area in viewport coordinates.\n\t     * @function\n\t     * @param {Boolean} current - Pass true for the current location; defaults to false (target location).\n\t     * @returns {OpenSeadragon.Rect} The location you are zoomed/panned to, in viewport coordinates.\n\t     */\n\t    getBounds: function(current) {\n\t        return this.getBoundsNoRotate(current).rotate(-this.getRotation());\n\t    },\n\t\n\t    /**\n\t     * Returns the bounds of the visible area in viewport coordinates.\n\t     * This method ignores the viewport rotation. Use\n\t     * {@link OpenSeadragon.Viewport#getBounds} to take it into account.\n\t     * @function\n\t     * @param {Boolean} current - Pass true for the current location; defaults to false (target location).\n\t     * @returns {OpenSeadragon.Rect} The location you are zoomed/panned to, in viewport coordinates.\n\t     */\n\t    getBoundsNoRotate: function(current) {\n\t        var center = this.getCenter(current);\n\t        var width  = 1.0 / this.getZoom(current);\n\t        var height = width / this.getAspectRatio();\n\t\n\t        return new $.Rect(\n\t            center.x - (width / 2.0),\n\t            center.y - (height / 2.0),\n\t            width,\n\t            height\n\t        );\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @param {Boolean} current - Pass true for the current location; defaults to false (target location).\n\t     * @returns {OpenSeadragon.Rect} The location you are zoomed/panned to,\n\t     * including the space taken by margins, in viewport coordinates.\n\t     */\n\t    getBoundsWithMargins: function(current) {\n\t        return this.getBoundsNoRotateWithMargins(current).rotate(\n\t            -this.getRotation(), this.getCenter(current));\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @param {Boolean} current - Pass true for the current location; defaults to false (target location).\n\t     * @returns {OpenSeadragon.Rect} The location you are zoomed/panned to,\n\t     * including the space taken by margins, in viewport coordinates.\n\t     */\n\t    getBoundsNoRotateWithMargins: function(current) {\n\t        var bounds = this.getBoundsNoRotate(current);\n\t        var factor = this._containerInnerSize.x * this.getZoom(current);\n\t        bounds.x -= this._margins.left / factor;\n\t        bounds.y -= this._margins.top / factor;\n\t        bounds.width += (this._margins.left + this._margins.right) / factor;\n\t        bounds.height += (this._margins.top + this._margins.bottom) / factor;\n\t        return bounds;\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @param {Boolean} current - Pass true for the current location; defaults to false (target location).\n\t     */\n\t    getCenter: function( current ) {\n\t        var centerCurrent = new $.Point(\n\t                this.centerSpringX.current.value,\n\t                this.centerSpringY.current.value\n\t            ),\n\t            centerTarget = new $.Point(\n\t                this.centerSpringX.target.value,\n\t                this.centerSpringY.target.value\n\t            ),\n\t            oldZoomPixel,\n\t            zoom,\n\t            width,\n\t            height,\n\t            bounds,\n\t            newZoomPixel,\n\t            deltaZoomPixels,\n\t            deltaZoomPoints;\n\t\n\t        if ( current ) {\n\t            return centerCurrent;\n\t        } else if ( !this.zoomPoint ) {\n\t            return centerTarget;\n\t        }\n\t\n\t        oldZoomPixel = this.pixelFromPoint(this.zoomPoint, true);\n\t\n\t        zoom    = this.getZoom();\n\t        width   = 1.0 / zoom;\n\t        height  = width / this.getAspectRatio();\n\t        bounds  = new $.Rect(\n\t            centerCurrent.x - width / 2.0,\n\t            centerCurrent.y - height / 2.0,\n\t            width,\n\t            height\n\t        );\n\t\n\t        newZoomPixel = this._pixelFromPoint(this.zoomPoint, bounds);\n\t        deltaZoomPixels = newZoomPixel.minus( oldZoomPixel );\n\t        deltaZoomPoints = deltaZoomPixels.divide( this._containerInnerSize.x * zoom );\n\t\n\t        return centerTarget.plus( deltaZoomPoints );\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @param {Boolean} current - Pass true for the current location; defaults to false (target location).\n\t     */\n\t    getZoom: function( current ) {\n\t        if ( current ) {\n\t            return this.zoomSpring.current.value;\n\t        } else {\n\t            return this.zoomSpring.target.value;\n\t        }\n\t    },\n\t\n\t    // private\n\t    _applyZoomConstraints: function(zoom) {\n\t        return Math.max(\n\t            Math.min(zoom, this.getMaxZoom()),\n\t            this.getMinZoom());\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @private\n\t     * @param {OpenSeadragon.Rect} bounds\n\t     * @param {Boolean} immediately\n\t     * @return {OpenSeadragon.Rect} constrained bounds.\n\t     */\n\t    _applyBoundaryConstraints: function(bounds, immediately) {\n\t        var newBounds = new $.Rect(\n\t                bounds.x,\n\t                bounds.y,\n\t                bounds.width,\n\t                bounds.height);\n\t\n\t        if (this.wrapHorizontal) {\n\t            //do nothing\n\t        } else {\n\t            var horizontalThreshold = this.visibilityRatio * newBounds.width;\n\t            var boundsRight = newBounds.x + newBounds.width;\n\t            var contentRight = this._contentBoundsNoRotate.x + this._contentBoundsNoRotate.width;\n\t            var leftDx = this._contentBoundsNoRotate.x - boundsRight + horizontalThreshold;\n\t            var rightDx = contentRight - newBounds.x - horizontalThreshold;\n\t\n\t            if (horizontalThreshold > this._contentBoundsNoRotate.width) {\n\t                newBounds.x += (leftDx + rightDx) / 2;\n\t            } else if (rightDx < 0) {\n\t                newBounds.x += rightDx;\n\t            } else if (leftDx > 0) {\n\t                newBounds.x += leftDx;\n\t            }\n\t        }\n\t\n\t        if (this.wrapVertical) {\n\t            //do nothing\n\t        } else {\n\t            var verticalThreshold   = this.visibilityRatio * newBounds.height;\n\t            var boundsBottom = newBounds.y + newBounds.height;\n\t            var contentBottom = this._contentBoundsNoRotate.y + this._contentBoundsNoRotate.height;\n\t            var topDy = this._contentBoundsNoRotate.y - boundsBottom + verticalThreshold;\n\t            var bottomDy = contentBottom - newBounds.y - verticalThreshold;\n\t\n\t            if (verticalThreshold > this._contentBoundsNoRotate.height) {\n\t                newBounds.y += (topDy + bottomDy) / 2;\n\t            } else if (bottomDy < 0) {\n\t                newBounds.y += bottomDy;\n\t            } else if (topDy > 0) {\n\t                newBounds.y += topDy;\n\t            }\n\t        }\n\t\n\t        if (this.viewer) {\n\t            /**\n\t             * Raised when the viewport constraints are applied (see {@link OpenSeadragon.Viewport#applyConstraints}).\n\t             *\n\t             * @event constrain\n\t             * @memberof OpenSeadragon.Viewer\n\t             * @type {object}\n\t             * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t             * @property {Boolean} immediately\n\t             * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t             */\n\t            this.viewer.raiseEvent( 'constrain', {\n\t                immediately: immediately\n\t            });\n\t        }\n\t\n\t        return newBounds;\n\t    },\n\t\n\t    /**\n\t     * Enforces the minZoom, maxZoom and visibilityRatio constraints by\n\t     * zooming and panning to the closest acceptable zoom and location.\n\t     * @function\n\t     * @param {Boolean} [immediately=false]\n\t     * @return {OpenSeadragon.Viewport} Chainable.\n\t     * @fires OpenSeadragon.Viewer.event:constrain\n\t     */\n\t    applyConstraints: function(immediately) {\n\t        var actualZoom = this.getZoom();\n\t        var constrainedZoom = this._applyZoomConstraints(actualZoom);\n\t\n\t        if (actualZoom !== constrainedZoom) {\n\t            this.zoomTo(constrainedZoom, this.zoomPoint, immediately);\n\t        }\n\t\n\t        var bounds = this.getBoundsNoRotate();\n\t        var constrainedBounds = this._applyBoundaryConstraints(\n\t            bounds, immediately);\n\t\n\t        if (bounds.x !== constrainedBounds.x ||\n\t            bounds.y !== constrainedBounds.y ||\n\t            immediately) {\n\t            this.fitBounds(\n\t                constrainedBounds.rotate(-this.getRotation()),\n\t                immediately);\n\t        }\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * Equivalent to {@link OpenSeadragon.Viewport#applyConstraints}\n\t     * @function\n\t     * @param {Boolean} [immediately=false]\n\t     * @return {OpenSeadragon.Viewport} Chainable.\n\t     * @fires OpenSeadragon.Viewer.event:constrain\n\t     */\n\t    ensureVisible: function(immediately) {\n\t        return this.applyConstraints(immediately);\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @private\n\t     * @param {OpenSeadragon.Rect} bounds\n\t     * @param {Object} options (immediately=false, constraints=false)\n\t     * @return {OpenSeadragon.Viewport} Chainable.\n\t     */\n\t    _fitBounds: function(bounds, options) {\n\t        options = options || {};\n\t        var immediately = options.immediately || false;\n\t        var constraints = options.constraints || false;\n\t\n\t        var aspect = this.getAspectRatio();\n\t        var center = bounds.getCenter();\n\t\n\t        // Compute width and height of bounding box.\n\t        var newBounds = new $.Rect(\n\t            bounds.x,\n\t            bounds.y,\n\t            bounds.width,\n\t            bounds.height,\n\t            bounds.degrees + this.getRotation())\n\t            .getBoundingBox();\n\t\n\t        if (newBounds.getAspectRatio() >= aspect) {\n\t            newBounds.height = newBounds.width / aspect;\n\t        } else {\n\t            newBounds.width = newBounds.height * aspect;\n\t        }\n\t\n\t        // Compute x and y from width, height and center position\n\t        newBounds.x = center.x - newBounds.width / 2;\n\t        newBounds.y = center.y - newBounds.height / 2;\n\t        var newZoom = 1.0 / newBounds.width;\n\t\n\t        if (constraints) {\n\t            var newBoundsAspectRatio = newBounds.getAspectRatio();\n\t            var newConstrainedZoom = this._applyZoomConstraints(newZoom);\n\t\n\t            if (newZoom !== newConstrainedZoom) {\n\t                newZoom = newConstrainedZoom;\n\t                newBounds.width = 1.0 / newZoom;\n\t                newBounds.x = center.x - newBounds.width / 2;\n\t                newBounds.height = newBounds.width / newBoundsAspectRatio;\n\t                newBounds.y = center.y - newBounds.height / 2;\n\t            }\n\t\n\t            newBounds = this._applyBoundaryConstraints(newBounds, immediately);\n\t            center = newBounds.getCenter();\n\t        }\n\t\n\t        if (immediately) {\n\t            this.panTo(center, true);\n\t            return this.zoomTo(newZoom, null, true);\n\t        }\n\t\n\t        this.panTo(this.getCenter(true), true);\n\t        this.zoomTo(this.getZoom(true), null, true);\n\t\n\t        var oldBounds = this.getBounds();\n\t        var oldZoom   = this.getZoom();\n\t\n\t        if (oldZoom === 0 || Math.abs(newZoom / oldZoom - 1) < 0.00000001) {\n\t            this.zoomTo(newZoom, true);\n\t            return this.panTo(center, immediately);\n\t        }\n\t\n\t        newBounds = newBounds.rotate(-this.getRotation());\n\t        var referencePoint = newBounds.getTopLeft().times(newZoom)\n\t            .minus(oldBounds.getTopLeft().times(oldZoom))\n\t            .divide(newZoom - oldZoom);\n\t\n\t        return this.zoomTo(newZoom, referencePoint, immediately);\n\t    },\n\t\n\t    /**\n\t     * Makes the viewport zoom and pan so that the specified bounds take\n\t     * as much space as possible in the viewport.\n\t     * Note: this method ignores the constraints (minZoom, maxZoom and\n\t     * visibilityRatio).\n\t     * Use {@link OpenSeadragon.Viewport#fitBoundsWithConstraints} to enforce\n\t     * them.\n\t     * @function\n\t     * @param {OpenSeadragon.Rect} bounds\n\t     * @param {Boolean} [immediately=false]\n\t     * @return {OpenSeadragon.Viewport} Chainable.\n\t     */\n\t    fitBounds: function(bounds, immediately) {\n\t        return this._fitBounds(bounds, {\n\t            immediately: immediately,\n\t            constraints: false\n\t        });\n\t    },\n\t\n\t    /**\n\t     * Makes the viewport zoom and pan so that the specified bounds take\n\t     * as much space as possible in the viewport while enforcing the constraints\n\t     * (minZoom, maxZoom and visibilityRatio).\n\t     * Note: because this method enforces the constraints, part of the\n\t     * provided bounds may end up outside of the viewport.\n\t     * Use {@link OpenSeadragon.Viewport#fitBounds} to ignore them.\n\t     * @function\n\t     * @param {OpenSeadragon.Rect} bounds\n\t     * @param {Boolean} [immediately=false]\n\t     * @return {OpenSeadragon.Viewport} Chainable.\n\t     */\n\t    fitBoundsWithConstraints: function(bounds, immediately) {\n\t        return this._fitBounds(bounds, {\n\t            immediately: immediately,\n\t            constraints: true\n\t        });\n\t    },\n\t\n\t    /**\n\t     * Zooms so the image just fills the viewer vertically.\n\t     * @param {Boolean} immediately\n\t     * @return {OpenSeadragon.Viewport} Chainable.\n\t     */\n\t    fitVertically: function(immediately) {\n\t        var box = new $.Rect(\n\t            this._contentBounds.x + (this._contentBounds.width / 2),\n\t            this._contentBounds.y,\n\t            0,\n\t            this._contentBounds.height);\n\t        return this.fitBounds(box, immediately);\n\t    },\n\t\n\t    /**\n\t     * Zooms so the image just fills the viewer horizontally.\n\t     * @param {Boolean} immediately\n\t     * @return {OpenSeadragon.Viewport} Chainable.\n\t     */\n\t    fitHorizontally: function(immediately) {\n\t        var box = new $.Rect(\n\t            this._contentBounds.x,\n\t            this._contentBounds.y + (this._contentBounds.height / 2),\n\t            this._contentBounds.width,\n\t            0);\n\t        return this.fitBounds(box, immediately);\n\t    },\n\t\n\t\n\t    /**\n\t     * @function\n\t     * @param {OpenSeadragon.Point} delta\n\t     * @param {Boolean} immediately\n\t     * @return {OpenSeadragon.Viewport} Chainable.\n\t     * @fires OpenSeadragon.Viewer.event:pan\n\t     */\n\t    panBy: function( delta, immediately ) {\n\t        var center = new $.Point(\n\t            this.centerSpringX.target.value,\n\t            this.centerSpringY.target.value\n\t        );\n\t        return this.panTo( center.plus( delta ), immediately );\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @param {OpenSeadragon.Point} center\n\t     * @param {Boolean} immediately\n\t     * @return {OpenSeadragon.Viewport} Chainable.\n\t     * @fires OpenSeadragon.Viewer.event:pan\n\t     */\n\t    panTo: function( center, immediately ) {\n\t        if ( immediately ) {\n\t            this.centerSpringX.resetTo( center.x );\n\t            this.centerSpringY.resetTo( center.y );\n\t        } else {\n\t            this.centerSpringX.springTo( center.x );\n\t            this.centerSpringY.springTo( center.y );\n\t        }\n\t\n\t        if( this.viewer ){\n\t            /**\n\t             * Raised when the viewport is panned (see {@link OpenSeadragon.Viewport#panBy} and {@link OpenSeadragon.Viewport#panTo}).\n\t             *\n\t             * @event pan\n\t             * @memberof OpenSeadragon.Viewer\n\t             * @type {object}\n\t             * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t             * @property {OpenSeadragon.Point} center\n\t             * @property {Boolean} immediately\n\t             * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t             */\n\t            this.viewer.raiseEvent( 'pan', {\n\t                center: center,\n\t                immediately: immediately\n\t            });\n\t        }\n\t\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @return {OpenSeadragon.Viewport} Chainable.\n\t     * @fires OpenSeadragon.Viewer.event:zoom\n\t     */\n\t    zoomBy: function(factor, refPoint, immediately) {\n\t        return this.zoomTo(\n\t            this.zoomSpring.target.value * factor, refPoint, immediately);\n\t    },\n\t\n\t    /**\n\t     * Zooms to the specified zoom level\n\t     * @function\n\t     * @param {Number} zoom The zoom level to zoom to.\n\t     * @param {OpenSeadragon.Point} [refPoint] The point which will stay at\n\t     * the same screen location. Defaults to the viewport center.\n\t     * @param {Boolean} [immediately=false]\n\t     * @return {OpenSeadragon.Viewport} Chainable.\n\t     * @fires OpenSeadragon.Viewer.event:zoom\n\t     */\n\t    zoomTo: function( zoom, refPoint, immediately ) {\n\t\n\t        this.zoomPoint = refPoint instanceof $.Point &&\n\t            !isNaN(refPoint.x) &&\n\t            !isNaN(refPoint.y) ?\n\t            refPoint :\n\t            null;\n\t\n\t        if ( immediately ) {\n\t            this.zoomSpring.resetTo( zoom );\n\t        } else {\n\t            this.zoomSpring.springTo( zoom );\n\t        }\n\t\n\t        if( this.viewer ){\n\t            /**\n\t             * Raised when the viewport zoom level changes (see {@link OpenSeadragon.Viewport#zoomBy} and {@link OpenSeadragon.Viewport#zoomTo}).\n\t             *\n\t             * @event zoom\n\t             * @memberof OpenSeadragon.Viewer\n\t             * @type {object}\n\t             * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t             * @property {Number} zoom\n\t             * @property {OpenSeadragon.Point} refPoint\n\t             * @property {Boolean} immediately\n\t             * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t             */\n\t            this.viewer.raiseEvent( 'zoom', {\n\t                zoom: zoom,\n\t                refPoint: refPoint,\n\t                immediately: immediately\n\t            });\n\t        }\n\t\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * Rotates this viewport to the angle specified.\n\t     * @function\n\t     * @return {OpenSeadragon.Viewport} Chainable.\n\t     */\n\t    setRotation: function(degrees) {\n\t        if (!this.viewer || !this.viewer.drawer.canRotate()) {\n\t            return this;\n\t        }\n\t\n\t        degrees = degrees % 360;\n\t        if (degrees < 0) {\n\t            degrees += 360;\n\t        }\n\t        this.degrees = degrees;\n\t        this._setContentBounds(\n\t            this.viewer.world.getHomeBounds(),\n\t            this.viewer.world.getContentFactor());\n\t        this.viewer.forceRedraw();\n\t\n\t        /**\n\t         * Raised when rotation has been changed.\n\t         *\n\t         * @event rotate\n\t         * @memberof OpenSeadragon.Viewer\n\t         * @type {object}\n\t         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n\t         * @property {Number} degrees - The number of degrees the rotation was set to.\n\t         * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t         */\n\t        this.viewer.raiseEvent('rotate', {\"degrees\": degrees});\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * Gets the current rotation in degrees.\n\t     * @function\n\t     * @return {Number} The current rotation in degrees.\n\t     */\n\t    getRotation: function() {\n\t        return this.degrees;\n\t    },\n\t\n\t    /**\n\t     * @function\n\t     * @return {OpenSeadragon.Viewport} Chainable.\n\t     * @fires OpenSeadragon.Viewer.event:resize\n\t     */\n\t    resize: function( newContainerSize, maintain ) {\n\t        var oldBounds = this.getBoundsNoRotate(),\n\t            newBounds = oldBounds,\n\t            widthDeltaFactor;\n\t\n\t        this.containerSize.x = newContainerSize.x;\n\t        this.containerSize.y = newContainerSize.y;\n\t\n\t        this._updateContainerInnerSize();\n\t\n\t        if ( maintain ) {\n\t            // TODO: widthDeltaFactor will always be 1; probably not what's intended\n\t            widthDeltaFactor = newContainerSize.x / this.containerSize.x;\n\t            newBounds.width  = oldBounds.width * widthDeltaFactor;\n\t            newBounds.height = newBounds.width / this.getAspectRatio();\n\t        }\n\t\n\t        if( this.viewer ){\n\t            /**\n\t             * Raised when the viewer is resized (see {@link OpenSeadragon.Viewport#resize}).\n\t             *\n\t             * @event resize\n\t             * @memberof OpenSeadragon.Viewer\n\t             * @type {object}\n\t             * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n\t             * @property {OpenSeadragon.Point} newContainerSize\n\t             * @property {Boolean} maintain\n\t             * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t             */\n\t            this.viewer.raiseEvent( 'resize', {\n\t                newContainerSize: newContainerSize,\n\t                maintain: maintain\n\t            });\n\t        }\n\t\n\t        return this.fitBounds( newBounds, true );\n\t    },\n\t\n\t    // private\n\t    _updateContainerInnerSize: function() {\n\t        this._containerInnerSize = new $.Point(\n\t            Math.max(1, this.containerSize.x - (this._margins.left + this._margins.right)),\n\t            Math.max(1, this.containerSize.y - (this._margins.top + this._margins.bottom))\n\t        );\n\t    },\n\t\n\t    /**\n\t     * Update the zoom and center (X and Y) springs.\n\t     * @function\n\t     * @returns {Boolean} True if any change has been made, false otherwise.\n\t     */\n\t    update: function() {\n\t\n\t        if (this.zoomPoint) {\n\t            var oldZoomPixel = this.pixelFromPoint(this.zoomPoint, true);\n\t            this.zoomSpring.update();\n\t            var newZoomPixel = this.pixelFromPoint(this.zoomPoint, true);\n\t\n\t            var deltaZoomPixels = newZoomPixel.minus(oldZoomPixel);\n\t            var deltaZoomPoints = this.deltaPointsFromPixels(\n\t                deltaZoomPixels, true);\n\t\n\t            this.centerSpringX.shiftBy(deltaZoomPoints.x);\n\t            this.centerSpringY.shiftBy(deltaZoomPoints.y);\n\t\n\t            if (this.zoomSpring.isAtTargetValue()) {\n\t                this.zoomPoint = null;\n\t            }\n\t        } else {\n\t            this.zoomSpring.update();\n\t        }\n\t\n\t        this.centerSpringX.update();\n\t        this.centerSpringY.update();\n\t\n\t        var changed = this.centerSpringX.current.value !== this._oldCenterX ||\n\t            this.centerSpringY.current.value !== this._oldCenterY ||\n\t            this.zoomSpring.current.value !== this._oldZoom;\n\t\n\t        this._oldCenterX = this.centerSpringX.current.value;\n\t        this._oldCenterY = this.centerSpringY.current.value;\n\t        this._oldZoom    = this.zoomSpring.current.value;\n\t\n\t        return changed;\n\t    },\n\t\n\t    /**\n\t     * Convert a delta (translation vector) from viewport coordinates to pixels\n\t     * coordinates. This method does not take rotation into account.\n\t     * Consider using deltaPixelsFromPoints if you need to account for rotation.\n\t     * @param {OpenSeadragon.Point} deltaPoints - The translation vector to convert.\n\t     * @param {Boolean} [current=false] - Pass true for the current location;\n\t     * defaults to false (target location).\n\t     * @returns {OpenSeadragon.Point}\n\t     */\n\t    deltaPixelsFromPointsNoRotate: function(deltaPoints, current) {\n\t        return deltaPoints.times(\n\t            this._containerInnerSize.x * this.getZoom(current)\n\t        );\n\t    },\n\t\n\t    /**\n\t     * Convert a delta (translation vector) from viewport coordinates to pixels\n\t     * coordinates.\n\t     * @param {OpenSeadragon.Point} deltaPoints - The translation vector to convert.\n\t     * @param {Boolean} [current=false] - Pass true for the current location;\n\t     * defaults to false (target location).\n\t     * @returns {OpenSeadragon.Point}\n\t     */\n\t    deltaPixelsFromPoints: function(deltaPoints, current) {\n\t        return this.deltaPixelsFromPointsNoRotate(\n\t            deltaPoints.rotate(this.getRotation()),\n\t            current);\n\t    },\n\t\n\t    /**\n\t     * Convert a delta (translation vector) from pixels coordinates to viewport\n\t     * coordinates. This method does not take rotation into account.\n\t     * Consider using deltaPointsFromPixels if you need to account for rotation.\n\t     * @param {OpenSeadragon.Point} deltaPixels - The translation vector to convert.\n\t     * @param {Boolean} [current=false] - Pass true for the current location;\n\t     * defaults to false (target location).\n\t     * @returns {OpenSeadragon.Point}\n\t     */\n\t    deltaPointsFromPixelsNoRotate: function(deltaPixels, current) {\n\t        return deltaPixels.divide(\n\t            this._containerInnerSize.x * this.getZoom(current)\n\t        );\n\t    },\n\t\n\t    /**\n\t     * Convert a delta (translation vector) from pixels coordinates to viewport\n\t     * coordinates.\n\t     * @param {OpenSeadragon.Point} deltaPixels - The translation vector to convert.\n\t     * @param {Boolean} [current=false] - Pass true for the current location;\n\t     * defaults to false (target location).\n\t     * @returns {OpenSeadragon.Point}\n\t     */\n\t    deltaPointsFromPixels: function(deltaPixels, current) {\n\t        return this.deltaPointsFromPixelsNoRotate(deltaPixels, current)\n\t            .rotate(-this.getRotation());\n\t    },\n\t\n\t    /**\n\t     * Convert viewport coordinates to pixels coordinates.\n\t     * This method does not take rotation into account.\n\t     * Consider using pixelFromPoint if you need to account for rotation.\n\t     * @param {OpenSeadragon.Point} point the viewport coordinates\n\t     * @param {Boolean} [current=false] - Pass true for the current location;\n\t     * defaults to false (target location).\n\t     * @returns {OpenSeadragon.Point}\n\t     */\n\t    pixelFromPointNoRotate: function(point, current) {\n\t        return this._pixelFromPointNoRotate(\n\t            point, this.getBoundsNoRotate(current));\n\t    },\n\t\n\t    /**\n\t     * Convert viewport coordinates to pixel coordinates.\n\t     * @param {OpenSeadragon.Point} point the viewport coordinates\n\t     * @param {Boolean} [current=false] - Pass true for the current location;\n\t     * defaults to false (target location).\n\t     * @returns {OpenSeadragon.Point}\n\t     */\n\t    pixelFromPoint: function(point, current) {\n\t        return this._pixelFromPoint(point, this.getBoundsNoRotate(current));\n\t    },\n\t\n\t    // private\n\t    _pixelFromPointNoRotate: function(point, bounds) {\n\t        return point.minus(\n\t            bounds.getTopLeft()\n\t        ).times(\n\t            this._containerInnerSize.x / bounds.width\n\t        ).plus(\n\t            new $.Point(this._margins.left, this._margins.top)\n\t        );\n\t    },\n\t\n\t    // private\n\t    _pixelFromPoint: function(point, bounds) {\n\t        return this._pixelFromPointNoRotate(\n\t            point.rotate(this.getRotation(), this.getCenter(true)),\n\t            bounds);\n\t    },\n\t\n\t    /**\n\t     * Convert pixel coordinates to viewport coordinates.\n\t     * This method does not take rotation into account.\n\t     * Consider using pointFromPixel if you need to account for rotation.\n\t     * @param {OpenSeadragon.Point} pixel Pixel coordinates\n\t     * @param {Boolean} [current=false] - Pass true for the current location;\n\t     * defaults to false (target location).\n\t     * @returns {OpenSeadragon.Point}\n\t     */\n\t    pointFromPixelNoRotate: function(pixel, current) {\n\t        var bounds = this.getBoundsNoRotate(current);\n\t        return pixel.minus(\n\t            new $.Point(this._margins.left, this._margins.top)\n\t        ).divide(\n\t            this._containerInnerSize.x / bounds.width\n\t        ).plus(\n\t            bounds.getTopLeft()\n\t        );\n\t    },\n\t\n\t    /**\n\t     * Convert pixel coordinates to viewport coordinates.\n\t     * @param {OpenSeadragon.Point} pixel Pixel coordinates\n\t     * @param {Boolean} [current=false] - Pass true for the current location;\n\t     * defaults to false (target location).\n\t     * @returns {OpenSeadragon.Point}\n\t     */\n\t    pointFromPixel: function(pixel, current) {\n\t        return this.pointFromPixelNoRotate(pixel, current).rotate(\n\t            -this.getRotation(),\n\t            this.getCenter(true)\n\t        );\n\t    },\n\t\n\t    // private\n\t    _viewportToImageDelta: function( viewerX, viewerY ) {\n\t        var scale = this._contentBoundsNoRotate.width;\n\t        return new $.Point(\n\t            viewerX * this._contentSizeNoRotate.x / scale,\n\t            viewerY * this._contentSizeNoRotate.x / scale);\n\t    },\n\t\n\t    /**\n\t     * Translates from OpenSeadragon viewer coordinate system to image coordinate system.\n\t     * This method can be called either by passing X,Y coordinates or an\n\t     * OpenSeadragon.Point\n\t     * Note: not accurate with multi-image; use TiledImage.viewportToImageCoordinates instead.\n\t     * @function\n\t     * @param {(OpenSeadragon.Point|Number)} viewerX either a point or the X\n\t     * coordinate in viewport coordinate system.\n\t     * @param {Number} [viewerY] Y coordinate in viewport coordinate system.\n\t     * @return {OpenSeadragon.Point} a point representing the coordinates in the image.\n\t     */\n\t    viewportToImageCoordinates: function(viewerX, viewerY) {\n\t        if (viewerX instanceof $.Point) {\n\t            //they passed a point instead of individual components\n\t            return this.viewportToImageCoordinates(viewerX.x, viewerX.y);\n\t        }\n\t\n\t        if (this.viewer) {\n\t            var count = this.viewer.world.getItemCount();\n\t            if (count > 1) {\n\t                $.console.error('[Viewport.viewportToImageCoordinates] is not accurate ' +\n\t                    'with multi-image; use TiledImage.viewportToImageCoordinates instead.');\n\t            } else if (count === 1) {\n\t                // It is better to use TiledImage.viewportToImageCoordinates\n\t                // because this._contentBoundsNoRotate can not be relied on\n\t                // with clipping.\n\t                var item = this.viewer.world.getItemAt(0);\n\t                return item.viewportToImageCoordinates(viewerX, viewerY, true);\n\t            }\n\t        }\n\t\n\t        return this._viewportToImageDelta(\n\t            viewerX - this._contentBoundsNoRotate.x,\n\t            viewerY - this._contentBoundsNoRotate.y);\n\t    },\n\t\n\t    // private\n\t    _imageToViewportDelta: function( imageX, imageY ) {\n\t        var scale = this._contentBoundsNoRotate.width;\n\t        return new $.Point(\n\t            imageX / this._contentSizeNoRotate.x * scale,\n\t            imageY / this._contentSizeNoRotate.x * scale);\n\t    },\n\t\n\t    /**\n\t     * Translates from image coordinate system to OpenSeadragon viewer coordinate system\n\t     * This method can be called either by passing X,Y coordinates or an\n\t     * OpenSeadragon.Point\n\t     * Note: not accurate with multi-image; use TiledImage.imageToViewportCoordinates instead.\n\t     * @function\n\t     * @param {(OpenSeadragon.Point | Number)} imageX the point or the\n\t     * X coordinate in image coordinate system.\n\t     * @param {Number} [imageY] Y coordinate in image coordinate system.\n\t     * @return {OpenSeadragon.Point} a point representing the coordinates in the viewport.\n\t     */\n\t    imageToViewportCoordinates: function(imageX, imageY) {\n\t        if (imageX instanceof $.Point) {\n\t            //they passed a point instead of individual components\n\t            return this.imageToViewportCoordinates(imageX.x, imageX.y);\n\t        }\n\t\n\t        if (this.viewer) {\n\t            var count = this.viewer.world.getItemCount();\n\t            if (count > 1) {\n\t                $.console.error('[Viewport.imageToViewportCoordinates] is not accurate ' +\n\t                    'with multi-image; use TiledImage.imageToViewportCoordinates instead.');\n\t            } else if (count === 1) {\n\t                // It is better to use TiledImage.viewportToImageCoordinates\n\t                // because this._contentBoundsNoRotate can not be relied on\n\t                // with clipping.\n\t                var item = this.viewer.world.getItemAt(0);\n\t                return item.imageToViewportCoordinates(imageX, imageY, true);\n\t            }\n\t        }\n\t\n\t        var point = this._imageToViewportDelta(imageX, imageY);\n\t        point.x += this._contentBoundsNoRotate.x;\n\t        point.y += this._contentBoundsNoRotate.y;\n\t        return point;\n\t    },\n\t\n\t    /**\n\t     * Translates from a rectangle which describes a portion of the image in\n\t     * pixel coordinates to OpenSeadragon viewport rectangle coordinates.\n\t     * This method can be called either by passing X,Y,width,height or an\n\t     * OpenSeadragon.Rect\n\t     * Note: not accurate with multi-image; use TiledImage.imageToViewportRectangle instead.\n\t     * @function\n\t     * @param {(OpenSeadragon.Rect | Number)} imageX the rectangle or the X\n\t     * coordinate of the top left corner of the rectangle in image coordinate system.\n\t     * @param {Number} [imageY] the Y coordinate of the top left corner of the rectangle\n\t     * in image coordinate system.\n\t     * @param {Number} [pixelWidth] the width in pixel of the rectangle.\n\t     * @param {Number} [pixelHeight] the height in pixel of the rectangle.\n\t     */\n\t    imageToViewportRectangle: function(imageX, imageY, pixelWidth, pixelHeight) {\n\t        var rect = imageX;\n\t        if (!(rect instanceof $.Rect)) {\n\t            //they passed individual components instead of a rectangle\n\t            rect = new $.Rect(imageX, imageY, pixelWidth, pixelHeight);\n\t        }\n\t\n\t        if (this.viewer) {\n\t            var count = this.viewer.world.getItemCount();\n\t            if (count > 1) {\n\t                $.console.error('[Viewport.imageToViewportRectangle] is not accurate ' +\n\t                    'with multi-image; use TiledImage.imageToViewportRectangle instead.');\n\t            } else if (count === 1) {\n\t                // It is better to use TiledImage.imageToViewportRectangle\n\t                // because this._contentBoundsNoRotate can not be relied on\n\t                // with clipping.\n\t                var item = this.viewer.world.getItemAt(0);\n\t                return item.imageToViewportRectangle(\n\t                    imageX, imageY, pixelWidth, pixelHeight, true);\n\t            }\n\t        }\n\t\n\t        var coordA = this.imageToViewportCoordinates(rect.x, rect.y);\n\t        var coordB = this._imageToViewportDelta(rect.width, rect.height);\n\t        return new $.Rect(\n\t            coordA.x,\n\t            coordA.y,\n\t            coordB.x,\n\t            coordB.y,\n\t            rect.degrees\n\t        );\n\t    },\n\t\n\t    /**\n\t     * Translates from a rectangle which describes a portion of\n\t     * the viewport in point coordinates to image rectangle coordinates.\n\t     * This method can be called either by passing X,Y,width,height or an\n\t     * OpenSeadragon.Rect\n\t     * Note: not accurate with multi-image; use TiledImage.viewportToImageRectangle instead.\n\t     * @function\n\t     * @param {(OpenSeadragon.Rect | Number)} viewerX either a rectangle or\n\t     * the X coordinate of the top left corner of the rectangle in viewport\n\t     * coordinate system.\n\t     * @param {Number} [viewerY] the Y coordinate of the top left corner of the rectangle\n\t     * in viewport coordinate system.\n\t     * @param {Number} [pointWidth] the width of the rectangle in viewport coordinate system.\n\t     * @param {Number} [pointHeight] the height of the rectangle in viewport coordinate system.\n\t     */\n\t    viewportToImageRectangle: function(viewerX, viewerY, pointWidth, pointHeight) {\n\t        var rect = viewerX;\n\t        if (!(rect instanceof $.Rect)) {\n\t            //they passed individual components instead of a rectangle\n\t            rect = new $.Rect(viewerX, viewerY, pointWidth, pointHeight);\n\t        }\n\t\n\t        if (this.viewer) {\n\t            var count = this.viewer.world.getItemCount();\n\t            if (count > 1) {\n\t                $.console.error('[Viewport.viewportToImageRectangle] is not accurate ' +\n\t                    'with multi-image; use TiledImage.viewportToImageRectangle instead.');\n\t            } else if (count === 1) {\n\t                // It is better to use TiledImage.viewportToImageCoordinates\n\t                // because this._contentBoundsNoRotate can not be relied on\n\t                // with clipping.\n\t                var item = this.viewer.world.getItemAt(0);\n\t                return item.viewportToImageRectangle(\n\t                    viewerX, viewerY, pointWidth, pointHeight, true);\n\t            }\n\t        }\n\t\n\t        var coordA = this.viewportToImageCoordinates(rect.x, rect.y);\n\t        var coordB = this._viewportToImageDelta(rect.width, rect.height);\n\t        return new $.Rect(\n\t            coordA.x,\n\t            coordA.y,\n\t            coordB.x,\n\t            coordB.y,\n\t            rect.degrees\n\t        );\n\t    },\n\t\n\t    /**\n\t     * Convert pixel coordinates relative to the viewer element to image\n\t     * coordinates.\n\t     * Note: not accurate with multi-image.\n\t     * @param {OpenSeadragon.Point} pixel\n\t     * @returns {OpenSeadragon.Point}\n\t     */\n\t    viewerElementToImageCoordinates: function( pixel ) {\n\t        var point = this.pointFromPixel( pixel, true );\n\t        return this.viewportToImageCoordinates( point );\n\t    },\n\t\n\t    /**\n\t     * Convert pixel coordinates relative to the image to\n\t     * viewer element coordinates.\n\t     * Note: not accurate with multi-image.\n\t     * @param {OpenSeadragon.Point} pixel\n\t     * @returns {OpenSeadragon.Point}\n\t     */\n\t    imageToViewerElementCoordinates: function( pixel ) {\n\t        var point = this.imageToViewportCoordinates( pixel );\n\t        return this.pixelFromPoint( point, true );\n\t    },\n\t\n\t    /**\n\t     * Convert pixel coordinates relative to the window to image coordinates.\n\t     * Note: not accurate with multi-image.\n\t     * @param {OpenSeadragon.Point} pixel\n\t     * @returns {OpenSeadragon.Point}\n\t     */\n\t    windowToImageCoordinates: function(pixel) {\n\t        $.console.assert(this.viewer,\n\t            \"[Viewport.windowToImageCoordinates] the viewport must have a viewer.\");\n\t        var viewerCoordinates = pixel.minus(\n\t                $.getElementPosition(this.viewer.element));\n\t        return this.viewerElementToImageCoordinates(viewerCoordinates);\n\t    },\n\t\n\t    /**\n\t     * Convert image coordinates to pixel coordinates relative to the window.\n\t     * Note: not accurate with multi-image.\n\t     * @param {OpenSeadragon.Point} pixel\n\t     * @returns {OpenSeadragon.Point}\n\t     */\n\t    imageToWindowCoordinates: function(pixel) {\n\t        $.console.assert(this.viewer,\n\t            \"[Viewport.imageToWindowCoordinates] the viewport must have a viewer.\");\n\t        var viewerCoordinates = this.imageToViewerElementCoordinates(pixel);\n\t        return viewerCoordinates.plus(\n\t                $.getElementPosition(this.viewer.element));\n\t    },\n\t\n\t    /**\n\t     * Convert pixel coordinates relative to the viewer element to viewport\n\t     * coordinates.\n\t     * @param {OpenSeadragon.Point} pixel\n\t     * @returns {OpenSeadragon.Point}\n\t     */\n\t    viewerElementToViewportCoordinates: function( pixel ) {\n\t        return this.pointFromPixel( pixel, true );\n\t    },\n\t\n\t    /**\n\t     * Convert viewport coordinates to pixel coordinates relative to the\n\t     * viewer element.\n\t     * @param {OpenSeadragon.Point} point\n\t     * @returns {OpenSeadragon.Point}\n\t     */\n\t    viewportToViewerElementCoordinates: function( point ) {\n\t        return this.pixelFromPoint( point, true );\n\t    },\n\t\n\t    /**\n\t     * Convert a rectangle in pixel coordinates relative to the viewer element\n\t     * to viewport coordinates.\n\t     * @param {OpenSeadragon.Rect} rectangle the rectangle to convert\n\t     * @returns {OpenSeadragon.Rect} the converted rectangle\n\t     */\n\t    viewerElementToViewportRectangle: function(rectangle) {\n\t        return $.Rect.fromSummits(\n\t            this.pointFromPixel(rectangle.getTopLeft(), true),\n\t            this.pointFromPixel(rectangle.getTopRight(), true),\n\t            this.pointFromPixel(rectangle.getBottomLeft(), true)\n\t        );\n\t    },\n\t\n\t    /**\n\t     * Convert a rectangle in viewport coordinates to pixel coordinates relative\n\t     * to the viewer element.\n\t     * @param {OpenSeadragon.Rect} rectangle the rectangle to convert\n\t     * @returns {OpenSeadragon.Rect} the converted rectangle\n\t     */\n\t    viewportToViewerElementRectangle: function(rectangle) {\n\t        return $.Rect.fromSummits(\n\t            this.pixelFromPoint(rectangle.getTopLeft(), true),\n\t            this.pixelFromPoint(rectangle.getTopRight(), true),\n\t            this.pixelFromPoint(rectangle.getBottomLeft(), true)\n\t        );\n\t    },\n\t\n\t    /**\n\t     * Convert pixel coordinates relative to the window to viewport coordinates.\n\t     * @param {OpenSeadragon.Point} pixel\n\t     * @returns {OpenSeadragon.Point}\n\t     */\n\t    windowToViewportCoordinates: function(pixel) {\n\t        $.console.assert(this.viewer,\n\t            \"[Viewport.windowToViewportCoordinates] the viewport must have a viewer.\");\n\t        var viewerCoordinates = pixel.minus(\n\t                $.getElementPosition(this.viewer.element));\n\t        return this.viewerElementToViewportCoordinates(viewerCoordinates);\n\t    },\n\t\n\t    /**\n\t     * Convert viewport coordinates to pixel coordinates relative to the window.\n\t     * @param {OpenSeadragon.Point} point\n\t     * @returns {OpenSeadragon.Point}\n\t     */\n\t    viewportToWindowCoordinates: function(point) {\n\t        $.console.assert(this.viewer,\n\t            \"[Viewport.viewportToWindowCoordinates] the viewport must have a viewer.\");\n\t        var viewerCoordinates = this.viewportToViewerElementCoordinates(point);\n\t        return viewerCoordinates.plus(\n\t                $.getElementPosition(this.viewer.element));\n\t    },\n\t\n\t    /**\n\t     * Convert a viewport zoom to an image zoom.\n\t     * Image zoom: ratio of the original image size to displayed image size.\n\t     * 1 means original image size, 0.5 half size...\n\t     * Viewport zoom: ratio of the displayed image's width to viewport's width.\n\t     * 1 means identical width, 2 means image's width is twice the viewport's width...\n\t     * Note: not accurate with multi-image.\n\t     * @function\n\t     * @param {Number} viewportZoom The viewport zoom\n\t     * target zoom.\n\t     * @returns {Number} imageZoom The image zoom\n\t     */\n\t    viewportToImageZoom: function(viewportZoom) {\n\t        if (this.viewer) {\n\t            var count = this.viewer.world.getItemCount();\n\t            if (count > 1) {\n\t                $.console.error('[Viewport.viewportToImageZoom] is not ' +\n\t                    'accurate with multi-image.');\n\t            } else if (count === 1) {\n\t                // It is better to use TiledImage.viewportToImageZoom\n\t                // because this._contentBoundsNoRotate can not be relied on\n\t                // with clipping.\n\t                var item = this.viewer.world.getItemAt(0);\n\t                return item.viewportToImageZoom(viewportZoom);\n\t            }\n\t        }\n\t\n\t        var imageWidth = this._contentSizeNoRotate.x;\n\t        var containerWidth = this._containerInnerSize.x;\n\t        var scale = this._contentBoundsNoRotate.width;\n\t        var viewportToImageZoomRatio = (containerWidth / imageWidth) * scale;\n\t        return viewportZoom * viewportToImageZoomRatio;\n\t    },\n\t\n\t    /**\n\t     * Convert an image zoom to a viewport zoom.\n\t     * Image zoom: ratio of the original image size to displayed image size.\n\t     * 1 means original image size, 0.5 half size...\n\t     * Viewport zoom: ratio of the displayed image's width to viewport's width.\n\t     * 1 means identical width, 2 means image's width is twice the viewport's width...\n\t     * Note: not accurate with multi-image.\n\t     * @function\n\t     * @param {Number} imageZoom The image zoom\n\t     * target zoom.\n\t     * @returns {Number} viewportZoom The viewport zoom\n\t     */\n\t    imageToViewportZoom: function(imageZoom) {\n\t        if (this.viewer) {\n\t            var count = this.viewer.world.getItemCount();\n\t            if (count > 1) {\n\t                $.console.error('[Viewport.imageToViewportZoom] is not accurate ' +\n\t                    'with multi-image.');\n\t            } else if (count === 1) {\n\t                // It is better to use TiledImage.imageToViewportZoom\n\t                // because this._contentBoundsNoRotate can not be relied on\n\t                // with clipping.\n\t                var item = this.viewer.world.getItemAt(0);\n\t                return item.imageToViewportZoom(imageZoom);\n\t            }\n\t        }\n\t\n\t        var imageWidth = this._contentSizeNoRotate.x;\n\t        var containerWidth = this._containerInnerSize.x;\n\t        var scale = this._contentBoundsNoRotate.width;\n\t        var viewportToImageZoomRatio = (imageWidth / containerWidth) / scale;\n\t        return imageZoom * viewportToImageZoomRatio;\n\t    }\n\t};\n\t\n\t}( OpenSeadragon ));\n\t\n\t/*\n\t * OpenSeadragon - TiledImage\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function( $ ){\n\t\n\t/**\n\t * You shouldn't have to create a TiledImage directly; use {@link OpenSeadragon.Viewer#open}\n\t * or {@link OpenSeadragon.Viewer#addTiledImage} instead.\n\t * @class TiledImage\n\t * @memberof OpenSeadragon\n\t * @extends OpenSeadragon.EventSource\n\t * @classdesc Handles rendering of tiles for an {@link OpenSeadragon.Viewer}.\n\t * A new instance is created for each TileSource opened.\n\t * @param {Object} options - Configuration for this TiledImage.\n\t * @param {OpenSeadragon.TileSource} options.source - The TileSource that defines this TiledImage.\n\t * @param {OpenSeadragon.Viewer} options.viewer - The Viewer that owns this TiledImage.\n\t * @param {OpenSeadragon.TileCache} options.tileCache - The TileCache for this TiledImage to use.\n\t * @param {OpenSeadragon.Drawer} options.drawer - The Drawer for this TiledImage to draw onto.\n\t * @param {OpenSeadragon.ImageLoader} options.imageLoader - The ImageLoader for this TiledImage to use.\n\t * @param {Number} [options.x=0] - Left position, in viewport coordinates.\n\t * @param {Number} [options.y=0] - Top position, in viewport coordinates.\n\t * @param {Number} [options.width=1] - Width, in viewport coordinates.\n\t * @param {Number} [options.height] - Height, in viewport coordinates.\n\t * @param {OpenSeadragon.Rect} [options.fitBounds] The bounds in viewport coordinates\n\t * to fit the image into. If specified, x, y, width and height get ignored.\n\t * @param {OpenSeadragon.Placement} [options.fitBoundsPlacement=OpenSeadragon.Placement.CENTER]\n\t * How to anchor the image in the bounds if options.fitBounds is set.\n\t * @param {OpenSeadragon.Rect} [options.clip] - An area, in image pixels, to clip to\n\t * (portions of the image outside of this area will not be visible). Only works on\n\t * browsers that support the HTML5 canvas.\n\t * @param {Number} [options.springStiffness] - See {@link OpenSeadragon.Options}.\n\t * @param {Boolean} [options.animationTime] - See {@link OpenSeadragon.Options}.\n\t * @param {Number} [options.minZoomImageRatio] - See {@link OpenSeadragon.Options}.\n\t * @param {Boolean} [options.wrapHorizontal] - See {@link OpenSeadragon.Options}.\n\t * @param {Boolean} [options.wrapVertical] - See {@link OpenSeadragon.Options}.\n\t * @param {Boolean} [options.immediateRender] - See {@link OpenSeadragon.Options}.\n\t * @param {Number} [options.blendTime] - See {@link OpenSeadragon.Options}.\n\t * @param {Boolean} [options.alwaysBlend] - See {@link OpenSeadragon.Options}.\n\t * @param {Number} [options.minPixelRatio] - See {@link OpenSeadragon.Options}.\n\t * @param {Number} [options.smoothTileEdgesMinZoom] - See {@link OpenSeadragon.Options}.\n\t * @param {Boolean} [options.iOSDevice] - See {@link OpenSeadragon.Options}.\n\t * @param {Number} [options.opacity=1] - Opacity the tiled image should be drawn at.\n\t * @param {String} [options.compositeOperation] - How the image is composited onto other images; see compositeOperation in {@link OpenSeadragon.Options} for possible values.\n\t * @param {Boolean} [options.debugMode] - See {@link OpenSeadragon.Options}.\n\t * @param {String|CanvasGradient|CanvasPattern|Function} [options.placeholderFillStyle] - See {@link OpenSeadragon.Options}.\n\t * @param {String|Boolean} [options.crossOriginPolicy] - See {@link OpenSeadragon.Options}.\n\t */\n\t$.TiledImage = function( options ) {\n\t    var _this = this;\n\t\n\t    $.console.assert( options.tileCache, \"[TiledImage] options.tileCache is required\" );\n\t    $.console.assert( options.drawer, \"[TiledImage] options.drawer is required\" );\n\t    $.console.assert( options.viewer, \"[TiledImage] options.viewer is required\" );\n\t    $.console.assert( options.imageLoader, \"[TiledImage] options.imageLoader is required\" );\n\t    $.console.assert( options.source, \"[TiledImage] options.source is required\" );\n\t    $.console.assert(!options.clip || options.clip instanceof $.Rect,\n\t        \"[TiledImage] options.clip must be an OpenSeadragon.Rect if present\");\n\t\n\t    $.EventSource.call( this );\n\t\n\t    this._tileCache = options.tileCache;\n\t    delete options.tileCache;\n\t\n\t    this._drawer = options.drawer;\n\t    delete options.drawer;\n\t\n\t    this._imageLoader = options.imageLoader;\n\t    delete options.imageLoader;\n\t\n\t    if (options.clip instanceof $.Rect) {\n\t        this._clip = options.clip.clone();\n\t    }\n\t\n\t    delete options.clip;\n\t\n\t    var x = options.x || 0;\n\t    delete options.x;\n\t    var y = options.y || 0;\n\t    delete options.y;\n\t\n\t    // Ratio of zoomable image height to width.\n\t    this.normHeight = options.source.dimensions.y / options.source.dimensions.x;\n\t    this.contentAspectX = options.source.dimensions.x / options.source.dimensions.y;\n\t\n\t    var scale = 1;\n\t    if ( options.width ) {\n\t        scale = options.width;\n\t        delete options.width;\n\t\n\t        if ( options.height ) {\n\t            $.console.error( \"specifying both width and height to a tiledImage is not supported\" );\n\t            delete options.height;\n\t        }\n\t    } else if ( options.height ) {\n\t        scale = options.height / this.normHeight;\n\t        delete options.height;\n\t    }\n\t\n\t    var fitBounds = options.fitBounds;\n\t    delete options.fitBounds;\n\t    var fitBoundsPlacement = options.fitBoundsPlacement || OpenSeadragon.Placement.CENTER;\n\t    delete options.fitBoundsPlacement;\n\t\n\t    $.extend( true, this, {\n\t\n\t        //internal state properties\n\t        viewer:         null,\n\t        tilesMatrix:    {},    // A '3d' dictionary [level][x][y] --> Tile.\n\t        coverage:       {},    // A '3d' dictionary [level][x][y] --> Boolean.\n\t        lastDrawn:      [],    // An unordered list of Tiles drawn last frame.\n\t        lastResetTime:  0,     // Last time for which the tiledImage was reset.\n\t        _midDraw:       false, // Is the tiledImage currently updating the viewport?\n\t        _needsDraw:     true,  // Does the tiledImage need to update the viewport again?\n\t        _hasOpaqueTile: false,  // Do we have even one fully opaque tile?\n\t        //configurable settings\n\t        springStiffness:        $.DEFAULT_SETTINGS.springStiffness,\n\t        animationTime:          $.DEFAULT_SETTINGS.animationTime,\n\t        minZoomImageRatio:      $.DEFAULT_SETTINGS.minZoomImageRatio,\n\t        wrapHorizontal:         $.DEFAULT_SETTINGS.wrapHorizontal,\n\t        wrapVertical:           $.DEFAULT_SETTINGS.wrapVertical,\n\t        immediateRender:        $.DEFAULT_SETTINGS.immediateRender,\n\t        blendTime:              $.DEFAULT_SETTINGS.blendTime,\n\t        alwaysBlend:            $.DEFAULT_SETTINGS.alwaysBlend,\n\t        minPixelRatio:          $.DEFAULT_SETTINGS.minPixelRatio,\n\t        smoothTileEdgesMinZoom: $.DEFAULT_SETTINGS.smoothTileEdgesMinZoom,\n\t        iOSDevice:              $.DEFAULT_SETTINGS.iOSDevice,\n\t        debugMode:              $.DEFAULT_SETTINGS.debugMode,\n\t        crossOriginPolicy:      $.DEFAULT_SETTINGS.crossOriginPolicy,\n\t        placeholderFillStyle:   $.DEFAULT_SETTINGS.placeholderFillStyle,\n\t        opacity:                $.DEFAULT_SETTINGS.opacity,\n\t        compositeOperation:     $.DEFAULT_SETTINGS.compositeOperation\n\t\n\t    }, options );\n\t\n\t    this._xSpring = new $.Spring({\n\t        initial: x,\n\t        springStiffness: this.springStiffness,\n\t        animationTime: this.animationTime\n\t    });\n\t\n\t    this._ySpring = new $.Spring({\n\t        initial: y,\n\t        springStiffness: this.springStiffness,\n\t        animationTime: this.animationTime\n\t    });\n\t\n\t    this._scaleSpring = new $.Spring({\n\t        initial: scale,\n\t        springStiffness: this.springStiffness,\n\t        animationTime: this.animationTime\n\t    });\n\t\n\t    this._updateForScale();\n\t\n\t    if (fitBounds) {\n\t        this.fitBounds(fitBounds, fitBoundsPlacement, true);\n\t    }\n\t\n\t    // We need a callback to give image manipulation a chance to happen\n\t    this._drawingHandler = function(args) {\n\t      /**\n\t       * This event is fired just before the tile is drawn giving the application a chance to alter the image.\n\t       *\n\t       * NOTE: This event is only fired when the drawer is using a &lt;canvas&gt;.\n\t       *\n\t       * @event tile-drawing\n\t       * @memberof OpenSeadragon.Viewer\n\t       * @type {object}\n\t       * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n\t       * @property {OpenSeadragon.Tile} tile - The Tile being drawn.\n\t       * @property {OpenSeadragon.TiledImage} tiledImage - Which TiledImage is being drawn.\n\t       * @property {OpenSeadragon.Tile} context - The HTML canvas context being drawn into.\n\t       * @property {OpenSeadragon.Tile} rendered - The HTML canvas context containing the tile imagery.\n\t       * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t       */\n\t        _this.viewer.raiseEvent('tile-drawing', $.extend({\n\t            tiledImage: _this\n\t        }, args));\n\t    };\n\t};\n\t\n\t$.extend($.TiledImage.prototype, $.EventSource.prototype, /** @lends OpenSeadragon.TiledImage.prototype */{\n\t    /**\n\t     * @returns {Boolean} Whether the TiledImage needs to be drawn.\n\t     */\n\t    needsDraw: function() {\n\t        return this._needsDraw;\n\t    },\n\t\n\t    /**\n\t     * Clears all tiles and triggers an update on the next call to\n\t     * {@link OpenSeadragon.TiledImage#update}.\n\t     */\n\t    reset: function() {\n\t        this._tileCache.clearTilesFor(this);\n\t        this.lastResetTime = $.now();\n\t        this._needsDraw = true;\n\t    },\n\t\n\t    /**\n\t     * Updates the TiledImage's bounds, animating if needed.\n\t     * @returns {Boolean} Whether the TiledImage animated.\n\t     */\n\t    update: function() {\n\t        var oldX = this._xSpring.current.value;\n\t        var oldY = this._ySpring.current.value;\n\t        var oldScale = this._scaleSpring.current.value;\n\t\n\t        this._xSpring.update();\n\t        this._ySpring.update();\n\t        this._scaleSpring.update();\n\t\n\t        if (this._xSpring.current.value !== oldX || this._ySpring.current.value !== oldY ||\n\t                this._scaleSpring.current.value !== oldScale) {\n\t            this._updateForScale();\n\t            this._needsDraw = true;\n\t            return true;\n\t        }\n\t\n\t        return false;\n\t    },\n\t\n\t    /**\n\t     * Draws the TiledImage to its Drawer.\n\t     */\n\t    draw: function() {\n\t        if (this.opacity !== 0) {\n\t            this._midDraw = true;\n\t            updateViewport(this);\n\t            this._midDraw = false;\n\t        }\n\t    },\n\t\n\t    /**\n\t     * Destroy the TiledImage (unload current loaded tiles).\n\t     */\n\t    destroy: function() {\n\t        this.reset();\n\t    },\n\t\n\t    /**\n\t     * @returns {OpenSeadragon.Rect} This TiledImage's bounds in viewport coordinates.\n\t     * @param {Boolean} [current=false] - Pass true for the current location; false for target location.\n\t     */\n\t    getBounds: function(current) {\n\t        if (current) {\n\t            return new $.Rect( this._xSpring.current.value, this._ySpring.current.value,\n\t                this._worldWidthCurrent, this._worldHeightCurrent );\n\t        }\n\t\n\t        return new $.Rect( this._xSpring.target.value, this._ySpring.target.value,\n\t            this._worldWidthTarget, this._worldHeightTarget );\n\t    },\n\t\n\t    // deprecated\n\t    getWorldBounds: function() {\n\t        $.console.error('[TiledImage.getWorldBounds] is deprecated; use TiledImage.getBounds instead');\n\t        return this.getBounds();\n\t    },\n\t\n\t    /**\n\t     * Get the bounds of the displayed part of the tiled image.\n\t     * @param {Boolean} [current=false] Pass true for the current location,\n\t     * false for the target location.\n\t     * @returns {$.Rect} The clipped bounds in viewport coordinates.\n\t     */\n\t    getClippedBounds: function(current) {\n\t        var bounds = this.getBounds(current);\n\t        if (this._clip) {\n\t            var ratio = this._worldWidthCurrent / this.source.dimensions.x;\n\t            var clip = this._clip.times(ratio);\n\t            bounds = new $.Rect(\n\t                bounds.x + clip.x,\n\t                bounds.y + clip.y,\n\t                clip.width,\n\t                clip.height);\n\t        }\n\t        return bounds;\n\t    },\n\t\n\t    /**\n\t     * @returns {OpenSeadragon.Point} This TiledImage's content size, in original pixels.\n\t     */\n\t    getContentSize: function() {\n\t        return new $.Point(this.source.dimensions.x, this.source.dimensions.y);\n\t    },\n\t\n\t    // private\n\t    _viewportToImageDelta: function( viewerX, viewerY, current ) {\n\t        var scale = (current ? this._scaleSpring.current.value : this._scaleSpring.target.value);\n\t        return new $.Point(viewerX * (this.source.dimensions.x / scale),\n\t            viewerY * ((this.source.dimensions.y * this.contentAspectX) / scale));\n\t    },\n\t\n\t    /**\n\t     * Translates from OpenSeadragon viewer coordinate system to image coordinate system.\n\t     * This method can be called either by passing X,Y coordinates or an {@link OpenSeadragon.Point}.\n\t     * @param {Number|OpenSeadragon.Point} viewerX - The X coordinate or point in viewport coordinate system.\n\t     * @param {Number} [viewerY] - The Y coordinate in viewport coordinate system.\n\t     * @param {Boolean} [current=false] - Pass true to use the current location; false for target location.\n\t     * @return {OpenSeadragon.Point} A point representing the coordinates in the image.\n\t     */\n\t    viewportToImageCoordinates: function( viewerX, viewerY, current ) {\n\t        if (viewerX instanceof $.Point) {\n\t            //they passed a point instead of individual components\n\t            current = viewerY;\n\t            viewerY = viewerX.y;\n\t            viewerX = viewerX.x;\n\t        }\n\t\n\t        if (current) {\n\t            return this._viewportToImageDelta(viewerX - this._xSpring.current.value,\n\t                viewerY - this._ySpring.current.value);\n\t        }\n\t\n\t        return this._viewportToImageDelta(viewerX - this._xSpring.target.value,\n\t            viewerY - this._ySpring.target.value);\n\t    },\n\t\n\t    // private\n\t    _imageToViewportDelta: function( imageX, imageY, current ) {\n\t        var scale = (current ? this._scaleSpring.current.value : this._scaleSpring.target.value);\n\t        return new $.Point((imageX / this.source.dimensions.x) * scale,\n\t            (imageY / this.source.dimensions.y / this.contentAspectX) * scale);\n\t    },\n\t\n\t    /**\n\t     * Translates from image coordinate system to OpenSeadragon viewer coordinate system\n\t     * This method can be called either by passing X,Y coordinates or an {@link OpenSeadragon.Point}.\n\t     * @param {Number|OpenSeadragon.Point} imageX - The X coordinate or point in image coordinate system.\n\t     * @param {Number} [imageY] - The Y coordinate in image coordinate system.\n\t     * @param {Boolean} [current=false] - Pass true to use the current location; false for target location.\n\t     * @return {OpenSeadragon.Point} A point representing the coordinates in the viewport.\n\t     */\n\t    imageToViewportCoordinates: function( imageX, imageY, current ) {\n\t        if (imageX instanceof $.Point) {\n\t            //they passed a point instead of individual components\n\t            current = imageY;\n\t            imageY = imageX.y;\n\t            imageX = imageX.x;\n\t        }\n\t\n\t        var point = this._imageToViewportDelta(imageX, imageY);\n\t        if (current) {\n\t            point.x += this._xSpring.current.value;\n\t            point.y += this._ySpring.current.value;\n\t        } else {\n\t            point.x += this._xSpring.target.value;\n\t            point.y += this._ySpring.target.value;\n\t        }\n\t\n\t        return point;\n\t    },\n\t\n\t    /**\n\t     * Translates from a rectangle which describes a portion of the image in\n\t     * pixel coordinates to OpenSeadragon viewport rectangle coordinates.\n\t     * This method can be called either by passing X,Y,width,height or an {@link OpenSeadragon.Rect}.\n\t     * @param {Number|OpenSeadragon.Rect} imageX - The left coordinate or rectangle in image coordinate system.\n\t     * @param {Number} [imageY] - The top coordinate in image coordinate system.\n\t     * @param {Number} [pixelWidth] - The width in pixel of the rectangle.\n\t     * @param {Number} [pixelHeight] - The height in pixel of the rectangle.\n\t     * @param {Boolean} [current=false] - Pass true to use the current location; false for target location.\n\t     * @return {OpenSeadragon.Rect} A rect representing the coordinates in the viewport.\n\t     */\n\t    imageToViewportRectangle: function( imageX, imageY, pixelWidth, pixelHeight, current ) {\n\t        var rect = imageX;\n\t        if (rect instanceof $.Rect) {\n\t            //they passed a rect instead of individual components\n\t            current = imageY;\n\t        } else {\n\t            rect = new $.Rect(imageX, imageY, pixelWidth, pixelHeight);\n\t        }\n\t\n\t        var coordA = this.imageToViewportCoordinates(rect.getTopLeft(), current);\n\t        var coordB = this._imageToViewportDelta(rect.width, rect.height, current);\n\t\n\t        return new $.Rect(\n\t            coordA.x,\n\t            coordA.y,\n\t            coordB.x,\n\t            coordB.y,\n\t            rect.degrees\n\t        );\n\t    },\n\t\n\t    /**\n\t     * Translates from a rectangle which describes a portion of\n\t     * the viewport in point coordinates to image rectangle coordinates.\n\t     * This method can be called either by passing X,Y,width,height or an {@link OpenSeadragon.Rect}.\n\t     * @param {Number|OpenSeadragon.Rect} viewerX - The left coordinate or rectangle in viewport coordinate system.\n\t     * @param {Number} [viewerY] - The top coordinate in viewport coordinate system.\n\t     * @param {Number} [pointWidth] - The width in viewport coordinate system.\n\t     * @param {Number} [pointHeight] - The height in viewport coordinate system.\n\t     * @param {Boolean} [current=false] - Pass true to use the current location; false for target location.\n\t     * @return {OpenSeadragon.Rect} A rect representing the coordinates in the image.\n\t     */\n\t    viewportToImageRectangle: function( viewerX, viewerY, pointWidth, pointHeight, current ) {\n\t        var rect = viewerX;\n\t        if (viewerX instanceof $.Rect) {\n\t            //they passed a rect instead of individual components\n\t            current = viewerY;\n\t        } else {\n\t            rect = new $.Rect(viewerX, viewerY, pointWidth, pointHeight);\n\t        }\n\t\n\t        var coordA = this.viewportToImageCoordinates(rect.getTopLeft(), current);\n\t        var coordB = this._viewportToImageDelta(rect.width, rect.height, current);\n\t\n\t        return new $.Rect(\n\t            coordA.x,\n\t            coordA.y,\n\t            coordB.x,\n\t            coordB.y,\n\t            rect.degrees\n\t        );\n\t    },\n\t\n\t    /**\n\t     * Convert pixel coordinates relative to the viewer element to image\n\t     * coordinates.\n\t     * @param {OpenSeadragon.Point} pixel\n\t     * @returns {OpenSeadragon.Point}\n\t     */\n\t    viewerElementToImageCoordinates: function( pixel ) {\n\t        var point = this.viewport.pointFromPixel( pixel, true );\n\t        return this.viewportToImageCoordinates( point );\n\t    },\n\t\n\t    /**\n\t     * Convert pixel coordinates relative to the image to\n\t     * viewer element coordinates.\n\t     * @param {OpenSeadragon.Point} pixel\n\t     * @returns {OpenSeadragon.Point}\n\t     */\n\t    imageToViewerElementCoordinates: function( pixel ) {\n\t        var point = this.imageToViewportCoordinates( pixel );\n\t        return this.viewport.pixelFromPoint( point, true );\n\t    },\n\t\n\t    /**\n\t     * Convert pixel coordinates relative to the window to image coordinates.\n\t     * @param {OpenSeadragon.Point} pixel\n\t     * @returns {OpenSeadragon.Point}\n\t     */\n\t    windowToImageCoordinates: function( pixel ) {\n\t        var viewerCoordinates = pixel.minus(\n\t                OpenSeadragon.getElementPosition( this.viewer.element ));\n\t        return this.viewerElementToImageCoordinates( viewerCoordinates );\n\t    },\n\t\n\t    /**\n\t     * Convert image coordinates to pixel coordinates relative to the window.\n\t     * @param {OpenSeadragon.Point} pixel\n\t     * @returns {OpenSeadragon.Point}\n\t     */\n\t    imageToWindowCoordinates: function( pixel ) {\n\t        var viewerCoordinates = this.imageToViewerElementCoordinates( pixel );\n\t        return viewerCoordinates.plus(\n\t                OpenSeadragon.getElementPosition( this.viewer.element ));\n\t    },\n\t\n\t    /**\n\t     * Convert a viewport zoom to an image zoom.\n\t     * Image zoom: ratio of the original image size to displayed image size.\n\t     * 1 means original image size, 0.5 half size...\n\t     * Viewport zoom: ratio of the displayed image's width to viewport's width.\n\t     * 1 means identical width, 2 means image's width is twice the viewport's width...\n\t     * @function\n\t     * @param {Number} viewportZoom The viewport zoom\n\t     * @returns {Number} imageZoom The image zoom\n\t     */\n\t    viewportToImageZoom: function( viewportZoom ) {\n\t        var ratio = this._scaleSpring.current.value *\n\t                this.viewport._containerInnerSize.x / this.source.dimensions.x;\n\t        return ratio * viewportZoom ;\n\t    },\n\t\n\t    /**\n\t     * Convert an image zoom to a viewport zoom.\n\t     * Image zoom: ratio of the original image size to displayed image size.\n\t     * 1 means original image size, 0.5 half size...\n\t     * Viewport zoom: ratio of the displayed image's width to viewport's width.\n\t     * 1 means identical width, 2 means image's width is twice the viewport's width...\n\t     * Note: not accurate with multi-image.\n\t     * @function\n\t     * @param {Number} imageZoom The image zoom\n\t     * @returns {Number} viewportZoom The viewport zoom\n\t     */\n\t    imageToViewportZoom: function( imageZoom ) {\n\t        var ratio = this._scaleSpring.current.value *\n\t                this.viewport._containerInnerSize.x / this.source.dimensions.x;\n\t        return imageZoom / ratio;\n\t    },\n\t\n\t    /**\n\t     * Sets the TiledImage's position in the world.\n\t     * @param {OpenSeadragon.Point} position - The new position, in viewport coordinates.\n\t     * @param {Boolean} [immediately=false] - Whether to animate to the new position or snap immediately.\n\t     * @fires OpenSeadragon.TiledImage.event:bounds-change\n\t     */\n\t    setPosition: function(position, immediately) {\n\t        var sameTarget = (this._xSpring.target.value === position.x &&\n\t            this._ySpring.target.value === position.y);\n\t\n\t        if (immediately) {\n\t            if (sameTarget && this._xSpring.current.value === position.x &&\n\t                    this._ySpring.current.value === position.y) {\n\t                return;\n\t            }\n\t\n\t            this._xSpring.resetTo(position.x);\n\t            this._ySpring.resetTo(position.y);\n\t            this._needsDraw = true;\n\t        } else {\n\t            if (sameTarget) {\n\t                return;\n\t            }\n\t\n\t            this._xSpring.springTo(position.x);\n\t            this._ySpring.springTo(position.y);\n\t            this._needsDraw = true;\n\t        }\n\t\n\t        if (!sameTarget) {\n\t            this._raiseBoundsChange();\n\t        }\n\t    },\n\t\n\t    /**\n\t     * Sets the TiledImage's width in the world, adjusting the height to match based on aspect ratio.\n\t     * @param {Number} width - The new width, in viewport coordinates.\n\t     * @param {Boolean} [immediately=false] - Whether to animate to the new size or snap immediately.\n\t     * @fires OpenSeadragon.TiledImage.event:bounds-change\n\t     */\n\t    setWidth: function(width, immediately) {\n\t        this._setScale(width, immediately);\n\t    },\n\t\n\t    /**\n\t     * Sets the TiledImage's height in the world, adjusting the width to match based on aspect ratio.\n\t     * @param {Number} height - The new height, in viewport coordinates.\n\t     * @param {Boolean} [immediately=false] - Whether to animate to the new size or snap immediately.\n\t     * @fires OpenSeadragon.TiledImage.event:bounds-change\n\t     */\n\t    setHeight: function(height, immediately) {\n\t        this._setScale(height / this.normHeight, immediately);\n\t    },\n\t\n\t    /**\n\t     * Positions and scales the TiledImage to fit in the specified bounds.\n\t     * Note: this method fires OpenSeadragon.TiledImage.event:bounds-change\n\t     * twice\n\t     * @param {OpenSeadragon.Rect} bounds The bounds to fit the image into.\n\t     * @param {OpenSeadragon.Placement} [anchor=OpenSeadragon.Placement.CENTER]\n\t     * How to anchor the image in the bounds.\n\t     * @param {Boolean} [immediately=false] Whether to animate to the new size\n\t     * or snap immediately.\n\t     * @fires OpenSeadragon.TiledImage.event:bounds-change\n\t     */\n\t    fitBounds: function(bounds, anchor, immediately) {\n\t        anchor = anchor || $.Placement.CENTER;\n\t        var anchorProperties = $.Placement.properties[anchor];\n\t        var aspectRatio = this.contentAspectX;\n\t        var xOffset = 0;\n\t        var yOffset = 0;\n\t        var displayedWidthRatio = 1;\n\t        var displayedHeightRatio = 1;\n\t        if (this._clip) {\n\t            aspectRatio = this._clip.getAspectRatio();\n\t            displayedWidthRatio = this._clip.width / this.source.dimensions.x;\n\t            displayedHeightRatio = this._clip.height / this.source.dimensions.y;\n\t            if (bounds.getAspectRatio() > aspectRatio) {\n\t                xOffset = this._clip.x / this._clip.height * bounds.height;\n\t                yOffset = this._clip.y / this._clip.height * bounds.height;\n\t            } else {\n\t                xOffset = this._clip.x / this._clip.width * bounds.width;\n\t                yOffset = this._clip.y / this._clip.width * bounds.width;\n\t            }\n\t        }\n\t\n\t        if (bounds.getAspectRatio() > aspectRatio) {\n\t            // We will have margins on the X axis\n\t            var height = bounds.height / displayedHeightRatio;\n\t            var marginLeft = 0;\n\t            if (anchorProperties.isHorizontallyCentered) {\n\t                marginLeft = (bounds.width - bounds.height * aspectRatio) / 2;\n\t            } else if (anchorProperties.isRight) {\n\t                marginLeft = bounds.width - bounds.height * aspectRatio;\n\t            }\n\t            this.setPosition(\n\t                new $.Point(bounds.x - xOffset + marginLeft, bounds.y - yOffset),\n\t                immediately);\n\t            this.setHeight(height, immediately);\n\t        } else {\n\t            // We will have margins on the Y axis\n\t            var width = bounds.width / displayedWidthRatio;\n\t            var marginTop = 0;\n\t            if (anchorProperties.isVerticallyCentered) {\n\t                marginTop = (bounds.height - bounds.width / aspectRatio) / 2;\n\t            } else if (anchorProperties.isBottom) {\n\t                marginTop = bounds.height - bounds.width / aspectRatio;\n\t            }\n\t            this.setPosition(\n\t                new $.Point(bounds.x - xOffset, bounds.y - yOffset + marginTop),\n\t                immediately);\n\t            this.setWidth(width, immediately);\n\t        }\n\t    },\n\t\n\t    /**\n\t     * @returns {OpenSeadragon.Rect|null} The TiledImage's current clip rectangle,\n\t     * in image pixels, or null if none.\n\t     */\n\t    getClip: function() {\n\t        if (this._clip) {\n\t            return this._clip.clone();\n\t        }\n\t\n\t        return null;\n\t    },\n\t\n\t    /**\n\t     * @param {OpenSeadragon.Rect|null} newClip - An area, in image pixels, to clip to\n\t     * (portions of the image outside of this area will not be visible). Only works on\n\t     * browsers that support the HTML5 canvas.\n\t     */\n\t    setClip: function(newClip) {\n\t        $.console.assert(!newClip || newClip instanceof $.Rect,\n\t            \"[TiledImage.setClip] newClip must be an OpenSeadragon.Rect or null\");\n\t\n\t        if (newClip instanceof $.Rect) {\n\t            this._clip = newClip.clone();\n\t        } else {\n\t            this._clip = null;\n\t        }\n\t\n\t        this._needsDraw = true;\n\t    },\n\t\n\t    /**\n\t     * @returns {Number} The TiledImage's current opacity.\n\t     */\n\t    getOpacity: function() {\n\t        return this.opacity;\n\t    },\n\t\n\t    /**\n\t     * @param {Number} opacity Opacity the tiled image should be drawn at.\n\t     */\n\t    setOpacity: function(opacity) {\n\t        this.opacity = opacity;\n\t        this._needsDraw = true;\n\t    },\n\t\n\t    /**\n\t     * @returns {String} The TiledImage's current compositeOperation.\n\t     */\n\t    getCompositeOperation: function() {\n\t        return this.compositeOperation;\n\t    },\n\t\n\t    /**\n\t     * @param {String} compositeOperation the tiled image should be drawn with this globalCompositeOperation.\n\t     */\n\t    setCompositeOperation: function(compositeOperation) {\n\t        this.compositeOperation = compositeOperation;\n\t        this._needsDraw = true;\n\t    },\n\t\n\t    // private\n\t    _setScale: function(scale, immediately) {\n\t        var sameTarget = (this._scaleSpring.target.value === scale);\n\t        if (immediately) {\n\t            if (sameTarget && this._scaleSpring.current.value === scale) {\n\t                return;\n\t            }\n\t\n\t            this._scaleSpring.resetTo(scale);\n\t            this._updateForScale();\n\t            this._needsDraw = true;\n\t        } else {\n\t            if (sameTarget) {\n\t                return;\n\t            }\n\t\n\t            this._scaleSpring.springTo(scale);\n\t            this._updateForScale();\n\t            this._needsDraw = true;\n\t        }\n\t\n\t        if (!sameTarget) {\n\t            this._raiseBoundsChange();\n\t        }\n\t    },\n\t\n\t    // private\n\t    _updateForScale: function() {\n\t        this._worldWidthTarget = this._scaleSpring.target.value;\n\t        this._worldHeightTarget = this.normHeight * this._scaleSpring.target.value;\n\t        this._worldWidthCurrent = this._scaleSpring.current.value;\n\t        this._worldHeightCurrent = this.normHeight * this._scaleSpring.current.value;\n\t    },\n\t\n\t    // private\n\t    _raiseBoundsChange: function() {\n\t        /**\n\t         * Raised when the TiledImage's bounds are changed.\n\t         * Note that this event is triggered only when the animation target is changed;\n\t         * not for every frame of animation.\n\t         * @event bounds-change\n\t         * @memberOf OpenSeadragon.TiledImage\n\t         * @type {object}\n\t         * @property {OpenSeadragon.World} eventSource - A reference to the TiledImage which raised the event.\n\t         * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t         */\n\t        this.raiseEvent('bounds-change');\n\t    },\n\t\n\t    // private\n\t    _isBottomItem: function() {\n\t        return this.viewer.world.getItemAt(0) === this;\n\t    }\n\t});\n\t\n\t/**\n\t * @private\n\t * @inner\n\t * Pretty much every other line in this needs to be documented so it's clear\n\t * how each piece of this routine contributes to the drawing process.  That's\n\t * why there are so many TODO's inside this function.\n\t */\n\tfunction updateViewport( tiledImage ) {\n\t\n\t    tiledImage._needsDraw = false;\n\t\n\t    var tile,\n\t        level,\n\t        best            = null,\n\t        haveDrawn       = false,\n\t        currentTime     = $.now(),\n\t        viewportBounds  = tiledImage.viewport.getBoundsWithMargins( true ),\n\t        zeroRatioC      = tiledImage.viewport.deltaPixelsFromPointsNoRotate(\n\t            tiledImage.source.getPixelRatio( 0 ),\n\t            true\n\t        ).x * tiledImage._scaleSpring.current.value,\n\t        lowestLevel     = Math.max(\n\t            tiledImage.source.minLevel,\n\t            Math.floor(\n\t                Math.log( tiledImage.minZoomImageRatio ) /\n\t                Math.log( 2 )\n\t            )\n\t        ),\n\t        highestLevel    = Math.min(\n\t            Math.abs(tiledImage.source.maxLevel),\n\t            Math.abs(Math.floor(\n\t                Math.log( zeroRatioC / tiledImage.minPixelRatio ) /\n\t                Math.log( 2 )\n\t            ))\n\t        ),\n\t        renderPixelRatioC,\n\t        renderPixelRatioT,\n\t        zeroRatioT,\n\t        optimalRatio,\n\t        levelOpacity,\n\t        levelVisibility;\n\t\n\t    // Reset tile's internal drawn state\n\t    while (tiledImage.lastDrawn.length > 0) {\n\t        tile = tiledImage.lastDrawn.pop();\n\t        tile.beingDrawn = false;\n\t    }\n\t\n\t    if (!tiledImage.wrapHorizontal && !tiledImage.wrapVertical) {\n\t        var tiledImageBounds = tiledImage.getClippedBounds(true);\n\t        var intersection = viewportBounds.intersection(tiledImageBounds);\n\t        if (intersection === null) {\n\t            return;\n\t        }\n\t        viewportBounds = intersection;\n\t    }\n\t    viewportBounds = viewportBounds.getBoundingBox();\n\t    viewportBounds.x -= tiledImage._xSpring.current.value;\n\t    viewportBounds.y -= tiledImage._ySpring.current.value;\n\t\n\t    var viewportTL = viewportBounds.getTopLeft();\n\t    var viewportBR = viewportBounds.getBottomRight();\n\t\n\t    //Don't draw if completely outside of the viewport\n\t    if  ( !tiledImage.wrapHorizontal && (viewportBR.x < 0 || viewportTL.x > tiledImage._worldWidthCurrent ) ) {\n\t        return;\n\t    }\n\t\n\t    if ( !tiledImage.wrapVertical && ( viewportBR.y < 0 || viewportTL.y > tiledImage._worldHeightCurrent ) ) {\n\t        return;\n\t    }\n\t\n\t    // Calculate viewport rect / bounds\n\t    if ( !tiledImage.wrapHorizontal ) {\n\t        viewportTL.x = Math.max( viewportTL.x, 0 );\n\t        viewportBR.x = Math.min( viewportBR.x, tiledImage._worldWidthCurrent );\n\t    }\n\t\n\t    if ( !tiledImage.wrapVertical ) {\n\t        viewportTL.y = Math.max( viewportTL.y, 0 );\n\t        viewportBR.y = Math.min( viewportBR.y, tiledImage._worldHeightCurrent );\n\t    }\n\t\n\t    // Calculations for the interval of levels to draw\n\t    // (above in initial var statement)\n\t    // can return invalid intervals; fix that here if necessary\n\t    lowestLevel = Math.min( lowestLevel, highestLevel );\n\t\n\t    // Update any level that will be drawn\n\t    var drawLevel; // FIXME: drawLevel should have a more explanatory name\n\t    for ( level = highestLevel; level >= lowestLevel; level-- ) {\n\t        drawLevel = false;\n\t\n\t        //Avoid calculations for draw if we have already drawn this\n\t        renderPixelRatioC = tiledImage.viewport.deltaPixelsFromPointsNoRotate(\n\t            tiledImage.source.getPixelRatio( level ),\n\t            true\n\t        ).x * tiledImage._scaleSpring.current.value;\n\t\n\t        if ( ( !haveDrawn && renderPixelRatioC >= tiledImage.minPixelRatio ) ||\n\t             ( level == lowestLevel ) ) {\n\t            drawLevel = true;\n\t            haveDrawn = true;\n\t        } else if ( !haveDrawn ) {\n\t            continue;\n\t        }\n\t\n\t        //Perform calculations for draw if we haven't drawn this\n\t        renderPixelRatioT = tiledImage.viewport.deltaPixelsFromPointsNoRotate(\n\t            tiledImage.source.getPixelRatio( level ),\n\t            false\n\t        ).x * tiledImage._scaleSpring.current.value;\n\t\n\t        zeroRatioT      = tiledImage.viewport.deltaPixelsFromPointsNoRotate(\n\t            tiledImage.source.getPixelRatio(\n\t                Math.max(\n\t                    tiledImage.source.getClosestLevel( tiledImage.viewport.containerSize ) - 1,\n\t                    0\n\t                )\n\t            ),\n\t            false\n\t        ).x * tiledImage._scaleSpring.current.value;\n\t\n\t        optimalRatio    = tiledImage.immediateRender ?\n\t            1 :\n\t            zeroRatioT;\n\t\n\t        levelOpacity    = Math.min( 1, ( renderPixelRatioC - 0.5 ) / 0.5 );\n\t\n\t        levelVisibility = optimalRatio / Math.abs(\n\t            optimalRatio - renderPixelRatioT\n\t        );\n\t\n\t        // Update the level and keep track of 'best' tile to load\n\t        best = updateLevel(\n\t            tiledImage,\n\t            haveDrawn,\n\t            drawLevel,\n\t            level,\n\t            levelOpacity,\n\t            levelVisibility,\n\t            viewportTL,\n\t            viewportBR,\n\t            currentTime,\n\t            best\n\t        );\n\t\n\t        // Stop the loop if lower-res tiles would all be covered by\n\t        // already drawn tiles\n\t        if (  providesCoverage( tiledImage.coverage, level ) ) {\n\t            break;\n\t        }\n\t    }\n\t\n\t    // Perform the actual drawing\n\t    drawTiles( tiledImage, tiledImage.lastDrawn );\n\t\n\t    // Load the new 'best' tile\n\t    if (best && !best.context2D) {\n\t        loadTile( tiledImage, best, currentTime );\n\t    }\n\t\n\t}\n\t\n\t\n\tfunction updateLevel( tiledImage, haveDrawn, drawLevel, level, levelOpacity, levelVisibility, viewportTL, viewportBR, currentTime, best ){\n\t\n\t    var x, y,\n\t        tileTL,\n\t        tileBR,\n\t        numberOfTiles,\n\t        viewportCenter  = tiledImage.viewport.pixelFromPoint( tiledImage.viewport.getCenter() );\n\t\n\t\n\t    if( tiledImage.viewer ){\n\t        /**\n\t         * <em>- Needs documentation -</em>\n\t         *\n\t         * @event update-level\n\t         * @memberof OpenSeadragon.Viewer\n\t         * @type {object}\n\t         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n\t         * @property {OpenSeadragon.TiledImage} tiledImage - Which TiledImage is being drawn.\n\t         * @property {Object} havedrawn\n\t         * @property {Object} level\n\t         * @property {Object} opacity\n\t         * @property {Object} visibility\n\t         * @property {Object} topleft\n\t         * @property {Object} bottomright\n\t         * @property {Object} currenttime\n\t         * @property {Object} best\n\t         * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t         */\n\t        tiledImage.viewer.raiseEvent( 'update-level', {\n\t            tiledImage: tiledImage,\n\t            havedrawn: haveDrawn,\n\t            level: level,\n\t            opacity: levelOpacity,\n\t            visibility: levelVisibility,\n\t            topleft: viewportTL,\n\t            bottomright: viewportBR,\n\t            currenttime: currentTime,\n\t            best: best\n\t        });\n\t    }\n\t\n\t    //OK, a new drawing so do your calculations\n\t    tileTL    = tiledImage.source.getTileAtPoint( level, viewportTL.divide( tiledImage._scaleSpring.current.value ));\n\t    tileBR    = tiledImage.source.getTileAtPoint( level, viewportBR.divide( tiledImage._scaleSpring.current.value ));\n\t    numberOfTiles  = tiledImage.source.getNumTiles( level );\n\t\n\t    resetCoverage( tiledImage.coverage, level );\n\t\n\t    if ( !tiledImage.wrapHorizontal ) {\n\t        tileBR.x = Math.min( tileBR.x, numberOfTiles.x - 1 );\n\t    }\n\t    if ( !tiledImage.wrapVertical ) {\n\t        tileBR.y = Math.min( tileBR.y, numberOfTiles.y - 1 );\n\t    }\n\t\n\t    for ( x = tileTL.x; x <= tileBR.x; x++ ) {\n\t        for ( y = tileTL.y; y <= tileBR.y; y++ ) {\n\t\n\t            best = updateTile(\n\t                tiledImage,\n\t                drawLevel,\n\t                haveDrawn,\n\t                x, y,\n\t                level,\n\t                levelOpacity,\n\t                levelVisibility,\n\t                viewportCenter,\n\t                numberOfTiles,\n\t                currentTime,\n\t                best\n\t            );\n\t\n\t        }\n\t    }\n\t\n\t    return best;\n\t}\n\t\n\tfunction updateTile( tiledImage, drawLevel, haveDrawn, x, y, level, levelOpacity, levelVisibility, viewportCenter, numberOfTiles, currentTime, best){\n\t\n\t    var tile = getTile(\n\t            x, y,\n\t            level,\n\t            tiledImage.source,\n\t            tiledImage.tilesMatrix,\n\t            currentTime,\n\t            numberOfTiles,\n\t            tiledImage._worldWidthCurrent,\n\t            tiledImage._worldHeightCurrent\n\t        ),\n\t        drawTile = drawLevel;\n\t\n\t    if( tiledImage.viewer ){\n\t        /**\n\t         * <em>- Needs documentation -</em>\n\t         *\n\t         * @event update-tile\n\t         * @memberof OpenSeadragon.Viewer\n\t         * @type {object}\n\t         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n\t         * @property {OpenSeadragon.TiledImage} tiledImage - Which TiledImage is being drawn.\n\t         * @property {OpenSeadragon.Tile} tile\n\t         * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t         */\n\t        tiledImage.viewer.raiseEvent( 'update-tile', {\n\t            tiledImage: tiledImage,\n\t            tile: tile\n\t        });\n\t    }\n\t\n\t    setCoverage( tiledImage.coverage, level, x, y, false );\n\t\n\t    if ( !tile.exists ) {\n\t        return best;\n\t    }\n\t\n\t    if ( haveDrawn && !drawTile ) {\n\t        if ( isCovered( tiledImage.coverage, level, x, y ) ) {\n\t            setCoverage( tiledImage.coverage, level, x, y, true );\n\t        } else {\n\t            drawTile = true;\n\t        }\n\t    }\n\t\n\t    if ( !drawTile ) {\n\t        return best;\n\t    }\n\t\n\t    positionTile(\n\t        tile,\n\t        tiledImage.source.tileOverlap,\n\t        tiledImage.viewport,\n\t        viewportCenter,\n\t        levelVisibility,\n\t        tiledImage\n\t    );\n\t\n\t    if (!tile.loaded) {\n\t        if (tile.context2D) {\n\t            setTileLoaded(tiledImage, tile);\n\t        } else {\n\t            var imageRecord = tiledImage._tileCache.getImageRecord(tile.url);\n\t            if (imageRecord) {\n\t                var image = imageRecord.getImage();\n\t                setTileLoaded(tiledImage, tile, image);\n\t            }\n\t        }\n\t    }\n\t\n\t    if ( tile.loaded ) {\n\t        var needsDraw = blendTile(\n\t            tiledImage,\n\t            tile,\n\t            x, y,\n\t            level,\n\t            levelOpacity,\n\t            currentTime\n\t        );\n\t\n\t        if ( needsDraw ) {\n\t            tiledImage._needsDraw = true;\n\t        }\n\t    } else if ( tile.loading ) {\n\t        // the tile is already in the download queue\n\t        // thanks josh1093 for finally translating this typo\n\t    } else {\n\t        best = compareTiles( best, tile );\n\t    }\n\t\n\t    return best;\n\t}\n\t\n\tfunction getTile( x, y, level, tileSource, tilesMatrix, time, numTiles, worldWidth, worldHeight ) {\n\t    var xMod,\n\t        yMod,\n\t        bounds,\n\t        exists,\n\t        url,\n\t        context2D,\n\t        tile;\n\t\n\t    if ( !tilesMatrix[ level ] ) {\n\t        tilesMatrix[ level ] = {};\n\t    }\n\t    if ( !tilesMatrix[ level ][ x ] ) {\n\t        tilesMatrix[ level ][ x ] = {};\n\t    }\n\t\n\t    if ( !tilesMatrix[ level ][ x ][ y ] ) {\n\t        xMod    = ( numTiles.x + ( x % numTiles.x ) ) % numTiles.x;\n\t        yMod    = ( numTiles.y + ( y % numTiles.y ) ) % numTiles.y;\n\t        bounds  = tileSource.getTileBounds( level, xMod, yMod );\n\t        exists  = tileSource.tileExists( level, xMod, yMod );\n\t        url     = tileSource.getTileUrl( level, xMod, yMod );\n\t        context2D = tileSource.getContext2D ?\n\t            tileSource.getContext2D(level, xMod, yMod) : undefined;\n\t\n\t        bounds.x += ( x - xMod ) / numTiles.x;\n\t        bounds.y += (worldHeight / worldWidth) * (( y - yMod ) / numTiles.y);\n\t\n\t        tilesMatrix[ level ][ x ][ y ] = new $.Tile(\n\t            level,\n\t            x,\n\t            y,\n\t            bounds,\n\t            exists,\n\t            url,\n\t            context2D\n\t        );\n\t    }\n\t\n\t    tile = tilesMatrix[ level ][ x ][ y ];\n\t    tile.lastTouchTime = time;\n\t\n\t    return tile;\n\t}\n\t\n\tfunction loadTile( tiledImage, tile, time ) {\n\t    tile.loading = true;\n\t    tiledImage._imageLoader.addJob({\n\t        src: tile.url,\n\t        crossOriginPolicy: tiledImage.crossOriginPolicy,\n\t        callback: function( image, errorMsg ){\n\t            onTileLoad( tiledImage, tile, time, image, errorMsg );\n\t        },\n\t        abort: function() {\n\t            tile.loading = false;\n\t        }\n\t    });\n\t}\n\t\n\tfunction onTileLoad( tiledImage, tile, time, image, errorMsg ) {\n\t    if ( !image ) {\n\t        $.console.log( \"Tile %s failed to load: %s - error: %s\", tile, tile.url, errorMsg );\n\t        /**\n\t         * Triggered when a tile fails to load.\n\t         *\n\t         * @event tile-load-failed\n\t         * @memberof OpenSeadragon.Viewer\n\t         * @type {object}\n\t         * @property {OpenSeadragon.Tile} tile - The tile that failed to load.\n\t         * @property {OpenSeadragon.TiledImage} tiledImage - The tiled image the tile belongs to.\n\t         * @property {number} time - The time in milliseconds when the tile load began.\n\t         * @property {string} message - The error message.\n\t         */\n\t        tiledImage.viewer.raiseEvent(\"tile-load-failed\", {tile: tile, tiledImage: tiledImage, time: time, message: errorMsg});\n\t        tile.loading = false;\n\t        tile.exists = false;\n\t        return;\n\t    }\n\t\n\t    if ( time < tiledImage.lastResetTime ) {\n\t        $.console.log( \"Ignoring tile %s loaded before reset: %s\", tile, tile.url );\n\t        tile.loading = false;\n\t        return;\n\t    }\n\t\n\t    var finish = function() {\n\t        var cutoff = Math.ceil( Math.log(\n\t            tiledImage.source.getTileWidth(tile.level) ) / Math.log( 2 ) );\n\t        setTileLoaded(tiledImage, tile, image, cutoff);\n\t    };\n\t\n\t    // Check if we're mid-update; this can happen on IE8 because image load events for\n\t    // cached images happen immediately there\n\t    if ( !tiledImage._midDraw ) {\n\t        finish();\n\t    } else {\n\t        // Wait until after the update, in case caching unloads any tiles\n\t        window.setTimeout( finish, 1);\n\t    }\n\t}\n\t\n\tfunction setTileLoaded(tiledImage, tile, image, cutoff) {\n\t    var increment = 0;\n\t\n\t    function getCompletionCallback() {\n\t        increment++;\n\t        return completionCallback;\n\t    }\n\t\n\t    function completionCallback() {\n\t        increment--;\n\t        if (increment === 0) {\n\t            tile.loading = false;\n\t            tile.loaded = true;\n\t            if (!tile.context2D) {\n\t                tiledImage._tileCache.cacheTile({\n\t                    image: image,\n\t                    tile: tile,\n\t                    cutoff: cutoff,\n\t                    tiledImage: tiledImage\n\t                });\n\t            }\n\t            tiledImage._needsDraw = true;\n\t        }\n\t    }\n\t\n\t    /**\n\t     * Triggered when a tile has just been loaded in memory. That means that the\n\t     * image has been downloaded and can be modified before being drawn to the canvas.\n\t     *\n\t     * @event tile-loaded\n\t     * @memberof OpenSeadragon.Viewer\n\t     * @type {object}\n\t     * @property {Image} image - The image of the tile.\n\t     * @property {OpenSeadragon.TiledImage} tiledImage - The tiled image of the loaded tile.\n\t     * @property {OpenSeadragon.Tile} tile - The tile which has been loaded.\n\t     * @property {function} getCompletionCallback - A function giving a callback to call\n\t     * when the asynchronous processing of the image is done. The image will be\n\t     * marked as entirely loaded when the callback has been called once for each\n\t     * call to getCompletionCallback.\n\t     */\n\t    tiledImage.viewer.raiseEvent(\"tile-loaded\", {\n\t        tile: tile,\n\t        tiledImage: tiledImage,\n\t        image: image,\n\t        getCompletionCallback: getCompletionCallback\n\t    });\n\t    // In case the completion callback is never called, we at least force it once.\n\t    getCompletionCallback()();\n\t}\n\t\n\tfunction positionTile( tile, overlap, viewport, viewportCenter, levelVisibility, tiledImage ){\n\t    var boundsTL     = tile.bounds.getTopLeft();\n\t\n\t    boundsTL.x *= tiledImage._scaleSpring.current.value;\n\t    boundsTL.y *= tiledImage._scaleSpring.current.value;\n\t    boundsTL.x += tiledImage._xSpring.current.value;\n\t    boundsTL.y += tiledImage._ySpring.current.value;\n\t\n\t    var boundsSize   = tile.bounds.getSize();\n\t\n\t    boundsSize.x *= tiledImage._scaleSpring.current.value;\n\t    boundsSize.y *= tiledImage._scaleSpring.current.value;\n\t\n\t    var positionC    = viewport.pixelFromPointNoRotate(boundsTL, true),\n\t        positionT    = viewport.pixelFromPointNoRotate(boundsTL, false),\n\t        sizeC        = viewport.deltaPixelsFromPointsNoRotate(boundsSize, true),\n\t        sizeT        = viewport.deltaPixelsFromPointsNoRotate(boundsSize, false),\n\t        tileCenter   = positionT.plus( sizeT.divide( 2 ) ),\n\t        tileDistance = viewportCenter.distanceTo( tileCenter );\n\t\n\t    if ( !overlap ) {\n\t        sizeC = sizeC.plus( new $.Point( 1, 1 ) );\n\t    }\n\t\n\t    tile.position   = positionC;\n\t    tile.size       = sizeC;\n\t    tile.distance   = tileDistance;\n\t    tile.visibility = levelVisibility;\n\t}\n\t\n\t\n\tfunction blendTile( tiledImage, tile, x, y, level, levelOpacity, currentTime ){\n\t    var blendTimeMillis = 1000 * tiledImage.blendTime,\n\t        deltaTime,\n\t        opacity;\n\t\n\t    if ( !tile.blendStart ) {\n\t        tile.blendStart = currentTime;\n\t    }\n\t\n\t    deltaTime   = currentTime - tile.blendStart;\n\t    opacity     = blendTimeMillis ? Math.min( 1, deltaTime / ( blendTimeMillis ) ) : 1;\n\t\n\t    if ( tiledImage.alwaysBlend ) {\n\t        opacity *= levelOpacity;\n\t    }\n\t\n\t    tile.opacity = opacity;\n\t\n\t    tiledImage.lastDrawn.push( tile );\n\t\n\t    if ( opacity == 1 ) {\n\t        setCoverage( tiledImage.coverage, level, x, y, true );\n\t        tiledImage._hasOpaqueTile = true;\n\t    } else if ( deltaTime < blendTimeMillis ) {\n\t        return true;\n\t    }\n\t\n\t    return false;\n\t}\n\t\n\t/**\n\t * @private\n\t * @inner\n\t * Returns true if the given tile provides coverage to lower-level tiles of\n\t * lower resolution representing the same content. If neither x nor y is\n\t * given, returns true if the entire visible level provides coverage.\n\t *\n\t * Note that out-of-bounds tiles provide coverage in this sense, since\n\t * there's no content that they would need to cover. Tiles at non-existent\n\t * levels that are within the image bounds, however, do not.\n\t */\n\tfunction providesCoverage( coverage, level, x, y ) {\n\t    var rows,\n\t        cols,\n\t        i, j;\n\t\n\t    if ( !coverage[ level ] ) {\n\t        return false;\n\t    }\n\t\n\t    if ( x === undefined || y === undefined ) {\n\t        rows = coverage[ level ];\n\t        for ( i in rows ) {\n\t            if ( rows.hasOwnProperty( i ) ) {\n\t                cols = rows[ i ];\n\t                for ( j in cols ) {\n\t                    if ( cols.hasOwnProperty( j ) && !cols[ j ] ) {\n\t                        return false;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t\n\t        return true;\n\t    }\n\t\n\t    return (\n\t        coverage[ level ][ x] === undefined ||\n\t        coverage[ level ][ x ][ y ] === undefined ||\n\t        coverage[ level ][ x ][ y ] === true\n\t    );\n\t}\n\t\n\t/**\n\t * @private\n\t * @inner\n\t * Returns true if the given tile is completely covered by higher-level\n\t * tiles of higher resolution representing the same content. If neither x\n\t * nor y is given, returns true if the entire visible level is covered.\n\t */\n\tfunction isCovered( coverage, level, x, y ) {\n\t    if ( x === undefined || y === undefined ) {\n\t        return providesCoverage( coverage, level + 1 );\n\t    } else {\n\t        return (\n\t             providesCoverage( coverage, level + 1, 2 * x, 2 * y ) &&\n\t             providesCoverage( coverage, level + 1, 2 * x, 2 * y + 1 ) &&\n\t             providesCoverage( coverage, level + 1, 2 * x + 1, 2 * y ) &&\n\t             providesCoverage( coverage, level + 1, 2 * x + 1, 2 * y + 1 )\n\t        );\n\t    }\n\t}\n\t\n\t/**\n\t * @private\n\t * @inner\n\t * Sets whether the given tile provides coverage or not.\n\t */\n\tfunction setCoverage( coverage, level, x, y, covers ) {\n\t    if ( !coverage[ level ] ) {\n\t        $.console.warn(\n\t            \"Setting coverage for a tile before its level's coverage has been reset: %s\",\n\t            level\n\t        );\n\t        return;\n\t    }\n\t\n\t    if ( !coverage[ level ][ x ] ) {\n\t        coverage[ level ][ x ] = {};\n\t    }\n\t\n\t    coverage[ level ][ x ][ y ] = covers;\n\t}\n\t\n\t/**\n\t * @private\n\t * @inner\n\t * Resets coverage information for the given level. This should be called\n\t * after every draw routine. Note that at the beginning of the next draw\n\t * routine, coverage for every visible tile should be explicitly set.\n\t */\n\tfunction resetCoverage( coverage, level ) {\n\t    coverage[ level ] = {};\n\t}\n\t\n\t/**\n\t * @private\n\t * @inner\n\t * Determines whether the 'last best' tile for the area is better than the\n\t * tile in question.\n\t */\n\tfunction compareTiles( previousBest, tile ) {\n\t    if ( !previousBest ) {\n\t        return tile;\n\t    }\n\t\n\t    if ( tile.visibility > previousBest.visibility ) {\n\t        return tile;\n\t    } else if ( tile.visibility == previousBest.visibility ) {\n\t        if ( tile.distance < previousBest.distance ) {\n\t            return tile;\n\t        }\n\t    }\n\t\n\t    return previousBest;\n\t}\n\t\n\tfunction drawTiles( tiledImage, lastDrawn ) {\n\t    if (lastDrawn.length === 0) {\n\t        return;\n\t    }\n\t    var tile = lastDrawn[0];\n\t\n\t    var useSketch = tiledImage.opacity < 1 ||\n\t        (tiledImage.compositeOperation &&\n\t            tiledImage.compositeOperation !== 'source-over') ||\n\t        (!tiledImage._isBottomItem() && tile._hasTransparencyChannel());\n\t\n\t    var sketchScale;\n\t    var sketchTranslate;\n\t\n\t    var zoom = tiledImage.viewport.getZoom(true);\n\t    var imageZoom = tiledImage.viewportToImageZoom(zoom);\n\t    if (imageZoom > tiledImage.smoothTileEdgesMinZoom && !tiledImage.iOSDevice) {\n\t        // When zoomed in a lot (>100%) the tile edges are visible.\n\t        // So we have to composite them at ~100% and scale them up together.\n\t        // Note: Disabled on iOS devices per default as it causes a native crash\n\t        useSketch = true;\n\t        sketchScale = tile.getScaleForEdgeSmoothing();\n\t        sketchTranslate = tile.getTranslationForEdgeSmoothing(sketchScale,\n\t            tiledImage._drawer.getCanvasSize(false),\n\t            tiledImage._drawer.getCanvasSize(true));\n\t    }\n\t\n\t    var bounds;\n\t    if (useSketch) {\n\t        if (!sketchScale) {\n\t            // Except when edge smoothing, we only clean the part of the\n\t            // sketch canvas we are going to use for performance reasons.\n\t            bounds = tiledImage.viewport.viewportToViewerElementRectangle(\n\t                tiledImage.getClippedBounds(true))\n\t                .getIntegerBoundingBox()\n\t                .times($.pixelDensityRatio);\n\t        }\n\t        tiledImage._drawer._clear(true, bounds);\n\t    }\n\t\n\t    // When scaling, we must rotate only when blending the sketch canvas to avoid\n\t    // interpolation\n\t    if (tiledImage.viewport.degrees !== 0 && !sketchScale) {\n\t        tiledImage._drawer._offsetForRotation(tiledImage.viewport.degrees, useSketch);\n\t    }\n\t\n\t    var usedClip = false;\n\t    if ( tiledImage._clip ) {\n\t        tiledImage._drawer.saveContext(useSketch);\n\t\n\t        var box = tiledImage.imageToViewportRectangle(tiledImage._clip, true);\n\t        var clipRect = tiledImage._drawer.viewportToDrawerRectangle(box);\n\t        if (sketchScale) {\n\t            clipRect = clipRect.times(sketchScale);\n\t        }\n\t        if (sketchTranslate) {\n\t            clipRect = clipRect.translate(sketchTranslate);\n\t        }\n\t        tiledImage._drawer.setClip(clipRect, useSketch);\n\t\n\t        usedClip = true;\n\t    }\n\t\n\t    if ( tiledImage.placeholderFillStyle && tiledImage._hasOpaqueTile === false ) {\n\t        var placeholderRect = tiledImage._drawer.viewportToDrawerRectangle(tiledImage.getBounds(true));\n\t        if (sketchScale) {\n\t            placeholderRect = placeholderRect.times(sketchScale);\n\t        }\n\t        if (sketchTranslate) {\n\t            placeholderRect = placeholderRect.translate(sketchTranslate);\n\t        }\n\t\n\t        var fillStyle = null;\n\t        if ( typeof tiledImage.placeholderFillStyle === \"function\" ) {\n\t            fillStyle = tiledImage.placeholderFillStyle(tiledImage, tiledImage._drawer.context);\n\t        }\n\t        else {\n\t            fillStyle = tiledImage.placeholderFillStyle;\n\t        }\n\t\n\t        tiledImage._drawer.drawRectangle(placeholderRect, fillStyle, useSketch);\n\t    }\n\t\n\t    for (var i = lastDrawn.length - 1; i >= 0; i--) {\n\t        tile = lastDrawn[ i ];\n\t        tiledImage._drawer.drawTile( tile, tiledImage._drawingHandler, useSketch, sketchScale, sketchTranslate );\n\t        tile.beingDrawn = true;\n\t\n\t        if( tiledImage.viewer ){\n\t            /**\n\t             * <em>- Needs documentation -</em>\n\t             *\n\t             * @event tile-drawn\n\t             * @memberof OpenSeadragon.Viewer\n\t             * @type {object}\n\t             * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n\t             * @property {OpenSeadragon.TiledImage} tiledImage - Which TiledImage is being drawn.\n\t             * @property {OpenSeadragon.Tile} tile\n\t             * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t             */\n\t            tiledImage.viewer.raiseEvent( 'tile-drawn', {\n\t                tiledImage: tiledImage,\n\t                tile: tile\n\t            });\n\t        }\n\t    }\n\t\n\t    if ( usedClip ) {\n\t        tiledImage._drawer.restoreContext( useSketch );\n\t    }\n\t\n\t    if (tiledImage.viewport.degrees !== 0 && !sketchScale) {\n\t        tiledImage._drawer._restoreRotationChanges(useSketch);\n\t    }\n\t\n\t    if (useSketch) {\n\t        var offsetForRotation = tiledImage.viewport.degrees !== 0 && sketchScale;\n\t        if (offsetForRotation) {\n\t            tiledImage._drawer._offsetForRotation(tiledImage.viewport.degrees, false);\n\t        }\n\t        tiledImage._drawer.blendSketch({\n\t            opacity: tiledImage.opacity,\n\t            scale: sketchScale,\n\t            translate: sketchTranslate,\n\t            compositeOperation: tiledImage.compositeOperation,\n\t            bounds: bounds\n\t        });\n\t        if (offsetForRotation) {\n\t            tiledImage._drawer._restoreRotationChanges(false);\n\t        }\n\t    }\n\t    drawDebugInfo( tiledImage, lastDrawn );\n\t}\n\t\n\tfunction drawDebugInfo( tiledImage, lastDrawn ) {\n\t    if( tiledImage.debugMode ) {\n\t        for ( var i = lastDrawn.length - 1; i >= 0; i-- ) {\n\t            var tile = lastDrawn[ i ];\n\t            try {\n\t                tiledImage._drawer.drawDebugInfo( tile, lastDrawn.length, i );\n\t            } catch(e) {\n\t                $.console.error(e);\n\t            }\n\t        }\n\t    }\n\t}\n\t\n\t}( OpenSeadragon ));\n\t\n\t/*\n\t * OpenSeadragon - TileCache\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function( $ ){\n\t\n\t// private class\n\tvar TileRecord = function( options ) {\n\t    $.console.assert( options, \"[TileCache.cacheTile] options is required\" );\n\t    $.console.assert( options.tile, \"[TileCache.cacheTile] options.tile is required\" );\n\t    $.console.assert( options.tiledImage, \"[TileCache.cacheTile] options.tiledImage is required\" );\n\t    this.tile = options.tile;\n\t    this.tiledImage = options.tiledImage;\n\t};\n\t\n\t// private class\n\tvar ImageRecord = function(options) {\n\t    $.console.assert( options, \"[ImageRecord] options is required\" );\n\t    $.console.assert( options.image, \"[ImageRecord] options.image is required\" );\n\t    this._image = options.image;\n\t    this._tiles = [];\n\t};\n\t\n\tImageRecord.prototype = {\n\t    destroy: function() {\n\t        this._image = null;\n\t        this._renderedContext = null;\n\t        this._tiles = null;\n\t    },\n\t\n\t    getImage: function() {\n\t        return this._image;\n\t    },\n\t\n\t    getRenderedContext: function() {\n\t        if (!this._renderedContext) {\n\t            var canvas = document.createElement( 'canvas' );\n\t            canvas.width = this._image.width;\n\t            canvas.height = this._image.height;\n\t            this._renderedContext = canvas.getContext('2d');\n\t            this._renderedContext.drawImage( this._image, 0, 0 );\n\t            //since we are caching the prerendered image on a canvas\n\t            //allow the image to not be held in memory\n\t            this._image = null;\n\t        }\n\t        return this._renderedContext;\n\t    },\n\t\n\t    setRenderedContext: function(renderedContext) {\n\t        $.console.error(\"ImageRecord.setRenderedContext is deprecated. \" +\n\t                \"The rendered context should be created by the ImageRecord \" +\n\t                \"itself when calling ImageRecord.getRenderedContext.\");\n\t        this._renderedContext = renderedContext;\n\t    },\n\t\n\t    addTile: function(tile) {\n\t        $.console.assert(tile, '[ImageRecord.addTile] tile is required');\n\t        this._tiles.push(tile);\n\t    },\n\t\n\t    removeTile: function(tile) {\n\t        for (var i = 0; i < this._tiles.length; i++) {\n\t            if (this._tiles[i] === tile) {\n\t                this._tiles.splice(i, 1);\n\t                return;\n\t            }\n\t        }\n\t\n\t        $.console.warn('[ImageRecord.removeTile] trying to remove unknown tile', tile);\n\t    },\n\t\n\t    getTileCount: function() {\n\t        return this._tiles.length;\n\t    }\n\t};\n\t\n\t/**\n\t * @class TileCache\n\t * @memberof OpenSeadragon\n\t * @classdesc Stores all the tiles displayed in a {@link OpenSeadragon.Viewer}.\n\t * You generally won't have to interact with the TileCache directly.\n\t * @param {Object} options - Configuration for this TileCache.\n\t * @param {Number} [options.maxImageCacheCount] - See maxImageCacheCount in\n\t * {@link OpenSeadragon.Options} for details.\n\t */\n\t$.TileCache = function( options ) {\n\t    options = options || {};\n\t\n\t    this._maxImageCacheCount = options.maxImageCacheCount || $.DEFAULT_SETTINGS.maxImageCacheCount;\n\t    this._tilesLoaded = [];\n\t    this._imagesLoaded = [];\n\t    this._imagesLoadedCount = 0;\n\t};\n\t\n\t/** @lends OpenSeadragon.TileCache.prototype */\n\t$.TileCache.prototype = {\n\t    /**\n\t     * @returns {Number} The total number of tiles that have been loaded by\n\t     * this TileCache.\n\t     */\n\t    numTilesLoaded: function() {\n\t        return this._tilesLoaded.length;\n\t    },\n\t\n\t    /**\n\t     * Caches the specified tile, removing an old tile if necessary to stay under the\n\t     * maxImageCacheCount specified on construction. Note that if multiple tiles reference\n\t     * the same image, there may be more tiles than maxImageCacheCount; the goal is to keep\n\t     * the number of images below that number. Note, as well, that even the number of images\n\t     * may temporarily surpass that number, but should eventually come back down to the max specified.\n\t     * @param {Object} options - Tile info.\n\t     * @param {OpenSeadragon.Tile} options.tile - The tile to cache.\n\t     * @param {Image} options.image - The image of the tile to cache.\n\t     * @param {OpenSeadragon.TiledImage} options.tiledImage - The TiledImage that owns that tile.\n\t     * @param {Number} [options.cutoff=0] - If adding this tile goes over the cache max count, this\n\t     * function will release an old tile. The cutoff option specifies a tile level at or below which\n\t     * tiles will not be released.\n\t     */\n\t    cacheTile: function( options ) {\n\t        $.console.assert( options, \"[TileCache.cacheTile] options is required\" );\n\t        $.console.assert( options.tile, \"[TileCache.cacheTile] options.tile is required\" );\n\t        $.console.assert( options.tile.url, \"[TileCache.cacheTile] options.tile.url is required\" );\n\t        $.console.assert( options.tiledImage, \"[TileCache.cacheTile] options.tiledImage is required\" );\n\t\n\t        var cutoff = options.cutoff || 0;\n\t        var insertionIndex = this._tilesLoaded.length;\n\t\n\t        var imageRecord = this._imagesLoaded[options.tile.url];\n\t        if (!imageRecord) {\n\t            $.console.assert( options.image, \"[TileCache.cacheTile] options.image is required to create an ImageRecord\" );\n\t            imageRecord = this._imagesLoaded[options.tile.url] = new ImageRecord({\n\t                image: options.image\n\t            });\n\t\n\t            this._imagesLoadedCount++;\n\t        }\n\t\n\t        imageRecord.addTile(options.tile);\n\t        options.tile.cacheImageRecord = imageRecord;\n\t\n\t        // Note that just because we're unloading a tile doesn't necessarily mean\n\t        // we're unloading an image. With repeated calls it should sort itself out, though.\n\t        if ( this._imagesLoadedCount > this._maxImageCacheCount ) {\n\t            var worstTile       = null;\n\t            var worstTileIndex  = -1;\n\t            var worstTileRecord = null;\n\t            var prevTile, worstTime, worstLevel, prevTime, prevLevel, prevTileRecord;\n\t\n\t            for ( var i = this._tilesLoaded.length - 1; i >= 0; i-- ) {\n\t                prevTileRecord = this._tilesLoaded[ i ];\n\t                prevTile = prevTileRecord.tile;\n\t\n\t                if ( prevTile.level <= cutoff || prevTile.beingDrawn ) {\n\t                    continue;\n\t                } else if ( !worstTile ) {\n\t                    worstTile       = prevTile;\n\t                    worstTileIndex  = i;\n\t                    worstTileRecord = prevTileRecord;\n\t                    continue;\n\t                }\n\t\n\t                prevTime    = prevTile.lastTouchTime;\n\t                worstTime   = worstTile.lastTouchTime;\n\t                prevLevel   = prevTile.level;\n\t                worstLevel  = worstTile.level;\n\t\n\t                if ( prevTime < worstTime ||\n\t                   ( prevTime == worstTime && prevLevel > worstLevel ) ) {\n\t                    worstTile       = prevTile;\n\t                    worstTileIndex  = i;\n\t                    worstTileRecord = prevTileRecord;\n\t                }\n\t            }\n\t\n\t            if ( worstTile && worstTileIndex >= 0 ) {\n\t                this._unloadTile(worstTileRecord);\n\t                insertionIndex = worstTileIndex;\n\t            }\n\t        }\n\t\n\t        this._tilesLoaded[ insertionIndex ] = new TileRecord({\n\t            tile: options.tile,\n\t            tiledImage: options.tiledImage\n\t        });\n\t    },\n\t\n\t    /**\n\t     * Clears all tiles associated with the specified tiledImage.\n\t     * @param {OpenSeadragon.TiledImage} tiledImage\n\t     */\n\t    clearTilesFor: function( tiledImage ) {\n\t        $.console.assert(tiledImage, '[TileCache.clearTilesFor] tiledImage is required');\n\t        var tileRecord;\n\t        for ( var i = 0; i < this._tilesLoaded.length; ++i ) {\n\t            tileRecord = this._tilesLoaded[ i ];\n\t            if ( tileRecord.tiledImage === tiledImage ) {\n\t                this._unloadTile(tileRecord);\n\t                this._tilesLoaded.splice( i, 1 );\n\t                i--;\n\t            }\n\t        }\n\t    },\n\t\n\t    // private\n\t    getImageRecord: function(url) {\n\t        $.console.assert(url, '[TileCache.getImageRecord] url is required');\n\t        return this._imagesLoaded[url];\n\t    },\n\t\n\t    // private\n\t    _unloadTile: function(tileRecord) {\n\t        $.console.assert(tileRecord, '[TileCache._unloadTile] tileRecord is required');\n\t        var tile = tileRecord.tile;\n\t        var tiledImage = tileRecord.tiledImage;\n\t\n\t        tile.unload();\n\t        tile.cacheImageRecord = null;\n\t\n\t        var imageRecord = this._imagesLoaded[tile.url];\n\t        imageRecord.removeTile(tile);\n\t        if (!imageRecord.getTileCount()) {\n\t            imageRecord.destroy();\n\t            delete this._imagesLoaded[tile.url];\n\t            this._imagesLoadedCount--;\n\t        }\n\t\n\t        /**\n\t         * Triggered when a tile has just been unloaded from memory.\n\t         *\n\t         * @event tile-unloaded\n\t         * @memberof OpenSeadragon.Viewer\n\t         * @type {object}\n\t         * @property {OpenSeadragon.TiledImage} tiledImage - The tiled image of the unloaded tile.\n\t         * @property {OpenSeadragon.Tile} tile - The tile which has been unloaded.\n\t         */\n\t        tiledImage.viewer.raiseEvent(\"tile-unloaded\", {\n\t            tile: tile,\n\t            tiledImage: tiledImage\n\t        });\n\t    }\n\t};\n\t\n\t}( OpenSeadragon ));\n\t\n\t/*\n\t * OpenSeadragon - World\n\t *\n\t * Copyright (C) 2009 CodePlex Foundation\n\t * Copyright (C) 2010-2013 OpenSeadragon contributors\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t * - Redistributions of source code must retain the above copyright notice,\n\t *   this list of conditions and the following disclaimer.\n\t *\n\t * - Redistributions in binary form must reproduce the above copyright\n\t *   notice, this list of conditions and the following disclaimer in the\n\t *   documentation and/or other materials provided with the distribution.\n\t *\n\t * - Neither the name of CodePlex Foundation nor the names of its\n\t *   contributors may be used to endorse or promote products derived from\n\t *   this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\t(function( $ ){\n\t\n\t/**\n\t * @class World\n\t * @memberof OpenSeadragon\n\t * @extends OpenSeadragon.EventSource\n\t * @classdesc Keeps track of all of the tiled images in the scene.\n\t * @param {Object} options - World options.\n\t * @param {OpenSeadragon.Viewer} options.viewer - The Viewer that owns this World.\n\t **/\n\t$.World = function( options ) {\n\t    var _this = this;\n\t\n\t    $.console.assert( options.viewer, \"[World] options.viewer is required\" );\n\t\n\t    $.EventSource.call( this );\n\t\n\t    this.viewer = options.viewer;\n\t    this._items = [];\n\t    this._needsDraw = false;\n\t    this._autoRefigureSizes = true;\n\t    this._needsSizesFigured = false;\n\t    this._delegatedFigureSizes = function(event) {\n\t        if (_this._autoRefigureSizes) {\n\t            _this._figureSizes();\n\t        } else {\n\t            _this._needsSizesFigured = true;\n\t        }\n\t    };\n\t\n\t    this._figureSizes();\n\t};\n\t\n\t$.extend( $.World.prototype, $.EventSource.prototype, /** @lends OpenSeadragon.World.prototype */{\n\t    /**\n\t     * Add the specified item.\n\t     * @param {OpenSeadragon.TiledImage} item - The item to add.\n\t     * @param {Number} [options.index] - Index for the item. If not specified, goes at the top.\n\t     * @fires OpenSeadragon.World.event:add-item\n\t     * @fires OpenSeadragon.World.event:metrics-change\n\t     */\n\t    addItem: function( item, options ) {\n\t        $.console.assert(item, \"[World.addItem] item is required\");\n\t        $.console.assert(item instanceof $.TiledImage, \"[World.addItem] only TiledImages supported at this time\");\n\t\n\t        options = options || {};\n\t        if (options.index !== undefined) {\n\t            var index = Math.max(0, Math.min(this._items.length, options.index));\n\t            this._items.splice(index, 0, item);\n\t        } else {\n\t            this._items.push( item );\n\t        }\n\t\n\t        if (this._autoRefigureSizes) {\n\t            this._figureSizes();\n\t        } else {\n\t            this._needsSizesFigured = true;\n\t        }\n\t\n\t        this._needsDraw = true;\n\t\n\t        item.addHandler('bounds-change', this._delegatedFigureSizes);\n\t\n\t        /**\n\t         * Raised when an item is added to the World.\n\t         * @event add-item\n\t         * @memberOf OpenSeadragon.World\n\t         * @type {object}\n\t         * @property {OpenSeadragon.Viewer} eventSource - A reference to the World which raised the event.\n\t         * @property {OpenSeadragon.TiledImage} item - The item that has been added.\n\t         * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t         */\n\t        this.raiseEvent( 'add-item', {\n\t            item: item\n\t        } );\n\t    },\n\t\n\t    /**\n\t     * Get the item at the specified index.\n\t     * @param {Number} index - The item's index.\n\t     * @returns {OpenSeadragon.TiledImage} The item at the specified index.\n\t     */\n\t    getItemAt: function( index ) {\n\t        $.console.assert(index !== undefined, \"[World.getItemAt] index is required\");\n\t        return this._items[ index ];\n\t    },\n\t\n\t    /**\n\t     * Get the index of the given item or -1 if not present.\n\t     * @param {OpenSeadragon.TiledImage} item - The item.\n\t     * @returns {Number} The index of the item or -1 if not present.\n\t     */\n\t    getIndexOfItem: function( item ) {\n\t        $.console.assert(item, \"[World.getIndexOfItem] item is required\");\n\t        return $.indexOf( this._items, item );\n\t    },\n\t\n\t    /**\n\t     * @returns {Number} The number of items used.\n\t     */\n\t    getItemCount: function() {\n\t        return this._items.length;\n\t    },\n\t\n\t    /**\n\t     * Change the index of a item so that it appears over or under others.\n\t     * @param {OpenSeadragon.TiledImage} item - The item to move.\n\t     * @param {Number} index - The new index.\n\t     * @fires OpenSeadragon.World.event:item-index-change\n\t     */\n\t    setItemIndex: function( item, index ) {\n\t        $.console.assert(item, \"[World.setItemIndex] item is required\");\n\t        $.console.assert(index !== undefined, \"[World.setItemIndex] index is required\");\n\t\n\t        var oldIndex = this.getIndexOfItem( item );\n\t\n\t        if ( index >= this._items.length ) {\n\t            throw new Error( \"Index bigger than number of layers.\" );\n\t        }\n\t\n\t        if ( index === oldIndex || oldIndex === -1 ) {\n\t            return;\n\t        }\n\t\n\t        this._items.splice( oldIndex, 1 );\n\t        this._items.splice( index, 0, item );\n\t        this._needsDraw = true;\n\t\n\t        /**\n\t         * Raised when the order of the indexes has been changed.\n\t         * @event item-index-change\n\t         * @memberOf OpenSeadragon.World\n\t         * @type {object}\n\t         * @property {OpenSeadragon.World} eventSource - A reference to the World which raised the event.\n\t         * @property {OpenSeadragon.TiledImage} item - The item whose index has\n\t         * been changed\n\t         * @property {Number} previousIndex - The previous index of the item\n\t         * @property {Number} newIndex - The new index of the item\n\t         * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t         */\n\t        this.raiseEvent( 'item-index-change', {\n\t            item: item,\n\t            previousIndex: oldIndex,\n\t            newIndex: index\n\t        } );\n\t    },\n\t\n\t    /**\n\t     * Remove an item.\n\t     * @param {OpenSeadragon.TiledImage} item - The item to remove.\n\t     * @fires OpenSeadragon.World.event:remove-item\n\t     * @fires OpenSeadragon.World.event:metrics-change\n\t     */\n\t    removeItem: function( item ) {\n\t        $.console.assert(item, \"[World.removeItem] item is required\");\n\t\n\t        var index = $.indexOf(this._items, item );\n\t        if ( index === -1 ) {\n\t            return;\n\t        }\n\t\n\t        item.removeHandler('bounds-change', this._delegatedFigureSizes);\n\t        item.destroy();\n\t        this._items.splice( index, 1 );\n\t        this._figureSizes();\n\t        this._needsDraw = true;\n\t        this._raiseRemoveItem(item);\n\t    },\n\t\n\t    /**\n\t     * Remove all items.\n\t     * @fires OpenSeadragon.World.event:remove-item\n\t     * @fires OpenSeadragon.World.event:metrics-change\n\t     */\n\t    removeAll: function() {\n\t        // We need to make sure any pending images are canceled so the world items don't get messed up\n\t        this.viewer._cancelPendingImages();\n\t        var item;\n\t        for (var i = 0; i < this._items.length; i++) {\n\t            item = this._items[i];\n\t            item.removeHandler('bounds-change', this._delegatedFigureSizes);\n\t            item.destroy();\n\t        }\n\t\n\t        var removedItems = this._items;\n\t        this._items = [];\n\t        this._figureSizes();\n\t        this._needsDraw = true;\n\t\n\t        for (i = 0; i < removedItems.length; i++) {\n\t            item = removedItems[i];\n\t            this._raiseRemoveItem(item);\n\t        }\n\t    },\n\t\n\t    /**\n\t     * Clears all tiles and triggers updates for all items.\n\t     */\n\t    resetItems: function() {\n\t        for ( var i = 0; i < this._items.length; i++ ) {\n\t            this._items[i].reset();\n\t        }\n\t    },\n\t\n\t    /**\n\t     * Updates (i.e. animates bounds of) all items.\n\t     */\n\t    update: function() {\n\t        var animated = false;\n\t        for ( var i = 0; i < this._items.length; i++ ) {\n\t            animated = this._items[i].update() || animated;\n\t        }\n\t\n\t        return animated;\n\t    },\n\t\n\t    /**\n\t     * Draws all items.\n\t     */\n\t    draw: function() {\n\t        for ( var i = 0; i < this._items.length; i++ ) {\n\t            this._items[i].draw();\n\t        }\n\t\n\t        this._needsDraw = false;\n\t    },\n\t\n\t    /**\n\t     * @returns {Boolean} true if any items need updating.\n\t     */\n\t    needsDraw: function() {\n\t        for ( var i = 0; i < this._items.length; i++ ) {\n\t            if ( this._items[i].needsDraw() ) {\n\t                return true;\n\t            }\n\t        }\n\t        return this._needsDraw;\n\t    },\n\t\n\t    /**\n\t     * @returns {OpenSeadragon.Rect} The smallest rectangle that encloses all items, in viewport coordinates.\n\t     */\n\t    getHomeBounds: function() {\n\t        return this._homeBounds.clone();\n\t    },\n\t\n\t    /**\n\t     * To facilitate zoom constraints, we keep track of the pixel density of the\n\t     * densest item in the World (i.e. the item whose content size to viewport size\n\t     * ratio is the highest) and save it as this \"content factor\".\n\t     * @returns {Number} the number of content units per viewport unit.\n\t     */\n\t    getContentFactor: function() {\n\t        return this._contentFactor;\n\t    },\n\t\n\t    /**\n\t     * As a performance optimization, setting this flag to false allows the bounds-change event handler\n\t     * on tiledImages to skip calculations on the world bounds. If a lot of images are going to be positioned in\n\t     * rapid succession, this is a good idea. When finished, setAutoRefigureSizes should be called with true\n\t     * or the system may behave oddly.\n\t     * @param {Boolean} [value] The value to which to set the flag.\n\t     */\n\t    setAutoRefigureSizes: function(value) {\n\t        this._autoRefigureSizes = value;\n\t        if (value & this._needsSizesFigured) {\n\t            this._figureSizes();\n\t            this._needsSizesFigured = false;\n\t        }\n\t    },\n\t\n\t    /**\n\t     * Arranges all of the TiledImages with the specified settings.\n\t     * @param {Object} options - Specifies how to arrange.\n\t     * @param {Boolean} [options.immediately=false] - Whether to animate to the new arrangement.\n\t     * @param {String} [options.layout] - See collectionLayout in {@link OpenSeadragon.Options}.\n\t     * @param {Number} [options.rows] - See collectionRows in {@link OpenSeadragon.Options}.\n\t     * @param {Number} [options.columns] - See collectionColumns in {@link OpenSeadragon.Options}.\n\t     * @param {Number} [options.tileSize] - See collectionTileSize in {@link OpenSeadragon.Options}.\n\t     * @param {Number} [options.tileMargin] - See collectionTileMargin in {@link OpenSeadragon.Options}.\n\t     * @fires OpenSeadragon.World.event:metrics-change\n\t     */\n\t    arrange: function(options) {\n\t        options = options || {};\n\t        var immediately = options.immediately || false;\n\t        var layout = options.layout || $.DEFAULT_SETTINGS.collectionLayout;\n\t        var rows = options.rows || $.DEFAULT_SETTINGS.collectionRows;\n\t        var columns = options.columns || $.DEFAULT_SETTINGS.collectionColumns;\n\t        var tileSize = options.tileSize || $.DEFAULT_SETTINGS.collectionTileSize;\n\t        var tileMargin = options.tileMargin || $.DEFAULT_SETTINGS.collectionTileMargin;\n\t        var increment = tileSize + tileMargin;\n\t        var wrap;\n\t        if (!options.rows && columns) {\n\t            wrap = columns;\n\t        } else {\n\t            wrap = Math.ceil(this._items.length / rows);\n\t        }\n\t        var x = 0;\n\t        var y = 0;\n\t        var item, box, width, height, position;\n\t\n\t        this.setAutoRefigureSizes(false);\n\t        for (var i = 0; i < this._items.length; i++) {\n\t            if (i && (i % wrap) === 0) {\n\t                if (layout === 'horizontal') {\n\t                    y += increment;\n\t                    x = 0;\n\t                } else {\n\t                    x += increment;\n\t                    y = 0;\n\t                }\n\t            }\n\t\n\t            item = this._items[i];\n\t            box = item.getBounds();\n\t            if (box.width > box.height) {\n\t                width = tileSize;\n\t            } else {\n\t                width = tileSize * (box.width / box.height);\n\t            }\n\t\n\t            height = width * (box.height / box.width);\n\t            position = new $.Point(x + ((tileSize - width) / 2),\n\t                y + ((tileSize - height) / 2));\n\t\n\t            item.setPosition(position, immediately);\n\t            item.setWidth(width, immediately);\n\t\n\t            if (layout === 'horizontal') {\n\t                x += increment;\n\t            } else {\n\t                y += increment;\n\t            }\n\t        }\n\t        this.setAutoRefigureSizes(true);\n\t    },\n\t\n\t    // private\n\t    _figureSizes: function() {\n\t        var oldHomeBounds = this._homeBounds ? this._homeBounds.clone() : null;\n\t        var oldContentSize = this._contentSize ? this._contentSize.clone() : null;\n\t        var oldContentFactor = this._contentFactor || 0;\n\t\n\t        if (!this._items.length) {\n\t            this._homeBounds = new $.Rect(0, 0, 1, 1);\n\t            this._contentSize = new $.Point(1, 1);\n\t            this._contentFactor = 1;\n\t        } else {\n\t            var item = this._items[0];\n\t            var bounds = item.getBounds();\n\t            this._contentFactor = item.getContentSize().x / bounds.width;\n\t            var clippedBounds = item.getClippedBounds();\n\t            var left = clippedBounds.x;\n\t            var top = clippedBounds.y;\n\t            var right = clippedBounds.x + clippedBounds.width;\n\t            var bottom = clippedBounds.y + clippedBounds.height;\n\t            for (var i = 1; i < this._items.length; i++) {\n\t                item = this._items[i];\n\t                bounds = item.getBounds();\n\t                this._contentFactor = Math.max(this._contentFactor,\n\t                    item.getContentSize().x / bounds.width);\n\t                clippedBounds = item.getClippedBounds();\n\t                left = Math.min(left, clippedBounds.x);\n\t                top = Math.min(top, clippedBounds.y);\n\t                right = Math.max(right, clippedBounds.x + clippedBounds.width);\n\t                bottom = Math.max(bottom, clippedBounds.y + clippedBounds.height);\n\t            }\n\t\n\t            this._homeBounds = new $.Rect(left, top, right - left, bottom - top);\n\t            this._contentSize = new $.Point(\n\t                this._homeBounds.width * this._contentFactor,\n\t                this._homeBounds.height * this._contentFactor);\n\t        }\n\t\n\t        if (this._contentFactor !== oldContentFactor ||\n\t            !this._homeBounds.equals(oldHomeBounds) ||\n\t            !this._contentSize.equals(oldContentSize)) {\n\t            /**\n\t             * Raised when the home bounds or content factor change.\n\t             * @event metrics-change\n\t             * @memberOf OpenSeadragon.World\n\t             * @type {object}\n\t             * @property {OpenSeadragon.World} eventSource - A reference to the World which raised the event.\n\t             * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t             */\n\t            this.raiseEvent('metrics-change', {});\n\t        }\n\t    },\n\t\n\t    // private\n\t    _raiseRemoveItem: function(item) {\n\t        /**\n\t         * Raised when an item is removed.\n\t         * @event remove-item\n\t         * @memberOf OpenSeadragon.World\n\t         * @type {object}\n\t         * @property {OpenSeadragon.World} eventSource - A reference to the World which raised the event.\n\t         * @property {OpenSeadragon.TiledImage} item - The item's underlying item.\n\t         * @property {?Object} userData - Arbitrary subscriber-defined object.\n\t         */\n\t        this.raiseEvent( 'remove-item', { item: item } );\n\t    }\n\t});\n\t\n\t}( OpenSeadragon ));\n\t\n\t//# sourceMappingURL=openseadragon.js.map\n\n/***/ },\n/* 38 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// react-openseadragon-min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 1697f7a7f724a4c92ee4","import React from 'react'\nimport ActiveItem from 'react-active-item'\nexport { OpenSeadragonControls } from './react-openseadragon-controls'\nimport ImageNav from './react-openseadragon-nav'\nimport OpenSeadragonViewer from './react-openseadragon-viewer'\n\nimport './index.css'\n\nclass ReactOpenSeadragon extends React.Component {\n    constructor(props) {\n      super(props)\n      this.viewer       = this.viewer.bind(this)\n      this.page_handler = this.page_handler.bind(this)\n      this.state   = {text: this.text(0), viewer: {}, last_page: 0}\n    }\n\n   text(i) {\n    return this.props.items[1]['texts'][i]\n   }\n\n    page_handler(p, viewer) {\n      this.setState({last_page: p.page})\n      this.setState({text: this.text(p.page)})\n      this.setState({viewer: viewer})\n    }\n    \n    viewer() {\n      let { type, text } = this.props.getActiveItem()\n      switch(type) {\n        case 'image':\n          return <OpenSeadragonViewer last_page={this.state.last_page} page_handler={this.page_handler} config={this.props.getActiveItem()} />\n          break\n        case 'transcript':\n          return <div>{this.state.text}</div>\n          break\n        default:\n          return <div>No Viewer Avaialable for type: \"{type}\"</div>\n      }\n    }\n\n    render() {\n        let { include_controls } = this.props\n        if (this.state != null) {\n           let { viewer } = this.state\n           return (\n                    <div>\n                      <div className=\"row\"><ImageNav viewer={this.state.viewer} {...this.props} /></div>\n                      <div className=\"row\">{this.viewer()}</div>\n                    </div>\n                  )\n         } else {\n           return (\n                    <div>\n                      <div className=\"row\"><ImageNav viewer={this.state.viewer} {...this.props} /></div>\n                      <div className=\"row\">{this.viewer()}</div>\n                    </div>\n                  )\n         }\n\n    }\n\n}\n\nconst propTypes = {\n  items: React.PropTypes.array.isRequired\n}\n\nReactOpenSeadragon.propTypes = propTypes\n\nexport default ActiveItem(ReactOpenSeadragon)\n\n\n// WEBPACK FOOTER //\n// ./src/react-openseadragon.js","import React from 'react'\nconst OpenSeadragonControls = props => {\n  return (<ul className=\"osd-toolbar\">\n            <li><a id=\"zoom-in\"><i className=\"glyphicon glyphicon-zoom-in\"></i></a></li>\n            <li><a id=\"zoom-out\"><i className=\"glyphicon glyphicon-zoom-out\"></i></a></li>\n            <li><a id=\"reset\"><i className=\"glyphicon glyphicon-home\"></i></a></li>\n            <li><a id=\"full-page\"><i className=\"glyphicon glyphicon-resize-full\"></i></a></li>\n            <li><a id=\"previous\"><i className=\"glyphicon glyphicon-arrow-left\"></i></a></li>\n            <li><a id=\"next\"><i className=\"glyphicon glyphicon-arrow-right\"></i></a></li>\n          </ul>)\n  }\n\nexport default OpenSeadragonControls\n\n\n// WEBPACK FOOTER //\n// ./src/react-openseadragon-controls.js","'use strict';\n\nmodule.exports = require('./lib/React');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/react.js\n// module id = 2\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar ReactChildren = require('./ReactChildren');\nvar ReactComponent = require('./ReactComponent');\nvar ReactPureComponent = require('./ReactPureComponent');\nvar ReactClass = require('./ReactClass');\nvar ReactDOMFactories = require('./ReactDOMFactories');\nvar ReactElement = require('./ReactElement');\nvar ReactPropTypes = require('./ReactPropTypes');\nvar ReactVersion = require('./ReactVersion');\n\nvar onlyChild = require('./onlyChild');\nvar warning = require('fbjs/lib/warning');\n\nvar createElement = ReactElement.createElement;\nvar createFactory = ReactElement.createFactory;\nvar cloneElement = ReactElement.cloneElement;\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactElementValidator = require('./ReactElementValidator');\n  createElement = ReactElementValidator.createElement;\n  createFactory = ReactElementValidator.createFactory;\n  cloneElement = ReactElementValidator.cloneElement;\n}\n\nvar __spread = _assign;\n\nif (process.env.NODE_ENV !== 'production') {\n  var warned = false;\n  __spread = function () {\n    process.env.NODE_ENV !== 'production' ? warning(warned, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.') : void 0;\n    warned = true;\n    return _assign.apply(null, arguments);\n  };\n}\n\nvar React = {\n\n  // Modern\n\n  Children: {\n    map: ReactChildren.map,\n    forEach: ReactChildren.forEach,\n    count: ReactChildren.count,\n    toArray: ReactChildren.toArray,\n    only: onlyChild\n  },\n\n  Component: ReactComponent,\n  PureComponent: ReactPureComponent,\n\n  createElement: createElement,\n  cloneElement: cloneElement,\n  isValidElement: ReactElement.isValidElement,\n\n  // Classic\n\n  PropTypes: ReactPropTypes,\n  createClass: ReactClass.createClass,\n  createFactory: createFactory,\n  createMixin: function (mixin) {\n    // Currently a noop. Will be used to validate and trace mixins.\n    return mixin;\n  },\n\n  // This looks DOM specific but these are actually isomorphic helpers\n  // since they are just generating DOM strings.\n  DOM: ReactDOMFactories,\n\n  version: ReactVersion,\n\n  // Deprecated hook for JSX spread, don't use this for anything.\n  __spread: __spread\n};\n\nmodule.exports = React;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/React.js\n// module id = 3\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 4\n// module chunks = 0","'use strict';\n/* eslint-disable no-unused-vars */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (e) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (Object.getOwnPropertySymbols) {\n\t\t\tsymbols = Object.getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/object-assign/index.js\n// module id = 5\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar PooledClass = require('./PooledClass');\nvar ReactElement = require('./ReactElement');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar traverseAllChildren = require('./traverseAllChildren');\n\nvar twoArgumentPooler = PooledClass.twoArgumentPooler;\nvar fourArgumentPooler = PooledClass.fourArgumentPooler;\n\nvar userProvidedKeyEscapeRegex = /\\/+/g;\nfunction escapeUserProvidedKey(text) {\n  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');\n}\n\n/**\n * PooledClass representing the bookkeeping associated with performing a child\n * traversal. Allows avoiding binding callbacks.\n *\n * @constructor ForEachBookKeeping\n * @param {!function} forEachFunction Function to perform traversal with.\n * @param {?*} forEachContext Context to perform context with.\n */\nfunction ForEachBookKeeping(forEachFunction, forEachContext) {\n  this.func = forEachFunction;\n  this.context = forEachContext;\n  this.count = 0;\n}\nForEachBookKeeping.prototype.destructor = function () {\n  this.func = null;\n  this.context = null;\n  this.count = 0;\n};\nPooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);\n\nfunction forEachSingleChild(bookKeeping, child, name) {\n  var func = bookKeeping.func,\n      context = bookKeeping.context;\n\n  func.call(context, child, bookKeeping.count++);\n}\n\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc\n * @param {*} forEachContext Context for forEachContext.\n */\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  if (children == null) {\n    return children;\n  }\n  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);\n  traverseAllChildren(children, forEachSingleChild, traverseContext);\n  ForEachBookKeeping.release(traverseContext);\n}\n\n/**\n * PooledClass representing the bookkeeping associated with performing a child\n * mapping. Allows avoiding binding callbacks.\n *\n * @constructor MapBookKeeping\n * @param {!*} mapResult Object containing the ordered map of results.\n * @param {!function} mapFunction Function to perform mapping with.\n * @param {?*} mapContext Context to perform mapping with.\n */\nfunction MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {\n  this.result = mapResult;\n  this.keyPrefix = keyPrefix;\n  this.func = mapFunction;\n  this.context = mapContext;\n  this.count = 0;\n}\nMapBookKeeping.prototype.destructor = function () {\n  this.result = null;\n  this.keyPrefix = null;\n  this.func = null;\n  this.context = null;\n  this.count = 0;\n};\nPooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);\n\nfunction mapSingleChildIntoContext(bookKeeping, child, childKey) {\n  var result = bookKeeping.result,\n      keyPrefix = bookKeeping.keyPrefix,\n      func = bookKeeping.func,\n      context = bookKeeping.context;\n\n\n  var mappedChild = func.call(context, child, bookKeeping.count++);\n  if (Array.isArray(mappedChild)) {\n    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);\n  } else if (mappedChild != null) {\n    if (ReactElement.isValidElement(mappedChild)) {\n      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,\n      // Keep both the (mapped) and old keys if they differ, just as\n      // traverseAllChildren used to do for objects as children\n      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);\n    }\n    result.push(mappedChild);\n  }\n}\n\nfunction mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {\n  var escapedPrefix = '';\n  if (prefix != null) {\n    escapedPrefix = escapeUserProvidedKey(prefix) + '/';\n  }\n  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);\n  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\n  MapBookKeeping.release(traverseContext);\n}\n\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map\n *\n * The provided mapFunction(child, key, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func The map function.\n * @param {*} context Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    return children;\n  }\n  var result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, func, context);\n  return result;\n}\n\nfunction forEachSingleChildDummy(traverseContext, child, name) {\n  return null;\n}\n\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\nfunction countChildren(children, context) {\n  return traverseAllChildren(children, forEachSingleChildDummy, null);\n}\n\n/**\n * Flatten a children object (typically specified as `props.children`) and\n * return an array with appropriately re-keyed children.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray\n */\nfunction toArray(children) {\n  var result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);\n  return result;\n}\n\nvar ReactChildren = {\n  forEach: forEachChildren,\n  map: mapChildren,\n  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,\n  count: countChildren,\n  toArray: toArray\n};\n\nmodule.exports = ReactChildren;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactChildren.js\n// module id = 6\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Static poolers. Several custom versions for each potential number of\n * arguments. A completely generic pooler is easy to implement, but would\n * require accessing the `arguments` object. In each of these, `this` refers to\n * the Class itself, not an instance. If any others are needed, simply add them\n * here, or in their own files.\n */\nvar oneArgumentPooler = function (copyFieldsFrom) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, copyFieldsFrom);\n    return instance;\n  } else {\n    return new Klass(copyFieldsFrom);\n  }\n};\n\nvar twoArgumentPooler = function (a1, a2) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2);\n    return instance;\n  } else {\n    return new Klass(a1, a2);\n  }\n};\n\nvar threeArgumentPooler = function (a1, a2, a3) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3);\n  }\n};\n\nvar fourArgumentPooler = function (a1, a2, a3, a4) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3, a4);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3, a4);\n  }\n};\n\nvar fiveArgumentPooler = function (a1, a2, a3, a4, a5) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3, a4, a5);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3, a4, a5);\n  }\n};\n\nvar standardReleaser = function (instance) {\n  var Klass = this;\n  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;\n  instance.destructor();\n  if (Klass.instancePool.length < Klass.poolSize) {\n    Klass.instancePool.push(instance);\n  }\n};\n\nvar DEFAULT_POOL_SIZE = 10;\nvar DEFAULT_POOLER = oneArgumentPooler;\n\n/**\n * Augments `CopyConstructor` to be a poolable class, augmenting only the class\n * itself (statically) not adding any prototypical fields. Any CopyConstructor\n * you give this may have a `poolSize` property, and will look for a\n * prototypical `destructor` on instances.\n *\n * @param {Function} CopyConstructor Constructor that can be used to reset.\n * @param {Function} pooler Customizable pooler.\n */\nvar addPoolingTo = function (CopyConstructor, pooler) {\n  // Casting as any so that flow ignores the actual implementation and trusts\n  // it to match the type we declared\n  var NewKlass = CopyConstructor;\n  NewKlass.instancePool = [];\n  NewKlass.getPooled = pooler || DEFAULT_POOLER;\n  if (!NewKlass.poolSize) {\n    NewKlass.poolSize = DEFAULT_POOL_SIZE;\n  }\n  NewKlass.release = standardReleaser;\n  return NewKlass;\n};\n\nvar PooledClass = {\n  addPoolingTo: addPoolingTo,\n  oneArgumentPooler: oneArgumentPooler,\n  twoArgumentPooler: twoArgumentPooler,\n  threeArgumentPooler: threeArgumentPooler,\n  fourArgumentPooler: fourArgumentPooler,\n  fiveArgumentPooler: fiveArgumentPooler\n};\n\nmodule.exports = PooledClass;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/PooledClass.js\n// module id = 7\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n'use strict';\n\n/**\n * WARNING: DO NOT manually require this module.\n * This is a replacement for `invariant(...)` used by the error code system\n * and will _only_ be required by the corresponding babel pass.\n * It always throws.\n */\n\nfunction reactProdInvariant(code) {\n  var argCount = arguments.length - 1;\n\n  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;\n\n  for (var argIdx = 0; argIdx < argCount; argIdx++) {\n    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);\n  }\n\n  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';\n\n  var error = new Error(message);\n  error.name = 'Invariant Violation';\n  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame\n\n  throw error;\n}\n\nmodule.exports = reactProdInvariant;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/reactProdInvariant.js\n// module id = 8\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/invariant.js\n// module id = 9\n// module chunks = 0","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\n\nvar warning = require('fbjs/lib/warning');\nvar canDefineProperty = require('./canDefineProperty');\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar REACT_ELEMENT_TYPE = require('./ReactElementSymbol');\n\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\n\nvar specialPropKeyWarningShown, specialPropRefWarningShown;\n\nfunction hasValidRef(config) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.key !== undefined;\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  var warnAboutAccessingKey = function () {\n    if (!specialPropKeyWarningShown) {\n      specialPropKeyWarningShown = true;\n      process.env.NODE_ENV !== 'production' ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;\n    }\n  };\n  warnAboutAccessingKey.isReactWarning = true;\n  Object.defineProperty(props, 'key', {\n    get: warnAboutAccessingKey,\n    configurable: true\n  });\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  var warnAboutAccessingRef = function () {\n    if (!specialPropRefWarningShown) {\n      specialPropRefWarningShown = true;\n      process.env.NODE_ENV !== 'production' ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;\n    }\n  };\n  warnAboutAccessingRef.isReactWarning = true;\n  Object.defineProperty(props, 'ref', {\n    get: warnAboutAccessingRef,\n    configurable: true\n  });\n}\n\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, no instanceof check\n * will work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} key\n * @param {string|object} ref\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @param {*} owner\n * @param {*} props\n * @internal\n */\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allow us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {};\n\n    // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n    if (canDefineProperty) {\n      Object.defineProperty(element._store, 'validated', {\n        configurable: false,\n        enumerable: false,\n        writable: true,\n        value: false\n      });\n      // self and source are DEV only properties.\n      Object.defineProperty(element, '_self', {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: self\n      });\n      // Two elements created in two different places should be considered\n      // equal for testing purposes and therefore we hide it from enumeration.\n      Object.defineProperty(element, '_source', {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: source\n      });\n    } else {\n      element._store.validated = false;\n      element._self = self;\n      element._source = source;\n    }\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n\n/**\n * Create and return a new ReactElement of the given type.\n * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement\n */\nReactElement.createElement = function (type, config, children) {\n  var propName;\n\n  // Reserved names are extracted\n  var props = {};\n\n  var key = null;\n  var ref = null;\n  var self = null;\n  var source = null;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      ref = config.ref;\n    }\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    self = config.__self === undefined ? null : config.__self;\n    source = config.__source === undefined ? null : config.__source;\n    // Remaining properties are added to a new props object\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (Object.freeze) {\n        Object.freeze(childArray);\n      }\n    }\n    props.children = childArray;\n  }\n\n  // Resolve default props\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    if (key || ref) {\n      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {\n        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n        if (key) {\n          defineKeyPropWarningGetter(props, displayName);\n        }\n        if (ref) {\n          defineRefPropWarningGetter(props, displayName);\n        }\n      }\n    }\n  }\n  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n};\n\n/**\n * Return a function that produces ReactElements of a given type.\n * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory\n */\nReactElement.createFactory = function (type) {\n  var factory = ReactElement.createElement.bind(null, type);\n  // Expose the type on the factory and the prototype so that it can be\n  // easily accessed on elements. E.g. `<Foo />.type === Foo`.\n  // This should not be named `constructor` since this may not be the function\n  // that created the element, and it may not even be a constructor.\n  // Legacy hook TODO: Warn if this is accessed\n  factory.type = type;\n  return factory;\n};\n\nReactElement.cloneAndReplaceKey = function (oldElement, newKey) {\n  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n\n  return newElement;\n};\n\n/**\n * Clone and return a new ReactElement using element as the starting point.\n * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement\n */\nReactElement.cloneElement = function (element, config, children) {\n  var propName;\n\n  // Original props are copied\n  var props = _assign({}, element.props);\n\n  // Reserved names are extracted\n  var key = element.key;\n  var ref = element.ref;\n  // Self is preserved since the owner is preserved.\n  var self = element._self;\n  // Source is preserved since cloneElement is unlikely to be targeted by a\n  // transpiler, and the original source is probably a better indicator of the\n  // true owner.\n  var source = element._source;\n\n  // Owner will be preserved, unless ref is overridden\n  var owner = element._owner;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    // Remaining properties override existing props\n    var defaultProps;\n    if (element.type && element.type.defaultProps) {\n      defaultProps = element.type.defaultProps;\n    }\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        if (config[propName] === undefined && defaultProps !== undefined) {\n          // Resolve default props\n          props[propName] = defaultProps[propName];\n        } else {\n          props[propName] = config[propName];\n        }\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    props.children = childArray;\n  }\n\n  return ReactElement(element.type, key, ref, self, source, owner, props);\n};\n\n/**\n * Verifies the object is a ReactElement.\n * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a valid component.\n * @final\n */\nReactElement.isValidElement = function (object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n};\n\nmodule.exports = ReactElement;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactElement.js\n// module id = 10\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\n/**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n */\nvar ReactCurrentOwner = {\n\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n\n};\n\nmodule.exports = ReactCurrentOwner;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactCurrentOwner.js\n// module id = 11\n// module chunks = 0","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar emptyFunction = require('./emptyFunction');\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = emptyFunction;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var printWarning = function printWarning(format) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      var argIndex = 0;\n      var message = 'Warning: ' + format.replace(/%s/g, function () {\n        return args[argIndex++];\n      });\n      if (typeof console !== 'undefined') {\n        console.error(message);\n      }\n      try {\n        // --- Welcome to debugging React ---\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch (x) {}\n    };\n\n    warning = function warning(condition, format) {\n      if (format === undefined) {\n        throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n      }\n\n      if (format.indexOf('Failed Composite propType: ') === 0) {\n        return; // Ignore CompositeComponent proptype check.\n      }\n\n      if (!condition) {\n        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n          args[_key2 - 2] = arguments[_key2];\n        }\n\n        printWarning.apply(undefined, [format].concat(args));\n      }\n    };\n  })();\n}\n\nmodule.exports = warning;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/warning.js\n// module id = 12\n// module chunks = 0","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/emptyFunction.js\n// module id = 13\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar canDefineProperty = false;\nif (process.env.NODE_ENV !== 'production') {\n  try {\n    // $FlowFixMe https://github.com/facebook/flow/issues/285\n    Object.defineProperty({}, 'x', { get: function () {} });\n    canDefineProperty = true;\n  } catch (x) {\n    // IE will fail on defineProperty\n  }\n}\n\nmodule.exports = canDefineProperty;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/canDefineProperty.js\n// module id = 14\n// module chunks = 0","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\n// The Symbol used to tag the ReactElement type. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\n\nvar REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;\n\nmodule.exports = REACT_ELEMENT_TYPE;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactElementSymbol.js\n// module id = 15\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\nvar REACT_ELEMENT_TYPE = require('./ReactElementSymbol');\n\nvar getIteratorFn = require('./getIteratorFn');\nvar invariant = require('fbjs/lib/invariant');\nvar KeyEscapeUtils = require('./KeyEscapeUtils');\nvar warning = require('fbjs/lib/warning');\n\nvar SEPARATOR = '.';\nvar SUBSEPARATOR = ':';\n\n/**\n * This is inlined from ReactElement since this file is shared between\n * isomorphic and renderers. We could extract this to a\n *\n */\n\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\nvar didWarnAboutMaps = false;\n\n/**\n * Generate a key string that identifies a component within a set.\n *\n * @param {*} component A component that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\nfunction getComponentKey(component, index) {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (component && typeof component === 'object' && component.key != null) {\n    // Explicit key\n    return KeyEscapeUtils.escape(component.key);\n  }\n  // Implicit key determined by the index in the set\n  return index.toString(36);\n}\n\n/**\n * @param {?*} children Children tree container.\n * @param {!string} nameSoFar Name of the key path so far.\n * @param {!function} callback Callback to invoke with each child found.\n * @param {?*} traverseContext Used to pass information throughout the traversal\n * process.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  if (children === null || type === 'string' || type === 'number' ||\n  // The following is inlined from ReactElement. This means we can optimize\n  // some checks. React Fiber also inlines this logic for similar purposes.\n  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {\n    callback(traverseContext, children,\n    // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows.\n    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\n    return 1;\n  }\n\n  var child;\n  var nextName;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getComponentKey(child, i);\n      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n    if (iteratorFn) {\n      var iterator = iteratorFn.call(children);\n      var step;\n      if (iteratorFn !== children.entries) {\n        var ii = 0;\n        while (!(step = iterator.next()).done) {\n          child = step.value;\n          nextName = nextNamePrefix + getComponentKey(child, ii++);\n          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n        }\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          var mapsAsChildrenAddendum = '';\n          if (ReactCurrentOwner.current) {\n            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();\n            if (mapsAsChildrenOwnerName) {\n              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';\n            }\n          }\n          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;\n          didWarnAboutMaps = true;\n        }\n        // Iterator will provide entry [k,v] tuples rather than values.\n        while (!(step = iterator.next()).done) {\n          var entry = step.value;\n          if (entry) {\n            child = entry[1];\n            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);\n            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n          }\n        }\n      }\n    } else if (type === 'object') {\n      var addendum = '';\n      if (process.env.NODE_ENV !== 'production') {\n        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';\n        if (children._isReactElement) {\n          addendum = ' It looks like you\\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';\n        }\n        if (ReactCurrentOwner.current) {\n          var name = ReactCurrentOwner.current.getName();\n          if (name) {\n            addendum += ' Check the render method of `' + name + '`.';\n          }\n        }\n      }\n      var childrenString = String(children);\n      !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;\n    }\n  }\n\n  return subtreeCount;\n}\n\n/**\n * Traverses children that are typically specified as `props.children`, but\n * might also be specified through attributes:\n *\n * - `traverseAllChildren(this.props.children, ...)`\n * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n *\n * The `traverseContext` is an optional argument that is passed through the\n * entire traversal. It can be used to store accumulations or anything else that\n * the callback might find relevant.\n *\n * @param {?*} children Children tree object.\n * @param {!function} callback To invoke upon traversing each child.\n * @param {?*} traverseContext Context for traversal.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildren(children, callback, traverseContext) {\n  if (children == null) {\n    return 0;\n  }\n\n  return traverseAllChildrenImpl(children, '', callback, traverseContext);\n}\n\nmodule.exports = traverseAllChildren;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/traverseAllChildren.js\n// module id = 16\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\n/* global Symbol */\n\nvar ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n/**\n * Returns the iterator method function contained on the iterable object.\n *\n * Be sure to invoke the function with the iterable as context:\n *\n *     var iteratorFn = getIteratorFn(myIterable);\n *     if (iteratorFn) {\n *       var iterator = iteratorFn.call(myIterable);\n *       ...\n *     }\n *\n * @param {?object} maybeIterable\n * @return {?function}\n */\nfunction getIteratorFn(maybeIterable) {\n  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n  if (typeof iteratorFn === 'function') {\n    return iteratorFn;\n  }\n}\n\nmodule.exports = getIteratorFn;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/getIteratorFn.js\n// module id = 17\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\n/**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */\n\nfunction escape(key) {\n  var escapeRegex = /[=:]/g;\n  var escaperLookup = {\n    '=': '=0',\n    ':': '=2'\n  };\n  var escapedString = ('' + key).replace(escapeRegex, function (match) {\n    return escaperLookup[match];\n  });\n\n  return '$' + escapedString;\n}\n\n/**\n * Unescape and unwrap key for human-readable display\n *\n * @param {string} key to unescape.\n * @return {string} the unescaped key.\n */\nfunction unescape(key) {\n  var unescapeRegex = /(=0|=2)/g;\n  var unescaperLookup = {\n    '=0': '=',\n    '=2': ':'\n  };\n  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);\n\n  return ('' + keySubstring).replace(unescapeRegex, function (match) {\n    return unescaperLookup[match];\n  });\n}\n\nvar KeyEscapeUtils = {\n  escape: escape,\n  unescape: unescape\n};\n\nmodule.exports = KeyEscapeUtils;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/KeyEscapeUtils.js\n// module id = 18\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactNoopUpdateQueue = require('./ReactNoopUpdateQueue');\n\nvar canDefineProperty = require('./canDefineProperty');\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\n/**\n * Base class helpers for the updating state of a component.\n */\nfunction ReactComponent(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  // We initialize the default updater but the real one gets injected by the\n  // renderer.\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nReactComponent.prototype.isReactComponent = {};\n\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\nReactComponent.prototype.setState = function (partialState, callback) {\n  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;\n  this.updater.enqueueSetState(this, partialState);\n  if (callback) {\n    this.updater.enqueueCallback(this, callback, 'setState');\n  }\n};\n\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\nReactComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this);\n  if (callback) {\n    this.updater.enqueueCallback(this, callback, 'forceUpdate');\n  }\n};\n\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\nif (process.env.NODE_ENV !== 'production') {\n  var deprecatedAPIs = {\n    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n  };\n  var defineDeprecationWarning = function (methodName, info) {\n    if (canDefineProperty) {\n      Object.defineProperty(ReactComponent.prototype, methodName, {\n        get: function () {\n          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : void 0;\n          return undefined;\n        }\n      });\n    }\n  };\n  for (var fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\nmodule.exports = ReactComponent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactComponent.js\n// module id = 19\n// module chunks = 0","/**\n * Copyright 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar warning = require('fbjs/lib/warning');\n\nfunction warnNoop(publicInstance, callerName) {\n  if (process.env.NODE_ENV !== 'production') {\n    var constructor = publicInstance.constructor;\n    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;\n  }\n}\n\n/**\n * This is the abstract API for an update queue.\n */\nvar ReactNoopUpdateQueue = {\n\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function (publicInstance) {\n    return false;\n  },\n\n  /**\n   * Enqueue a callback that will be executed after all the pending updates\n   * have processed.\n   *\n   * @param {ReactClass} publicInstance The instance to use as `this` context.\n   * @param {?function} callback Called after state is updated.\n   * @internal\n   */\n  enqueueCallback: function (publicInstance, callback) {},\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @internal\n   */\n  enqueueForceUpdate: function (publicInstance) {\n    warnNoop(publicInstance, 'forceUpdate');\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @internal\n   */\n  enqueueReplaceState: function (publicInstance, completeState) {\n    warnNoop(publicInstance, 'replaceState');\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @internal\n   */\n  enqueueSetState: function (publicInstance, partialState) {\n    warnNoop(publicInstance, 'setState');\n  }\n};\n\nmodule.exports = ReactNoopUpdateQueue;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactNoopUpdateQueue.js\n// module id = 20\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar emptyObject = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  Object.freeze(emptyObject);\n}\n\nmodule.exports = emptyObject;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/emptyObject.js\n// module id = 21\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar ReactComponent = require('./ReactComponent');\nvar ReactNoopUpdateQueue = require('./ReactNoopUpdateQueue');\n\nvar emptyObject = require('fbjs/lib/emptyObject');\n\n/**\n * Base class helpers for the updating state of a component.\n */\nfunction ReactPureComponent(props, context, updater) {\n  // Duplicated from ReactComponent.\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  // We initialize the default updater but the real one gets injected by the\n  // renderer.\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nfunction ComponentDummy() {}\nComponentDummy.prototype = ReactComponent.prototype;\nReactPureComponent.prototype = new ComponentDummy();\nReactPureComponent.prototype.constructor = ReactPureComponent;\n// Avoid an extra prototype jump for these methods.\n_assign(ReactPureComponent.prototype, ReactComponent.prototype);\nReactPureComponent.prototype.isPureReactComponent = true;\n\nmodule.exports = ReactPureComponent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactPureComponent.js\n// module id = 22\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar ReactComponent = require('./ReactComponent');\nvar ReactElement = require('./ReactElement');\nvar ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');\nvar ReactNoopUpdateQueue = require('./ReactNoopUpdateQueue');\n\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nvar MIXINS_KEY = 'mixins';\n\n// Helper function to allow the creation of anonymous functions which do not\n// have .name set to the name of the variable being assigned to.\nfunction identity(fn) {\n  return fn;\n}\n\n/**\n * Policies that describe methods in `ReactClassInterface`.\n */\n\n\nvar injectedMixins = [];\n\n/**\n * Composite components are higher-level components that compose other composite\n * or host components.\n *\n * To create a new type of `ReactClass`, pass a specification of\n * your new class to `React.createClass`. The only requirement of your class\n * specification is that you implement a `render` method.\n *\n *   var MyComponent = React.createClass({\n *     render: function() {\n *       return <div>Hello World</div>;\n *     }\n *   });\n *\n * The class specification supports a specific protocol of methods that have\n * special meaning (e.g. `render`). See `ReactClassInterface` for\n * more the comprehensive protocol. Any other properties and methods in the\n * class specification will be available on the prototype.\n *\n * @interface ReactClassInterface\n * @internal\n */\nvar ReactClassInterface = {\n\n  /**\n   * An array of Mixin objects to include when defining your component.\n   *\n   * @type {array}\n   * @optional\n   */\n  mixins: 'DEFINE_MANY',\n\n  /**\n   * An object containing properties and methods that should be defined on\n   * the component's constructor instead of its prototype (static methods).\n   *\n   * @type {object}\n   * @optional\n   */\n  statics: 'DEFINE_MANY',\n\n  /**\n   * Definition of prop types for this component.\n   *\n   * @type {object}\n   * @optional\n   */\n  propTypes: 'DEFINE_MANY',\n\n  /**\n   * Definition of context types for this component.\n   *\n   * @type {object}\n   * @optional\n   */\n  contextTypes: 'DEFINE_MANY',\n\n  /**\n   * Definition of context types this component sets for its children.\n   *\n   * @type {object}\n   * @optional\n   */\n  childContextTypes: 'DEFINE_MANY',\n\n  // ==== Definition methods ====\n\n  /**\n   * Invoked when the component is mounted. Values in the mapping will be set on\n   * `this.props` if that prop is not specified (i.e. using an `in` check).\n   *\n   * This method is invoked before `getInitialState` and therefore cannot rely\n   * on `this.state` or use `this.setState`.\n   *\n   * @return {object}\n   * @optional\n   */\n  getDefaultProps: 'DEFINE_MANY_MERGED',\n\n  /**\n   * Invoked once before the component is mounted. The return value will be used\n   * as the initial value of `this.state`.\n   *\n   *   getInitialState: function() {\n   *     return {\n   *       isOn: false,\n   *       fooBaz: new BazFoo()\n   *     }\n   *   }\n   *\n   * @return {object}\n   * @optional\n   */\n  getInitialState: 'DEFINE_MANY_MERGED',\n\n  /**\n   * @return {object}\n   * @optional\n   */\n  getChildContext: 'DEFINE_MANY_MERGED',\n\n  /**\n   * Uses props from `this.props` and state from `this.state` to render the\n   * structure of the component.\n   *\n   * No guarantees are made about when or how often this method is invoked, so\n   * it must not have side effects.\n   *\n   *   render: function() {\n   *     var name = this.props.name;\n   *     return <div>Hello, {name}!</div>;\n   *   }\n   *\n   * @return {ReactComponent}\n   * @nosideeffects\n   * @required\n   */\n  render: 'DEFINE_ONCE',\n\n  // ==== Delegate methods ====\n\n  /**\n   * Invoked when the component is initially created and about to be mounted.\n   * This may have side effects, but any external subscriptions or data created\n   * by this method must be cleaned up in `componentWillUnmount`.\n   *\n   * @optional\n   */\n  componentWillMount: 'DEFINE_MANY',\n\n  /**\n   * Invoked when the component has been mounted and has a DOM representation.\n   * However, there is no guarantee that the DOM node is in the document.\n   *\n   * Use this as an opportunity to operate on the DOM when the component has\n   * been mounted (initialized and rendered) for the first time.\n   *\n   * @param {DOMElement} rootNode DOM element representing the component.\n   * @optional\n   */\n  componentDidMount: 'DEFINE_MANY',\n\n  /**\n   * Invoked before the component receives new props.\n   *\n   * Use this as an opportunity to react to a prop transition by updating the\n   * state using `this.setState`. Current props are accessed via `this.props`.\n   *\n   *   componentWillReceiveProps: function(nextProps, nextContext) {\n   *     this.setState({\n   *       likesIncreasing: nextProps.likeCount > this.props.likeCount\n   *     });\n   *   }\n   *\n   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop\n   * transition may cause a state change, but the opposite is not true. If you\n   * need it, you are probably looking for `componentWillUpdate`.\n   *\n   * @param {object} nextProps\n   * @optional\n   */\n  componentWillReceiveProps: 'DEFINE_MANY',\n\n  /**\n   * Invoked while deciding if the component should be updated as a result of\n   * receiving new props, state and/or context.\n   *\n   * Use this as an opportunity to `return false` when you're certain that the\n   * transition to the new props/state/context will not require a component\n   * update.\n   *\n   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {\n   *     return !equal(nextProps, this.props) ||\n   *       !equal(nextState, this.state) ||\n   *       !equal(nextContext, this.context);\n   *   }\n   *\n   * @param {object} nextProps\n   * @param {?object} nextState\n   * @param {?object} nextContext\n   * @return {boolean} True if the component should update.\n   * @optional\n   */\n  shouldComponentUpdate: 'DEFINE_ONCE',\n\n  /**\n   * Invoked when the component is about to update due to a transition from\n   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`\n   * and `nextContext`.\n   *\n   * Use this as an opportunity to perform preparation before an update occurs.\n   *\n   * NOTE: You **cannot** use `this.setState()` in this method.\n   *\n   * @param {object} nextProps\n   * @param {?object} nextState\n   * @param {?object} nextContext\n   * @param {ReactReconcileTransaction} transaction\n   * @optional\n   */\n  componentWillUpdate: 'DEFINE_MANY',\n\n  /**\n   * Invoked when the component's DOM representation has been updated.\n   *\n   * Use this as an opportunity to operate on the DOM when the component has\n   * been updated.\n   *\n   * @param {object} prevProps\n   * @param {?object} prevState\n   * @param {?object} prevContext\n   * @param {DOMElement} rootNode DOM element representing the component.\n   * @optional\n   */\n  componentDidUpdate: 'DEFINE_MANY',\n\n  /**\n   * Invoked when the component is about to be removed from its parent and have\n   * its DOM representation destroyed.\n   *\n   * Use this as an opportunity to deallocate any external resources.\n   *\n   * NOTE: There is no `componentDidUnmount` since your component will have been\n   * destroyed by that point.\n   *\n   * @optional\n   */\n  componentWillUnmount: 'DEFINE_MANY',\n\n  // ==== Advanced methods ====\n\n  /**\n   * Updates the component's currently mounted DOM representation.\n   *\n   * By default, this implements React's rendering and reconciliation algorithm.\n   * Sophisticated clients may wish to override this.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   * @overridable\n   */\n  updateComponent: 'OVERRIDE_BASE'\n\n};\n\n/**\n * Mapping from class specification keys to special processing functions.\n *\n * Although these are declared like instance properties in the specification\n * when defining classes using `React.createClass`, they are actually static\n * and are accessible on the constructor instead of the prototype. Despite\n * being static, they must be defined outside of the \"statics\" key under\n * which all other static methods are defined.\n */\nvar RESERVED_SPEC_KEYS = {\n  displayName: function (Constructor, displayName) {\n    Constructor.displayName = displayName;\n  },\n  mixins: function (Constructor, mixins) {\n    if (mixins) {\n      for (var i = 0; i < mixins.length; i++) {\n        mixSpecIntoComponent(Constructor, mixins[i]);\n      }\n    }\n  },\n  childContextTypes: function (Constructor, childContextTypes) {\n    if (process.env.NODE_ENV !== 'production') {\n      validateTypeDef(Constructor, childContextTypes, 'childContext');\n    }\n    Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, childContextTypes);\n  },\n  contextTypes: function (Constructor, contextTypes) {\n    if (process.env.NODE_ENV !== 'production') {\n      validateTypeDef(Constructor, contextTypes, 'context');\n    }\n    Constructor.contextTypes = _assign({}, Constructor.contextTypes, contextTypes);\n  },\n  /**\n   * Special case getDefaultProps which should move into statics but requires\n   * automatic merging.\n   */\n  getDefaultProps: function (Constructor, getDefaultProps) {\n    if (Constructor.getDefaultProps) {\n      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);\n    } else {\n      Constructor.getDefaultProps = getDefaultProps;\n    }\n  },\n  propTypes: function (Constructor, propTypes) {\n    if (process.env.NODE_ENV !== 'production') {\n      validateTypeDef(Constructor, propTypes, 'prop');\n    }\n    Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);\n  },\n  statics: function (Constructor, statics) {\n    mixStaticSpecIntoComponent(Constructor, statics);\n  },\n  autobind: function () {} };\n\nfunction validateTypeDef(Constructor, typeDef, location) {\n  for (var propName in typeDef) {\n    if (typeDef.hasOwnProperty(propName)) {\n      // use a warning instead of an invariant so components\n      // don't show up in prod but only in __DEV__\n      process.env.NODE_ENV !== 'production' ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : void 0;\n    }\n  }\n}\n\nfunction validateMethodOverride(isAlreadyDefined, name) {\n  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;\n\n  // Disallow overriding of base class methods unless explicitly allowed.\n  if (ReactClassMixin.hasOwnProperty(name)) {\n    !(specPolicy === 'OVERRIDE_BASE') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.', name) : _prodInvariant('73', name) : void 0;\n  }\n\n  // Disallow defining methods more than once unless explicitly allowed.\n  if (isAlreadyDefined) {\n    !(specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('74', name) : void 0;\n  }\n}\n\n/**\n * Mixin helper which handles policy validation and reserved\n * specification keys when building React classes.\n */\nfunction mixSpecIntoComponent(Constructor, spec) {\n  if (!spec) {\n    if (process.env.NODE_ENV !== 'production') {\n      var typeofSpec = typeof spec;\n      var isMixinValid = typeofSpec === 'object' && spec !== null;\n\n      process.env.NODE_ENV !== 'production' ? warning(isMixinValid, '%s: You\\'re attempting to include a mixin that is either null ' + 'or not an object. Check the mixins included by the component, ' + 'as well as any mixins they include themselves. ' + 'Expected object but got %s.', Constructor.displayName || 'ReactClass', spec === null ? null : typeofSpec) : void 0;\n    }\n\n    return;\n  }\n\n  !(typeof spec !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\\'re attempting to use a component class or function as a mixin. Instead, just use a regular object.') : _prodInvariant('75') : void 0;\n  !!ReactElement.isValidElement(spec) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\\'re attempting to use a component as a mixin. Instead, just use a regular object.') : _prodInvariant('76') : void 0;\n\n  var proto = Constructor.prototype;\n  var autoBindPairs = proto.__reactAutoBindPairs;\n\n  // By handling mixins before any other properties, we ensure the same\n  // chaining order is applied to methods with DEFINE_MANY policy, whether\n  // mixins are listed before or after these methods in the spec.\n  if (spec.hasOwnProperty(MIXINS_KEY)) {\n    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);\n  }\n\n  for (var name in spec) {\n    if (!spec.hasOwnProperty(name)) {\n      continue;\n    }\n\n    if (name === MIXINS_KEY) {\n      // We have already handled mixins in a special case above.\n      continue;\n    }\n\n    var property = spec[name];\n    var isAlreadyDefined = proto.hasOwnProperty(name);\n    validateMethodOverride(isAlreadyDefined, name);\n\n    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {\n      RESERVED_SPEC_KEYS[name](Constructor, property);\n    } else {\n      // Setup methods on prototype:\n      // The following member methods should not be automatically bound:\n      // 1. Expected ReactClass methods (in the \"interface\").\n      // 2. Overridden methods (that were mixed in).\n      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);\n      var isFunction = typeof property === 'function';\n      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;\n\n      if (shouldAutoBind) {\n        autoBindPairs.push(name, property);\n        proto[name] = property;\n      } else {\n        if (isAlreadyDefined) {\n          var specPolicy = ReactClassInterface[name];\n\n          // These cases should already be caught by validateMethodOverride.\n          !(isReactClassMethod && (specPolicy === 'DEFINE_MANY_MERGED' || specPolicy === 'DEFINE_MANY')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.', specPolicy, name) : _prodInvariant('77', specPolicy, name) : void 0;\n\n          // For methods which are defined more than once, call the existing\n          // methods before calling the new property, merging if appropriate.\n          if (specPolicy === 'DEFINE_MANY_MERGED') {\n            proto[name] = createMergedResultFunction(proto[name], property);\n          } else if (specPolicy === 'DEFINE_MANY') {\n            proto[name] = createChainedFunction(proto[name], property);\n          }\n        } else {\n          proto[name] = property;\n          if (process.env.NODE_ENV !== 'production') {\n            // Add verbose displayName to the function, which helps when looking\n            // at profiling tools.\n            if (typeof property === 'function' && spec.displayName) {\n              proto[name].displayName = spec.displayName + '_' + name;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction mixStaticSpecIntoComponent(Constructor, statics) {\n  if (!statics) {\n    return;\n  }\n  for (var name in statics) {\n    var property = statics[name];\n    if (!statics.hasOwnProperty(name)) {\n      continue;\n    }\n\n    var isReserved = name in RESERVED_SPEC_KEYS;\n    !!isReserved ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\\'t be on the \"statics\" key. Define it as an instance property instead; it will still be accessible on the constructor.', name) : _prodInvariant('78', name) : void 0;\n\n    var isInherited = name in Constructor;\n    !!isInherited ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('79', name) : void 0;\n    Constructor[name] = property;\n  }\n}\n\n/**\n * Merge two objects, but throw if both contain the same key.\n *\n * @param {object} one The first object, which is mutated.\n * @param {object} two The second object\n * @return {object} one after it has been mutated to contain everything in two.\n */\nfunction mergeIntoWithNoDuplicateKeys(one, two) {\n  !(one && two && typeof one === 'object' && typeof two === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : _prodInvariant('80') : void 0;\n\n  for (var key in two) {\n    if (two.hasOwnProperty(key)) {\n      !(one[key] === undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.', key) : _prodInvariant('81', key) : void 0;\n      one[key] = two[key];\n    }\n  }\n  return one;\n}\n\n/**\n * Creates a function that invokes two functions and merges their return values.\n *\n * @param {function} one Function to invoke first.\n * @param {function} two Function to invoke second.\n * @return {function} Function that invokes the two argument functions.\n * @private\n */\nfunction createMergedResultFunction(one, two) {\n  return function mergedResult() {\n    var a = one.apply(this, arguments);\n    var b = two.apply(this, arguments);\n    if (a == null) {\n      return b;\n    } else if (b == null) {\n      return a;\n    }\n    var c = {};\n    mergeIntoWithNoDuplicateKeys(c, a);\n    mergeIntoWithNoDuplicateKeys(c, b);\n    return c;\n  };\n}\n\n/**\n * Creates a function that invokes two functions and ignores their return vales.\n *\n * @param {function} one Function to invoke first.\n * @param {function} two Function to invoke second.\n * @return {function} Function that invokes the two argument functions.\n * @private\n */\nfunction createChainedFunction(one, two) {\n  return function chainedFunction() {\n    one.apply(this, arguments);\n    two.apply(this, arguments);\n  };\n}\n\n/**\n * Binds a method to the component.\n *\n * @param {object} component Component whose method is going to be bound.\n * @param {function} method Method to be bound.\n * @return {function} The bound method.\n */\nfunction bindAutoBindMethod(component, method) {\n  var boundMethod = method.bind(component);\n  if (process.env.NODE_ENV !== 'production') {\n    boundMethod.__reactBoundContext = component;\n    boundMethod.__reactBoundMethod = method;\n    boundMethod.__reactBoundArguments = null;\n    var componentName = component.constructor.displayName;\n    var _bind = boundMethod.bind;\n    boundMethod.bind = function (newThis) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      // User is trying to bind() an autobound method; we effectively will\n      // ignore the value of \"this\" that the user is trying to use, so\n      // let's warn.\n      if (newThis !== component && newThis !== null) {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : void 0;\n      } else if (!args.length) {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : void 0;\n        return boundMethod;\n      }\n      var reboundMethod = _bind.apply(boundMethod, arguments);\n      reboundMethod.__reactBoundContext = component;\n      reboundMethod.__reactBoundMethod = method;\n      reboundMethod.__reactBoundArguments = args;\n      return reboundMethod;\n    };\n  }\n  return boundMethod;\n}\n\n/**\n * Binds all auto-bound methods in a component.\n *\n * @param {object} component Component whose method is going to be bound.\n */\nfunction bindAutoBindMethods(component) {\n  var pairs = component.__reactAutoBindPairs;\n  for (var i = 0; i < pairs.length; i += 2) {\n    var autoBindKey = pairs[i];\n    var method = pairs[i + 1];\n    component[autoBindKey] = bindAutoBindMethod(component, method);\n  }\n}\n\n/**\n * Add more to the ReactClass base class. These are all legacy features and\n * therefore not already part of the modern ReactComponent.\n */\nvar ReactClassMixin = {\n\n  /**\n   * TODO: This will be deprecated because state should always keep a consistent\n   * type signature and the only use case for this, is to avoid that.\n   */\n  replaceState: function (newState, callback) {\n    this.updater.enqueueReplaceState(this, newState);\n    if (callback) {\n      this.updater.enqueueCallback(this, callback, 'replaceState');\n    }\n  },\n\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function () {\n    return this.updater.isMounted(this);\n  }\n};\n\nvar ReactClassComponent = function () {};\n_assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);\n\n/**\n * Module for creating composite components.\n *\n * @class ReactClass\n */\nvar ReactClass = {\n\n  /**\n   * Creates a composite component class given a class specification.\n   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass\n   *\n   * @param {object} spec Class specification (which must define `render`).\n   * @return {function} Component constructor function.\n   * @public\n   */\n  createClass: function (spec) {\n    // To keep our warnings more understandable, we'll use a little hack here to\n    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't\n    // unnecessarily identify a class without displayName as 'Constructor'.\n    var Constructor = identity(function (props, context, updater) {\n      // This constructor gets overridden by mocks. The argument is used\n      // by mocks to assert on what gets mounted.\n\n      if (process.env.NODE_ENV !== 'production') {\n        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : void 0;\n      }\n\n      // Wire up auto-binding\n      if (this.__reactAutoBindPairs.length) {\n        bindAutoBindMethods(this);\n      }\n\n      this.props = props;\n      this.context = context;\n      this.refs = emptyObject;\n      this.updater = updater || ReactNoopUpdateQueue;\n\n      this.state = null;\n\n      // ReactClasses doesn't have constructors. Instead, they use the\n      // getInitialState and componentWillMount methods for initialization.\n\n      var initialState = this.getInitialState ? this.getInitialState() : null;\n      if (process.env.NODE_ENV !== 'production') {\n        // We allow auto-mocks to proceed as if they're returning null.\n        if (initialState === undefined && this.getInitialState._isMockFunction) {\n          // This is probably bad practice. Consider warning here and\n          // deprecating this convenience.\n          initialState = null;\n        }\n      }\n      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : _prodInvariant('82', Constructor.displayName || 'ReactCompositeComponent') : void 0;\n\n      this.state = initialState;\n    });\n    Constructor.prototype = new ReactClassComponent();\n    Constructor.prototype.constructor = Constructor;\n    Constructor.prototype.__reactAutoBindPairs = [];\n\n    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));\n\n    mixSpecIntoComponent(Constructor, spec);\n\n    // Initialize the defaultProps property after all mixins have been merged.\n    if (Constructor.getDefaultProps) {\n      Constructor.defaultProps = Constructor.getDefaultProps();\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      // This is a tag to indicate that the use of these method names is ok,\n      // since it's used with createClass. If it's not, then it's likely a\n      // mistake so we'll warn you to use the static property, property\n      // initializer or constructor respectively.\n      if (Constructor.getDefaultProps) {\n        Constructor.getDefaultProps.isReactClassApproved = {};\n      }\n      if (Constructor.prototype.getInitialState) {\n        Constructor.prototype.getInitialState.isReactClassApproved = {};\n      }\n    }\n\n    !Constructor.prototype.render ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : _prodInvariant('83') : void 0;\n\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : void 0;\n    }\n\n    // Reduce time spent doing lookups by setting these on the prototype.\n    for (var methodName in ReactClassInterface) {\n      if (!Constructor.prototype[methodName]) {\n        Constructor.prototype[methodName] = null;\n      }\n    }\n\n    return Constructor;\n  },\n\n  injection: {\n    injectMixin: function (mixin) {\n      injectedMixins.push(mixin);\n    }\n  }\n\n};\n\nmodule.exports = ReactClass;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactClass.js\n// module id = 23\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar ReactPropTypeLocationNames = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  ReactPropTypeLocationNames = {\n    prop: 'prop',\n    context: 'context',\n    childContext: 'child context'\n  };\n}\n\nmodule.exports = ReactPropTypeLocationNames;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactPropTypeLocationNames.js\n// module id = 24\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactElement = require('./ReactElement');\n\n/**\n * Create a factory that creates HTML tag elements.\n *\n * @private\n */\nvar createDOMFactory = ReactElement.createFactory;\nif (process.env.NODE_ENV !== 'production') {\n  var ReactElementValidator = require('./ReactElementValidator');\n  createDOMFactory = ReactElementValidator.createFactory;\n}\n\n/**\n * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.\n * This is also accessible via `React.DOM`.\n *\n * @public\n */\nvar ReactDOMFactories = {\n  a: createDOMFactory('a'),\n  abbr: createDOMFactory('abbr'),\n  address: createDOMFactory('address'),\n  area: createDOMFactory('area'),\n  article: createDOMFactory('article'),\n  aside: createDOMFactory('aside'),\n  audio: createDOMFactory('audio'),\n  b: createDOMFactory('b'),\n  base: createDOMFactory('base'),\n  bdi: createDOMFactory('bdi'),\n  bdo: createDOMFactory('bdo'),\n  big: createDOMFactory('big'),\n  blockquote: createDOMFactory('blockquote'),\n  body: createDOMFactory('body'),\n  br: createDOMFactory('br'),\n  button: createDOMFactory('button'),\n  canvas: createDOMFactory('canvas'),\n  caption: createDOMFactory('caption'),\n  cite: createDOMFactory('cite'),\n  code: createDOMFactory('code'),\n  col: createDOMFactory('col'),\n  colgroup: createDOMFactory('colgroup'),\n  data: createDOMFactory('data'),\n  datalist: createDOMFactory('datalist'),\n  dd: createDOMFactory('dd'),\n  del: createDOMFactory('del'),\n  details: createDOMFactory('details'),\n  dfn: createDOMFactory('dfn'),\n  dialog: createDOMFactory('dialog'),\n  div: createDOMFactory('div'),\n  dl: createDOMFactory('dl'),\n  dt: createDOMFactory('dt'),\n  em: createDOMFactory('em'),\n  embed: createDOMFactory('embed'),\n  fieldset: createDOMFactory('fieldset'),\n  figcaption: createDOMFactory('figcaption'),\n  figure: createDOMFactory('figure'),\n  footer: createDOMFactory('footer'),\n  form: createDOMFactory('form'),\n  h1: createDOMFactory('h1'),\n  h2: createDOMFactory('h2'),\n  h3: createDOMFactory('h3'),\n  h4: createDOMFactory('h4'),\n  h5: createDOMFactory('h5'),\n  h6: createDOMFactory('h6'),\n  head: createDOMFactory('head'),\n  header: createDOMFactory('header'),\n  hgroup: createDOMFactory('hgroup'),\n  hr: createDOMFactory('hr'),\n  html: createDOMFactory('html'),\n  i: createDOMFactory('i'),\n  iframe: createDOMFactory('iframe'),\n  img: createDOMFactory('img'),\n  input: createDOMFactory('input'),\n  ins: createDOMFactory('ins'),\n  kbd: createDOMFactory('kbd'),\n  keygen: createDOMFactory('keygen'),\n  label: createDOMFactory('label'),\n  legend: createDOMFactory('legend'),\n  li: createDOMFactory('li'),\n  link: createDOMFactory('link'),\n  main: createDOMFactory('main'),\n  map: createDOMFactory('map'),\n  mark: createDOMFactory('mark'),\n  menu: createDOMFactory('menu'),\n  menuitem: createDOMFactory('menuitem'),\n  meta: createDOMFactory('meta'),\n  meter: createDOMFactory('meter'),\n  nav: createDOMFactory('nav'),\n  noscript: createDOMFactory('noscript'),\n  object: createDOMFactory('object'),\n  ol: createDOMFactory('ol'),\n  optgroup: createDOMFactory('optgroup'),\n  option: createDOMFactory('option'),\n  output: createDOMFactory('output'),\n  p: createDOMFactory('p'),\n  param: createDOMFactory('param'),\n  picture: createDOMFactory('picture'),\n  pre: createDOMFactory('pre'),\n  progress: createDOMFactory('progress'),\n  q: createDOMFactory('q'),\n  rp: createDOMFactory('rp'),\n  rt: createDOMFactory('rt'),\n  ruby: createDOMFactory('ruby'),\n  s: createDOMFactory('s'),\n  samp: createDOMFactory('samp'),\n  script: createDOMFactory('script'),\n  section: createDOMFactory('section'),\n  select: createDOMFactory('select'),\n  small: createDOMFactory('small'),\n  source: createDOMFactory('source'),\n  span: createDOMFactory('span'),\n  strong: createDOMFactory('strong'),\n  style: createDOMFactory('style'),\n  sub: createDOMFactory('sub'),\n  summary: createDOMFactory('summary'),\n  sup: createDOMFactory('sup'),\n  table: createDOMFactory('table'),\n  tbody: createDOMFactory('tbody'),\n  td: createDOMFactory('td'),\n  textarea: createDOMFactory('textarea'),\n  tfoot: createDOMFactory('tfoot'),\n  th: createDOMFactory('th'),\n  thead: createDOMFactory('thead'),\n  time: createDOMFactory('time'),\n  title: createDOMFactory('title'),\n  tr: createDOMFactory('tr'),\n  track: createDOMFactory('track'),\n  u: createDOMFactory('u'),\n  ul: createDOMFactory('ul'),\n  'var': createDOMFactory('var'),\n  video: createDOMFactory('video'),\n  wbr: createDOMFactory('wbr'),\n\n  // SVG\n  circle: createDOMFactory('circle'),\n  clipPath: createDOMFactory('clipPath'),\n  defs: createDOMFactory('defs'),\n  ellipse: createDOMFactory('ellipse'),\n  g: createDOMFactory('g'),\n  image: createDOMFactory('image'),\n  line: createDOMFactory('line'),\n  linearGradient: createDOMFactory('linearGradient'),\n  mask: createDOMFactory('mask'),\n  path: createDOMFactory('path'),\n  pattern: createDOMFactory('pattern'),\n  polygon: createDOMFactory('polygon'),\n  polyline: createDOMFactory('polyline'),\n  radialGradient: createDOMFactory('radialGradient'),\n  rect: createDOMFactory('rect'),\n  stop: createDOMFactory('stop'),\n  svg: createDOMFactory('svg'),\n  text: createDOMFactory('text'),\n  tspan: createDOMFactory('tspan')\n};\n\nmodule.exports = ReactDOMFactories;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactDOMFactories.js\n// module id = 25\n// module chunks = 0","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n/**\n * ReactElementValidator provides a wrapper around a element factory\n * which validates the props passed to the element. This is intended to be\n * used only in DEV and could be replaced by a static type checker for languages\n * that support it.\n */\n\n'use strict';\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\nvar ReactComponentTreeHook = require('./ReactComponentTreeHook');\nvar ReactElement = require('./ReactElement');\n\nvar checkReactTypeSpec = require('./checkReactTypeSpec');\n\nvar canDefineProperty = require('./canDefineProperty');\nvar getIteratorFn = require('./getIteratorFn');\nvar warning = require('fbjs/lib/warning');\n\nfunction getDeclarationErrorAddendum() {\n  if (ReactCurrentOwner.current) {\n    var name = ReactCurrentOwner.current.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  var info = getDeclarationErrorAddendum();\n\n  if (!info) {\n    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n    if (parentName) {\n      info = ' Check the top-level render call using <' + parentName + '>.';\n    }\n  }\n  return info;\n}\n\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\nfunction validateExplicitKey(element, parentType) {\n  if (!element._store || element._store.validated || element.key != null) {\n    return;\n  }\n  element._store.validated = true;\n\n  var memoizer = ownerHasKeyUseWarning.uniqueKey || (ownerHasKeyUseWarning.uniqueKey = {});\n\n  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n  if (memoizer[currentComponentErrorInfo]) {\n    return;\n  }\n  memoizer[currentComponentErrorInfo] = true;\n\n  // Usually the current owner is the offender, but if it accepts children as a\n  // property, it may be the creator of the child that's responsible for\n  // assigning it a key.\n  var childOwner = '';\n  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n    // Give the component that originally created this child.\n    childOwner = ' It was passed a child from ' + element._owner.getName() + '.';\n  }\n\n  process.env.NODE_ENV !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique \"key\" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, ReactComponentTreeHook.getCurrentStackAddendum(element)) : void 0;\n}\n\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\nfunction validateChildKeys(node, parentType) {\n  if (typeof node !== 'object') {\n    return;\n  }\n  if (Array.isArray(node)) {\n    for (var i = 0; i < node.length; i++) {\n      var child = node[i];\n      if (ReactElement.isValidElement(child)) {\n        validateExplicitKey(child, parentType);\n      }\n    }\n  } else if (ReactElement.isValidElement(node)) {\n    // This element was passed in a valid location.\n    if (node._store) {\n      node._store.validated = true;\n    }\n  } else if (node) {\n    var iteratorFn = getIteratorFn(node);\n    // Entry iterators provide implicit keys.\n    if (iteratorFn) {\n      if (iteratorFn !== node.entries) {\n        var iterator = iteratorFn.call(node);\n        var step;\n        while (!(step = iterator.next()).done) {\n          if (ReactElement.isValidElement(step.value)) {\n            validateExplicitKey(step.value, parentType);\n          }\n        }\n      }\n    }\n  }\n}\n\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\nfunction validatePropTypes(element) {\n  var componentClass = element.type;\n  if (typeof componentClass !== 'function') {\n    return;\n  }\n  var name = componentClass.displayName || componentClass.name;\n  if (componentClass.propTypes) {\n    checkReactTypeSpec(componentClass.propTypes, element.props, 'prop', name, element, null);\n  }\n  if (typeof componentClass.getDefaultProps === 'function') {\n    process.env.NODE_ENV !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;\n  }\n}\n\nvar ReactElementValidator = {\n\n  createElement: function (type, props, children) {\n    var validType = typeof type === 'string' || typeof type === 'function';\n    // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n    if (!validType) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'React.createElement: type should not be null, undefined, boolean, or ' + 'number. It should be a string (for DOM elements) or a ReactClass ' + '(for composite components).%s', getDeclarationErrorAddendum()) : void 0;\n    }\n\n    var element = ReactElement.createElement.apply(this, arguments);\n\n    // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n    if (element == null) {\n      return element;\n    }\n\n    // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n    if (validType) {\n      for (var i = 2; i < arguments.length; i++) {\n        validateChildKeys(arguments[i], type);\n      }\n    }\n\n    validatePropTypes(element);\n\n    return element;\n  },\n\n  createFactory: function (type) {\n    var validatedFactory = ReactElementValidator.createElement.bind(null, type);\n    // Legacy hook TODO: Warn if this is accessed\n    validatedFactory.type = type;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (canDefineProperty) {\n        Object.defineProperty(validatedFactory, 'type', {\n          enumerable: false,\n          get: function () {\n            process.env.NODE_ENV !== 'production' ? warning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.') : void 0;\n            Object.defineProperty(this, 'type', {\n              value: type\n            });\n            return type;\n          }\n        });\n      }\n    }\n\n    return validatedFactory;\n  },\n\n  cloneElement: function (element, props, children) {\n    var newElement = ReactElement.cloneElement.apply(this, arguments);\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], newElement.type);\n    }\n    validatePropTypes(newElement);\n    return newElement;\n  }\n\n};\n\nmodule.exports = ReactElementValidator;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactElementValidator.js\n// module id = 26\n// module chunks = 0","/**\n * Copyright 2016-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nfunction isNative(fn) {\n  // Based on isNative() from Lodash\n  var funcToString = Function.prototype.toString;\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  var reIsNative = RegExp('^' + funcToString\n  // Take an example native function source for comparison\n  .call(hasOwnProperty)\n  // Strip regex characters so we can use it for regex\n  .replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n  // Remove hasOwnProperty from the template to make it generic\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n  try {\n    var source = funcToString.call(fn);\n    return reIsNative.test(source);\n  } catch (err) {\n    return false;\n  }\n}\n\nvar canUseCollections =\n// Array.from\ntypeof Array.from === 'function' &&\n// Map\ntypeof Map === 'function' && isNative(Map) &&\n// Map.prototype.keys\nMap.prototype != null && typeof Map.prototype.keys === 'function' && isNative(Map.prototype.keys) &&\n// Set\ntypeof Set === 'function' && isNative(Set) &&\n// Set.prototype.keys\nSet.prototype != null && typeof Set.prototype.keys === 'function' && isNative(Set.prototype.keys);\n\nvar setItem;\nvar getItem;\nvar removeItem;\nvar getItemIDs;\nvar addRoot;\nvar removeRoot;\nvar getRootIDs;\n\nif (canUseCollections) {\n  var itemMap = new Map();\n  var rootIDSet = new Set();\n\n  setItem = function (id, item) {\n    itemMap.set(id, item);\n  };\n  getItem = function (id) {\n    return itemMap.get(id);\n  };\n  removeItem = function (id) {\n    itemMap['delete'](id);\n  };\n  getItemIDs = function () {\n    return Array.from(itemMap.keys());\n  };\n\n  addRoot = function (id) {\n    rootIDSet.add(id);\n  };\n  removeRoot = function (id) {\n    rootIDSet['delete'](id);\n  };\n  getRootIDs = function () {\n    return Array.from(rootIDSet.keys());\n  };\n} else {\n  var itemByKey = {};\n  var rootByKey = {};\n\n  // Use non-numeric keys to prevent V8 performance issues:\n  // https://github.com/facebook/react/pull/7232\n  var getKeyFromID = function (id) {\n    return '.' + id;\n  };\n  var getIDFromKey = function (key) {\n    return parseInt(key.substr(1), 10);\n  };\n\n  setItem = function (id, item) {\n    var key = getKeyFromID(id);\n    itemByKey[key] = item;\n  };\n  getItem = function (id) {\n    var key = getKeyFromID(id);\n    return itemByKey[key];\n  };\n  removeItem = function (id) {\n    var key = getKeyFromID(id);\n    delete itemByKey[key];\n  };\n  getItemIDs = function () {\n    return Object.keys(itemByKey).map(getIDFromKey);\n  };\n\n  addRoot = function (id) {\n    var key = getKeyFromID(id);\n    rootByKey[key] = true;\n  };\n  removeRoot = function (id) {\n    var key = getKeyFromID(id);\n    delete rootByKey[key];\n  };\n  getRootIDs = function () {\n    return Object.keys(rootByKey).map(getIDFromKey);\n  };\n}\n\nvar unmountedIDs = [];\n\nfunction purgeDeep(id) {\n  var item = getItem(id);\n  if (item) {\n    var childIDs = item.childIDs;\n\n    removeItem(id);\n    childIDs.forEach(purgeDeep);\n  }\n}\n\nfunction describeComponentFrame(name, source, ownerName) {\n  return '\\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');\n}\n\nfunction getDisplayName(element) {\n  if (element == null) {\n    return '#empty';\n  } else if (typeof element === 'string' || typeof element === 'number') {\n    return '#text';\n  } else if (typeof element.type === 'string') {\n    return element.type;\n  } else {\n    return element.type.displayName || element.type.name || 'Unknown';\n  }\n}\n\nfunction describeID(id) {\n  var name = ReactComponentTreeHook.getDisplayName(id);\n  var element = ReactComponentTreeHook.getElement(id);\n  var ownerID = ReactComponentTreeHook.getOwnerID(id);\n  var ownerName;\n  if (ownerID) {\n    ownerName = ReactComponentTreeHook.getDisplayName(ownerID);\n  }\n  process.env.NODE_ENV !== 'production' ? warning(element, 'ReactComponentTreeHook: Missing React element for debugID %s when ' + 'building stack', id) : void 0;\n  return describeComponentFrame(name, element && element._source, ownerName);\n}\n\nvar ReactComponentTreeHook = {\n  onSetChildren: function (id, nextChildIDs) {\n    var item = getItem(id);\n    !item ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;\n    item.childIDs = nextChildIDs;\n\n    for (var i = 0; i < nextChildIDs.length; i++) {\n      var nextChildID = nextChildIDs[i];\n      var nextChild = getItem(nextChildID);\n      !nextChild ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected hook events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('140') : void 0;\n      !(nextChild.childIDs != null || typeof nextChild.element !== 'object' || nextChild.element == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().') : _prodInvariant('141') : void 0;\n      !nextChild.isMounted ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;\n      if (nextChild.parentID == null) {\n        nextChild.parentID = id;\n        // TODO: This shouldn't be necessary but mounting a new root during in\n        // componentWillMount currently causes not-yet-mounted components to\n        // be purged from our tree data so their parent id is missing.\n      }\n      !(nextChild.parentID === id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('142', nextChildID, nextChild.parentID, id) : void 0;\n    }\n  },\n  onBeforeMountComponent: function (id, element, parentID) {\n    var item = {\n      element: element,\n      parentID: parentID,\n      text: null,\n      childIDs: [],\n      isMounted: false,\n      updateCount: 0\n    };\n    setItem(id, item);\n  },\n  onBeforeUpdateComponent: function (id, element) {\n    var item = getItem(id);\n    if (!item || !item.isMounted) {\n      // We may end up here as a result of setState() in componentWillUnmount().\n      // In this case, ignore the element.\n      return;\n    }\n    item.element = element;\n  },\n  onMountComponent: function (id) {\n    var item = getItem(id);\n    !item ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;\n    item.isMounted = true;\n    var isRoot = item.parentID === 0;\n    if (isRoot) {\n      addRoot(id);\n    }\n  },\n  onUpdateComponent: function (id) {\n    var item = getItem(id);\n    if (!item || !item.isMounted) {\n      // We may end up here as a result of setState() in componentWillUnmount().\n      // In this case, ignore the element.\n      return;\n    }\n    item.updateCount++;\n  },\n  onUnmountComponent: function (id) {\n    var item = getItem(id);\n    if (item) {\n      // We need to check if it exists.\n      // `item` might not exist if it is inside an error boundary, and a sibling\n      // error boundary child threw while mounting. Then this instance never\n      // got a chance to mount, but it still gets an unmounting event during\n      // the error boundary cleanup.\n      item.isMounted = false;\n      var isRoot = item.parentID === 0;\n      if (isRoot) {\n        removeRoot(id);\n      }\n    }\n    unmountedIDs.push(id);\n  },\n  purgeUnmountedComponents: function () {\n    if (ReactComponentTreeHook._preventPurging) {\n      // Should only be used for testing.\n      return;\n    }\n\n    for (var i = 0; i < unmountedIDs.length; i++) {\n      var id = unmountedIDs[i];\n      purgeDeep(id);\n    }\n    unmountedIDs.length = 0;\n  },\n  isMounted: function (id) {\n    var item = getItem(id);\n    return item ? item.isMounted : false;\n  },\n  getCurrentStackAddendum: function (topElement) {\n    var info = '';\n    if (topElement) {\n      var name = getDisplayName(topElement);\n      var owner = topElement._owner;\n      info += describeComponentFrame(name, topElement._source, owner && owner.getName());\n    }\n\n    var currentOwner = ReactCurrentOwner.current;\n    var id = currentOwner && currentOwner._debugID;\n\n    info += ReactComponentTreeHook.getStackAddendumByID(id);\n    return info;\n  },\n  getStackAddendumByID: function (id) {\n    var info = '';\n    while (id) {\n      info += describeID(id);\n      id = ReactComponentTreeHook.getParentID(id);\n    }\n    return info;\n  },\n  getChildIDs: function (id) {\n    var item = getItem(id);\n    return item ? item.childIDs : [];\n  },\n  getDisplayName: function (id) {\n    var element = ReactComponentTreeHook.getElement(id);\n    if (!element) {\n      return null;\n    }\n    return getDisplayName(element);\n  },\n  getElement: function (id) {\n    var item = getItem(id);\n    return item ? item.element : null;\n  },\n  getOwnerID: function (id) {\n    var element = ReactComponentTreeHook.getElement(id);\n    if (!element || !element._owner) {\n      return null;\n    }\n    return element._owner._debugID;\n  },\n  getParentID: function (id) {\n    var item = getItem(id);\n    return item ? item.parentID : null;\n  },\n  getSource: function (id) {\n    var item = getItem(id);\n    var element = item ? item.element : null;\n    var source = element != null ? element._source : null;\n    return source;\n  },\n  getText: function (id) {\n    var element = ReactComponentTreeHook.getElement(id);\n    if (typeof element === 'string') {\n      return element;\n    } else if (typeof element === 'number') {\n      return '' + element;\n    } else {\n      return null;\n    }\n  },\n  getUpdateCount: function (id) {\n    var item = getItem(id);\n    return item ? item.updateCount : 0;\n  },\n\n\n  getRootIDs: getRootIDs,\n  getRegisteredIDs: getItemIDs\n};\n\nmodule.exports = ReactComponentTreeHook;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactComponentTreeHook.js\n// module id = 27\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');\nvar ReactPropTypesSecret = require('./ReactPropTypesSecret');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nvar ReactComponentTreeHook;\n\nif (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {\n  // Temporary hack.\n  // Inline requires don't work well with Jest:\n  // https://github.com/facebook/react/issues/7240\n  // Remove the inline requires when we don't need them anymore:\n  // https://github.com/facebook/react/pull/7178\n  ReactComponentTreeHook = require('./ReactComponentTreeHook');\n}\n\nvar loggedTypeFailures = {};\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?object} element The React element that is being type-checked\n * @param {?number} debugID The React component instance that is being type-checked\n * @private\n */\nfunction checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {\n  for (var typeSpecName in typeSpecs) {\n    if (typeSpecs.hasOwnProperty(typeSpecName)) {\n      var error;\n      // Prop type validation may throw. In case they do, we don't want to\n      // fail the render phase where it didn't fail before. So we log it.\n      // After these have been cleaned up, we'll let them throw.\n      try {\n        // This is intentionally an invariant that gets caught. It's the same\n        // behavior as without this statement except with a better message.\n        !(typeof typeSpecs[typeSpecName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;\n        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n      } catch (ex) {\n        error = ex;\n      }\n      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;\n      if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n        // Only monitor this failure once because there tends to be a lot of the\n        // same error.\n        loggedTypeFailures[error.message] = true;\n\n        var componentStackInfo = '';\n\n        if (process.env.NODE_ENV !== 'production') {\n          if (!ReactComponentTreeHook) {\n            ReactComponentTreeHook = require('./ReactComponentTreeHook');\n          }\n          if (debugID !== null) {\n            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);\n          } else if (element !== null) {\n            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);\n          }\n        }\n\n        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;\n      }\n    }\n  }\n}\n\nmodule.exports = checkReactTypeSpec;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/checkReactTypeSpec.js\n// module id = 28\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactPropTypesSecret.js\n// module id = 29\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactElement = require('./ReactElement');\nvar ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');\nvar ReactPropTypesSecret = require('./ReactPropTypesSecret');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar getIteratorFn = require('./getIteratorFn');\nvar warning = require('fbjs/lib/warning');\n\n/**\n * Collection of methods that allow declaration and validation of props that are\n * supplied to React components. Example usage:\n *\n *   var Props = require('ReactPropTypes');\n *   var MyArticle = React.createClass({\n *     propTypes: {\n *       // An optional string prop named \"description\".\n *       description: Props.string,\n *\n *       // A required enum prop named \"category\".\n *       category: Props.oneOf(['News','Photos']).isRequired,\n *\n *       // A prop named \"dialog\" that requires an instance of Dialog.\n *       dialog: Props.instanceOf(Dialog).isRequired\n *     },\n *     render: function() { ... }\n *   });\n *\n * A more formal specification of how these methods are used:\n *\n *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n *   decl := ReactPropTypes.{type}(.isRequired)?\n *\n * Each and every declaration produces a function with the same signature. This\n * allows the creation of custom validation functions. For example:\n *\n *  var MyLink = React.createClass({\n *    propTypes: {\n *      // An optional string or URI prop named \"href\".\n *      href: function(props, propName, componentName) {\n *        var propValue = props[propName];\n *        if (propValue != null && typeof propValue !== 'string' &&\n *            !(propValue instanceof URI)) {\n *          return new Error(\n *            'Expected a string or an URI for ' + propName + ' in ' +\n *            componentName\n *          );\n *        }\n *      }\n *    },\n *    render: function() {...}\n *  });\n *\n * @internal\n */\n\nvar ANONYMOUS = '<<anonymous>>';\n\nvar ReactPropTypes = {\n  array: createPrimitiveTypeChecker('array'),\n  bool: createPrimitiveTypeChecker('boolean'),\n  func: createPrimitiveTypeChecker('function'),\n  number: createPrimitiveTypeChecker('number'),\n  object: createPrimitiveTypeChecker('object'),\n  string: createPrimitiveTypeChecker('string'),\n  symbol: createPrimitiveTypeChecker('symbol'),\n\n  any: createAnyTypeChecker(),\n  arrayOf: createArrayOfTypeChecker,\n  element: createElementTypeChecker(),\n  instanceOf: createInstanceTypeChecker,\n  node: createNodeChecker(),\n  objectOf: createObjectOfTypeChecker,\n  oneOf: createEnumTypeChecker,\n  oneOfType: createUnionTypeChecker,\n  shape: createShapeTypeChecker\n};\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\n/*eslint-disable no-self-compare*/\nfunction is(x, y) {\n  // SameValue algorithm\n  if (x === y) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return x !== 0 || 1 / x === 1 / y;\n  } else {\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y;\n  }\n}\n/*eslint-enable no-self-compare*/\n\n/**\n * We use an Error-like object for backward compatibility as people may call\n * PropTypes directly and inspect their output. However we don't use real\n * Errors anymore. We don't inspect their stack anyway, and creating them\n * is prohibitively expensive if they are created too often, such as what\n * happens in oneOfType() for any type before the one that matched.\n */\nfunction PropTypeError(message) {\n  this.message = message;\n  this.stack = '';\n}\n// Make `instanceof Error` still work for returned errors.\nPropTypeError.prototype = Error.prototype;\n\nfunction createChainableTypeChecker(validate) {\n  if (process.env.NODE_ENV !== 'production') {\n    var manualPropTypeCallCache = {};\n  }\n  function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n    componentName = componentName || ANONYMOUS;\n    propFullName = propFullName || propName;\n    if (process.env.NODE_ENV !== 'production') {\n      if (secret !== ReactPropTypesSecret && typeof console !== 'undefined') {\n        var cacheKey = componentName + ':' + propName;\n        if (!manualPropTypeCallCache[cacheKey]) {\n          process.env.NODE_ENV !== 'production' ? warning(false, 'You are manually calling a React.PropTypes validation ' + 'function for the `%s` prop on `%s`. This is deprecated ' + 'and will not work in production with the next major version. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.', propFullName, componentName) : void 0;\n          manualPropTypeCallCache[cacheKey] = true;\n        }\n      }\n    }\n    if (props[propName] == null) {\n      var locationName = ReactPropTypeLocationNames[location];\n      if (isRequired) {\n        if (props[propName] === null) {\n          return new PropTypeError('The ' + locationName + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n        }\n        return new PropTypeError('The ' + locationName + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n      }\n      return null;\n    } else {\n      return validate(props, propName, componentName, location, propFullName);\n    }\n  }\n\n  var chainedCheckType = checkType.bind(null, false);\n  chainedCheckType.isRequired = checkType.bind(null, true);\n\n  return chainedCheckType;\n}\n\nfunction createPrimitiveTypeChecker(expectedType) {\n  function validate(props, propName, componentName, location, propFullName, secret) {\n    var propValue = props[propName];\n    var propType = getPropType(propValue);\n    if (propType !== expectedType) {\n      var locationName = ReactPropTypeLocationNames[location];\n      // `propValue` being instance of, say, date/regexp, pass the 'object'\n      // check, but we can offer a more precise error message here rather than\n      // 'of type `object`'.\n      var preciseType = getPreciseType(propValue);\n\n      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createAnyTypeChecker() {\n  return createChainableTypeChecker(emptyFunction.thatReturns(null));\n}\n\nfunction createArrayOfTypeChecker(typeChecker) {\n  function validate(props, propName, componentName, location, propFullName) {\n    if (typeof typeChecker !== 'function') {\n      return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n    }\n    var propValue = props[propName];\n    if (!Array.isArray(propValue)) {\n      var locationName = ReactPropTypeLocationNames[location];\n      var propType = getPropType(propValue);\n      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n    }\n    for (var i = 0; i < propValue.length; i++) {\n      var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n      if (error instanceof Error) {\n        return error;\n      }\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createElementTypeChecker() {\n  function validate(props, propName, componentName, location, propFullName) {\n    var propValue = props[propName];\n    if (!ReactElement.isValidElement(propValue)) {\n      var locationName = ReactPropTypeLocationNames[location];\n      var propType = getPropType(propValue);\n      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createInstanceTypeChecker(expectedClass) {\n  function validate(props, propName, componentName, location, propFullName) {\n    if (!(props[propName] instanceof expectedClass)) {\n      var locationName = ReactPropTypeLocationNames[location];\n      var expectedClassName = expectedClass.name || ANONYMOUS;\n      var actualClassName = getClassName(props[propName]);\n      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createEnumTypeChecker(expectedValues) {\n  if (!Array.isArray(expectedValues)) {\n    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;\n    return emptyFunction.thatReturnsNull;\n  }\n\n  function validate(props, propName, componentName, location, propFullName) {\n    var propValue = props[propName];\n    for (var i = 0; i < expectedValues.length; i++) {\n      if (is(propValue, expectedValues[i])) {\n        return null;\n      }\n    }\n\n    var locationName = ReactPropTypeLocationNames[location];\n    var valuesString = JSON.stringify(expectedValues);\n    return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createObjectOfTypeChecker(typeChecker) {\n  function validate(props, propName, componentName, location, propFullName) {\n    if (typeof typeChecker !== 'function') {\n      return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n    }\n    var propValue = props[propName];\n    var propType = getPropType(propValue);\n    if (propType !== 'object') {\n      var locationName = ReactPropTypeLocationNames[location];\n      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n    }\n    for (var key in propValue) {\n      if (propValue.hasOwnProperty(key)) {\n        var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createUnionTypeChecker(arrayOfTypeCheckers) {\n  if (!Array.isArray(arrayOfTypeCheckers)) {\n    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n    return emptyFunction.thatReturnsNull;\n  }\n\n  function validate(props, propName, componentName, location, propFullName) {\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n        return null;\n      }\n    }\n\n    var locationName = ReactPropTypeLocationNames[location];\n    return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createNodeChecker() {\n  function validate(props, propName, componentName, location, propFullName) {\n    if (!isNode(props[propName])) {\n      var locationName = ReactPropTypeLocationNames[location];\n      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createShapeTypeChecker(shapeTypes) {\n  function validate(props, propName, componentName, location, propFullName) {\n    var propValue = props[propName];\n    var propType = getPropType(propValue);\n    if (propType !== 'object') {\n      var locationName = ReactPropTypeLocationNames[location];\n      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n    }\n    for (var key in shapeTypes) {\n      var checker = shapeTypes[key];\n      if (!checker) {\n        continue;\n      }\n      var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n      if (error) {\n        return error;\n      }\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction isNode(propValue) {\n  switch (typeof propValue) {\n    case 'number':\n    case 'string':\n    case 'undefined':\n      return true;\n    case 'boolean':\n      return !propValue;\n    case 'object':\n      if (Array.isArray(propValue)) {\n        return propValue.every(isNode);\n      }\n      if (propValue === null || ReactElement.isValidElement(propValue)) {\n        return true;\n      }\n\n      var iteratorFn = getIteratorFn(propValue);\n      if (iteratorFn) {\n        var iterator = iteratorFn.call(propValue);\n        var step;\n        if (iteratorFn !== propValue.entries) {\n          while (!(step = iterator.next()).done) {\n            if (!isNode(step.value)) {\n              return false;\n            }\n          }\n        } else {\n          // Iterator will provide entry [k,v] tuples rather than values.\n          while (!(step = iterator.next()).done) {\n            var entry = step.value;\n            if (entry) {\n              if (!isNode(entry[1])) {\n                return false;\n              }\n            }\n          }\n        }\n      } else {\n        return false;\n      }\n\n      return true;\n    default:\n      return false;\n  }\n}\n\nfunction isSymbol(propType, propValue) {\n  // Native Symbol.\n  if (propType === 'symbol') {\n    return true;\n  }\n\n  // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n  if (propValue['@@toStringTag'] === 'Symbol') {\n    return true;\n  }\n\n  // Fallback for non-spec compliant Symbols which are polyfilled.\n  if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n    return true;\n  }\n\n  return false;\n}\n\n// Equivalent of `typeof` but with special handling for array and regexp.\nfunction getPropType(propValue) {\n  var propType = typeof propValue;\n  if (Array.isArray(propValue)) {\n    return 'array';\n  }\n  if (propValue instanceof RegExp) {\n    // Old webkits (at least until Android 4.0) return 'function' rather than\n    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n    // passes PropTypes.object.\n    return 'object';\n  }\n  if (isSymbol(propType, propValue)) {\n    return 'symbol';\n  }\n  return propType;\n}\n\n// This handles more types than `getPropType`. Only used for error messages.\n// See `createPrimitiveTypeChecker`.\nfunction getPreciseType(propValue) {\n  var propType = getPropType(propValue);\n  if (propType === 'object') {\n    if (propValue instanceof Date) {\n      return 'date';\n    } else if (propValue instanceof RegExp) {\n      return 'regexp';\n    }\n  }\n  return propType;\n}\n\n// Returns class name of the object, if any.\nfunction getClassName(propValue) {\n  if (!propValue.constructor || !propValue.constructor.name) {\n    return ANONYMOUS;\n  }\n  return propValue.constructor.name;\n}\n\nmodule.exports = ReactPropTypes;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactPropTypes.js\n// module id = 30\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nmodule.exports = '15.4.1';\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactVersion.js\n// module id = 31\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactElement = require('./ReactElement');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only\n *\n * The current implementation of this function assumes that a single child gets\n * passed without a wrapper, but the purpose of this helper function is to\n * abstract away the particular structure of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactElement} The first and only `ReactElement` contained in the\n * structure.\n */\nfunction onlyChild(children) {\n  !ReactElement.isValidElement(children) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;\n  return children;\n}\n\nmodule.exports = onlyChild;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/onlyChild.js\n// module id = 32\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nexports.default = activeItem;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _immutable = require('immutable');\n\nvar _immutable2 = _interopRequireDefault(_immutable);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// TODO: Split this out as a separate react component and add as a dependency\n\nfunction activeItem(WrappedComponent) {\n  return function (_React$Component) {\n    _inherits(ActiveItem, _React$Component);\n\n    function ActiveItem(props) {\n      _classCallCheck(this, ActiveItem);\n\n      var _this = _possibleConstructorReturn(this, (ActiveItem.__proto__ || Object.getPrototypeOf(ActiveItem)).call(this, props));\n\n      _this.state = { items: _this.props.items };\n      _this._bindInit();\n      return _this;\n    }\n\n    _createClass(ActiveItem, [{\n      key: '_bindInit',\n      value: function _bindInit() {\n        this.getActiveItem = this.getActiveItem.bind(this);\n        this.setActiveItem = this.setActiveItem.bind(this);\n        this.getActiveItemIndex = this.getActiveItemIndex.bind(this);\n        this._hasFocus = this._hasFocus.bind(this);\n        this._updateFocus = this._updateFocus.bind(this);\n        this._immutableAssets = this._immutableAssets.bind(this);\n        this._unFocused = this._unFocused.bind(this);\n        this._handlers = this._handlers.bind(this);\n      }\n    }, {\n      key: 'setActiveItem',\n      value: function setActiveItem(i, e) {\n        if (typeof e != 'undefined') {\n          e.preventDefault();\n        }\n        this.setState({ items: this._updateFocus(this._unFocused(), i, true).toJS() });\n      }\n    }, {\n      key: 'getActiveItem',\n      value: function getActiveItem() {\n        return this.state.items.find(this._hasFocus);\n      }\n    }, {\n      key: 'getActiveItemIndex',\n      value: function getActiveItemIndex() {\n        return this.state.items.findIndex(this._hasFocus);\n      }\n\n      // \"private\"\n\n    }, {\n      key: '_hasFocus',\n      value: function _hasFocus(item) {\n        return item.focus == true;\n      }\n    }, {\n      key: '_unFocused',\n      value: function _unFocused() {\n        return this._updateFocus(this._immutableAssets(), this.getActiveItemIndex(), false);\n      }\n    }, {\n      key: '_updateFocus',\n      value: function _updateFocus(list, i, status) {\n        return list.update(i, function (item) {\n          return item.set('focus', status);\n        });\n      }\n    }, {\n      key: '_immutableAssets',\n      value: function _immutableAssets() {\n        return new _immutable2.default.fromJS(this.state.items);\n      }\n    }, {\n      key: '_handlers',\n      value: function _handlers() {\n        return {\n          setActiveItem: this.setActiveItem.bind(this),\n          getActiveItem: this.getActiveItem.bind(this),\n          getActiveItemIndex: this.getActiveItemIndex.bind(this)\n        };\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        return _react2.default.createElement(WrappedComponent, _extends({}, this.props, this.state, this._handlers()));\n      }\n    }]);\n\n    return ActiveItem;\n  }(_react2.default.Component);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-active-item/lib/react-active-item.js\n// module id = 33\n// module chunks = 0","/**\n *  Copyright (c) 2014-2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Immutable = factory());\n}(this, function () { 'use strict';var SLICE$0 = Array.prototype.slice;\n\n  function createClass(ctor, superClass) {\n    if (superClass) {\n      ctor.prototype = Object.create(superClass.prototype);\n    }\n    ctor.prototype.constructor = ctor;\n  }\n\n  function Iterable(value) {\n      return isIterable(value) ? value : Seq(value);\n    }\n\n\n  createClass(KeyedIterable, Iterable);\n    function KeyedIterable(value) {\n      return isKeyed(value) ? value : KeyedSeq(value);\n    }\n\n\n  createClass(IndexedIterable, Iterable);\n    function IndexedIterable(value) {\n      return isIndexed(value) ? value : IndexedSeq(value);\n    }\n\n\n  createClass(SetIterable, Iterable);\n    function SetIterable(value) {\n      return isIterable(value) && !isAssociative(value) ? value : SetSeq(value);\n    }\n\n\n\n  function isIterable(maybeIterable) {\n    return !!(maybeIterable && maybeIterable[IS_ITERABLE_SENTINEL]);\n  }\n\n  function isKeyed(maybeKeyed) {\n    return !!(maybeKeyed && maybeKeyed[IS_KEYED_SENTINEL]);\n  }\n\n  function isIndexed(maybeIndexed) {\n    return !!(maybeIndexed && maybeIndexed[IS_INDEXED_SENTINEL]);\n  }\n\n  function isAssociative(maybeAssociative) {\n    return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);\n  }\n\n  function isOrdered(maybeOrdered) {\n    return !!(maybeOrdered && maybeOrdered[IS_ORDERED_SENTINEL]);\n  }\n\n  Iterable.isIterable = isIterable;\n  Iterable.isKeyed = isKeyed;\n  Iterable.isIndexed = isIndexed;\n  Iterable.isAssociative = isAssociative;\n  Iterable.isOrdered = isOrdered;\n\n  Iterable.Keyed = KeyedIterable;\n  Iterable.Indexed = IndexedIterable;\n  Iterable.Set = SetIterable;\n\n\n  var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n  var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n  var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n  var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n\n  // Used for setting prototype methods that IE8 chokes on.\n  var DELETE = 'delete';\n\n  // Constants describing the size of trie nodes.\n  var SHIFT = 5; // Resulted in best performance after ______?\n  var SIZE = 1 << SHIFT;\n  var MASK = SIZE - 1;\n\n  // A consistent shared value representing \"not set\" which equals nothing other\n  // than itself, and nothing that could be provided externally.\n  var NOT_SET = {};\n\n  // Boolean references, Rough equivalent of `bool &`.\n  var CHANGE_LENGTH = { value: false };\n  var DID_ALTER = { value: false };\n\n  function MakeRef(ref) {\n    ref.value = false;\n    return ref;\n  }\n\n  function SetRef(ref) {\n    ref && (ref.value = true);\n  }\n\n  // A function which returns a value representing an \"owner\" for transient writes\n  // to tries. The return value will only ever equal itself, and will not equal\n  // the return of any subsequent call of this function.\n  function OwnerID() {}\n\n  // http://jsperf.com/copy-array-inline\n  function arrCopy(arr, offset) {\n    offset = offset || 0;\n    var len = Math.max(0, arr.length - offset);\n    var newArr = new Array(len);\n    for (var ii = 0; ii < len; ii++) {\n      newArr[ii] = arr[ii + offset];\n    }\n    return newArr;\n  }\n\n  function ensureSize(iter) {\n    if (iter.size === undefined) {\n      iter.size = iter.__iterate(returnTrue);\n    }\n    return iter.size;\n  }\n\n  function wrapIndex(iter, index) {\n    // This implements \"is array index\" which the ECMAString spec defines as:\n    //\n    //     A String property name P is an array index if and only if\n    //     ToString(ToUint32(P)) is equal to P and ToUint32(P) is not equal\n    //     to 2^32−1.\n    //\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-array-exotic-objects\n    if (typeof index !== 'number') {\n      var uint32Index = index >>> 0; // N >>> 0 is shorthand for ToUint32\n      if ('' + uint32Index !== index || uint32Index === 4294967295) {\n        return NaN;\n      }\n      index = uint32Index;\n    }\n    return index < 0 ? ensureSize(iter) + index : index;\n  }\n\n  function returnTrue() {\n    return true;\n  }\n\n  function wholeSlice(begin, end, size) {\n    return (begin === 0 || (size !== undefined && begin <= -size)) &&\n      (end === undefined || (size !== undefined && end >= size));\n  }\n\n  function resolveBegin(begin, size) {\n    return resolveIndex(begin, size, 0);\n  }\n\n  function resolveEnd(end, size) {\n    return resolveIndex(end, size, size);\n  }\n\n  function resolveIndex(index, size, defaultIndex) {\n    return index === undefined ?\n      defaultIndex :\n      index < 0 ?\n        Math.max(0, size + index) :\n        size === undefined ?\n          index :\n          Math.min(size, index);\n  }\n\n  /* global Symbol */\n\n  var ITERATE_KEYS = 0;\n  var ITERATE_VALUES = 1;\n  var ITERATE_ENTRIES = 2;\n\n  var REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator';\n\n  var ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;\n\n\n  function Iterator(next) {\n      this.next = next;\n    }\n\n    Iterator.prototype.toString = function() {\n      return '[Iterator]';\n    };\n\n\n  Iterator.KEYS = ITERATE_KEYS;\n  Iterator.VALUES = ITERATE_VALUES;\n  Iterator.ENTRIES = ITERATE_ENTRIES;\n\n  Iterator.prototype.inspect =\n  Iterator.prototype.toSource = function () { return this.toString(); }\n  Iterator.prototype[ITERATOR_SYMBOL] = function () {\n    return this;\n  };\n\n\n  function iteratorValue(type, k, v, iteratorResult) {\n    var value = type === 0 ? k : type === 1 ? v : [k, v];\n    iteratorResult ? (iteratorResult.value = value) : (iteratorResult = {\n      value: value, done: false\n    });\n    return iteratorResult;\n  }\n\n  function iteratorDone() {\n    return { value: undefined, done: true };\n  }\n\n  function hasIterator(maybeIterable) {\n    return !!getIteratorFn(maybeIterable);\n  }\n\n  function isIterator(maybeIterator) {\n    return maybeIterator && typeof maybeIterator.next === 'function';\n  }\n\n  function getIterator(iterable) {\n    var iteratorFn = getIteratorFn(iterable);\n    return iteratorFn && iteratorFn.call(iterable);\n  }\n\n  function getIteratorFn(iterable) {\n    var iteratorFn = iterable && (\n      (REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL]) ||\n      iterable[FAUX_ITERATOR_SYMBOL]\n    );\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  function isArrayLike(value) {\n    return value && typeof value.length === 'number';\n  }\n\n  createClass(Seq, Iterable);\n    function Seq(value) {\n      return value === null || value === undefined ? emptySequence() :\n        isIterable(value) ? value.toSeq() : seqFromValue(value);\n    }\n\n    Seq.of = function(/*...values*/) {\n      return Seq(arguments);\n    };\n\n    Seq.prototype.toSeq = function() {\n      return this;\n    };\n\n    Seq.prototype.toString = function() {\n      return this.__toString('Seq {', '}');\n    };\n\n    Seq.prototype.cacheResult = function() {\n      if (!this._cache && this.__iterateUncached) {\n        this._cache = this.entrySeq().toArray();\n        this.size = this._cache.length;\n      }\n      return this;\n    };\n\n    // abstract __iterateUncached(fn, reverse)\n\n    Seq.prototype.__iterate = function(fn, reverse) {\n      return seqIterate(this, fn, reverse, true);\n    };\n\n    // abstract __iteratorUncached(type, reverse)\n\n    Seq.prototype.__iterator = function(type, reverse) {\n      return seqIterator(this, type, reverse, true);\n    };\n\n\n\n  createClass(KeyedSeq, Seq);\n    function KeyedSeq(value) {\n      return value === null || value === undefined ?\n        emptySequence().toKeyedSeq() :\n        isIterable(value) ?\n          (isKeyed(value) ? value.toSeq() : value.fromEntrySeq()) :\n          keyedSeqFromValue(value);\n    }\n\n    KeyedSeq.prototype.toKeyedSeq = function() {\n      return this;\n    };\n\n\n\n  createClass(IndexedSeq, Seq);\n    function IndexedSeq(value) {\n      return value === null || value === undefined ? emptySequence() :\n        !isIterable(value) ? indexedSeqFromValue(value) :\n        isKeyed(value) ? value.entrySeq() : value.toIndexedSeq();\n    }\n\n    IndexedSeq.of = function(/*...values*/) {\n      return IndexedSeq(arguments);\n    };\n\n    IndexedSeq.prototype.toIndexedSeq = function() {\n      return this;\n    };\n\n    IndexedSeq.prototype.toString = function() {\n      return this.__toString('Seq [', ']');\n    };\n\n    IndexedSeq.prototype.__iterate = function(fn, reverse) {\n      return seqIterate(this, fn, reverse, false);\n    };\n\n    IndexedSeq.prototype.__iterator = function(type, reverse) {\n      return seqIterator(this, type, reverse, false);\n    };\n\n\n\n  createClass(SetSeq, Seq);\n    function SetSeq(value) {\n      return (\n        value === null || value === undefined ? emptySequence() :\n        !isIterable(value) ? indexedSeqFromValue(value) :\n        isKeyed(value) ? value.entrySeq() : value\n      ).toSetSeq();\n    }\n\n    SetSeq.of = function(/*...values*/) {\n      return SetSeq(arguments);\n    };\n\n    SetSeq.prototype.toSetSeq = function() {\n      return this;\n    };\n\n\n\n  Seq.isSeq = isSeq;\n  Seq.Keyed = KeyedSeq;\n  Seq.Set = SetSeq;\n  Seq.Indexed = IndexedSeq;\n\n  var IS_SEQ_SENTINEL = '@@__IMMUTABLE_SEQ__@@';\n\n  Seq.prototype[IS_SEQ_SENTINEL] = true;\n\n\n\n  createClass(ArraySeq, IndexedSeq);\n    function ArraySeq(array) {\n      this._array = array;\n      this.size = array.length;\n    }\n\n    ArraySeq.prototype.get = function(index, notSetValue) {\n      return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;\n    };\n\n    ArraySeq.prototype.__iterate = function(fn, reverse) {\n      var array = this._array;\n      var maxIndex = array.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        if (fn(array[reverse ? maxIndex - ii : ii], ii, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    ArraySeq.prototype.__iterator = function(type, reverse) {\n      var array = this._array;\n      var maxIndex = array.length - 1;\n      var ii = 0;\n      return new Iterator(function() \n        {return ii > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, ii, array[reverse ? maxIndex - ii++ : ii++])}\n      );\n    };\n\n\n\n  createClass(ObjectSeq, KeyedSeq);\n    function ObjectSeq(object) {\n      var keys = Object.keys(object);\n      this._object = object;\n      this._keys = keys;\n      this.size = keys.length;\n    }\n\n    ObjectSeq.prototype.get = function(key, notSetValue) {\n      if (notSetValue !== undefined && !this.has(key)) {\n        return notSetValue;\n      }\n      return this._object[key];\n    };\n\n    ObjectSeq.prototype.has = function(key) {\n      return this._object.hasOwnProperty(key);\n    };\n\n    ObjectSeq.prototype.__iterate = function(fn, reverse) {\n      var object = this._object;\n      var keys = this._keys;\n      var maxIndex = keys.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        var key = keys[reverse ? maxIndex - ii : ii];\n        if (fn(object[key], key, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    ObjectSeq.prototype.__iterator = function(type, reverse) {\n      var object = this._object;\n      var keys = this._keys;\n      var maxIndex = keys.length - 1;\n      var ii = 0;\n      return new Iterator(function()  {\n        var key = keys[reverse ? maxIndex - ii : ii];\n        return ii++ > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, key, object[key]);\n      });\n    };\n\n  ObjectSeq.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n  createClass(IterableSeq, IndexedSeq);\n    function IterableSeq(iterable) {\n      this._iterable = iterable;\n      this.size = iterable.length || iterable.size;\n    }\n\n    IterableSeq.prototype.__iterateUncached = function(fn, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterable = this._iterable;\n      var iterator = getIterator(iterable);\n      var iterations = 0;\n      if (isIterator(iterator)) {\n        var step;\n        while (!(step = iterator.next()).done) {\n          if (fn(step.value, iterations++, this) === false) {\n            break;\n          }\n        }\n      }\n      return iterations;\n    };\n\n    IterableSeq.prototype.__iteratorUncached = function(type, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterable = this._iterable;\n      var iterator = getIterator(iterable);\n      if (!isIterator(iterator)) {\n        return new Iterator(iteratorDone);\n      }\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step : iteratorValue(type, iterations++, step.value);\n      });\n    };\n\n\n\n  createClass(IteratorSeq, IndexedSeq);\n    function IteratorSeq(iterator) {\n      this._iterator = iterator;\n      this._iteratorCache = [];\n    }\n\n    IteratorSeq.prototype.__iterateUncached = function(fn, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterator = this._iterator;\n      var cache = this._iteratorCache;\n      var iterations = 0;\n      while (iterations < cache.length) {\n        if (fn(cache[iterations], iterations++, this) === false) {\n          return iterations;\n        }\n      }\n      var step;\n      while (!(step = iterator.next()).done) {\n        var val = step.value;\n        cache[iterations] = val;\n        if (fn(val, iterations++, this) === false) {\n          break;\n        }\n      }\n      return iterations;\n    };\n\n    IteratorSeq.prototype.__iteratorUncached = function(type, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = this._iterator;\n      var cache = this._iteratorCache;\n      var iterations = 0;\n      return new Iterator(function()  {\n        if (iterations >= cache.length) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          cache[iterations] = step.value;\n        }\n        return iteratorValue(type, iterations, cache[iterations++]);\n      });\n    };\n\n\n\n\n  // # pragma Helper functions\n\n  function isSeq(maybeSeq) {\n    return !!(maybeSeq && maybeSeq[IS_SEQ_SENTINEL]);\n  }\n\n  var EMPTY_SEQ;\n\n  function emptySequence() {\n    return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));\n  }\n\n  function keyedSeqFromValue(value) {\n    var seq =\n      Array.isArray(value) ? new ArraySeq(value).fromEntrySeq() :\n      isIterator(value) ? new IteratorSeq(value).fromEntrySeq() :\n      hasIterator(value) ? new IterableSeq(value).fromEntrySeq() :\n      typeof value === 'object' ? new ObjectSeq(value) :\n      undefined;\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of [k, v] entries, '+\n        'or keyed object: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function indexedSeqFromValue(value) {\n    var seq = maybeIndexedSeqFromValue(value);\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of values: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function seqFromValue(value) {\n    var seq = maybeIndexedSeqFromValue(value) ||\n      (typeof value === 'object' && new ObjectSeq(value));\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of values, or keyed object: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function maybeIndexedSeqFromValue(value) {\n    return (\n      isArrayLike(value) ? new ArraySeq(value) :\n      isIterator(value) ? new IteratorSeq(value) :\n      hasIterator(value) ? new IterableSeq(value) :\n      undefined\n    );\n  }\n\n  function seqIterate(seq, fn, reverse, useKeys) {\n    var cache = seq._cache;\n    if (cache) {\n      var maxIndex = cache.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        var entry = cache[reverse ? maxIndex - ii : ii];\n        if (fn(entry[1], useKeys ? entry[0] : ii, seq) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    }\n    return seq.__iterateUncached(fn, reverse);\n  }\n\n  function seqIterator(seq, type, reverse, useKeys) {\n    var cache = seq._cache;\n    if (cache) {\n      var maxIndex = cache.length - 1;\n      var ii = 0;\n      return new Iterator(function()  {\n        var entry = cache[reverse ? maxIndex - ii : ii];\n        return ii++ > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, useKeys ? entry[0] : ii - 1, entry[1]);\n      });\n    }\n    return seq.__iteratorUncached(type, reverse);\n  }\n\n  function fromJS(json, converter) {\n    return converter ?\n      fromJSWith(converter, json, '', {'': json}) :\n      fromJSDefault(json);\n  }\n\n  function fromJSWith(converter, json, key, parentJSON) {\n    if (Array.isArray(json)) {\n      return converter.call(parentJSON, key, IndexedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));\n    }\n    if (isPlainObj(json)) {\n      return converter.call(parentJSON, key, KeyedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));\n    }\n    return json;\n  }\n\n  function fromJSDefault(json) {\n    if (Array.isArray(json)) {\n      return IndexedSeq(json).map(fromJSDefault).toList();\n    }\n    if (isPlainObj(json)) {\n      return KeyedSeq(json).map(fromJSDefault).toMap();\n    }\n    return json;\n  }\n\n  function isPlainObj(value) {\n    return value && (value.constructor === Object || value.constructor === undefined);\n  }\n\n  /**\n   * An extension of the \"same-value\" algorithm as [described for use by ES6 Map\n   * and Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Key_equality)\n   *\n   * NaN is considered the same as NaN, however -0 and 0 are considered the same\n   * value, which is different from the algorithm described by\n   * [`Object.is`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is).\n   *\n   * This is extended further to allow Objects to describe the values they\n   * represent, by way of `valueOf` or `equals` (and `hashCode`).\n   *\n   * Note: because of this extension, the key equality of Immutable.Map and the\n   * value equality of Immutable.Set will differ from ES6 Map and Set.\n   *\n   * ### Defining custom values\n   *\n   * The easiest way to describe the value an object represents is by implementing\n   * `valueOf`. For example, `Date` represents a value by returning a unix\n   * timestamp for `valueOf`:\n   *\n   *     var date1 = new Date(1234567890000); // Fri Feb 13 2009 ...\n   *     var date2 = new Date(1234567890000);\n   *     date1.valueOf(); // 1234567890000\n   *     assert( date1 !== date2 );\n   *     assert( Immutable.is( date1, date2 ) );\n   *\n   * Note: overriding `valueOf` may have other implications if you use this object\n   * where JavaScript expects a primitive, such as implicit string coercion.\n   *\n   * For more complex types, especially collections, implementing `valueOf` may\n   * not be performant. An alternative is to implement `equals` and `hashCode`.\n   *\n   * `equals` takes another object, presumably of similar type, and returns true\n   * if the it is equal. Equality is symmetrical, so the same result should be\n   * returned if this and the argument are flipped.\n   *\n   *     assert( a.equals(b) === b.equals(a) );\n   *\n   * `hashCode` returns a 32bit integer number representing the object which will\n   * be used to determine how to store the value object in a Map or Set. You must\n   * provide both or neither methods, one must not exist without the other.\n   *\n   * Also, an important relationship between these methods must be upheld: if two\n   * values are equal, they *must* return the same hashCode. If the values are not\n   * equal, they might have the same hashCode; this is called a hash collision,\n   * and while undesirable for performance reasons, it is acceptable.\n   *\n   *     if (a.equals(b)) {\n   *       assert( a.hashCode() === b.hashCode() );\n   *     }\n   *\n   * All Immutable collections implement `equals` and `hashCode`.\n   *\n   */\n  function is(valueA, valueB) {\n    if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {\n      return true;\n    }\n    if (!valueA || !valueB) {\n      return false;\n    }\n    if (typeof valueA.valueOf === 'function' &&\n        typeof valueB.valueOf === 'function') {\n      valueA = valueA.valueOf();\n      valueB = valueB.valueOf();\n      if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {\n        return true;\n      }\n      if (!valueA || !valueB) {\n        return false;\n      }\n    }\n    if (typeof valueA.equals === 'function' &&\n        typeof valueB.equals === 'function' &&\n        valueA.equals(valueB)) {\n      return true;\n    }\n    return false;\n  }\n\n  function deepEqual(a, b) {\n    if (a === b) {\n      return true;\n    }\n\n    if (\n      !isIterable(b) ||\n      a.size !== undefined && b.size !== undefined && a.size !== b.size ||\n      a.__hash !== undefined && b.__hash !== undefined && a.__hash !== b.__hash ||\n      isKeyed(a) !== isKeyed(b) ||\n      isIndexed(a) !== isIndexed(b) ||\n      isOrdered(a) !== isOrdered(b)\n    ) {\n      return false;\n    }\n\n    if (a.size === 0 && b.size === 0) {\n      return true;\n    }\n\n    var notAssociative = !isAssociative(a);\n\n    if (isOrdered(a)) {\n      var entries = a.entries();\n      return b.every(function(v, k)  {\n        var entry = entries.next().value;\n        return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));\n      }) && entries.next().done;\n    }\n\n    var flipped = false;\n\n    if (a.size === undefined) {\n      if (b.size === undefined) {\n        if (typeof a.cacheResult === 'function') {\n          a.cacheResult();\n        }\n      } else {\n        flipped = true;\n        var _ = a;\n        a = b;\n        b = _;\n      }\n    }\n\n    var allEqual = true;\n    var bSize = b.__iterate(function(v, k)  {\n      if (notAssociative ? !a.has(v) :\n          flipped ? !is(v, a.get(k, NOT_SET)) : !is(a.get(k, NOT_SET), v)) {\n        allEqual = false;\n        return false;\n      }\n    });\n\n    return allEqual && a.size === bSize;\n  }\n\n  createClass(Repeat, IndexedSeq);\n\n    function Repeat(value, times) {\n      if (!(this instanceof Repeat)) {\n        return new Repeat(value, times);\n      }\n      this._value = value;\n      this.size = times === undefined ? Infinity : Math.max(0, times);\n      if (this.size === 0) {\n        if (EMPTY_REPEAT) {\n          return EMPTY_REPEAT;\n        }\n        EMPTY_REPEAT = this;\n      }\n    }\n\n    Repeat.prototype.toString = function() {\n      if (this.size === 0) {\n        return 'Repeat []';\n      }\n      return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';\n    };\n\n    Repeat.prototype.get = function(index, notSetValue) {\n      return this.has(index) ? this._value : notSetValue;\n    };\n\n    Repeat.prototype.includes = function(searchValue) {\n      return is(this._value, searchValue);\n    };\n\n    Repeat.prototype.slice = function(begin, end) {\n      var size = this.size;\n      return wholeSlice(begin, end, size) ? this :\n        new Repeat(this._value, resolveEnd(end, size) - resolveBegin(begin, size));\n    };\n\n    Repeat.prototype.reverse = function() {\n      return this;\n    };\n\n    Repeat.prototype.indexOf = function(searchValue) {\n      if (is(this._value, searchValue)) {\n        return 0;\n      }\n      return -1;\n    };\n\n    Repeat.prototype.lastIndexOf = function(searchValue) {\n      if (is(this._value, searchValue)) {\n        return this.size;\n      }\n      return -1;\n    };\n\n    Repeat.prototype.__iterate = function(fn, reverse) {\n      for (var ii = 0; ii < this.size; ii++) {\n        if (fn(this._value, ii, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    Repeat.prototype.__iterator = function(type, reverse) {var this$0 = this;\n      var ii = 0;\n      return new Iterator(function() \n        {return ii < this$0.size ? iteratorValue(type, ii++, this$0._value) : iteratorDone()}\n      );\n    };\n\n    Repeat.prototype.equals = function(other) {\n      return other instanceof Repeat ?\n        is(this._value, other._value) :\n        deepEqual(other);\n    };\n\n\n  var EMPTY_REPEAT;\n\n  function invariant(condition, error) {\n    if (!condition) throw new Error(error);\n  }\n\n  createClass(Range, IndexedSeq);\n\n    function Range(start, end, step) {\n      if (!(this instanceof Range)) {\n        return new Range(start, end, step);\n      }\n      invariant(step !== 0, 'Cannot step a Range by 0');\n      start = start || 0;\n      if (end === undefined) {\n        end = Infinity;\n      }\n      step = step === undefined ? 1 : Math.abs(step);\n      if (end < start) {\n        step = -step;\n      }\n      this._start = start;\n      this._end = end;\n      this._step = step;\n      this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);\n      if (this.size === 0) {\n        if (EMPTY_RANGE) {\n          return EMPTY_RANGE;\n        }\n        EMPTY_RANGE = this;\n      }\n    }\n\n    Range.prototype.toString = function() {\n      if (this.size === 0) {\n        return 'Range []';\n      }\n      return 'Range [ ' +\n        this._start + '...' + this._end +\n        (this._step !== 1 ? ' by ' + this._step : '') +\n      ' ]';\n    };\n\n    Range.prototype.get = function(index, notSetValue) {\n      return this.has(index) ?\n        this._start + wrapIndex(this, index) * this._step :\n        notSetValue;\n    };\n\n    Range.prototype.includes = function(searchValue) {\n      var possibleIndex = (searchValue - this._start) / this._step;\n      return possibleIndex >= 0 &&\n        possibleIndex < this.size &&\n        possibleIndex === Math.floor(possibleIndex);\n    };\n\n    Range.prototype.slice = function(begin, end) {\n      if (wholeSlice(begin, end, this.size)) {\n        return this;\n      }\n      begin = resolveBegin(begin, this.size);\n      end = resolveEnd(end, this.size);\n      if (end <= begin) {\n        return new Range(0, 0);\n      }\n      return new Range(this.get(begin, this._end), this.get(end, this._end), this._step);\n    };\n\n    Range.prototype.indexOf = function(searchValue) {\n      var offsetValue = searchValue - this._start;\n      if (offsetValue % this._step === 0) {\n        var index = offsetValue / this._step;\n        if (index >= 0 && index < this.size) {\n          return index\n        }\n      }\n      return -1;\n    };\n\n    Range.prototype.lastIndexOf = function(searchValue) {\n      return this.indexOf(searchValue);\n    };\n\n    Range.prototype.__iterate = function(fn, reverse) {\n      var maxIndex = this.size - 1;\n      var step = this._step;\n      var value = reverse ? this._start + maxIndex * step : this._start;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        if (fn(value, ii, this) === false) {\n          return ii + 1;\n        }\n        value += reverse ? -step : step;\n      }\n      return ii;\n    };\n\n    Range.prototype.__iterator = function(type, reverse) {\n      var maxIndex = this.size - 1;\n      var step = this._step;\n      var value = reverse ? this._start + maxIndex * step : this._start;\n      var ii = 0;\n      return new Iterator(function()  {\n        var v = value;\n        value += reverse ? -step : step;\n        return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii++, v);\n      });\n    };\n\n    Range.prototype.equals = function(other) {\n      return other instanceof Range ?\n        this._start === other._start &&\n        this._end === other._end &&\n        this._step === other._step :\n        deepEqual(this, other);\n    };\n\n\n  var EMPTY_RANGE;\n\n  createClass(Collection, Iterable);\n    function Collection() {\n      throw TypeError('Abstract');\n    }\n\n\n  createClass(KeyedCollection, Collection);function KeyedCollection() {}\n\n  createClass(IndexedCollection, Collection);function IndexedCollection() {}\n\n  createClass(SetCollection, Collection);function SetCollection() {}\n\n\n  Collection.Keyed = KeyedCollection;\n  Collection.Indexed = IndexedCollection;\n  Collection.Set = SetCollection;\n\n  var imul =\n    typeof Math.imul === 'function' && Math.imul(0xffffffff, 2) === -2 ?\n    Math.imul :\n    function imul(a, b) {\n      a = a | 0; // int\n      b = b | 0; // int\n      var c = a & 0xffff;\n      var d = b & 0xffff;\n      // Shift by 0 fixes the sign on the high part.\n      return (c * d) + ((((a >>> 16) * d + c * (b >>> 16)) << 16) >>> 0) | 0; // int\n    };\n\n  // v8 has an optimization for storing 31-bit signed numbers.\n  // Values which have either 00 or 11 as the high order bits qualify.\n  // This function drops the highest order bit in a signed number, maintaining\n  // the sign bit.\n  function smi(i32) {\n    return ((i32 >>> 1) & 0x40000000) | (i32 & 0xBFFFFFFF);\n  }\n\n  function hash(o) {\n    if (o === false || o === null || o === undefined) {\n      return 0;\n    }\n    if (typeof o.valueOf === 'function') {\n      o = o.valueOf();\n      if (o === false || o === null || o === undefined) {\n        return 0;\n      }\n    }\n    if (o === true) {\n      return 1;\n    }\n    var type = typeof o;\n    if (type === 'number') {\n      if (o !== o || o === Infinity) {\n        return 0;\n      }\n      var h = o | 0;\n      if (h !== o) {\n        h ^= o * 0xFFFFFFFF;\n      }\n      while (o > 0xFFFFFFFF) {\n        o /= 0xFFFFFFFF;\n        h ^= o;\n      }\n      return smi(h);\n    }\n    if (type === 'string') {\n      return o.length > STRING_HASH_CACHE_MIN_STRLEN ? cachedHashString(o) : hashString(o);\n    }\n    if (typeof o.hashCode === 'function') {\n      return o.hashCode();\n    }\n    if (type === 'object') {\n      return hashJSObj(o);\n    }\n    if (typeof o.toString === 'function') {\n      return hashString(o.toString());\n    }\n    throw new Error('Value type ' + type + ' cannot be hashed.');\n  }\n\n  function cachedHashString(string) {\n    var hash = stringHashCache[string];\n    if (hash === undefined) {\n      hash = hashString(string);\n      if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {\n        STRING_HASH_CACHE_SIZE = 0;\n        stringHashCache = {};\n      }\n      STRING_HASH_CACHE_SIZE++;\n      stringHashCache[string] = hash;\n    }\n    return hash;\n  }\n\n  // http://jsperf.com/hashing-strings\n  function hashString(string) {\n    // This is the hash from JVM\n    // The hash code for a string is computed as\n    // s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],\n    // where s[i] is the ith character of the string and n is the length of\n    // the string. We \"mod\" the result to make it between 0 (inclusive) and 2^31\n    // (exclusive) by dropping high bits.\n    var hash = 0;\n    for (var ii = 0; ii < string.length; ii++) {\n      hash = 31 * hash + string.charCodeAt(ii) | 0;\n    }\n    return smi(hash);\n  }\n\n  function hashJSObj(obj) {\n    var hash;\n    if (usingWeakMap) {\n      hash = weakMap.get(obj);\n      if (hash !== undefined) {\n        return hash;\n      }\n    }\n\n    hash = obj[UID_HASH_KEY];\n    if (hash !== undefined) {\n      return hash;\n    }\n\n    if (!canDefineProperty) {\n      hash = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];\n      if (hash !== undefined) {\n        return hash;\n      }\n\n      hash = getIENodeHash(obj);\n      if (hash !== undefined) {\n        return hash;\n      }\n    }\n\n    hash = ++objHashUID;\n    if (objHashUID & 0x40000000) {\n      objHashUID = 0;\n    }\n\n    if (usingWeakMap) {\n      weakMap.set(obj, hash);\n    } else if (isExtensible !== undefined && isExtensible(obj) === false) {\n      throw new Error('Non-extensible objects are not allowed as keys.');\n    } else if (canDefineProperty) {\n      Object.defineProperty(obj, UID_HASH_KEY, {\n        'enumerable': false,\n        'configurable': false,\n        'writable': false,\n        'value': hash\n      });\n    } else if (obj.propertyIsEnumerable !== undefined &&\n               obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable) {\n      // Since we can't define a non-enumerable property on the object\n      // we'll hijack one of the less-used non-enumerable properties to\n      // save our hash on it. Since this is a function it will not show up in\n      // `JSON.stringify` which is what we want.\n      obj.propertyIsEnumerable = function() {\n        return this.constructor.prototype.propertyIsEnumerable.apply(this, arguments);\n      };\n      obj.propertyIsEnumerable[UID_HASH_KEY] = hash;\n    } else if (obj.nodeType !== undefined) {\n      // At this point we couldn't get the IE `uniqueID` to use as a hash\n      // and we couldn't use a non-enumerable property to exploit the\n      // dontEnum bug so we simply add the `UID_HASH_KEY` on the node\n      // itself.\n      obj[UID_HASH_KEY] = hash;\n    } else {\n      throw new Error('Unable to set a non-enumerable property on object.');\n    }\n\n    return hash;\n  }\n\n  // Get references to ES5 object methods.\n  var isExtensible = Object.isExtensible;\n\n  // True if Object.defineProperty works as expected. IE8 fails this test.\n  var canDefineProperty = (function() {\n    try {\n      Object.defineProperty({}, '@', {});\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }());\n\n  // IE has a `uniqueID` property on DOM nodes. We can construct the hash from it\n  // and avoid memory leaks from the IE cloneNode bug.\n  function getIENodeHash(node) {\n    if (node && node.nodeType > 0) {\n      switch (node.nodeType) {\n        case 1: // Element\n          return node.uniqueID;\n        case 9: // Document\n          return node.documentElement && node.documentElement.uniqueID;\n      }\n    }\n  }\n\n  // If possible, use a WeakMap.\n  var usingWeakMap = typeof WeakMap === 'function';\n  var weakMap;\n  if (usingWeakMap) {\n    weakMap = new WeakMap();\n  }\n\n  var objHashUID = 0;\n\n  var UID_HASH_KEY = '__immutablehash__';\n  if (typeof Symbol === 'function') {\n    UID_HASH_KEY = Symbol(UID_HASH_KEY);\n  }\n\n  var STRING_HASH_CACHE_MIN_STRLEN = 16;\n  var STRING_HASH_CACHE_MAX_SIZE = 255;\n  var STRING_HASH_CACHE_SIZE = 0;\n  var stringHashCache = {};\n\n  function assertNotInfinite(size) {\n    invariant(\n      size !== Infinity,\n      'Cannot perform this action with an infinite size.'\n    );\n  }\n\n  createClass(Map, KeyedCollection);\n\n    // @pragma Construction\n\n    function Map(value) {\n      return value === null || value === undefined ? emptyMap() :\n        isMap(value) && !isOrdered(value) ? value :\n        emptyMap().withMutations(function(map ) {\n          var iter = KeyedIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v, k)  {return map.set(k, v)});\n        });\n    }\n\n    Map.of = function() {var keyValues = SLICE$0.call(arguments, 0);\n      return emptyMap().withMutations(function(map ) {\n        for (var i = 0; i < keyValues.length; i += 2) {\n          if (i + 1 >= keyValues.length) {\n            throw new Error('Missing value for key: ' + keyValues[i]);\n          }\n          map.set(keyValues[i], keyValues[i + 1]);\n        }\n      });\n    };\n\n    Map.prototype.toString = function() {\n      return this.__toString('Map {', '}');\n    };\n\n    // @pragma Access\n\n    Map.prototype.get = function(k, notSetValue) {\n      return this._root ?\n        this._root.get(0, undefined, k, notSetValue) :\n        notSetValue;\n    };\n\n    // @pragma Modification\n\n    Map.prototype.set = function(k, v) {\n      return updateMap(this, k, v);\n    };\n\n    Map.prototype.setIn = function(keyPath, v) {\n      return this.updateIn(keyPath, NOT_SET, function()  {return v});\n    };\n\n    Map.prototype.remove = function(k) {\n      return updateMap(this, k, NOT_SET);\n    };\n\n    Map.prototype.deleteIn = function(keyPath) {\n      return this.updateIn(keyPath, function()  {return NOT_SET});\n    };\n\n    Map.prototype.update = function(k, notSetValue, updater) {\n      return arguments.length === 1 ?\n        k(this) :\n        this.updateIn([k], notSetValue, updater);\n    };\n\n    Map.prototype.updateIn = function(keyPath, notSetValue, updater) {\n      if (!updater) {\n        updater = notSetValue;\n        notSetValue = undefined;\n      }\n      var updatedValue = updateInDeepMap(\n        this,\n        forceIterator(keyPath),\n        notSetValue,\n        updater\n      );\n      return updatedValue === NOT_SET ? undefined : updatedValue;\n    };\n\n    Map.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._root = null;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyMap();\n    };\n\n    // @pragma Composition\n\n    Map.prototype.merge = function(/*...iters*/) {\n      return mergeIntoMapWith(this, undefined, arguments);\n    };\n\n    Map.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoMapWith(this, merger, iters);\n    };\n\n    Map.prototype.mergeIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);\n      return this.updateIn(\n        keyPath,\n        emptyMap(),\n        function(m ) {return typeof m.merge === 'function' ?\n          m.merge.apply(m, iters) :\n          iters[iters.length - 1]}\n      );\n    };\n\n    Map.prototype.mergeDeep = function(/*...iters*/) {\n      return mergeIntoMapWith(this, deepMerger, arguments);\n    };\n\n    Map.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoMapWith(this, deepMergerWith(merger), iters);\n    };\n\n    Map.prototype.mergeDeepIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);\n      return this.updateIn(\n        keyPath,\n        emptyMap(),\n        function(m ) {return typeof m.mergeDeep === 'function' ?\n          m.mergeDeep.apply(m, iters) :\n          iters[iters.length - 1]}\n      );\n    };\n\n    Map.prototype.sort = function(comparator) {\n      // Late binding\n      return OrderedMap(sortFactory(this, comparator));\n    };\n\n    Map.prototype.sortBy = function(mapper, comparator) {\n      // Late binding\n      return OrderedMap(sortFactory(this, comparator, mapper));\n    };\n\n    // @pragma Mutability\n\n    Map.prototype.withMutations = function(fn) {\n      var mutable = this.asMutable();\n      fn(mutable);\n      return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;\n    };\n\n    Map.prototype.asMutable = function() {\n      return this.__ownerID ? this : this.__ensureOwner(new OwnerID());\n    };\n\n    Map.prototype.asImmutable = function() {\n      return this.__ensureOwner();\n    };\n\n    Map.prototype.wasAltered = function() {\n      return this.__altered;\n    };\n\n    Map.prototype.__iterator = function(type, reverse) {\n      return new MapIterator(this, type, reverse);\n    };\n\n    Map.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      this._root && this._root.iterate(function(entry ) {\n        iterations++;\n        return fn(entry[1], entry[0], this$0);\n      }, reverse);\n      return iterations;\n    };\n\n    Map.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this.__altered = false;\n        return this;\n      }\n      return makeMap(this.size, this._root, ownerID, this.__hash);\n    };\n\n\n  function isMap(maybeMap) {\n    return !!(maybeMap && maybeMap[IS_MAP_SENTINEL]);\n  }\n\n  Map.isMap = isMap;\n\n  var IS_MAP_SENTINEL = '@@__IMMUTABLE_MAP__@@';\n\n  var MapPrototype = Map.prototype;\n  MapPrototype[IS_MAP_SENTINEL] = true;\n  MapPrototype[DELETE] = MapPrototype.remove;\n  MapPrototype.removeIn = MapPrototype.deleteIn;\n\n\n  // #pragma Trie Nodes\n\n\n\n    function ArrayMapNode(ownerID, entries) {\n      this.ownerID = ownerID;\n      this.entries = entries;\n    }\n\n    ArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      var entries = this.entries;\n      for (var ii = 0, len = entries.length; ii < len; ii++) {\n        if (is(key, entries[ii][0])) {\n          return entries[ii][1];\n        }\n      }\n      return notSetValue;\n    };\n\n    ArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      var removed = value === NOT_SET;\n\n      var entries = this.entries;\n      var idx = 0;\n      for (var len = entries.length; idx < len; idx++) {\n        if (is(key, entries[idx][0])) {\n          break;\n        }\n      }\n      var exists = idx < len;\n\n      if (exists ? entries[idx][1] === value : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n      (removed || !exists) && SetRef(didChangeSize);\n\n      if (removed && entries.length === 1) {\n        return; // undefined\n      }\n\n      if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {\n        return createNodes(ownerID, entries, key, value);\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newEntries = isEditable ? entries : arrCopy(entries);\n\n      if (exists) {\n        if (removed) {\n          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());\n        } else {\n          newEntries[idx] = [key, value];\n        }\n      } else {\n        newEntries.push([key, value]);\n      }\n\n      if (isEditable) {\n        this.entries = newEntries;\n        return this;\n      }\n\n      return new ArrayMapNode(ownerID, newEntries);\n    };\n\n\n\n\n    function BitmapIndexedNode(ownerID, bitmap, nodes) {\n      this.ownerID = ownerID;\n      this.bitmap = bitmap;\n      this.nodes = nodes;\n    }\n\n    BitmapIndexedNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var bit = (1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK));\n      var bitmap = this.bitmap;\n      return (bitmap & bit) === 0 ? notSetValue :\n        this.nodes[popCount(bitmap & (bit - 1))].get(shift + SHIFT, keyHash, key, notSetValue);\n    };\n\n    BitmapIndexedNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var bit = 1 << keyHashFrag;\n      var bitmap = this.bitmap;\n      var exists = (bitmap & bit) !== 0;\n\n      if (!exists && value === NOT_SET) {\n        return this;\n      }\n\n      var idx = popCount(bitmap & (bit - 1));\n      var nodes = this.nodes;\n      var node = exists ? nodes[idx] : undefined;\n      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n\n      if (newNode === node) {\n        return this;\n      }\n\n      if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {\n        return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);\n      }\n\n      if (exists && !newNode && nodes.length === 2 && isLeafNode(nodes[idx ^ 1])) {\n        return nodes[idx ^ 1];\n      }\n\n      if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {\n        return newNode;\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newBitmap = exists ? newNode ? bitmap : bitmap ^ bit : bitmap | bit;\n      var newNodes = exists ? newNode ?\n        setIn(nodes, idx, newNode, isEditable) :\n        spliceOut(nodes, idx, isEditable) :\n        spliceIn(nodes, idx, newNode, isEditable);\n\n      if (isEditable) {\n        this.bitmap = newBitmap;\n        this.nodes = newNodes;\n        return this;\n      }\n\n      return new BitmapIndexedNode(ownerID, newBitmap, newNodes);\n    };\n\n\n\n\n    function HashArrayMapNode(ownerID, count, nodes) {\n      this.ownerID = ownerID;\n      this.count = count;\n      this.nodes = nodes;\n    }\n\n    HashArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var node = this.nodes[idx];\n      return node ? node.get(shift + SHIFT, keyHash, key, notSetValue) : notSetValue;\n    };\n\n    HashArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var removed = value === NOT_SET;\n      var nodes = this.nodes;\n      var node = nodes[idx];\n\n      if (removed && !node) {\n        return this;\n      }\n\n      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n      if (newNode === node) {\n        return this;\n      }\n\n      var newCount = this.count;\n      if (!node) {\n        newCount++;\n      } else if (!newNode) {\n        newCount--;\n        if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {\n          return packNodes(ownerID, nodes, newCount, idx);\n        }\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newNodes = setIn(nodes, idx, newNode, isEditable);\n\n      if (isEditable) {\n        this.count = newCount;\n        this.nodes = newNodes;\n        return this;\n      }\n\n      return new HashArrayMapNode(ownerID, newCount, newNodes);\n    };\n\n\n\n\n    function HashCollisionNode(ownerID, keyHash, entries) {\n      this.ownerID = ownerID;\n      this.keyHash = keyHash;\n      this.entries = entries;\n    }\n\n    HashCollisionNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      var entries = this.entries;\n      for (var ii = 0, len = entries.length; ii < len; ii++) {\n        if (is(key, entries[ii][0])) {\n          return entries[ii][1];\n        }\n      }\n      return notSetValue;\n    };\n\n    HashCollisionNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n\n      var removed = value === NOT_SET;\n\n      if (keyHash !== this.keyHash) {\n        if (removed) {\n          return this;\n        }\n        SetRef(didAlter);\n        SetRef(didChangeSize);\n        return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);\n      }\n\n      var entries = this.entries;\n      var idx = 0;\n      for (var len = entries.length; idx < len; idx++) {\n        if (is(key, entries[idx][0])) {\n          break;\n        }\n      }\n      var exists = idx < len;\n\n      if (exists ? entries[idx][1] === value : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n      (removed || !exists) && SetRef(didChangeSize);\n\n      if (removed && len === 2) {\n        return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newEntries = isEditable ? entries : arrCopy(entries);\n\n      if (exists) {\n        if (removed) {\n          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());\n        } else {\n          newEntries[idx] = [key, value];\n        }\n      } else {\n        newEntries.push([key, value]);\n      }\n\n      if (isEditable) {\n        this.entries = newEntries;\n        return this;\n      }\n\n      return new HashCollisionNode(ownerID, this.keyHash, newEntries);\n    };\n\n\n\n\n    function ValueNode(ownerID, keyHash, entry) {\n      this.ownerID = ownerID;\n      this.keyHash = keyHash;\n      this.entry = entry;\n    }\n\n    ValueNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      return is(key, this.entry[0]) ? this.entry[1] : notSetValue;\n    };\n\n    ValueNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      var removed = value === NOT_SET;\n      var keyMatch = is(key, this.entry[0]);\n      if (keyMatch ? value === this.entry[1] : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n\n      if (removed) {\n        SetRef(didChangeSize);\n        return; // undefined\n      }\n\n      if (keyMatch) {\n        if (ownerID && ownerID === this.ownerID) {\n          this.entry[1] = value;\n          return this;\n        }\n        return new ValueNode(ownerID, this.keyHash, [key, value]);\n      }\n\n      SetRef(didChangeSize);\n      return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);\n    };\n\n\n\n  // #pragma Iterators\n\n  ArrayMapNode.prototype.iterate =\n  HashCollisionNode.prototype.iterate = function (fn, reverse) {\n    var entries = this.entries;\n    for (var ii = 0, maxIndex = entries.length - 1; ii <= maxIndex; ii++) {\n      if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {\n        return false;\n      }\n    }\n  }\n\n  BitmapIndexedNode.prototype.iterate =\n  HashArrayMapNode.prototype.iterate = function (fn, reverse) {\n    var nodes = this.nodes;\n    for (var ii = 0, maxIndex = nodes.length - 1; ii <= maxIndex; ii++) {\n      var node = nodes[reverse ? maxIndex - ii : ii];\n      if (node && node.iterate(fn, reverse) === false) {\n        return false;\n      }\n    }\n  }\n\n  ValueNode.prototype.iterate = function (fn, reverse) {\n    return fn(this.entry);\n  }\n\n  createClass(MapIterator, Iterator);\n\n    function MapIterator(map, type, reverse) {\n      this._type = type;\n      this._reverse = reverse;\n      this._stack = map._root && mapIteratorFrame(map._root);\n    }\n\n    MapIterator.prototype.next = function() {\n      var type = this._type;\n      var stack = this._stack;\n      while (stack) {\n        var node = stack.node;\n        var index = stack.index++;\n        var maxIndex;\n        if (node.entry) {\n          if (index === 0) {\n            return mapIteratorValue(type, node.entry);\n          }\n        } else if (node.entries) {\n          maxIndex = node.entries.length - 1;\n          if (index <= maxIndex) {\n            return mapIteratorValue(type, node.entries[this._reverse ? maxIndex - index : index]);\n          }\n        } else {\n          maxIndex = node.nodes.length - 1;\n          if (index <= maxIndex) {\n            var subNode = node.nodes[this._reverse ? maxIndex - index : index];\n            if (subNode) {\n              if (subNode.entry) {\n                return mapIteratorValue(type, subNode.entry);\n              }\n              stack = this._stack = mapIteratorFrame(subNode, stack);\n            }\n            continue;\n          }\n        }\n        stack = this._stack = this._stack.__prev;\n      }\n      return iteratorDone();\n    };\n\n\n  function mapIteratorValue(type, entry) {\n    return iteratorValue(type, entry[0], entry[1]);\n  }\n\n  function mapIteratorFrame(node, prev) {\n    return {\n      node: node,\n      index: 0,\n      __prev: prev\n    };\n  }\n\n  function makeMap(size, root, ownerID, hash) {\n    var map = Object.create(MapPrototype);\n    map.size = size;\n    map._root = root;\n    map.__ownerID = ownerID;\n    map.__hash = hash;\n    map.__altered = false;\n    return map;\n  }\n\n  var EMPTY_MAP;\n  function emptyMap() {\n    return EMPTY_MAP || (EMPTY_MAP = makeMap(0));\n  }\n\n  function updateMap(map, k, v) {\n    var newRoot;\n    var newSize;\n    if (!map._root) {\n      if (v === NOT_SET) {\n        return map;\n      }\n      newSize = 1;\n      newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);\n    } else {\n      var didChangeSize = MakeRef(CHANGE_LENGTH);\n      var didAlter = MakeRef(DID_ALTER);\n      newRoot = updateNode(map._root, map.__ownerID, 0, undefined, k, v, didChangeSize, didAlter);\n      if (!didAlter.value) {\n        return map;\n      }\n      newSize = map.size + (didChangeSize.value ? v === NOT_SET ? -1 : 1 : 0);\n    }\n    if (map.__ownerID) {\n      map.size = newSize;\n      map._root = newRoot;\n      map.__hash = undefined;\n      map.__altered = true;\n      return map;\n    }\n    return newRoot ? makeMap(newSize, newRoot) : emptyMap();\n  }\n\n  function updateNode(node, ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    if (!node) {\n      if (value === NOT_SET) {\n        return node;\n      }\n      SetRef(didAlter);\n      SetRef(didChangeSize);\n      return new ValueNode(ownerID, keyHash, [key, value]);\n    }\n    return node.update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter);\n  }\n\n  function isLeafNode(node) {\n    return node.constructor === ValueNode || node.constructor === HashCollisionNode;\n  }\n\n  function mergeIntoNode(node, ownerID, shift, keyHash, entry) {\n    if (node.keyHash === keyHash) {\n      return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);\n    }\n\n    var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;\n    var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n\n    var newNode;\n    var nodes = idx1 === idx2 ?\n      [mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)] :\n      ((newNode = new ValueNode(ownerID, keyHash, entry)), idx1 < idx2 ? [node, newNode] : [newNode, node]);\n\n    return new BitmapIndexedNode(ownerID, (1 << idx1) | (1 << idx2), nodes);\n  }\n\n  function createNodes(ownerID, entries, key, value) {\n    if (!ownerID) {\n      ownerID = new OwnerID();\n    }\n    var node = new ValueNode(ownerID, hash(key), [key, value]);\n    for (var ii = 0; ii < entries.length; ii++) {\n      var entry = entries[ii];\n      node = node.update(ownerID, 0, undefined, entry[0], entry[1]);\n    }\n    return node;\n  }\n\n  function packNodes(ownerID, nodes, count, excluding) {\n    var bitmap = 0;\n    var packedII = 0;\n    var packedNodes = new Array(count);\n    for (var ii = 0, bit = 1, len = nodes.length; ii < len; ii++, bit <<= 1) {\n      var node = nodes[ii];\n      if (node !== undefined && ii !== excluding) {\n        bitmap |= bit;\n        packedNodes[packedII++] = node;\n      }\n    }\n    return new BitmapIndexedNode(ownerID, bitmap, packedNodes);\n  }\n\n  function expandNodes(ownerID, nodes, bitmap, including, node) {\n    var count = 0;\n    var expandedNodes = new Array(SIZE);\n    for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {\n      expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;\n    }\n    expandedNodes[including] = node;\n    return new HashArrayMapNode(ownerID, count + 1, expandedNodes);\n  }\n\n  function mergeIntoMapWith(map, merger, iterables) {\n    var iters = [];\n    for (var ii = 0; ii < iterables.length; ii++) {\n      var value = iterables[ii];\n      var iter = KeyedIterable(value);\n      if (!isIterable(value)) {\n        iter = iter.map(function(v ) {return fromJS(v)});\n      }\n      iters.push(iter);\n    }\n    return mergeIntoCollectionWith(map, merger, iters);\n  }\n\n  function deepMerger(existing, value, key) {\n    return existing && existing.mergeDeep && isIterable(value) ?\n      existing.mergeDeep(value) :\n      is(existing, value) ? existing : value;\n  }\n\n  function deepMergerWith(merger) {\n    return function(existing, value, key)  {\n      if (existing && existing.mergeDeepWith && isIterable(value)) {\n        return existing.mergeDeepWith(merger, value);\n      }\n      var nextValue = merger(existing, value, key);\n      return is(existing, nextValue) ? existing : nextValue;\n    };\n  }\n\n  function mergeIntoCollectionWith(collection, merger, iters) {\n    iters = iters.filter(function(x ) {return x.size !== 0});\n    if (iters.length === 0) {\n      return collection;\n    }\n    if (collection.size === 0 && !collection.__ownerID && iters.length === 1) {\n      return collection.constructor(iters[0]);\n    }\n    return collection.withMutations(function(collection ) {\n      var mergeIntoMap = merger ?\n        function(value, key)  {\n          collection.update(key, NOT_SET, function(existing )\n            {return existing === NOT_SET ? value : merger(existing, value, key)}\n          );\n        } :\n        function(value, key)  {\n          collection.set(key, value);\n        }\n      for (var ii = 0; ii < iters.length; ii++) {\n        iters[ii].forEach(mergeIntoMap);\n      }\n    });\n  }\n\n  function updateInDeepMap(existing, keyPathIter, notSetValue, updater) {\n    var isNotSet = existing === NOT_SET;\n    var step = keyPathIter.next();\n    if (step.done) {\n      var existingValue = isNotSet ? notSetValue : existing;\n      var newValue = updater(existingValue);\n      return newValue === existingValue ? existing : newValue;\n    }\n    invariant(\n      isNotSet || (existing && existing.set),\n      'invalid keyPath'\n    );\n    var key = step.value;\n    var nextExisting = isNotSet ? NOT_SET : existing.get(key, NOT_SET);\n    var nextUpdated = updateInDeepMap(\n      nextExisting,\n      keyPathIter,\n      notSetValue,\n      updater\n    );\n    return nextUpdated === nextExisting ? existing :\n      nextUpdated === NOT_SET ? existing.remove(key) :\n      (isNotSet ? emptyMap() : existing).set(key, nextUpdated);\n  }\n\n  function popCount(x) {\n    x = x - ((x >> 1) & 0x55555555);\n    x = (x & 0x33333333) + ((x >> 2) & 0x33333333);\n    x = (x + (x >> 4)) & 0x0f0f0f0f;\n    x = x + (x >> 8);\n    x = x + (x >> 16);\n    return x & 0x7f;\n  }\n\n  function setIn(array, idx, val, canEdit) {\n    var newArray = canEdit ? array : arrCopy(array);\n    newArray[idx] = val;\n    return newArray;\n  }\n\n  function spliceIn(array, idx, val, canEdit) {\n    var newLen = array.length + 1;\n    if (canEdit && idx + 1 === newLen) {\n      array[idx] = val;\n      return array;\n    }\n    var newArray = new Array(newLen);\n    var after = 0;\n    for (var ii = 0; ii < newLen; ii++) {\n      if (ii === idx) {\n        newArray[ii] = val;\n        after = -1;\n      } else {\n        newArray[ii] = array[ii + after];\n      }\n    }\n    return newArray;\n  }\n\n  function spliceOut(array, idx, canEdit) {\n    var newLen = array.length - 1;\n    if (canEdit && idx === newLen) {\n      array.pop();\n      return array;\n    }\n    var newArray = new Array(newLen);\n    var after = 0;\n    for (var ii = 0; ii < newLen; ii++) {\n      if (ii === idx) {\n        after = 1;\n      }\n      newArray[ii] = array[ii + after];\n    }\n    return newArray;\n  }\n\n  var MAX_ARRAY_MAP_SIZE = SIZE / 4;\n  var MAX_BITMAP_INDEXED_SIZE = SIZE / 2;\n  var MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;\n\n  createClass(List, IndexedCollection);\n\n    // @pragma Construction\n\n    function List(value) {\n      var empty = emptyList();\n      if (value === null || value === undefined) {\n        return empty;\n      }\n      if (isList(value)) {\n        return value;\n      }\n      var iter = IndexedIterable(value);\n      var size = iter.size;\n      if (size === 0) {\n        return empty;\n      }\n      assertNotInfinite(size);\n      if (size > 0 && size < SIZE) {\n        return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));\n      }\n      return empty.withMutations(function(list ) {\n        list.setSize(size);\n        iter.forEach(function(v, i)  {return list.set(i, v)});\n      });\n    }\n\n    List.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    List.prototype.toString = function() {\n      return this.__toString('List [', ']');\n    };\n\n    // @pragma Access\n\n    List.prototype.get = function(index, notSetValue) {\n      index = wrapIndex(this, index);\n      if (index >= 0 && index < this.size) {\n        index += this._origin;\n        var node = listNodeFor(this, index);\n        return node && node.array[index & MASK];\n      }\n      return notSetValue;\n    };\n\n    // @pragma Modification\n\n    List.prototype.set = function(index, value) {\n      return updateList(this, index, value);\n    };\n\n    List.prototype.remove = function(index) {\n      return !this.has(index) ? this :\n        index === 0 ? this.shift() :\n        index === this.size - 1 ? this.pop() :\n        this.splice(index, 1);\n    };\n\n    List.prototype.insert = function(index, value) {\n      return this.splice(index, 0, value);\n    };\n\n    List.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = this._origin = this._capacity = 0;\n        this._level = SHIFT;\n        this._root = this._tail = null;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyList();\n    };\n\n    List.prototype.push = function(/*...values*/) {\n      var values = arguments;\n      var oldSize = this.size;\n      return this.withMutations(function(list ) {\n        setListBounds(list, 0, oldSize + values.length);\n        for (var ii = 0; ii < values.length; ii++) {\n          list.set(oldSize + ii, values[ii]);\n        }\n      });\n    };\n\n    List.prototype.pop = function() {\n      return setListBounds(this, 0, -1);\n    };\n\n    List.prototype.unshift = function(/*...values*/) {\n      var values = arguments;\n      return this.withMutations(function(list ) {\n        setListBounds(list, -values.length);\n        for (var ii = 0; ii < values.length; ii++) {\n          list.set(ii, values[ii]);\n        }\n      });\n    };\n\n    List.prototype.shift = function() {\n      return setListBounds(this, 1);\n    };\n\n    // @pragma Composition\n\n    List.prototype.merge = function(/*...iters*/) {\n      return mergeIntoListWith(this, undefined, arguments);\n    };\n\n    List.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoListWith(this, merger, iters);\n    };\n\n    List.prototype.mergeDeep = function(/*...iters*/) {\n      return mergeIntoListWith(this, deepMerger, arguments);\n    };\n\n    List.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoListWith(this, deepMergerWith(merger), iters);\n    };\n\n    List.prototype.setSize = function(size) {\n      return setListBounds(this, 0, size);\n    };\n\n    // @pragma Iteration\n\n    List.prototype.slice = function(begin, end) {\n      var size = this.size;\n      if (wholeSlice(begin, end, size)) {\n        return this;\n      }\n      return setListBounds(\n        this,\n        resolveBegin(begin, size),\n        resolveEnd(end, size)\n      );\n    };\n\n    List.prototype.__iterator = function(type, reverse) {\n      var index = 0;\n      var values = iterateList(this, reverse);\n      return new Iterator(function()  {\n        var value = values();\n        return value === DONE ?\n          iteratorDone() :\n          iteratorValue(type, index++, value);\n      });\n    };\n\n    List.prototype.__iterate = function(fn, reverse) {\n      var index = 0;\n      var values = iterateList(this, reverse);\n      var value;\n      while ((value = values()) !== DONE) {\n        if (fn(value, index++, this) === false) {\n          break;\n        }\n      }\n      return index;\n    };\n\n    List.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        return this;\n      }\n      return makeList(this._origin, this._capacity, this._level, this._root, this._tail, ownerID, this.__hash);\n    };\n\n\n  function isList(maybeList) {\n    return !!(maybeList && maybeList[IS_LIST_SENTINEL]);\n  }\n\n  List.isList = isList;\n\n  var IS_LIST_SENTINEL = '@@__IMMUTABLE_LIST__@@';\n\n  var ListPrototype = List.prototype;\n  ListPrototype[IS_LIST_SENTINEL] = true;\n  ListPrototype[DELETE] = ListPrototype.remove;\n  ListPrototype.setIn = MapPrototype.setIn;\n  ListPrototype.deleteIn =\n  ListPrototype.removeIn = MapPrototype.removeIn;\n  ListPrototype.update = MapPrototype.update;\n  ListPrototype.updateIn = MapPrototype.updateIn;\n  ListPrototype.mergeIn = MapPrototype.mergeIn;\n  ListPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n  ListPrototype.withMutations = MapPrototype.withMutations;\n  ListPrototype.asMutable = MapPrototype.asMutable;\n  ListPrototype.asImmutable = MapPrototype.asImmutable;\n  ListPrototype.wasAltered = MapPrototype.wasAltered;\n\n\n\n    function VNode(array, ownerID) {\n      this.array = array;\n      this.ownerID = ownerID;\n    }\n\n    // TODO: seems like these methods are very similar\n\n    VNode.prototype.removeBefore = function(ownerID, level, index) {\n      if (index === level ? 1 << level : 0 || this.array.length === 0) {\n        return this;\n      }\n      var originIndex = (index >>> level) & MASK;\n      if (originIndex >= this.array.length) {\n        return new VNode([], ownerID);\n      }\n      var removingFirst = originIndex === 0;\n      var newChild;\n      if (level > 0) {\n        var oldChild = this.array[originIndex];\n        newChild = oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);\n        if (newChild === oldChild && removingFirst) {\n          return this;\n        }\n      }\n      if (removingFirst && !newChild) {\n        return this;\n      }\n      var editable = editableVNode(this, ownerID);\n      if (!removingFirst) {\n        for (var ii = 0; ii < originIndex; ii++) {\n          editable.array[ii] = undefined;\n        }\n      }\n      if (newChild) {\n        editable.array[originIndex] = newChild;\n      }\n      return editable;\n    };\n\n    VNode.prototype.removeAfter = function(ownerID, level, index) {\n      if (index === (level ? 1 << level : 0) || this.array.length === 0) {\n        return this;\n      }\n      var sizeIndex = ((index - 1) >>> level) & MASK;\n      if (sizeIndex >= this.array.length) {\n        return this;\n      }\n\n      var newChild;\n      if (level > 0) {\n        var oldChild = this.array[sizeIndex];\n        newChild = oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);\n        if (newChild === oldChild && sizeIndex === this.array.length - 1) {\n          return this;\n        }\n      }\n\n      var editable = editableVNode(this, ownerID);\n      editable.array.splice(sizeIndex + 1);\n      if (newChild) {\n        editable.array[sizeIndex] = newChild;\n      }\n      return editable;\n    };\n\n\n\n  var DONE = {};\n\n  function iterateList(list, reverse) {\n    var left = list._origin;\n    var right = list._capacity;\n    var tailPos = getTailOffset(right);\n    var tail = list._tail;\n\n    return iterateNodeOrLeaf(list._root, list._level, 0);\n\n    function iterateNodeOrLeaf(node, level, offset) {\n      return level === 0 ?\n        iterateLeaf(node, offset) :\n        iterateNode(node, level, offset);\n    }\n\n    function iterateLeaf(node, offset) {\n      var array = offset === tailPos ? tail && tail.array : node && node.array;\n      var from = offset > left ? 0 : left - offset;\n      var to = right - offset;\n      if (to > SIZE) {\n        to = SIZE;\n      }\n      return function()  {\n        if (from === to) {\n          return DONE;\n        }\n        var idx = reverse ? --to : from++;\n        return array && array[idx];\n      };\n    }\n\n    function iterateNode(node, level, offset) {\n      var values;\n      var array = node && node.array;\n      var from = offset > left ? 0 : (left - offset) >> level;\n      var to = ((right - offset) >> level) + 1;\n      if (to > SIZE) {\n        to = SIZE;\n      }\n      return function()  {\n        do {\n          if (values) {\n            var value = values();\n            if (value !== DONE) {\n              return value;\n            }\n            values = null;\n          }\n          if (from === to) {\n            return DONE;\n          }\n          var idx = reverse ? --to : from++;\n          values = iterateNodeOrLeaf(\n            array && array[idx], level - SHIFT, offset + (idx << level)\n          );\n        } while (true);\n      };\n    }\n  }\n\n  function makeList(origin, capacity, level, root, tail, ownerID, hash) {\n    var list = Object.create(ListPrototype);\n    list.size = capacity - origin;\n    list._origin = origin;\n    list._capacity = capacity;\n    list._level = level;\n    list._root = root;\n    list._tail = tail;\n    list.__ownerID = ownerID;\n    list.__hash = hash;\n    list.__altered = false;\n    return list;\n  }\n\n  var EMPTY_LIST;\n  function emptyList() {\n    return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));\n  }\n\n  function updateList(list, index, value) {\n    index = wrapIndex(list, index);\n\n    if (index !== index) {\n      return list;\n    }\n\n    if (index >= list.size || index < 0) {\n      return list.withMutations(function(list ) {\n        index < 0 ?\n          setListBounds(list, index).set(0, value) :\n          setListBounds(list, 0, index + 1).set(index, value)\n      });\n    }\n\n    index += list._origin;\n\n    var newTail = list._tail;\n    var newRoot = list._root;\n    var didAlter = MakeRef(DID_ALTER);\n    if (index >= getTailOffset(list._capacity)) {\n      newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);\n    } else {\n      newRoot = updateVNode(newRoot, list.__ownerID, list._level, index, value, didAlter);\n    }\n\n    if (!didAlter.value) {\n      return list;\n    }\n\n    if (list.__ownerID) {\n      list._root = newRoot;\n      list._tail = newTail;\n      list.__hash = undefined;\n      list.__altered = true;\n      return list;\n    }\n    return makeList(list._origin, list._capacity, list._level, newRoot, newTail);\n  }\n\n  function updateVNode(node, ownerID, level, index, value, didAlter) {\n    var idx = (index >>> level) & MASK;\n    var nodeHas = node && idx < node.array.length;\n    if (!nodeHas && value === undefined) {\n      return node;\n    }\n\n    var newNode;\n\n    if (level > 0) {\n      var lowerNode = node && node.array[idx];\n      var newLowerNode = updateVNode(lowerNode, ownerID, level - SHIFT, index, value, didAlter);\n      if (newLowerNode === lowerNode) {\n        return node;\n      }\n      newNode = editableVNode(node, ownerID);\n      newNode.array[idx] = newLowerNode;\n      return newNode;\n    }\n\n    if (nodeHas && node.array[idx] === value) {\n      return node;\n    }\n\n    SetRef(didAlter);\n\n    newNode = editableVNode(node, ownerID);\n    if (value === undefined && idx === newNode.array.length - 1) {\n      newNode.array.pop();\n    } else {\n      newNode.array[idx] = value;\n    }\n    return newNode;\n  }\n\n  function editableVNode(node, ownerID) {\n    if (ownerID && node && ownerID === node.ownerID) {\n      return node;\n    }\n    return new VNode(node ? node.array.slice() : [], ownerID);\n  }\n\n  function listNodeFor(list, rawIndex) {\n    if (rawIndex >= getTailOffset(list._capacity)) {\n      return list._tail;\n    }\n    if (rawIndex < 1 << (list._level + SHIFT)) {\n      var node = list._root;\n      var level = list._level;\n      while (node && level > 0) {\n        node = node.array[(rawIndex >>> level) & MASK];\n        level -= SHIFT;\n      }\n      return node;\n    }\n  }\n\n  function setListBounds(list, begin, end) {\n    // Sanitize begin & end using this shorthand for ToInt32(argument)\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n    if (begin !== undefined) {\n      begin = begin | 0;\n    }\n    if (end !== undefined) {\n      end = end | 0;\n    }\n    var owner = list.__ownerID || new OwnerID();\n    var oldOrigin = list._origin;\n    var oldCapacity = list._capacity;\n    var newOrigin = oldOrigin + begin;\n    var newCapacity = end === undefined ? oldCapacity : end < 0 ? oldCapacity + end : oldOrigin + end;\n    if (newOrigin === oldOrigin && newCapacity === oldCapacity) {\n      return list;\n    }\n\n    // If it's going to end after it starts, it's empty.\n    if (newOrigin >= newCapacity) {\n      return list.clear();\n    }\n\n    var newLevel = list._level;\n    var newRoot = list._root;\n\n    // New origin might need creating a higher root.\n    var offsetShift = 0;\n    while (newOrigin + offsetShift < 0) {\n      newRoot = new VNode(newRoot && newRoot.array.length ? [undefined, newRoot] : [], owner);\n      newLevel += SHIFT;\n      offsetShift += 1 << newLevel;\n    }\n    if (offsetShift) {\n      newOrigin += offsetShift;\n      oldOrigin += offsetShift;\n      newCapacity += offsetShift;\n      oldCapacity += offsetShift;\n    }\n\n    var oldTailOffset = getTailOffset(oldCapacity);\n    var newTailOffset = getTailOffset(newCapacity);\n\n    // New size might need creating a higher root.\n    while (newTailOffset >= 1 << (newLevel + SHIFT)) {\n      newRoot = new VNode(newRoot && newRoot.array.length ? [newRoot] : [], owner);\n      newLevel += SHIFT;\n    }\n\n    // Locate or create the new tail.\n    var oldTail = list._tail;\n    var newTail = newTailOffset < oldTailOffset ?\n      listNodeFor(list, newCapacity - 1) :\n      newTailOffset > oldTailOffset ? new VNode([], owner) : oldTail;\n\n    // Merge Tail into tree.\n    if (oldTail && newTailOffset > oldTailOffset && newOrigin < oldCapacity && oldTail.array.length) {\n      newRoot = editableVNode(newRoot, owner);\n      var node = newRoot;\n      for (var level = newLevel; level > SHIFT; level -= SHIFT) {\n        var idx = (oldTailOffset >>> level) & MASK;\n        node = node.array[idx] = editableVNode(node.array[idx], owner);\n      }\n      node.array[(oldTailOffset >>> SHIFT) & MASK] = oldTail;\n    }\n\n    // If the size has been reduced, there's a chance the tail needs to be trimmed.\n    if (newCapacity < oldCapacity) {\n      newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);\n    }\n\n    // If the new origin is within the tail, then we do not need a root.\n    if (newOrigin >= newTailOffset) {\n      newOrigin -= newTailOffset;\n      newCapacity -= newTailOffset;\n      newLevel = SHIFT;\n      newRoot = null;\n      newTail = newTail && newTail.removeBefore(owner, 0, newOrigin);\n\n    // Otherwise, if the root has been trimmed, garbage collect.\n    } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {\n      offsetShift = 0;\n\n      // Identify the new top root node of the subtree of the old root.\n      while (newRoot) {\n        var beginIndex = (newOrigin >>> newLevel) & MASK;\n        if (beginIndex !== (newTailOffset >>> newLevel) & MASK) {\n          break;\n        }\n        if (beginIndex) {\n          offsetShift += (1 << newLevel) * beginIndex;\n        }\n        newLevel -= SHIFT;\n        newRoot = newRoot.array[beginIndex];\n      }\n\n      // Trim the new sides of the new root.\n      if (newRoot && newOrigin > oldOrigin) {\n        newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);\n      }\n      if (newRoot && newTailOffset < oldTailOffset) {\n        newRoot = newRoot.removeAfter(owner, newLevel, newTailOffset - offsetShift);\n      }\n      if (offsetShift) {\n        newOrigin -= offsetShift;\n        newCapacity -= offsetShift;\n      }\n    }\n\n    if (list.__ownerID) {\n      list.size = newCapacity - newOrigin;\n      list._origin = newOrigin;\n      list._capacity = newCapacity;\n      list._level = newLevel;\n      list._root = newRoot;\n      list._tail = newTail;\n      list.__hash = undefined;\n      list.__altered = true;\n      return list;\n    }\n    return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);\n  }\n\n  function mergeIntoListWith(list, merger, iterables) {\n    var iters = [];\n    var maxSize = 0;\n    for (var ii = 0; ii < iterables.length; ii++) {\n      var value = iterables[ii];\n      var iter = IndexedIterable(value);\n      if (iter.size > maxSize) {\n        maxSize = iter.size;\n      }\n      if (!isIterable(value)) {\n        iter = iter.map(function(v ) {return fromJS(v)});\n      }\n      iters.push(iter);\n    }\n    if (maxSize > list.size) {\n      list = list.setSize(maxSize);\n    }\n    return mergeIntoCollectionWith(list, merger, iters);\n  }\n\n  function getTailOffset(size) {\n    return size < SIZE ? 0 : (((size - 1) >>> SHIFT) << SHIFT);\n  }\n\n  createClass(OrderedMap, Map);\n\n    // @pragma Construction\n\n    function OrderedMap(value) {\n      return value === null || value === undefined ? emptyOrderedMap() :\n        isOrderedMap(value) ? value :\n        emptyOrderedMap().withMutations(function(map ) {\n          var iter = KeyedIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v, k)  {return map.set(k, v)});\n        });\n    }\n\n    OrderedMap.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    OrderedMap.prototype.toString = function() {\n      return this.__toString('OrderedMap {', '}');\n    };\n\n    // @pragma Access\n\n    OrderedMap.prototype.get = function(k, notSetValue) {\n      var index = this._map.get(k);\n      return index !== undefined ? this._list.get(index)[1] : notSetValue;\n    };\n\n    // @pragma Modification\n\n    OrderedMap.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._map.clear();\n        this._list.clear();\n        return this;\n      }\n      return emptyOrderedMap();\n    };\n\n    OrderedMap.prototype.set = function(k, v) {\n      return updateOrderedMap(this, k, v);\n    };\n\n    OrderedMap.prototype.remove = function(k) {\n      return updateOrderedMap(this, k, NOT_SET);\n    };\n\n    OrderedMap.prototype.wasAltered = function() {\n      return this._map.wasAltered() || this._list.wasAltered();\n    };\n\n    OrderedMap.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._list.__iterate(\n        function(entry ) {return entry && fn(entry[1], entry[0], this$0)},\n        reverse\n      );\n    };\n\n    OrderedMap.prototype.__iterator = function(type, reverse) {\n      return this._list.fromEntrySeq().__iterator(type, reverse);\n    };\n\n    OrderedMap.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map.__ensureOwner(ownerID);\n      var newList = this._list.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        this._list = newList;\n        return this;\n      }\n      return makeOrderedMap(newMap, newList, ownerID, this.__hash);\n    };\n\n\n  function isOrderedMap(maybeOrderedMap) {\n    return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);\n  }\n\n  OrderedMap.isOrderedMap = isOrderedMap;\n\n  OrderedMap.prototype[IS_ORDERED_SENTINEL] = true;\n  OrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;\n\n\n\n  function makeOrderedMap(map, list, ownerID, hash) {\n    var omap = Object.create(OrderedMap.prototype);\n    omap.size = map ? map.size : 0;\n    omap._map = map;\n    omap._list = list;\n    omap.__ownerID = ownerID;\n    omap.__hash = hash;\n    return omap;\n  }\n\n  var EMPTY_ORDERED_MAP;\n  function emptyOrderedMap() {\n    return EMPTY_ORDERED_MAP || (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()));\n  }\n\n  function updateOrderedMap(omap, k, v) {\n    var map = omap._map;\n    var list = omap._list;\n    var i = map.get(k);\n    var has = i !== undefined;\n    var newMap;\n    var newList;\n    if (v === NOT_SET) { // removed\n      if (!has) {\n        return omap;\n      }\n      if (list.size >= SIZE && list.size >= map.size * 2) {\n        newList = list.filter(function(entry, idx)  {return entry !== undefined && i !== idx});\n        newMap = newList.toKeyedSeq().map(function(entry ) {return entry[0]}).flip().toMap();\n        if (omap.__ownerID) {\n          newMap.__ownerID = newList.__ownerID = omap.__ownerID;\n        }\n      } else {\n        newMap = map.remove(k);\n        newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);\n      }\n    } else {\n      if (has) {\n        if (v === list.get(i)[1]) {\n          return omap;\n        }\n        newMap = map;\n        newList = list.set(i, [k, v]);\n      } else {\n        newMap = map.set(k, list.size);\n        newList = list.set(list.size, [k, v]);\n      }\n    }\n    if (omap.__ownerID) {\n      omap.size = newMap.size;\n      omap._map = newMap;\n      omap._list = newList;\n      omap.__hash = undefined;\n      return omap;\n    }\n    return makeOrderedMap(newMap, newList);\n  }\n\n  createClass(ToKeyedSequence, KeyedSeq);\n    function ToKeyedSequence(indexed, useKeys) {\n      this._iter = indexed;\n      this._useKeys = useKeys;\n      this.size = indexed.size;\n    }\n\n    ToKeyedSequence.prototype.get = function(key, notSetValue) {\n      return this._iter.get(key, notSetValue);\n    };\n\n    ToKeyedSequence.prototype.has = function(key) {\n      return this._iter.has(key);\n    };\n\n    ToKeyedSequence.prototype.valueSeq = function() {\n      return this._iter.valueSeq();\n    };\n\n    ToKeyedSequence.prototype.reverse = function() {var this$0 = this;\n      var reversedSequence = reverseFactory(this, true);\n      if (!this._useKeys) {\n        reversedSequence.valueSeq = function()  {return this$0._iter.toSeq().reverse()};\n      }\n      return reversedSequence;\n    };\n\n    ToKeyedSequence.prototype.map = function(mapper, context) {var this$0 = this;\n      var mappedSequence = mapFactory(this, mapper, context);\n      if (!this._useKeys) {\n        mappedSequence.valueSeq = function()  {return this$0._iter.toSeq().map(mapper, context)};\n      }\n      return mappedSequence;\n    };\n\n    ToKeyedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var ii;\n      return this._iter.__iterate(\n        this._useKeys ?\n          function(v, k)  {return fn(v, k, this$0)} :\n          ((ii = reverse ? resolveSize(this) : 0),\n            function(v ) {return fn(v, reverse ? --ii : ii++, this$0)}),\n        reverse\n      );\n    };\n\n    ToKeyedSequence.prototype.__iterator = function(type, reverse) {\n      if (this._useKeys) {\n        return this._iter.__iterator(type, reverse);\n      }\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      var ii = reverse ? resolveSize(this) : 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, reverse ? --ii : ii++, step.value, step);\n      });\n    };\n\n  ToKeyedSequence.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n  createClass(ToIndexedSequence, IndexedSeq);\n    function ToIndexedSequence(iter) {\n      this._iter = iter;\n      this.size = iter.size;\n    }\n\n    ToIndexedSequence.prototype.includes = function(value) {\n      return this._iter.includes(value);\n    };\n\n    ToIndexedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      return this._iter.__iterate(function(v ) {return fn(v, iterations++, this$0)}, reverse);\n    };\n\n    ToIndexedSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, iterations++, step.value, step)\n      });\n    };\n\n\n\n  createClass(ToSetSequence, SetSeq);\n    function ToSetSequence(iter) {\n      this._iter = iter;\n      this.size = iter.size;\n    }\n\n    ToSetSequence.prototype.has = function(key) {\n      return this._iter.includes(key);\n    };\n\n    ToSetSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._iter.__iterate(function(v ) {return fn(v, v, this$0)}, reverse);\n    };\n\n    ToSetSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, step.value, step.value, step);\n      });\n    };\n\n\n\n  createClass(FromEntriesSequence, KeyedSeq);\n    function FromEntriesSequence(entries) {\n      this._iter = entries;\n      this.size = entries.size;\n    }\n\n    FromEntriesSequence.prototype.entrySeq = function() {\n      return this._iter.toSeq();\n    };\n\n    FromEntriesSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._iter.__iterate(function(entry ) {\n        // Check if entry exists first so array access doesn't throw for holes\n        // in the parent iteration.\n        if (entry) {\n          validateEntry(entry);\n          var indexedIterable = isIterable(entry);\n          return fn(\n            indexedIterable ? entry.get(1) : entry[1],\n            indexedIterable ? entry.get(0) : entry[0],\n            this$0\n          );\n        }\n      }, reverse);\n    };\n\n    FromEntriesSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      return new Iterator(function()  {\n        while (true) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          var entry = step.value;\n          // Check if entry exists first so array access doesn't throw for holes\n          // in the parent iteration.\n          if (entry) {\n            validateEntry(entry);\n            var indexedIterable = isIterable(entry);\n            return iteratorValue(\n              type,\n              indexedIterable ? entry.get(0) : entry[0],\n              indexedIterable ? entry.get(1) : entry[1],\n              step\n            );\n          }\n        }\n      });\n    };\n\n\n  ToIndexedSequence.prototype.cacheResult =\n  ToKeyedSequence.prototype.cacheResult =\n  ToSetSequence.prototype.cacheResult =\n  FromEntriesSequence.prototype.cacheResult =\n    cacheResultThrough;\n\n\n  function flipFactory(iterable) {\n    var flipSequence = makeSequence(iterable);\n    flipSequence._iter = iterable;\n    flipSequence.size = iterable.size;\n    flipSequence.flip = function()  {return iterable};\n    flipSequence.reverse = function () {\n      var reversedSequence = iterable.reverse.apply(this); // super.reverse()\n      reversedSequence.flip = function()  {return iterable.reverse()};\n      return reversedSequence;\n    };\n    flipSequence.has = function(key ) {return iterable.includes(key)};\n    flipSequence.includes = function(key ) {return iterable.has(key)};\n    flipSequence.cacheResult = cacheResultThrough;\n    flipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(function(v, k)  {return fn(k, v, this$0) !== false}, reverse);\n    }\n    flipSequence.__iteratorUncached = function(type, reverse) {\n      if (type === ITERATE_ENTRIES) {\n        var iterator = iterable.__iterator(type, reverse);\n        return new Iterator(function()  {\n          var step = iterator.next();\n          if (!step.done) {\n            var k = step.value[0];\n            step.value[0] = step.value[1];\n            step.value[1] = k;\n          }\n          return step;\n        });\n      }\n      return iterable.__iterator(\n        type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES,\n        reverse\n      );\n    }\n    return flipSequence;\n  }\n\n\n  function mapFactory(iterable, mapper, context) {\n    var mappedSequence = makeSequence(iterable);\n    mappedSequence.size = iterable.size;\n    mappedSequence.has = function(key ) {return iterable.has(key)};\n    mappedSequence.get = function(key, notSetValue)  {\n      var v = iterable.get(key, NOT_SET);\n      return v === NOT_SET ?\n        notSetValue :\n        mapper.call(context, v, key, iterable);\n    };\n    mappedSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(\n        function(v, k, c)  {return fn(mapper.call(context, v, k, c), k, this$0) !== false},\n        reverse\n      );\n    }\n    mappedSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      return new Iterator(function()  {\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var key = entry[0];\n        return iteratorValue(\n          type,\n          key,\n          mapper.call(context, entry[1], key, iterable),\n          step\n        );\n      });\n    }\n    return mappedSequence;\n  }\n\n\n  function reverseFactory(iterable, useKeys) {\n    var reversedSequence = makeSequence(iterable);\n    reversedSequence._iter = iterable;\n    reversedSequence.size = iterable.size;\n    reversedSequence.reverse = function()  {return iterable};\n    if (iterable.flip) {\n      reversedSequence.flip = function () {\n        var flipSequence = flipFactory(iterable);\n        flipSequence.reverse = function()  {return iterable.flip()};\n        return flipSequence;\n      };\n    }\n    reversedSequence.get = function(key, notSetValue) \n      {return iterable.get(useKeys ? key : -1 - key, notSetValue)};\n    reversedSequence.has = function(key )\n      {return iterable.has(useKeys ? key : -1 - key)};\n    reversedSequence.includes = function(value ) {return iterable.includes(value)};\n    reversedSequence.cacheResult = cacheResultThrough;\n    reversedSequence.__iterate = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(function(v, k)  {return fn(v, k, this$0)}, !reverse);\n    };\n    reversedSequence.__iterator =\n      function(type, reverse)  {return iterable.__iterator(type, !reverse)};\n    return reversedSequence;\n  }\n\n\n  function filterFactory(iterable, predicate, context, useKeys) {\n    var filterSequence = makeSequence(iterable);\n    if (useKeys) {\n      filterSequence.has = function(key ) {\n        var v = iterable.get(key, NOT_SET);\n        return v !== NOT_SET && !!predicate.call(context, v, key, iterable);\n      };\n      filterSequence.get = function(key, notSetValue)  {\n        var v = iterable.get(key, NOT_SET);\n        return v !== NOT_SET && predicate.call(context, v, key, iterable) ?\n          v : notSetValue;\n      };\n    }\n    filterSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c)  {\n        if (predicate.call(context, v, k, c)) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0);\n        }\n      }, reverse);\n      return iterations;\n    };\n    filterSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (true) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          var entry = step.value;\n          var key = entry[0];\n          var value = entry[1];\n          if (predicate.call(context, value, key, iterable)) {\n            return iteratorValue(type, useKeys ? key : iterations++, value, step);\n          }\n        }\n      });\n    }\n    return filterSequence;\n  }\n\n\n  function countByFactory(iterable, grouper, context) {\n    var groups = Map().asMutable();\n    iterable.__iterate(function(v, k)  {\n      groups.update(\n        grouper.call(context, v, k, iterable),\n        0,\n        function(a ) {return a + 1}\n      );\n    });\n    return groups.asImmutable();\n  }\n\n\n  function groupByFactory(iterable, grouper, context) {\n    var isKeyedIter = isKeyed(iterable);\n    var groups = (isOrdered(iterable) ? OrderedMap() : Map()).asMutable();\n    iterable.__iterate(function(v, k)  {\n      groups.update(\n        grouper.call(context, v, k, iterable),\n        function(a ) {return (a = a || [], a.push(isKeyedIter ? [k, v] : v), a)}\n      );\n    });\n    var coerce = iterableClass(iterable);\n    return groups.map(function(arr ) {return reify(iterable, coerce(arr))});\n  }\n\n\n  function sliceFactory(iterable, begin, end, useKeys) {\n    var originalSize = iterable.size;\n\n    // Sanitize begin & end using this shorthand for ToInt32(argument)\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n    if (begin !== undefined) {\n      begin = begin | 0;\n    }\n    if (end !== undefined) {\n      if (end === Infinity) {\n        end = originalSize;\n      } else {\n        end = end | 0;\n      }\n    }\n\n    if (wholeSlice(begin, end, originalSize)) {\n      return iterable;\n    }\n\n    var resolvedBegin = resolveBegin(begin, originalSize);\n    var resolvedEnd = resolveEnd(end, originalSize);\n\n    // begin or end will be NaN if they were provided as negative numbers and\n    // this iterable's size is unknown. In that case, cache first so there is\n    // a known size and these do not resolve to NaN.\n    if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {\n      return sliceFactory(iterable.toSeq().cacheResult(), begin, end, useKeys);\n    }\n\n    // Note: resolvedEnd is undefined when the original sequence's length is\n    // unknown and this slice did not supply an end and should contain all\n    // elements after resolvedBegin.\n    // In that case, resolvedSize will be NaN and sliceSize will remain undefined.\n    var resolvedSize = resolvedEnd - resolvedBegin;\n    var sliceSize;\n    if (resolvedSize === resolvedSize) {\n      sliceSize = resolvedSize < 0 ? 0 : resolvedSize;\n    }\n\n    var sliceSeq = makeSequence(iterable);\n\n    // If iterable.size is undefined, the size of the realized sliceSeq is\n    // unknown at this point unless the number of items to slice is 0\n    sliceSeq.size = sliceSize === 0 ? sliceSize : iterable.size && sliceSize || undefined;\n\n    if (!useKeys && isSeq(iterable) && sliceSize >= 0) {\n      sliceSeq.get = function (index, notSetValue) {\n        index = wrapIndex(this, index);\n        return index >= 0 && index < sliceSize ?\n          iterable.get(index + resolvedBegin, notSetValue) :\n          notSetValue;\n      }\n    }\n\n    sliceSeq.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      if (sliceSize === 0) {\n        return 0;\n      }\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var skipped = 0;\n      var isSkipping = true;\n      var iterations = 0;\n      iterable.__iterate(function(v, k)  {\n        if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0) !== false &&\n                 iterations !== sliceSize;\n        }\n      });\n      return iterations;\n    };\n\n    sliceSeq.__iteratorUncached = function(type, reverse) {\n      if (sliceSize !== 0 && reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      // Don't bother instantiating parent iterator if taking 0.\n      var iterator = sliceSize !== 0 && iterable.__iterator(type, reverse);\n      var skipped = 0;\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (skipped++ < resolvedBegin) {\n          iterator.next();\n        }\n        if (++iterations > sliceSize) {\n          return iteratorDone();\n        }\n        var step = iterator.next();\n        if (useKeys || type === ITERATE_VALUES) {\n          return step;\n        } else if (type === ITERATE_KEYS) {\n          return iteratorValue(type, iterations - 1, undefined, step);\n        } else {\n          return iteratorValue(type, iterations - 1, step.value[1], step);\n        }\n      });\n    }\n\n    return sliceSeq;\n  }\n\n\n  function takeWhileFactory(iterable, predicate, context) {\n    var takeSequence = makeSequence(iterable);\n    takeSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c) \n        {return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$0)}\n      );\n      return iterations;\n    };\n    takeSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var iterating = true;\n      return new Iterator(function()  {\n        if (!iterating) {\n          return iteratorDone();\n        }\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var k = entry[0];\n        var v = entry[1];\n        if (!predicate.call(context, v, k, this$0)) {\n          iterating = false;\n          return iteratorDone();\n        }\n        return type === ITERATE_ENTRIES ? step :\n          iteratorValue(type, k, v, step);\n      });\n    };\n    return takeSequence;\n  }\n\n\n  function skipWhileFactory(iterable, predicate, context, useKeys) {\n    var skipSequence = makeSequence(iterable);\n    skipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var isSkipping = true;\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c)  {\n        if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0);\n        }\n      });\n      return iterations;\n    };\n    skipSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var skipping = true;\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step, k, v;\n        do {\n          step = iterator.next();\n          if (step.done) {\n            if (useKeys || type === ITERATE_VALUES) {\n              return step;\n            } else if (type === ITERATE_KEYS) {\n              return iteratorValue(type, iterations++, undefined, step);\n            } else {\n              return iteratorValue(type, iterations++, step.value[1], step);\n            }\n          }\n          var entry = step.value;\n          k = entry[0];\n          v = entry[1];\n          skipping && (skipping = predicate.call(context, v, k, this$0));\n        } while (skipping);\n        return type === ITERATE_ENTRIES ? step :\n          iteratorValue(type, k, v, step);\n      });\n    };\n    return skipSequence;\n  }\n\n\n  function concatFactory(iterable, values) {\n    var isKeyedIterable = isKeyed(iterable);\n    var iters = [iterable].concat(values).map(function(v ) {\n      if (!isIterable(v)) {\n        v = isKeyedIterable ?\n          keyedSeqFromValue(v) :\n          indexedSeqFromValue(Array.isArray(v) ? v : [v]);\n      } else if (isKeyedIterable) {\n        v = KeyedIterable(v);\n      }\n      return v;\n    }).filter(function(v ) {return v.size !== 0});\n\n    if (iters.length === 0) {\n      return iterable;\n    }\n\n    if (iters.length === 1) {\n      var singleton = iters[0];\n      if (singleton === iterable ||\n          isKeyedIterable && isKeyed(singleton) ||\n          isIndexed(iterable) && isIndexed(singleton)) {\n        return singleton;\n      }\n    }\n\n    var concatSeq = new ArraySeq(iters);\n    if (isKeyedIterable) {\n      concatSeq = concatSeq.toKeyedSeq();\n    } else if (!isIndexed(iterable)) {\n      concatSeq = concatSeq.toSetSeq();\n    }\n    concatSeq = concatSeq.flatten(true);\n    concatSeq.size = iters.reduce(\n      function(sum, seq)  {\n        if (sum !== undefined) {\n          var size = seq.size;\n          if (size !== undefined) {\n            return sum + size;\n          }\n        }\n      },\n      0\n    );\n    return concatSeq;\n  }\n\n\n  function flattenFactory(iterable, depth, useKeys) {\n    var flatSequence = makeSequence(iterable);\n    flatSequence.__iterateUncached = function(fn, reverse) {\n      var iterations = 0;\n      var stopped = false;\n      function flatDeep(iter, currentDepth) {var this$0 = this;\n        iter.__iterate(function(v, k)  {\n          if ((!depth || currentDepth < depth) && isIterable(v)) {\n            flatDeep(v, currentDepth + 1);\n          } else if (fn(v, useKeys ? k : iterations++, this$0) === false) {\n            stopped = true;\n          }\n          return !stopped;\n        }, reverse);\n      }\n      flatDeep(iterable, 0);\n      return iterations;\n    }\n    flatSequence.__iteratorUncached = function(type, reverse) {\n      var iterator = iterable.__iterator(type, reverse);\n      var stack = [];\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (iterator) {\n          var step = iterator.next();\n          if (step.done !== false) {\n            iterator = stack.pop();\n            continue;\n          }\n          var v = step.value;\n          if (type === ITERATE_ENTRIES) {\n            v = v[1];\n          }\n          if ((!depth || stack.length < depth) && isIterable(v)) {\n            stack.push(iterator);\n            iterator = v.__iterator(type, reverse);\n          } else {\n            return useKeys ? step : iteratorValue(type, iterations++, v, step);\n          }\n        }\n        return iteratorDone();\n      });\n    }\n    return flatSequence;\n  }\n\n\n  function flatMapFactory(iterable, mapper, context) {\n    var coerce = iterableClass(iterable);\n    return iterable.toSeq().map(\n      function(v, k)  {return coerce(mapper.call(context, v, k, iterable))}\n    ).flatten(true);\n  }\n\n\n  function interposeFactory(iterable, separator) {\n    var interposedSequence = makeSequence(iterable);\n    interposedSequence.size = iterable.size && iterable.size * 2 -1;\n    interposedSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      iterable.__iterate(function(v, k) \n        {return (!iterations || fn(separator, iterations++, this$0) !== false) &&\n        fn(v, iterations++, this$0) !== false},\n        reverse\n      );\n      return iterations;\n    };\n    interposedSequence.__iteratorUncached = function(type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_VALUES, reverse);\n      var iterations = 0;\n      var step;\n      return new Iterator(function()  {\n        if (!step || iterations % 2) {\n          step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n        }\n        return iterations % 2 ?\n          iteratorValue(type, iterations++, separator) :\n          iteratorValue(type, iterations++, step.value, step);\n      });\n    };\n    return interposedSequence;\n  }\n\n\n  function sortFactory(iterable, comparator, mapper) {\n    if (!comparator) {\n      comparator = defaultComparator;\n    }\n    var isKeyedIterable = isKeyed(iterable);\n    var index = 0;\n    var entries = iterable.toSeq().map(\n      function(v, k)  {return [k, v, index++, mapper ? mapper(v, k, iterable) : v]}\n    ).toArray();\n    entries.sort(function(a, b)  {return comparator(a[3], b[3]) || a[2] - b[2]}).forEach(\n      isKeyedIterable ?\n      function(v, i)  { entries[i].length = 2; } :\n      function(v, i)  { entries[i] = v[1]; }\n    );\n    return isKeyedIterable ? KeyedSeq(entries) :\n      isIndexed(iterable) ? IndexedSeq(entries) :\n      SetSeq(entries);\n  }\n\n\n  function maxFactory(iterable, comparator, mapper) {\n    if (!comparator) {\n      comparator = defaultComparator;\n    }\n    if (mapper) {\n      var entry = iterable.toSeq()\n        .map(function(v, k)  {return [v, mapper(v, k, iterable)]})\n        .reduce(function(a, b)  {return maxCompare(comparator, a[1], b[1]) ? b : a});\n      return entry && entry[0];\n    } else {\n      return iterable.reduce(function(a, b)  {return maxCompare(comparator, a, b) ? b : a});\n    }\n  }\n\n  function maxCompare(comparator, a, b) {\n    var comp = comparator(b, a);\n    // b is considered the new max if the comparator declares them equal, but\n    // they are not equal and b is in fact a nullish value.\n    return (comp === 0 && b !== a && (b === undefined || b === null || b !== b)) || comp > 0;\n  }\n\n\n  function zipWithFactory(keyIter, zipper, iters) {\n    var zipSequence = makeSequence(keyIter);\n    zipSequence.size = new ArraySeq(iters).map(function(i ) {return i.size}).min();\n    // Note: this a generic base implementation of __iterate in terms of\n    // __iterator which may be more generically useful in the future.\n    zipSequence.__iterate = function(fn, reverse) {\n      /* generic:\n      var iterator = this.__iterator(ITERATE_ENTRIES, reverse);\n      var step;\n      var iterations = 0;\n      while (!(step = iterator.next()).done) {\n        iterations++;\n        if (fn(step.value[1], step.value[0], this) === false) {\n          break;\n        }\n      }\n      return iterations;\n      */\n      // indexed:\n      var iterator = this.__iterator(ITERATE_VALUES, reverse);\n      var step;\n      var iterations = 0;\n      while (!(step = iterator.next()).done) {\n        if (fn(step.value, iterations++, this) === false) {\n          break;\n        }\n      }\n      return iterations;\n    };\n    zipSequence.__iteratorUncached = function(type, reverse) {\n      var iterators = iters.map(function(i )\n        {return (i = Iterable(i), getIterator(reverse ? i.reverse() : i))}\n      );\n      var iterations = 0;\n      var isDone = false;\n      return new Iterator(function()  {\n        var steps;\n        if (!isDone) {\n          steps = iterators.map(function(i ) {return i.next()});\n          isDone = steps.some(function(s ) {return s.done});\n        }\n        if (isDone) {\n          return iteratorDone();\n        }\n        return iteratorValue(\n          type,\n          iterations++,\n          zipper.apply(null, steps.map(function(s ) {return s.value}))\n        );\n      });\n    };\n    return zipSequence\n  }\n\n\n  // #pragma Helper Functions\n\n  function reify(iter, seq) {\n    return isSeq(iter) ? seq : iter.constructor(seq);\n  }\n\n  function validateEntry(entry) {\n    if (entry !== Object(entry)) {\n      throw new TypeError('Expected [K, V] tuple: ' + entry);\n    }\n  }\n\n  function resolveSize(iter) {\n    assertNotInfinite(iter.size);\n    return ensureSize(iter);\n  }\n\n  function iterableClass(iterable) {\n    return isKeyed(iterable) ? KeyedIterable :\n      isIndexed(iterable) ? IndexedIterable :\n      SetIterable;\n  }\n\n  function makeSequence(iterable) {\n    return Object.create(\n      (\n        isKeyed(iterable) ? KeyedSeq :\n        isIndexed(iterable) ? IndexedSeq :\n        SetSeq\n      ).prototype\n    );\n  }\n\n  function cacheResultThrough() {\n    if (this._iter.cacheResult) {\n      this._iter.cacheResult();\n      this.size = this._iter.size;\n      return this;\n    } else {\n      return Seq.prototype.cacheResult.call(this);\n    }\n  }\n\n  function defaultComparator(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n\n  function forceIterator(keyPath) {\n    var iter = getIterator(keyPath);\n    if (!iter) {\n      // Array might not be iterable in this environment, so we need a fallback\n      // to our wrapped type.\n      if (!isArrayLike(keyPath)) {\n        throw new TypeError('Expected iterable or array-like: ' + keyPath);\n      }\n      iter = getIterator(Iterable(keyPath));\n    }\n    return iter;\n  }\n\n  createClass(Record, KeyedCollection);\n\n    function Record(defaultValues, name) {\n      var hasInitialized;\n\n      var RecordType = function Record(values) {\n        if (values instanceof RecordType) {\n          return values;\n        }\n        if (!(this instanceof RecordType)) {\n          return new RecordType(values);\n        }\n        if (!hasInitialized) {\n          hasInitialized = true;\n          var keys = Object.keys(defaultValues);\n          setProps(RecordTypePrototype, keys);\n          RecordTypePrototype.size = keys.length;\n          RecordTypePrototype._name = name;\n          RecordTypePrototype._keys = keys;\n          RecordTypePrototype._defaultValues = defaultValues;\n        }\n        this._map = Map(values);\n      };\n\n      var RecordTypePrototype = RecordType.prototype = Object.create(RecordPrototype);\n      RecordTypePrototype.constructor = RecordType;\n\n      return RecordType;\n    }\n\n    Record.prototype.toString = function() {\n      return this.__toString(recordName(this) + ' {', '}');\n    };\n\n    // @pragma Access\n\n    Record.prototype.has = function(k) {\n      return this._defaultValues.hasOwnProperty(k);\n    };\n\n    Record.prototype.get = function(k, notSetValue) {\n      if (!this.has(k)) {\n        return notSetValue;\n      }\n      var defaultVal = this._defaultValues[k];\n      return this._map ? this._map.get(k, defaultVal) : defaultVal;\n    };\n\n    // @pragma Modification\n\n    Record.prototype.clear = function() {\n      if (this.__ownerID) {\n        this._map && this._map.clear();\n        return this;\n      }\n      var RecordType = this.constructor;\n      return RecordType._empty || (RecordType._empty = makeRecord(this, emptyMap()));\n    };\n\n    Record.prototype.set = function(k, v) {\n      if (!this.has(k)) {\n        throw new Error('Cannot set unknown key \"' + k + '\" on ' + recordName(this));\n      }\n      if (this._map && !this._map.has(k)) {\n        var defaultVal = this._defaultValues[k];\n        if (v === defaultVal) {\n          return this;\n        }\n      }\n      var newMap = this._map && this._map.set(k, v);\n      if (this.__ownerID || newMap === this._map) {\n        return this;\n      }\n      return makeRecord(this, newMap);\n    };\n\n    Record.prototype.remove = function(k) {\n      if (!this.has(k)) {\n        return this;\n      }\n      var newMap = this._map && this._map.remove(k);\n      if (this.__ownerID || newMap === this._map) {\n        return this;\n      }\n      return makeRecord(this, newMap);\n    };\n\n    Record.prototype.wasAltered = function() {\n      return this._map.wasAltered();\n    };\n\n    Record.prototype.__iterator = function(type, reverse) {var this$0 = this;\n      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterator(type, reverse);\n    };\n\n    Record.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterate(fn, reverse);\n    };\n\n    Record.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map && this._map.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        return this;\n      }\n      return makeRecord(this, newMap, ownerID);\n    };\n\n\n  var RecordPrototype = Record.prototype;\n  RecordPrototype[DELETE] = RecordPrototype.remove;\n  RecordPrototype.deleteIn =\n  RecordPrototype.removeIn = MapPrototype.removeIn;\n  RecordPrototype.merge = MapPrototype.merge;\n  RecordPrototype.mergeWith = MapPrototype.mergeWith;\n  RecordPrototype.mergeIn = MapPrototype.mergeIn;\n  RecordPrototype.mergeDeep = MapPrototype.mergeDeep;\n  RecordPrototype.mergeDeepWith = MapPrototype.mergeDeepWith;\n  RecordPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n  RecordPrototype.setIn = MapPrototype.setIn;\n  RecordPrototype.update = MapPrototype.update;\n  RecordPrototype.updateIn = MapPrototype.updateIn;\n  RecordPrototype.withMutations = MapPrototype.withMutations;\n  RecordPrototype.asMutable = MapPrototype.asMutable;\n  RecordPrototype.asImmutable = MapPrototype.asImmutable;\n\n\n  function makeRecord(likeRecord, map, ownerID) {\n    var record = Object.create(Object.getPrototypeOf(likeRecord));\n    record._map = map;\n    record.__ownerID = ownerID;\n    return record;\n  }\n\n  function recordName(record) {\n    return record._name || record.constructor.name || 'Record';\n  }\n\n  function setProps(prototype, names) {\n    try {\n      names.forEach(setProp.bind(undefined, prototype));\n    } catch (error) {\n      // Object.defineProperty failed. Probably IE8.\n    }\n  }\n\n  function setProp(prototype, name) {\n    Object.defineProperty(prototype, name, {\n      get: function() {\n        return this.get(name);\n      },\n      set: function(value) {\n        invariant(this.__ownerID, 'Cannot set on an immutable record.');\n        this.set(name, value);\n      }\n    });\n  }\n\n  createClass(Set, SetCollection);\n\n    // @pragma Construction\n\n    function Set(value) {\n      return value === null || value === undefined ? emptySet() :\n        isSet(value) && !isOrdered(value) ? value :\n        emptySet().withMutations(function(set ) {\n          var iter = SetIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v ) {return set.add(v)});\n        });\n    }\n\n    Set.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    Set.fromKeys = function(value) {\n      return this(KeyedIterable(value).keySeq());\n    };\n\n    Set.prototype.toString = function() {\n      return this.__toString('Set {', '}');\n    };\n\n    // @pragma Access\n\n    Set.prototype.has = function(value) {\n      return this._map.has(value);\n    };\n\n    // @pragma Modification\n\n    Set.prototype.add = function(value) {\n      return updateSet(this, this._map.set(value, true));\n    };\n\n    Set.prototype.remove = function(value) {\n      return updateSet(this, this._map.remove(value));\n    };\n\n    Set.prototype.clear = function() {\n      return updateSet(this, this._map.clear());\n    };\n\n    // @pragma Composition\n\n    Set.prototype.union = function() {var iters = SLICE$0.call(arguments, 0);\n      iters = iters.filter(function(x ) {return x.size !== 0});\n      if (iters.length === 0) {\n        return this;\n      }\n      if (this.size === 0 && !this.__ownerID && iters.length === 1) {\n        return this.constructor(iters[0]);\n      }\n      return this.withMutations(function(set ) {\n        for (var ii = 0; ii < iters.length; ii++) {\n          SetIterable(iters[ii]).forEach(function(value ) {return set.add(value)});\n        }\n      });\n    };\n\n    Set.prototype.intersect = function() {var iters = SLICE$0.call(arguments, 0);\n      if (iters.length === 0) {\n        return this;\n      }\n      iters = iters.map(function(iter ) {return SetIterable(iter)});\n      var originalSet = this;\n      return this.withMutations(function(set ) {\n        originalSet.forEach(function(value ) {\n          if (!iters.every(function(iter ) {return iter.includes(value)})) {\n            set.remove(value);\n          }\n        });\n      });\n    };\n\n    Set.prototype.subtract = function() {var iters = SLICE$0.call(arguments, 0);\n      if (iters.length === 0) {\n        return this;\n      }\n      iters = iters.map(function(iter ) {return SetIterable(iter)});\n      var originalSet = this;\n      return this.withMutations(function(set ) {\n        originalSet.forEach(function(value ) {\n          if (iters.some(function(iter ) {return iter.includes(value)})) {\n            set.remove(value);\n          }\n        });\n      });\n    };\n\n    Set.prototype.merge = function() {\n      return this.union.apply(this, arguments);\n    };\n\n    Set.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return this.union.apply(this, iters);\n    };\n\n    Set.prototype.sort = function(comparator) {\n      // Late binding\n      return OrderedSet(sortFactory(this, comparator));\n    };\n\n    Set.prototype.sortBy = function(mapper, comparator) {\n      // Late binding\n      return OrderedSet(sortFactory(this, comparator, mapper));\n    };\n\n    Set.prototype.wasAltered = function() {\n      return this._map.wasAltered();\n    };\n\n    Set.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._map.__iterate(function(_, k)  {return fn(k, k, this$0)}, reverse);\n    };\n\n    Set.prototype.__iterator = function(type, reverse) {\n      return this._map.map(function(_, k)  {return k}).__iterator(type, reverse);\n    };\n\n    Set.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        return this;\n      }\n      return this.__make(newMap, ownerID);\n    };\n\n\n  function isSet(maybeSet) {\n    return !!(maybeSet && maybeSet[IS_SET_SENTINEL]);\n  }\n\n  Set.isSet = isSet;\n\n  var IS_SET_SENTINEL = '@@__IMMUTABLE_SET__@@';\n\n  var SetPrototype = Set.prototype;\n  SetPrototype[IS_SET_SENTINEL] = true;\n  SetPrototype[DELETE] = SetPrototype.remove;\n  SetPrototype.mergeDeep = SetPrototype.merge;\n  SetPrototype.mergeDeepWith = SetPrototype.mergeWith;\n  SetPrototype.withMutations = MapPrototype.withMutations;\n  SetPrototype.asMutable = MapPrototype.asMutable;\n  SetPrototype.asImmutable = MapPrototype.asImmutable;\n\n  SetPrototype.__empty = emptySet;\n  SetPrototype.__make = makeSet;\n\n  function updateSet(set, newMap) {\n    if (set.__ownerID) {\n      set.size = newMap.size;\n      set._map = newMap;\n      return set;\n    }\n    return newMap === set._map ? set :\n      newMap.size === 0 ? set.__empty() :\n      set.__make(newMap);\n  }\n\n  function makeSet(map, ownerID) {\n    var set = Object.create(SetPrototype);\n    set.size = map ? map.size : 0;\n    set._map = map;\n    set.__ownerID = ownerID;\n    return set;\n  }\n\n  var EMPTY_SET;\n  function emptySet() {\n    return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));\n  }\n\n  createClass(OrderedSet, Set);\n\n    // @pragma Construction\n\n    function OrderedSet(value) {\n      return value === null || value === undefined ? emptyOrderedSet() :\n        isOrderedSet(value) ? value :\n        emptyOrderedSet().withMutations(function(set ) {\n          var iter = SetIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v ) {return set.add(v)});\n        });\n    }\n\n    OrderedSet.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    OrderedSet.fromKeys = function(value) {\n      return this(KeyedIterable(value).keySeq());\n    };\n\n    OrderedSet.prototype.toString = function() {\n      return this.__toString('OrderedSet {', '}');\n    };\n\n\n  function isOrderedSet(maybeOrderedSet) {\n    return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);\n  }\n\n  OrderedSet.isOrderedSet = isOrderedSet;\n\n  var OrderedSetPrototype = OrderedSet.prototype;\n  OrderedSetPrototype[IS_ORDERED_SENTINEL] = true;\n\n  OrderedSetPrototype.__empty = emptyOrderedSet;\n  OrderedSetPrototype.__make = makeOrderedSet;\n\n  function makeOrderedSet(map, ownerID) {\n    var set = Object.create(OrderedSetPrototype);\n    set.size = map ? map.size : 0;\n    set._map = map;\n    set.__ownerID = ownerID;\n    return set;\n  }\n\n  var EMPTY_ORDERED_SET;\n  function emptyOrderedSet() {\n    return EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()));\n  }\n\n  createClass(Stack, IndexedCollection);\n\n    // @pragma Construction\n\n    function Stack(value) {\n      return value === null || value === undefined ? emptyStack() :\n        isStack(value) ? value :\n        emptyStack().unshiftAll(value);\n    }\n\n    Stack.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    Stack.prototype.toString = function() {\n      return this.__toString('Stack [', ']');\n    };\n\n    // @pragma Access\n\n    Stack.prototype.get = function(index, notSetValue) {\n      var head = this._head;\n      index = wrapIndex(this, index);\n      while (head && index--) {\n        head = head.next;\n      }\n      return head ? head.value : notSetValue;\n    };\n\n    Stack.prototype.peek = function() {\n      return this._head && this._head.value;\n    };\n\n    // @pragma Modification\n\n    Stack.prototype.push = function(/*...values*/) {\n      if (arguments.length === 0) {\n        return this;\n      }\n      var newSize = this.size + arguments.length;\n      var head = this._head;\n      for (var ii = arguments.length - 1; ii >= 0; ii--) {\n        head = {\n          value: arguments[ii],\n          next: head\n        };\n      }\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    Stack.prototype.pushAll = function(iter) {\n      iter = IndexedIterable(iter);\n      if (iter.size === 0) {\n        return this;\n      }\n      assertNotInfinite(iter.size);\n      var newSize = this.size;\n      var head = this._head;\n      iter.reverse().forEach(function(value ) {\n        newSize++;\n        head = {\n          value: value,\n          next: head\n        };\n      });\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    Stack.prototype.pop = function() {\n      return this.slice(1);\n    };\n\n    Stack.prototype.unshift = function(/*...values*/) {\n      return this.push.apply(this, arguments);\n    };\n\n    Stack.prototype.unshiftAll = function(iter) {\n      return this.pushAll(iter);\n    };\n\n    Stack.prototype.shift = function() {\n      return this.pop.apply(this, arguments);\n    };\n\n    Stack.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._head = undefined;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyStack();\n    };\n\n    Stack.prototype.slice = function(begin, end) {\n      if (wholeSlice(begin, end, this.size)) {\n        return this;\n      }\n      var resolvedBegin = resolveBegin(begin, this.size);\n      var resolvedEnd = resolveEnd(end, this.size);\n      if (resolvedEnd !== this.size) {\n        // super.slice(begin, end);\n        return IndexedCollection.prototype.slice.call(this, begin, end);\n      }\n      var newSize = this.size - resolvedBegin;\n      var head = this._head;\n      while (resolvedBegin--) {\n        head = head.next;\n      }\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    // @pragma Mutability\n\n    Stack.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this.__altered = false;\n        return this;\n      }\n      return makeStack(this.size, this._head, ownerID, this.__hash);\n    };\n\n    // @pragma Iteration\n\n    Stack.prototype.__iterate = function(fn, reverse) {\n      if (reverse) {\n        return this.reverse().__iterate(fn);\n      }\n      var iterations = 0;\n      var node = this._head;\n      while (node) {\n        if (fn(node.value, iterations++, this) === false) {\n          break;\n        }\n        node = node.next;\n      }\n      return iterations;\n    };\n\n    Stack.prototype.__iterator = function(type, reverse) {\n      if (reverse) {\n        return this.reverse().__iterator(type);\n      }\n      var iterations = 0;\n      var node = this._head;\n      return new Iterator(function()  {\n        if (node) {\n          var value = node.value;\n          node = node.next;\n          return iteratorValue(type, iterations++, value);\n        }\n        return iteratorDone();\n      });\n    };\n\n\n  function isStack(maybeStack) {\n    return !!(maybeStack && maybeStack[IS_STACK_SENTINEL]);\n  }\n\n  Stack.isStack = isStack;\n\n  var IS_STACK_SENTINEL = '@@__IMMUTABLE_STACK__@@';\n\n  var StackPrototype = Stack.prototype;\n  StackPrototype[IS_STACK_SENTINEL] = true;\n  StackPrototype.withMutations = MapPrototype.withMutations;\n  StackPrototype.asMutable = MapPrototype.asMutable;\n  StackPrototype.asImmutable = MapPrototype.asImmutable;\n  StackPrototype.wasAltered = MapPrototype.wasAltered;\n\n\n  function makeStack(size, head, ownerID, hash) {\n    var map = Object.create(StackPrototype);\n    map.size = size;\n    map._head = head;\n    map.__ownerID = ownerID;\n    map.__hash = hash;\n    map.__altered = false;\n    return map;\n  }\n\n  var EMPTY_STACK;\n  function emptyStack() {\n    return EMPTY_STACK || (EMPTY_STACK = makeStack(0));\n  }\n\n  /**\n   * Contributes additional methods to a constructor\n   */\n  function mixin(ctor, methods) {\n    var keyCopier = function(key ) { ctor.prototype[key] = methods[key]; };\n    Object.keys(methods).forEach(keyCopier);\n    Object.getOwnPropertySymbols &&\n      Object.getOwnPropertySymbols(methods).forEach(keyCopier);\n    return ctor;\n  }\n\n  Iterable.Iterator = Iterator;\n\n  mixin(Iterable, {\n\n    // ### Conversion to other types\n\n    toArray: function() {\n      assertNotInfinite(this.size);\n      var array = new Array(this.size || 0);\n      this.valueSeq().__iterate(function(v, i)  { array[i] = v; });\n      return array;\n    },\n\n    toIndexedSeq: function() {\n      return new ToIndexedSequence(this);\n    },\n\n    toJS: function() {\n      return this.toSeq().map(\n        function(value ) {return value && typeof value.toJS === 'function' ? value.toJS() : value}\n      ).__toJS();\n    },\n\n    toJSON: function() {\n      return this.toSeq().map(\n        function(value ) {return value && typeof value.toJSON === 'function' ? value.toJSON() : value}\n      ).__toJS();\n    },\n\n    toKeyedSeq: function() {\n      return new ToKeyedSequence(this, true);\n    },\n\n    toMap: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Map(this.toKeyedSeq());\n    },\n\n    toObject: function() {\n      assertNotInfinite(this.size);\n      var object = {};\n      this.__iterate(function(v, k)  { object[k] = v; });\n      return object;\n    },\n\n    toOrderedMap: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return OrderedMap(this.toKeyedSeq());\n    },\n\n    toOrderedSet: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return OrderedSet(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toSet: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Set(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toSetSeq: function() {\n      return new ToSetSequence(this);\n    },\n\n    toSeq: function() {\n      return isIndexed(this) ? this.toIndexedSeq() :\n        isKeyed(this) ? this.toKeyedSeq() :\n        this.toSetSeq();\n    },\n\n    toStack: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Stack(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toList: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return List(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n\n    // ### Common JavaScript methods and properties\n\n    toString: function() {\n      return '[Iterable]';\n    },\n\n    __toString: function(head, tail) {\n      if (this.size === 0) {\n        return head + tail;\n      }\n      return head + ' ' + this.toSeq().map(this.__toStringMapper).join(', ') + ' ' + tail;\n    },\n\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    concat: function() {var values = SLICE$0.call(arguments, 0);\n      return reify(this, concatFactory(this, values));\n    },\n\n    includes: function(searchValue) {\n      return this.some(function(value ) {return is(value, searchValue)});\n    },\n\n    entries: function() {\n      return this.__iterator(ITERATE_ENTRIES);\n    },\n\n    every: function(predicate, context) {\n      assertNotInfinite(this.size);\n      var returnValue = true;\n      this.__iterate(function(v, k, c)  {\n        if (!predicate.call(context, v, k, c)) {\n          returnValue = false;\n          return false;\n        }\n      });\n      return returnValue;\n    },\n\n    filter: function(predicate, context) {\n      return reify(this, filterFactory(this, predicate, context, true));\n    },\n\n    find: function(predicate, context, notSetValue) {\n      var entry = this.findEntry(predicate, context);\n      return entry ? entry[1] : notSetValue;\n    },\n\n    forEach: function(sideEffect, context) {\n      assertNotInfinite(this.size);\n      return this.__iterate(context ? sideEffect.bind(context) : sideEffect);\n    },\n\n    join: function(separator) {\n      assertNotInfinite(this.size);\n      separator = separator !== undefined ? '' + separator : ',';\n      var joined = '';\n      var isFirst = true;\n      this.__iterate(function(v ) {\n        isFirst ? (isFirst = false) : (joined += separator);\n        joined += v !== null && v !== undefined ? v.toString() : '';\n      });\n      return joined;\n    },\n\n    keys: function() {\n      return this.__iterator(ITERATE_KEYS);\n    },\n\n    map: function(mapper, context) {\n      return reify(this, mapFactory(this, mapper, context));\n    },\n\n    reduce: function(reducer, initialReduction, context) {\n      assertNotInfinite(this.size);\n      var reduction;\n      var useFirst;\n      if (arguments.length < 2) {\n        useFirst = true;\n      } else {\n        reduction = initialReduction;\n      }\n      this.__iterate(function(v, k, c)  {\n        if (useFirst) {\n          useFirst = false;\n          reduction = v;\n        } else {\n          reduction = reducer.call(context, reduction, v, k, c);\n        }\n      });\n      return reduction;\n    },\n\n    reduceRight: function(reducer, initialReduction, context) {\n      var reversed = this.toKeyedSeq().reverse();\n      return reversed.reduce.apply(reversed, arguments);\n    },\n\n    reverse: function() {\n      return reify(this, reverseFactory(this, true));\n    },\n\n    slice: function(begin, end) {\n      return reify(this, sliceFactory(this, begin, end, true));\n    },\n\n    some: function(predicate, context) {\n      return !this.every(not(predicate), context);\n    },\n\n    sort: function(comparator) {\n      return reify(this, sortFactory(this, comparator));\n    },\n\n    values: function() {\n      return this.__iterator(ITERATE_VALUES);\n    },\n\n\n    // ### More sequential methods\n\n    butLast: function() {\n      return this.slice(0, -1);\n    },\n\n    isEmpty: function() {\n      return this.size !== undefined ? this.size === 0 : !this.some(function()  {return true});\n    },\n\n    count: function(predicate, context) {\n      return ensureSize(\n        predicate ? this.toSeq().filter(predicate, context) : this\n      );\n    },\n\n    countBy: function(grouper, context) {\n      return countByFactory(this, grouper, context);\n    },\n\n    equals: function(other) {\n      return deepEqual(this, other);\n    },\n\n    entrySeq: function() {\n      var iterable = this;\n      if (iterable._cache) {\n        // We cache as an entries array, so we can just return the cache!\n        return new ArraySeq(iterable._cache);\n      }\n      var entriesSequence = iterable.toSeq().map(entryMapper).toIndexedSeq();\n      entriesSequence.fromEntrySeq = function()  {return iterable.toSeq()};\n      return entriesSequence;\n    },\n\n    filterNot: function(predicate, context) {\n      return this.filter(not(predicate), context);\n    },\n\n    findEntry: function(predicate, context, notSetValue) {\n      var found = notSetValue;\n      this.__iterate(function(v, k, c)  {\n        if (predicate.call(context, v, k, c)) {\n          found = [k, v];\n          return false;\n        }\n      });\n      return found;\n    },\n\n    findKey: function(predicate, context) {\n      var entry = this.findEntry(predicate, context);\n      return entry && entry[0];\n    },\n\n    findLast: function(predicate, context, notSetValue) {\n      return this.toKeyedSeq().reverse().find(predicate, context, notSetValue);\n    },\n\n    findLastEntry: function(predicate, context, notSetValue) {\n      return this.toKeyedSeq().reverse().findEntry(predicate, context, notSetValue);\n    },\n\n    findLastKey: function(predicate, context) {\n      return this.toKeyedSeq().reverse().findKey(predicate, context);\n    },\n\n    first: function() {\n      return this.find(returnTrue);\n    },\n\n    flatMap: function(mapper, context) {\n      return reify(this, flatMapFactory(this, mapper, context));\n    },\n\n    flatten: function(depth) {\n      return reify(this, flattenFactory(this, depth, true));\n    },\n\n    fromEntrySeq: function() {\n      return new FromEntriesSequence(this);\n    },\n\n    get: function(searchKey, notSetValue) {\n      return this.find(function(_, key)  {return is(key, searchKey)}, undefined, notSetValue);\n    },\n\n    getIn: function(searchKeyPath, notSetValue) {\n      var nested = this;\n      // Note: in an ES6 environment, we would prefer:\n      // for (var key of searchKeyPath) {\n      var iter = forceIterator(searchKeyPath);\n      var step;\n      while (!(step = iter.next()).done) {\n        var key = step.value;\n        nested = nested && nested.get ? nested.get(key, NOT_SET) : NOT_SET;\n        if (nested === NOT_SET) {\n          return notSetValue;\n        }\n      }\n      return nested;\n    },\n\n    groupBy: function(grouper, context) {\n      return groupByFactory(this, grouper, context);\n    },\n\n    has: function(searchKey) {\n      return this.get(searchKey, NOT_SET) !== NOT_SET;\n    },\n\n    hasIn: function(searchKeyPath) {\n      return this.getIn(searchKeyPath, NOT_SET) !== NOT_SET;\n    },\n\n    isSubset: function(iter) {\n      iter = typeof iter.includes === 'function' ? iter : Iterable(iter);\n      return this.every(function(value ) {return iter.includes(value)});\n    },\n\n    isSuperset: function(iter) {\n      iter = typeof iter.isSubset === 'function' ? iter : Iterable(iter);\n      return iter.isSubset(this);\n    },\n\n    keyOf: function(searchValue) {\n      return this.findKey(function(value ) {return is(value, searchValue)});\n    },\n\n    keySeq: function() {\n      return this.toSeq().map(keyMapper).toIndexedSeq();\n    },\n\n    last: function() {\n      return this.toSeq().reverse().first();\n    },\n\n    lastKeyOf: function(searchValue) {\n      return this.toKeyedSeq().reverse().keyOf(searchValue);\n    },\n\n    max: function(comparator) {\n      return maxFactory(this, comparator);\n    },\n\n    maxBy: function(mapper, comparator) {\n      return maxFactory(this, comparator, mapper);\n    },\n\n    min: function(comparator) {\n      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator);\n    },\n\n    minBy: function(mapper, comparator) {\n      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator, mapper);\n    },\n\n    rest: function() {\n      return this.slice(1);\n    },\n\n    skip: function(amount) {\n      return this.slice(Math.max(0, amount));\n    },\n\n    skipLast: function(amount) {\n      return reify(this, this.toSeq().reverse().skip(amount).reverse());\n    },\n\n    skipWhile: function(predicate, context) {\n      return reify(this, skipWhileFactory(this, predicate, context, true));\n    },\n\n    skipUntil: function(predicate, context) {\n      return this.skipWhile(not(predicate), context);\n    },\n\n    sortBy: function(mapper, comparator) {\n      return reify(this, sortFactory(this, comparator, mapper));\n    },\n\n    take: function(amount) {\n      return this.slice(0, Math.max(0, amount));\n    },\n\n    takeLast: function(amount) {\n      return reify(this, this.toSeq().reverse().take(amount).reverse());\n    },\n\n    takeWhile: function(predicate, context) {\n      return reify(this, takeWhileFactory(this, predicate, context));\n    },\n\n    takeUntil: function(predicate, context) {\n      return this.takeWhile(not(predicate), context);\n    },\n\n    valueSeq: function() {\n      return this.toIndexedSeq();\n    },\n\n\n    // ### Hashable Object\n\n    hashCode: function() {\n      return this.__hash || (this.__hash = hashIterable(this));\n    }\n\n\n    // ### Internal\n\n    // abstract __iterate(fn, reverse)\n\n    // abstract __iterator(type, reverse)\n  });\n\n  // var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n  // var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n  // var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n  // var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n\n  var IterablePrototype = Iterable.prototype;\n  IterablePrototype[IS_ITERABLE_SENTINEL] = true;\n  IterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.values;\n  IterablePrototype.__toJS = IterablePrototype.toArray;\n  IterablePrototype.__toStringMapper = quoteString;\n  IterablePrototype.inspect =\n  IterablePrototype.toSource = function() { return this.toString(); };\n  IterablePrototype.chain = IterablePrototype.flatMap;\n  IterablePrototype.contains = IterablePrototype.includes;\n\n  mixin(KeyedIterable, {\n\n    // ### More sequential methods\n\n    flip: function() {\n      return reify(this, flipFactory(this));\n    },\n\n    mapEntries: function(mapper, context) {var this$0 = this;\n      var iterations = 0;\n      return reify(this,\n        this.toSeq().map(\n          function(v, k)  {return mapper.call(context, [k, v], iterations++, this$0)}\n        ).fromEntrySeq()\n      );\n    },\n\n    mapKeys: function(mapper, context) {var this$0 = this;\n      return reify(this,\n        this.toSeq().flip().map(\n          function(k, v)  {return mapper.call(context, k, v, this$0)}\n        ).flip()\n      );\n    }\n\n  });\n\n  var KeyedIterablePrototype = KeyedIterable.prototype;\n  KeyedIterablePrototype[IS_KEYED_SENTINEL] = true;\n  KeyedIterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.entries;\n  KeyedIterablePrototype.__toJS = IterablePrototype.toObject;\n  KeyedIterablePrototype.__toStringMapper = function(v, k)  {return JSON.stringify(k) + ': ' + quoteString(v)};\n\n\n\n  mixin(IndexedIterable, {\n\n    // ### Conversion to other types\n\n    toKeyedSeq: function() {\n      return new ToKeyedSequence(this, false);\n    },\n\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    filter: function(predicate, context) {\n      return reify(this, filterFactory(this, predicate, context, false));\n    },\n\n    findIndex: function(predicate, context) {\n      var entry = this.findEntry(predicate, context);\n      return entry ? entry[0] : -1;\n    },\n\n    indexOf: function(searchValue) {\n      var key = this.keyOf(searchValue);\n      return key === undefined ? -1 : key;\n    },\n\n    lastIndexOf: function(searchValue) {\n      var key = this.lastKeyOf(searchValue);\n      return key === undefined ? -1 : key;\n    },\n\n    reverse: function() {\n      return reify(this, reverseFactory(this, false));\n    },\n\n    slice: function(begin, end) {\n      return reify(this, sliceFactory(this, begin, end, false));\n    },\n\n    splice: function(index, removeNum /*, ...values*/) {\n      var numArgs = arguments.length;\n      removeNum = Math.max(removeNum | 0, 0);\n      if (numArgs === 0 || (numArgs === 2 && !removeNum)) {\n        return this;\n      }\n      // If index is negative, it should resolve relative to the size of the\n      // collection. However size may be expensive to compute if not cached, so\n      // only call count() if the number is in fact negative.\n      index = resolveBegin(index, index < 0 ? this.count() : this.size);\n      var spliced = this.slice(0, index);\n      return reify(\n        this,\n        numArgs === 1 ?\n          spliced :\n          spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum))\n      );\n    },\n\n\n    // ### More collection methods\n\n    findLastIndex: function(predicate, context) {\n      var entry = this.findLastEntry(predicate, context);\n      return entry ? entry[0] : -1;\n    },\n\n    first: function() {\n      return this.get(0);\n    },\n\n    flatten: function(depth) {\n      return reify(this, flattenFactory(this, depth, false));\n    },\n\n    get: function(index, notSetValue) {\n      index = wrapIndex(this, index);\n      return (index < 0 || (this.size === Infinity ||\n          (this.size !== undefined && index > this.size))) ?\n        notSetValue :\n        this.find(function(_, key)  {return key === index}, undefined, notSetValue);\n    },\n\n    has: function(index) {\n      index = wrapIndex(this, index);\n      return index >= 0 && (this.size !== undefined ?\n        this.size === Infinity || index < this.size :\n        this.indexOf(index) !== -1\n      );\n    },\n\n    interpose: function(separator) {\n      return reify(this, interposeFactory(this, separator));\n    },\n\n    interleave: function(/*...iterables*/) {\n      var iterables = [this].concat(arrCopy(arguments));\n      var zipped = zipWithFactory(this.toSeq(), IndexedSeq.of, iterables);\n      var interleaved = zipped.flatten(true);\n      if (zipped.size) {\n        interleaved.size = zipped.size * iterables.length;\n      }\n      return reify(this, interleaved);\n    },\n\n    keySeq: function() {\n      return Range(0, this.size);\n    },\n\n    last: function() {\n      return this.get(-1);\n    },\n\n    skipWhile: function(predicate, context) {\n      return reify(this, skipWhileFactory(this, predicate, context, false));\n    },\n\n    zip: function(/*, ...iterables */) {\n      var iterables = [this].concat(arrCopy(arguments));\n      return reify(this, zipWithFactory(this, defaultZipper, iterables));\n    },\n\n    zipWith: function(zipper/*, ...iterables */) {\n      var iterables = arrCopy(arguments);\n      iterables[0] = this;\n      return reify(this, zipWithFactory(this, zipper, iterables));\n    }\n\n  });\n\n  IndexedIterable.prototype[IS_INDEXED_SENTINEL] = true;\n  IndexedIterable.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n\n  mixin(SetIterable, {\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    get: function(value, notSetValue) {\n      return this.has(value) ? value : notSetValue;\n    },\n\n    includes: function(value) {\n      return this.has(value);\n    },\n\n\n    // ### More sequential methods\n\n    keySeq: function() {\n      return this.valueSeq();\n    }\n\n  });\n\n  SetIterable.prototype.has = IterablePrototype.includes;\n  SetIterable.prototype.contains = SetIterable.prototype.includes;\n\n\n  // Mixin subclasses\n\n  mixin(KeyedSeq, KeyedIterable.prototype);\n  mixin(IndexedSeq, IndexedIterable.prototype);\n  mixin(SetSeq, SetIterable.prototype);\n\n  mixin(KeyedCollection, KeyedIterable.prototype);\n  mixin(IndexedCollection, IndexedIterable.prototype);\n  mixin(SetCollection, SetIterable.prototype);\n\n\n  // #pragma Helper functions\n\n  function keyMapper(v, k) {\n    return k;\n  }\n\n  function entryMapper(v, k) {\n    return [k, v];\n  }\n\n  function not(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    }\n  }\n\n  function neg(predicate) {\n    return function() {\n      return -predicate.apply(this, arguments);\n    }\n  }\n\n  function quoteString(value) {\n    return typeof value === 'string' ? JSON.stringify(value) : String(value);\n  }\n\n  function defaultZipper() {\n    return arrCopy(arguments);\n  }\n\n  function defaultNegComparator(a, b) {\n    return a < b ? 1 : a > b ? -1 : 0;\n  }\n\n  function hashIterable(iterable) {\n    if (iterable.size === Infinity) {\n      return 0;\n    }\n    var ordered = isOrdered(iterable);\n    var keyed = isKeyed(iterable);\n    var h = ordered ? 1 : 0;\n    var size = iterable.__iterate(\n      keyed ?\n        ordered ?\n          function(v, k)  { h = 31 * h + hashMerge(hash(v), hash(k)) | 0; } :\n          function(v, k)  { h = h + hashMerge(hash(v), hash(k)) | 0; } :\n        ordered ?\n          function(v ) { h = 31 * h + hash(v) | 0; } :\n          function(v ) { h = h + hash(v) | 0; }\n    );\n    return murmurHashOfSize(size, h);\n  }\n\n  function murmurHashOfSize(size, h) {\n    h = imul(h, 0xCC9E2D51);\n    h = imul(h << 15 | h >>> -15, 0x1B873593);\n    h = imul(h << 13 | h >>> -13, 5);\n    h = (h + 0xE6546B64 | 0) ^ size;\n    h = imul(h ^ h >>> 16, 0x85EBCA6B);\n    h = imul(h ^ h >>> 13, 0xC2B2AE35);\n    h = smi(h ^ h >>> 16);\n    return h;\n  }\n\n  function hashMerge(a, b) {\n    return a ^ b + 0x9E3779B9 + (a << 6) + (a >> 2) | 0; // int\n  }\n\n  var Immutable = {\n\n    Iterable: Iterable,\n\n    Seq: Seq,\n    Collection: Collection,\n    Map: Map,\n    OrderedMap: OrderedMap,\n    List: List,\n    Stack: Stack,\n    Set: Set,\n    OrderedSet: OrderedSet,\n\n    Record: Record,\n    Range: Range,\n    Repeat: Repeat,\n\n    is: is,\n    fromJS: fromJS\n\n  };\n\n  return Immutable;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/immutable/dist/immutable.js\n// module id = 34\n// module chunks = 0","import React from 'react'\n\nexport default class OpenSeadragonNav extends React.Component {\n    constructor(props) {\n      super(props)\n      this.active_index = this.active_index.bind(this)\n      this.active_class = this.active_class.bind(this)\n      this.handleChange = this.handleChange.bind(this)\n    }\n\n    active_index() {\n      return this.props.getActiveItemIndex()\n    }\n\n    active_class(i) {\n      return (this.active_index() == i) ? 'active' : ''\n    }\n\n    handleChange(e, target){\n      this.props.viewer.goToPage(e.target.value)\n    }\n\n    render() {\n      const { items, class_name, setActiveItem, getActiveItem, tocs, viewer } = this.props\n      let active_class = this.active_class\n      return (\n                <div className=\"row image-nav\">\n                  <ul className=\"nav nav-pills\">\n                    {items.map(function(item, i) {\n                      return <li role=\"presentation\" className={active_class(i)} onClick={setActiveItem.bind(this, i)} key={i} ><a href=\"\">{item.label}</a></li>\n                    })}\n                    <li>\n                      <div className=\"toc-select\">\n                        <label htmlFor=\"toc\">Table of Contents:</label> \n                        <select name=\"toc\" onChange={this.handleChange}>\n                          {tocs.map(function(toc, i) {\n                            let page = i + 1\n                            return <option value={i} key={i}>{page}. {toc}</option>\n                          })}                    \n                        </select>\n                      </div>\n                    </li>\n                  </ul>\n                </div>\n              )\n    }\n\n}\n\nconst propTypes = {\n  items: React.PropTypes.array.isRequired,\n  setActiveItem: React.PropTypes.func.isRequired,\n  tocs: React.PropTypes.array,\n  viewer: React.PropTypes.object\n}\n\nOpenSeadragonNav.propTypes = propTypes\n\n\n// WEBPACK FOOTER //\n// ./src/react-openseadragon-nav.js","import React from 'react'\nimport OpenSeadragon from 'openseadragon'\nimport OpenSeadragonControls from './react-openseadragon-controls'\n\nexport default class OpenSeadragonViewer extends React.Component {\n    constructor(props) {\n      super(props)\n      this._config = this._config.bind(this)\n    }\n    \n    componentDidMount() {\n      let { page_handler } = this.props\n      window.OPENSEADRAGONVIEWER = window.OpenSeadragon(this._config())\n      this.setState({viewer: OPENSEADRAGONVIEWER})\n      OPENSEADRAGONVIEWER.addHandler('page', function (viewer) {\n          page_handler(viewer, OPENSEADRAGONVIEWER)\n      })\n      // This allows us to keep the transcript/image toggle pills in sync\n      // with what was clicked on the viewer nav strip\n      OPENSEADRAGONVIEWER.goToPage(this.props.last_page)\n    }\n\n    _config() {\n      return Object.assign(this.props.default_config, this.props.config)\n    }\n\n    render() {\n      let { text, include_controls } = this.props\n      let controls  = (include_controls)  ? <OpenSeadragonControls /> : ''\n      return (\n                <div className=\"osd col-md-12\">\n                  <div className=\"openseadragon\" id=\"osd-viewer\">\n                    {controls}\n                  </div>\n                </div>\n              )\n    }\n}\n\nOpenSeadragonViewer.defaultProps = {  include_navigator: true,\n                                      include_controls: true,\n                                      default_config: {\n                                        showNavigator: true,\n                                        id: 'osd-viewer',\n                                        visibilityRatio: 1.0,\n                                        constrainDuringPan: false,\n                                        defaultZoomLevel: 1,\n                                        minZoomLevel: 1,\n                                        maxZoomLevel: 10,\n                                        zoomInButton: 'zoom-in',\n                                        zoomOutButton: 'zoom-out',\n                                        homeButton: 'reset',\n                                        fullPageButton: 'full-page',\n                                        nextButton: 'next',\n                                        previousButton: 'previous',\n                                      }\n                                    }\n\nOpenSeadragonViewer.propTypes = {\n  page_handler: React.PropTypes.func,\n  config: React.PropTypes.object.isRequired\n}\n\n\n// WEBPACK FOOTER //\n// ./src/react-openseadragon-viewer.js","//! openseadragon 2.2.1\n//! Built on 2016-07-01\n//! Git commit: v2.2.1-0-babdefd\n//! http://openseadragon.github.io\n//! License: http://openseadragon.github.io/license/\n\n/*\n * OpenSeadragon\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/*\n * Portions of this source file taken from jQuery:\n *\n * Copyright 2011 John Resig\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/*\n * Portions of this source file taken from mattsnider.com:\n *\n * Copyright (c) 2006-2013 Matt Snider\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT\n * OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR\n * THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n\n/**\n * @namespace OpenSeadragon\n * @version openseadragon 2.2.1\n * @classdesc The root namespace for OpenSeadragon.  All utility methods\n * and classes are defined on or below this namespace.\n *\n */\n\n\n// Typedefs\n\n /**\n  * All required and optional settings for instantiating a new instance of an OpenSeadragon image viewer.\n  *\n  * @typedef {Object} Options\n  * @memberof OpenSeadragon\n  *\n  * @property {String} id\n  *     Id of the element to append the viewer's container element to. If not provided, the 'element' property must be provided.\n  *     If both the element and id properties are specified, the viewer is appended to the element provided in the element property.\n  *\n  * @property {Element} element\n  *     The element to append the viewer's container element to. If not provided, the 'id' property must be provided.\n  *     If both the element and id properties are specified, the viewer is appended to the element provided in the element property.\n  *\n  * @property {Array|String|Function|Object} [tileSources=null]\n  *     Tile source(s) to open initially. This is a complex parameter; see\n  *     {@link OpenSeadragon.Viewer#open} for details.\n  *\n  * @property {Number} [tabIndex=0]\n  *     Tabbing order index to assign to the viewer element. Positive values are selected in increasing order. When tabIndex is 0\n  *     source order is used. A negative value omits the viewer from the tabbing order.\n  *\n  * @property {Array} overlays Array of objects defining permanent overlays of\n  *     the viewer. The overlays added via this option and later removed with\n  *     {@link OpenSeadragon.Viewer#removeOverlay} will be added back when a new\n  *     image is opened.\n  *     To add overlays which can be definitively removed, one must use\n  *     {@link OpenSeadragon.Viewer#addOverlay}\n  *     If displaying a sequence of images, the overlays can be associated\n  *     with a specific page by passing the overlays array to the page's\n  *     tile source configuration.\n  *     Expected properties:\n  *     * x, y, (or px, py for pixel coordinates) to define the location.\n  *     * width, height in point if using x,y or in pixels if using px,py. If width\n  *       and height are specified, the overlay size is adjusted when zooming,\n  *       otherwise the size stays the size of the content (or the size defined by CSS).\n  *     * className to associate a class to the overlay\n  *     * id to set the overlay element. If an element with this id already exists,\n  *       it is reused, otherwise it is created. If not specified, a new element is\n  *       created.\n  *     * placement a string to define the relative position to the viewport.\n  *       Only used if no width and height are specified. Default: 'TOP_LEFT'.\n  *       See {@link OpenSeadragon.Placement} for possible values.\n  *\n  * @property {String} [xmlPath=null]\n  *     <strong>DEPRECATED</strong>. A relative path to load a DZI file from the server.\n  *     Prefer the newer Options.tileSources.\n  *\n  * @property {String} [prefixUrl='/images/']\n  *     Prepends the prefixUrl to navImages paths, which is very useful\n  *     since the default paths are rarely useful for production\n  *     environments.\n  *\n  * @property {OpenSeadragon.NavImages} [navImages]\n  *     An object with a property for each button or other built-in navigation\n  *     control, eg the current 'zoomIn', 'zoomOut', 'home', and 'fullpage'.\n  *     Each of those in turn provides an image path for each state of the button\n  *     or navigation control, eg 'REST', 'GROUP', 'HOVER', 'PRESS'. Finally the\n  *     image paths, by default assume there is a folder on the servers root path\n  *     called '/images', eg '/images/zoomin_rest.png'.  If you need to adjust\n  *     these paths, prefer setting the option.prefixUrl rather than overriding\n  *     every image path directly through this setting.\n  *\n  * @property {Boolean} [debugMode=false]\n  *     TODO: provide an in-screen panel providing event detail feedback.\n  *\n  * @property {String} [debugGridColor='#437AB2']\n  *\n  * @property {Number} [blendTime=0]\n  *     Specifies the duration of animation as higher or lower level tiles are\n  *     replacing the existing tile.\n  *\n  * @property {Boolean} [alwaysBlend=false]\n  *     Forces the tile to always blend.  By default the tiles skip blending\n  *     when the blendTime is surpassed and the current animation frame would\n  *     not complete the blend.\n  *\n  * @property {Boolean} [autoHideControls=true]\n  *     If the user stops interacting with the viewport, fade the navigation\n  *     controls.  Useful for presentation since the controls are by default\n  *     floated on top of the image the user is viewing.\n  *\n  * @property {Boolean} [immediateRender=false]\n  *     Render the best closest level first, ignoring the lowering levels which\n  *     provide the effect of very blurry to sharp. It is recommended to change\n  *     setting to true for mobile devices.\n  *\n  * @property {Number} [defaultZoomLevel=0]\n  *     Zoom level to use when image is first opened or the home button is clicked.\n  *     If 0, adjusts to fit viewer.\n  *\n  * @property {Number} [opacity=1]\n  *     Default opacity of the tiled images (1=opaque, 0=transparent)\n  *\n  * @property {String} [compositeOperation=null]\n  *     Valid values are 'source-over', 'source-atop', 'source-in', 'source-out',\n  *     'destination-over', 'destination-atop', 'destination-in',\n  *     'destination-out', 'lighter', 'copy' or 'xor'\n  *\n  * @property {String|CanvasGradient|CanvasPattern|Function} [placeholderFillStyle=null]\n  *     Draws a colored rectangle behind the tile if it is not loaded yet.\n  *     You can pass a CSS color value like \"#FF8800\".\n  *     When passing a function the tiledImage and canvas context are available as argument which is useful when you draw a gradient or pattern.\n  *\n  * @property {Number} [degrees=0]\n  *     Initial rotation.\n  *\n  * @property {Number} [minZoomLevel=null]\n  *\n  * @property {Number} [maxZoomLevel=null]\n  *\n  * @property {Boolean} [homeFillsViewer=false]\n  *     Make the 'home' button fill the viewer and clip the image, instead\n  *     of fitting the image to the viewer and letterboxing.\n  *\n  * @property {Boolean} [panHorizontal=true]\n  *     Allow horizontal pan.\n  *\n  * @property {Boolean} [panVertical=true]\n  *     Allow vertical pan.\n  *\n  * @property {Boolean} [constrainDuringPan=false]\n  *\n  * @property {Boolean} [wrapHorizontal=false]\n  *     Set to true to force the image to wrap horizontally within the viewport.\n  *     Useful for maps or images representing the surface of a sphere or cylinder.\n  *\n  * @property {Boolean} [wrapVertical=false]\n  *     Set to true to force the image to wrap vertically within the viewport.\n  *     Useful for maps or images representing the surface of a sphere or cylinder.\n  *\n  * @property {Number} [minZoomImageRatio=0.9]\n  *     The minimum percentage ( expressed as a number between 0 and 1 ) of\n  *     the viewport height or width at which the zoom out will be constrained.\n  *     Setting it to 0, for example will allow you to zoom out infinity.\n  *\n  * @property {Number} [maxZoomPixelRatio=1.1]\n  *     The maximum ratio to allow a zoom-in to affect the highest level pixel\n  *     ratio. This can be set to Infinity to allow 'infinite' zooming into the\n  *     image though it is less effective visually if the HTML5 Canvas is not\n  *     availble on the viewing device.\n  *\n  * @property {Number} [smoothTileEdgesMinZoom=1.1]\n  *     A zoom percentage ( where 1 is 100% ) of the highest resolution level.\n  *     When zoomed in beyond this value alternative compositing will be used to\n  *     smooth out the edges between tiles. This will have a performance impact.\n  *     Can be set to Infinity to turn it off.\n  *     Note: This setting is ignored on iOS devices due to a known bug (See {@link https://github.com/openseadragon/openseadragon/issues/952})\n  *\n  * @property {Boolean} [iOSDevice=?]\n  *     True if running on an iOS device, false otherwise.\n  *     Used to disable certain features that behave differently on iOS devices.\n  *\n  * @property {Boolean} [autoResize=true]\n  *     Set to false to prevent polling for viewer size changes. Useful for providing custom resize behavior.\n  *\n  * @property {Boolean} [preserveImageSizeOnResize=false]\n  *     Set to true to have the image size preserved when the viewer is resized. This requires autoResize=true (default).\n  *\n  * @property {Number} [minScrollDeltaTime=50]\n  *     Number of milliseconds between canvas-scroll events. This value helps normalize the rate of canvas-scroll\n  *     events between different devices, causing the faster devices to slow down enough to make the zoom control\n  *     more manageable.\n  *\n  * @property {Number} [pixelsPerWheelLine=40]\n  *     For pixel-resolution scrolling devices, the number of pixels equal to one scroll line.\n  *\n  * @property {Number} [visibilityRatio=0.5]\n  *     The percentage ( as a number from 0 to 1 ) of the source image which\n  *     must be kept within the viewport.  If the image is dragged beyond that\n  *     limit, it will 'bounce' back until the minimum visibility ratio is\n  *     achieved.  Setting this to 0 and wrapHorizontal ( or wrapVertical ) to\n  *     true will provide the effect of an infinitely scrolling viewport.\n  *\n  * @property {Object} [viewportMargins={}]\n  *     Pushes the \"home\" region in from the sides by the specified amounts.\n  *     Possible subproperties (Numbers, in screen coordinates): left, top, right, bottom.\n  *\n  * @property {Number} [imageLoaderLimit=0]\n  *     The maximum number of image requests to make concurrently. By default\n  *     it is set to 0 allowing the browser to make the maximum number of\n  *     image requests in parallel as allowed by the browsers policy.\n  *\n  * @property {Number} [clickTimeThreshold=300]\n  *      The number of milliseconds within which a pointer down-up event combination\n  *      will be treated as a click gesture.\n  *\n  * @property {Number} [clickDistThreshold=5]\n  *      The maximum distance allowed between a pointer down event and a pointer up event\n  *      to be treated as a click gesture.\n  *\n  * @property {Number} [dblClickTimeThreshold=300]\n  *      The number of milliseconds within which two pointer down-up event combinations\n  *      will be treated as a double-click gesture.\n  *\n  * @property {Number} [dblClickDistThreshold=20]\n  *      The maximum distance allowed between two pointer click events\n  *      to be treated as a double-click gesture.\n  *\n  * @property {Number} [springStiffness=6.5]\n  *\n  * @property {Number} [animationTime=1.2]\n  *     Specifies the animation duration per each {@link OpenSeadragon.Spring}\n  *     which occur when the image is dragged or zoomed.\n  *\n  * @property {OpenSeadragon.GestureSettings} [gestureSettingsMouse]\n  *     Settings for gestures generated by a mouse pointer device. (See {@link OpenSeadragon.GestureSettings})\n  * @property {Boolean} [gestureSettingsMouse.scrollToZoom=true] - Zoom on scroll gesture\n  * @property {Boolean} [gestureSettingsMouse.clickToZoom=true] - Zoom on click gesture\n  * @property {Boolean} [gestureSettingsMouse.dblClickToZoom=false] - Zoom on double-click gesture. Note: If set to true\n  *     then clickToZoom should be set to false to prevent multiple zooms.\n  * @property {Boolean} [gestureSettingsMouse.pinchToZoom=false] - Zoom on pinch gesture\n  * @property {Boolean} [gestureSettingsMouse.flickEnabled=false] - Enable flick gesture\n  * @property {Number} [gestureSettingsMouse.flickMinSpeed=120] - If flickEnabled is true, the minimum speed to initiate a flick gesture (pixels-per-second)\n  * @property {Number} [gestureSettingsMouse.flickMomentum=0.25] - If flickEnabled is true, the momentum factor for the flick gesture\n  * @property {Boolean} [gestureSettingsMouse.pinchRotate=false] - If pinchRotate is true, the user will have the ability to rotate the image using their fingers.\n  *\n  * @property {OpenSeadragon.GestureSettings} [gestureSettingsTouch]\n  *     Settings for gestures generated by a touch pointer device. (See {@link OpenSeadragon.GestureSettings})\n  * @property {Boolean} [gestureSettingsTouch.scrollToZoom=false] - Zoom on scroll gesture\n  * @property {Boolean} [gestureSettingsTouch.clickToZoom=false] - Zoom on click gesture\n  * @property {Boolean} [gestureSettingsTouch.dblClickToZoom=true] - Zoom on double-click gesture. Note: If set to true\n  *     then clickToZoom should be set to false to prevent multiple zooms.\n  * @property {Boolean} [gestureSettingsTouch.pinchToZoom=true] - Zoom on pinch gesture\n  * @property {Boolean} [gestureSettingsTouch.flickEnabled=true] - Enable flick gesture\n  * @property {Number} [gestureSettingsTouch.flickMinSpeed=120] - If flickEnabled is true, the minimum speed to initiate a flick gesture (pixels-per-second)\n  * @property {Number} [gestureSettingsTouch.flickMomentum=0.25] - If flickEnabled is true, the momentum factor for the flick gesture\n  * @property {Boolean} [gestureSettingsTouch.pinchRotate=false] - If pinchRotate is true, the user will have the ability to rotate the image using their fingers.\n  *\n  * @property {OpenSeadragon.GestureSettings} [gestureSettingsPen]\n  *     Settings for gestures generated by a pen pointer device. (See {@link OpenSeadragon.GestureSettings})\n  * @property {Boolean} [gestureSettingsPen.scrollToZoom=false] - Zoom on scroll gesture\n  * @property {Boolean} [gestureSettingsPen.clickToZoom=true] - Zoom on click gesture\n  * @property {Boolean} [gestureSettingsPen.dblClickToZoom=false] - Zoom on double-click gesture. Note: If set to true\n  *     then clickToZoom should be set to false to prevent multiple zooms.\n  * @property {Boolean} [gestureSettingsPen.pinchToZoom=false] - Zoom on pinch gesture\n  * @property {Boolean} [gestureSettingsPen.flickEnabled=false] - Enable flick gesture\n  * @property {Number} [gestureSettingsPen.flickMinSpeed=120] - If flickEnabled is true, the minimum speed to initiate a flick gesture (pixels-per-second)\n  * @property {Number} [gestureSettingsPen.flickMomentum=0.25] - If flickEnabled is true, the momentum factor for the flick gesture\n  * @property {Boolean} [gestureSettingsPen.pinchRotate=false] - If pinchRotate is true, the user will have the ability to rotate the image using their fingers.\n  *\n  * @property {OpenSeadragon.GestureSettings} [gestureSettingsUnknown]\n  *     Settings for gestures generated by unknown pointer devices. (See {@link OpenSeadragon.GestureSettings})\n  * @property {Boolean} [gestureSettingsUnknown.scrollToZoom=true] - Zoom on scroll gesture\n  * @property {Boolean} [gestureSettingsUnknown.clickToZoom=false] - Zoom on click gesture\n  * @property {Boolean} [gestureSettingsUnknown.dblClickToZoom=true] - Zoom on double-click gesture. Note: If set to true\n  *     then clickToZoom should be set to false to prevent multiple zooms.\n  * @property {Boolean} [gestureSettingsUnknown.pinchToZoom=true] - Zoom on pinch gesture\n  * @property {Boolean} [gestureSettingsUnknown.flickEnabled=true] - Enable flick gesture\n  * @property {Number} [gestureSettingsUnknown.flickMinSpeed=120] - If flickEnabled is true, the minimum speed to initiate a flick gesture (pixels-per-second)\n  * @property {Number} [gestureSettingsUnknown.flickMomentum=0.25] - If flickEnabled is true, the momentum factor for the flick gesture\n  * @property {Boolean} [gestureSettingsUnknown.pinchRotate=false] - If pinchRotate is true, the user will have the ability to rotate the image using their fingers.\n  *\n  * @property {Number} [zoomPerClick=2.0]\n  *     The \"zoom distance\" per mouse click or touch tap. <em><strong>Note:</strong> Setting this to 1.0 effectively disables the click-to-zoom feature (also see gestureSettings[Mouse|Touch|Pen].clickToZoom/dblClickToZoom).</em>\n  *\n  * @property {Number} [zoomPerScroll=1.2]\n  *     The \"zoom distance\" per mouse scroll or touch pinch. <em><strong>Note:</strong> Setting this to 1.0 effectively disables the mouse-wheel zoom feature (also see gestureSettings[Mouse|Touch|Pen].scrollToZoom}).</em>\n  *\n  * @property {Number} [zoomPerSecond=1.0]\n  *     The number of seconds to animate a single zoom event over.\n  *\n  * @property {Boolean} [showNavigator=false]\n  *     Set to true to make the navigator minimap appear.\n  *\n  * @property {String} [navigatorId=navigator-GENERATED DATE]\n  *     The ID of a div to hold the navigator minimap.\n  *     If an ID is specified, the navigatorPosition, navigatorSizeRatio, navigatorMaintainSizeRatio, navigator[Top|Left|Height|Width] and navigatorAutoFade options will be ignored.\n  *     If an ID is not specified, a div element will be generated and placed on top of the main image.\n  *\n  * @property {String} [navigatorPosition='TOP_RIGHT']\n  *     Valid values are 'TOP_LEFT', 'TOP_RIGHT', 'BOTTOM_LEFT', 'BOTTOM_RIGHT', or 'ABSOLUTE'.<br>\n  *     If 'ABSOLUTE' is specified, then navigator[Top|Left|Height|Width] determines the size and position of the navigator minimap in the viewer, and navigatorSizeRatio and navigatorMaintainSizeRatio are ignored.<br>\n  *     For 'TOP_LEFT', 'TOP_RIGHT', 'BOTTOM_LEFT', and 'BOTTOM_RIGHT', the navigatorSizeRatio or navigator[Height|Width] values determine the size of the navigator minimap.\n  *\n  * @property {Number} [navigatorSizeRatio=0.2]\n  *     Ratio of navigator size to viewer size. Ignored if navigator[Height|Width] are specified.\n  *\n  * @property {Boolean} [navigatorMaintainSizeRatio=false]\n  *     If true, the navigator minimap is resized (using navigatorSizeRatio) when the viewer size changes.\n  *\n  * @property {Number|String} [navigatorTop=null]\n  *     Specifies the location of the navigator minimap (see navigatorPosition).\n  *\n  * @property {Number|String} [navigatorLeft=null]\n  *     Specifies the location of the navigator minimap (see navigatorPosition).\n  *\n  * @property {Number|String} [navigatorHeight=null]\n  *     Specifies the size of the navigator minimap (see navigatorPosition).\n  *     If specified, navigatorSizeRatio and navigatorMaintainSizeRatio are ignored.\n  *\n  * @property {Number|String} [navigatorWidth=null]\n  *     Specifies the size of the navigator minimap (see navigatorPosition).\n  *     If specified, navigatorSizeRatio and navigatorMaintainSizeRatio are ignored.\n  *\n  * @property {Boolean} [navigatorAutoResize=true]\n  *     Set to false to prevent polling for navigator size changes. Useful for providing custom resize behavior.\n  *     Setting to false can also improve performance when the navigator is configured to a fixed size.\n  *\n  * @property {Boolean} [navigatorAutoFade=true]\n  *     If the user stops interacting with the viewport, fade the navigator minimap.\n  *     Setting to false will make the navigator minimap always visible.\n  *\n  * @property {Boolean} [navigatorRotate=true]\n  *     If true, the navigator will be rotated together with the viewer.\n  *\n  * @property {Number} [controlsFadeDelay=2000]\n  *     The number of milliseconds to wait once the user has stopped interacting\n  *     with the interface before begining to fade the controls. Assumes\n  *     showNavigationControl and autoHideControls are both true.\n  *\n  * @property {Number} [controlsFadeLength=1500]\n  *     The number of milliseconds to animate the controls fading out.\n  *\n  * @property {Number} [maxImageCacheCount=200]\n  *     The max number of images we should keep in memory (per drawer).\n  *\n  * @property {Number} [timeout=30000]\n  *\n  * @property {Boolean} [useCanvas=true]\n  *     Set to false to not use an HTML canvas element for image rendering even if canvas is supported.\n  *\n  * @property {Number} [minPixelRatio=0.5]\n  *     The higher the minPixelRatio, the lower the quality of the image that\n  *     is considered sufficient to stop rendering a given zoom level.  For\n  *     example, if you are targeting mobile devices with less bandwith you may\n  *     try setting this to 1.5 or higher.\n  *\n  * @property {Boolean} [mouseNavEnabled=true]\n  *     Is the user able to interact with the image via mouse or touch. Default\n  *     interactions include draging the image in a plane, and zooming in toward\n  *     and away from the image.\n  *\n  * @property {Boolean} [showNavigationControl=true]\n  *     Set to false to prevent the appearance of the default navigation controls.<br>\n  *     Note that if set to false, the customs buttons set by the options\n  *     zoomInButton, zoomOutButton etc, are rendered inactive.\n  *\n  * @property {OpenSeadragon.ControlAnchor} [navigationControlAnchor=TOP_LEFT]\n  *     Placement of the default navigation controls.\n  *     To set the placement of the sequence controls, see the\n  *     sequenceControlAnchor option.\n  *\n  * @property {Boolean} [showZoomControl=true]\n  *     If true then + and - buttons to zoom in and out are displayed.<br>\n  *     Note: {@link OpenSeadragon.Options.showNavigationControl} is overriding\n  *     this setting when set to false.\n  *\n  * @property {Boolean} [showHomeControl=true]\n  *     If true then the 'Go home' button is displayed to go back to the original\n  *     zoom and pan.<br>\n  *     Note: {@link OpenSeadragon.Options.showNavigationControl} is overriding\n  *     this setting when set to false.\n  *\n  * @property {Boolean} [showFullPageControl=true]\n  *     If true then the 'Toggle full page' button is displayed to switch\n  *     between full page and normal mode.<br>\n  *     Note: {@link OpenSeadragon.Options.showNavigationControl} is overriding\n  *     this setting when set to false.\n  *\n  * @property {Boolean} [showRotationControl=false]\n  *     If true then the rotate left/right controls will be displayed as part of the\n  *     standard controls. This is also subject to the browser support for rotate\n  *     (e.g. viewer.drawer.canRotate()).<br>\n  *     Note: {@link OpenSeadragon.Options.showNavigationControl} is overriding\n  *     this setting when set to false.\n  *\n  * @property {Boolean} [showSequenceControl=true]\n  *     If sequenceMode is true, then provide buttons for navigating forward and\n  *     backward through the images.\n  *\n  * @property {OpenSeadragon.ControlAnchor} [sequenceControlAnchor=TOP_LEFT]\n  *     Placement of the default sequence controls.\n  *\n  * @property {Boolean} [navPrevNextWrap=false]\n  *     If true then the 'previous' button will wrap to the last image when\n  *     viewing the first image and the 'next' button will wrap to the first\n  *     image when viewing the last image.\n  *\n  * @property {String} zoomInButton\n  *     Set the id of the custom 'Zoom in' button to use.\n  *     This is useful to have a custom button anywhere in the web page.<br>\n  *     To only change the button images, consider using\n  *     {@link OpenSeadragon.Options.navImages}\n  *\n  * @property {String} zoomOutButton\n  *     Set the id of the custom 'Zoom out' button to use.\n  *     This is useful to have a custom button anywhere in the web page.<br>\n  *     To only change the button images, consider using\n  *     {@link OpenSeadragon.Options.navImages}\n  *\n  * @property {String} homeButton\n  *     Set the id of the custom 'Go home' button to use.\n  *     This is useful to have a custom button anywhere in the web page.<br>\n  *     To only change the button images, consider using\n  *     {@link OpenSeadragon.Options.navImages}\n  *\n  * @property {String} fullPageButton\n  *     Set the id of the custom 'Toggle full page' button to use.\n  *     This is useful to have a custom button anywhere in the web page.<br>\n  *     To only change the button images, consider using\n  *     {@link OpenSeadragon.Options.navImages}\n  *\n  * @property {String} rotateLeftButton\n  *     Set the id of the custom 'Rotate left' button to use.\n  *     This is useful to have a custom button anywhere in the web page.<br>\n  *     To only change the button images, consider using\n  *     {@link OpenSeadragon.Options.navImages}\n  *\n  * @property {String} rotateRightButton\n  *     Set the id of the custom 'Rotate right' button to use.\n  *     This is useful to have a custom button anywhere in the web page.<br>\n  *     To only change the button images, consider using\n  *     {@link OpenSeadragon.Options.navImages}\n  *\n  * @property {String} previousButton\n  *     Set the id of the custom 'Previous page' button to use.\n  *     This is useful to have a custom button anywhere in the web page.<br>\n  *     To only change the button images, consider using\n  *     {@link OpenSeadragon.Options.navImages}\n  *\n  * @property {String} nextButton\n  *     Set the id of the custom 'Next page' button to use.\n  *     This is useful to have a custom button anywhere in the web page.<br>\n  *     To only change the button images, consider using\n  *     {@link OpenSeadragon.Options.navImages}\n  *\n  * @property {Boolean} [sequenceMode=false]\n  *     Set to true to have the viewer treat your tilesources as a sequence of images to\n  *     be opened one at a time rather than all at once.\n  *\n  * @property {Number} [initialPage=0]\n  *     If sequenceMode is true, display this page initially.\n  *\n  * @property {Boolean} [preserveViewport=false]\n  *     If sequenceMode is true, then normally navigating through each image resets the\n  *     viewport to 'home' position.  If preserveViewport is set to true, then the viewport\n  *     position is preserved when navigating between images in the sequence.\n  *\n  * @property {Boolean} [preserveOverlays=false]\n  *     If sequenceMode is true, then normally navigating through each image\n  *     resets the overlays.\n  *     If preserveOverlays is set to true, then the overlays added with {@link OpenSeadragon.Viewer#addOverlay}\n  *     are preserved when navigating between images in the sequence.\n  *     Note: setting preserveOverlays overrides any overlays specified in the global\n  *     \"overlays\" option for the Viewer. It's also not compatible with specifying\n  *     per-tileSource overlays via the options, as those overlays will persist\n  *     even after the tileSource is closed.\n  *\n  * @property {Boolean} [showReferenceStrip=false]\n  *     If sequenceMode is true, then display a scrolling strip of image thumbnails for\n  *     navigating through the images.\n  *\n  * @property {String} [referenceStripScroll='horizontal']\n  *\n  * @property {Element} [referenceStripElement=null]\n  *\n  * @property {Number} [referenceStripHeight=null]\n  *\n  * @property {Number} [referenceStripWidth=null]\n  *\n  * @property {String} [referenceStripPosition='BOTTOM_LEFT']\n  *\n  * @property {Number} [referenceStripSizeRatio=0.2]\n  *\n  * @property {Boolean} [collectionMode=false]\n  *     Set to true to have the viewer arrange your TiledImages in a grid or line.\n  *\n  * @property {Number} [collectionRows=3]\n  *     If collectionMode is true, specifies how many rows the grid should have. Use 1 to make a line.\n  *     If collectionLayout is 'vertical', specifies how many columns instead.\n  *\n  * @property {Number} [collectionColumns=0]\n  *     If collectionMode is true, specifies how many columns the grid should have. Use 1 to make a line.\n  *     If collectionLayout is 'vertical', specifies how many rows instead. Ignored if collectionRows is not set to a falsy value.\n  *\n  * @property {String} [collectionLayout='horizontal']\n  *     If collectionMode is true, specifies whether to arrange vertically or horizontally.\n  *\n  * @property {Number} [collectionTileSize=800]\n  *     If collectionMode is true, specifies the size, in viewport coordinates, for each TiledImage to fit into.\n  *     The TiledImage will be centered within a square of the specified size.\n  *\n  * @property {Number} [collectionTileMargin=80]\n  *     If collectionMode is true, specifies the margin, in viewport coordinates, between each TiledImage.\n  *\n  * @property {String|Boolean} [crossOriginPolicy=false]\n  *     Valid values are 'Anonymous', 'use-credentials', and false. If false, canvas requests will\n  *     not use CORS, and the canvas will be tainted.\n  *\n  * @property {Boolean} [ajaxWithCredentials=false]\n  *     Whether to set the withCredentials XHR flag for AJAX requests (when loading tile sources).\n  *     Note that this can be overridden at the {@link OpenSeadragon.TileSource} level.\n  *\n  */\n\n /**\n  * Settings for gestures generated by a pointer device.\n  *\n  * @typedef {Object} GestureSettings\n  * @memberof OpenSeadragon\n  *\n  * @property {Boolean} scrollToZoom\n  *     Set to false to disable zooming on scroll gestures.\n  *\n  * @property {Boolean} clickToZoom\n  *     Set to false to disable zooming on click gestures.\n  *\n  * @property {Boolean} dblClickToZoom\n  *     Set to false to disable zooming on double-click gestures. Note: If set to true\n  *     then clickToZoom should be set to false to prevent multiple zooms.\n  *\n  * @property {Boolean} pinchToZoom\n  *     Set to false to disable zooming on pinch gestures.\n  *\n  * @property {Boolean} flickEnabled\n  *     Set to false to disable the kinetic panning effect (flick) at the end of a drag gesture.\n  *\n  * @property {Number} flickMinSpeed\n  *     If flickEnabled is true, the minimum speed (in pixels-per-second) required to cause the kinetic panning effect (flick) at the end of a drag gesture.\n  *\n  * @property {Number} flickMomentum\n  *     If flickEnabled is true, a constant multiplied by the velocity to determine the distance of the kinetic panning effect (flick) at the end of a drag gesture.\n  *     A larger value will make the flick feel \"lighter\", while a smaller value will make the flick feel \"heavier\".\n  *     Note: springStiffness and animationTime also affect the \"spring\" used to stop the flick animation.\n  *\n  */\n\n/**\n  * The names for the image resources used for the image navigation buttons.\n  *\n  * @typedef {Object} NavImages\n  * @memberof OpenSeadragon\n  *\n  * @property {Object} zoomIn - Images for the zoom-in button.\n  * @property {String} zoomIn.REST\n  * @property {String} zoomIn.GROUP\n  * @property {String} zoomIn.HOVER\n  * @property {String} zoomIn.DOWN\n  *\n  * @property {Object} zoomOut - Images for the zoom-out button.\n  * @property {String} zoomOut.REST\n  * @property {String} zoomOut.GROUP\n  * @property {String} zoomOut.HOVER\n  * @property {String} zoomOut.DOWN\n  *\n  * @property {Object} home - Images for the home button.\n  * @property {String} home.REST\n  * @property {String} home.GROUP\n  * @property {String} home.HOVER\n  * @property {String} home.DOWN\n  *\n  * @property {Object} fullpage - Images for the full-page button.\n  * @property {String} fullpage.REST\n  * @property {String} fullpage.GROUP\n  * @property {String} fullpage.HOVER\n  * @property {String} fullpage.DOWN\n  *\n  * @property {Object} rotateleft - Images for the rotate left button.\n  * @property {String} rotateleft.REST\n  * @property {String} rotateleft.GROUP\n  * @property {String} rotateleft.HOVER\n  * @property {String} rotateleft.DOWN\n  *\n  * @property {Object} rotateright - Images for the rotate right button.\n  * @property {String} rotateright.REST\n  * @property {String} rotateright.GROUP\n  * @property {String} rotateright.HOVER\n  * @property {String} rotateright.DOWN\n  *\n  * @property {Object} previous - Images for the previous button.\n  * @property {String} previous.REST\n  * @property {String} previous.GROUP\n  * @property {String} previous.HOVER\n  * @property {String} previous.DOWN\n  *\n  * @property {Object} next - Images for the next button.\n  * @property {String} next.REST\n  * @property {String} next.GROUP\n  * @property {String} next.HOVER\n  * @property {String} next.DOWN\n  *\n  */\n\n\n /**\n  * This function serves as a single point of instantiation for an {@link OpenSeadragon.Viewer}, including all\n  * combinations of out-of-the-box configurable features.\n  *\n  * @param {OpenSeadragon.Options} options - Viewer options.\n  * @returns {OpenSeadragon.Viewer}\n  */\nwindow.OpenSeadragon = window.OpenSeadragon || function( options ){\n\n    return new OpenSeadragon.Viewer( options );\n\n};\n\nif (typeof define === 'function' && define.amd) {\n   define(function () {\n       return (window.OpenSeadragon);\n   });\n}\n\n\n(function( $ ){\n\n\n    /**\n     * The OpenSeadragon version.\n     *\n     * @member {Object} OpenSeadragon.version\n     * @property {String} versionStr - The version number as a string ('major.minor.revision').\n     * @property {Number} major - The major version number.\n     * @property {Number} minor - The minor version number.\n     * @property {Number} revision - The revision number.\n     * @since 1.0.0\n     */\n    $.version = {\n        versionStr: '2.2.1',\n        major: parseInt('2', 10),\n        minor: parseInt('2', 10),\n        revision: parseInt('1', 10)\n    };\n\n\n    /**\n     * Taken from jquery 1.6.1\n     * [[Class]] -> type pairs\n     * @private\n     */\n    var class2type = {\n            '[object Boolean]':     'boolean',\n            '[object Number]':      'number',\n            '[object String]':      'string',\n            '[object Function]':    'function',\n            '[object Array]':       'array',\n            '[object Date]':        'date',\n            '[object RegExp]':      'regexp',\n            '[object Object]':      'object'\n        },\n        // Save a reference to some core methods\n        toString    = Object.prototype.toString,\n        hasOwn      = Object.prototype.hasOwnProperty;\n\n    /**\n     * Taken from jQuery 1.6.1\n     * @function isFunction\n     * @memberof OpenSeadragon\n     * @see {@link http://www.jquery.com/ jQuery}\n     */\n    $.isFunction = function( obj ) {\n        return $.type(obj) === \"function\";\n    };\n\n\n    /**\n     * Taken from jQuery 1.6.1\n     * @function isArray\n     * @memberof OpenSeadragon\n     * @see {@link http://www.jquery.com/ jQuery}\n     */\n    $.isArray = Array.isArray || function( obj ) {\n        return $.type(obj) === \"array\";\n    };\n\n\n    /**\n     * A crude way of determining if an object is a window.\n     * Taken from jQuery 1.6.1\n     * @function isWindow\n     * @memberof OpenSeadragon\n     * @see {@link http://www.jquery.com/ jQuery}\n     */\n    $.isWindow = function( obj ) {\n        return obj && typeof obj === \"object\" && \"setInterval\" in obj;\n    };\n\n\n    /**\n     * Taken from jQuery 1.6.1\n     * @function type\n     * @memberof OpenSeadragon\n     * @see {@link http://www.jquery.com/ jQuery}\n     */\n    $.type = function( obj ) {\n        return ( obj === null ) || ( obj === undefined ) ?\n            String( obj ) :\n            class2type[ toString.call(obj) ] || \"object\";\n    };\n\n\n    /**\n     * Taken from jQuery 1.6.1\n     * @function isPlainObject\n     * @memberof OpenSeadragon\n     * @see {@link http://www.jquery.com/ jQuery}\n     */\n    $.isPlainObject = function( obj ) {\n        // Must be an Object.\n        // Because of IE, we also have to check the presence of the constructor property.\n        // Make sure that DOM nodes and window objects don't pass through, as well\n        if ( !obj || OpenSeadragon.type(obj) !== \"object\" || obj.nodeType || $.isWindow( obj ) ) {\n            return false;\n        }\n\n        // Not own constructor property must be Object\n        if ( obj.constructor &&\n            !hasOwn.call(obj, \"constructor\") &&\n            !hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\") ) {\n            return false;\n        }\n\n        // Own properties are enumerated firstly, so to speed up,\n        // if last one is own, then all properties are own.\n\n        var lastKey;\n        for (var key in obj ) {\n            lastKey = key;\n        }\n\n        return lastKey === undefined || hasOwn.call( obj, lastKey );\n    };\n\n\n    /**\n     * Taken from jQuery 1.6.1\n     * @function isEmptyObject\n     * @memberof OpenSeadragon\n     * @see {@link http://www.jquery.com/ jQuery}\n     */\n    $.isEmptyObject = function( obj ) {\n        for ( var name in obj ) {\n            return false;\n        }\n        return true;\n    };\n\n    /**\n     * Shim around Object.freeze. Does nothing if Object.freeze is not supported.\n     * @param {Object} obj The object to freeze.\n     * @return {Object} obj The frozen object.\n     */\n    $.freezeObject = function(obj) {\n        if (Object.freeze) {\n            $.freezeObject = Object.freeze;\n        } else {\n            $.freezeObject = function(obj) {\n                return obj;\n            };\n        }\n        return $.freezeObject(obj);\n    };\n\n    /**\n     * True if the browser supports the HTML5 canvas element\n     * @member {Boolean} supportsCanvas\n     * @memberof OpenSeadragon\n     */\n    $.supportsCanvas = (function () {\n        var canvasElement = document.createElement( 'canvas' );\n        return !!( $.isFunction( canvasElement.getContext ) &&\n                    canvasElement.getContext( '2d' ) );\n    }());\n\n    /**\n     * Test whether the submitted canvas is tainted or not.\n     * @argument {Canvas} canvas The canvas to test.\n     * @returns {Boolean} True if the canvas is tainted.\n     */\n    $.isCanvasTainted = function(canvas) {\n        var isTainted = false;\n        try {\n            // We test if the canvas is tainted by retrieving data from it.\n            // An exception will be raised if the canvas is tainted.\n            var data = canvas.getContext('2d').getImageData(0, 0, 1, 1);\n        } catch (e) {\n            isTainted = true;\n        }\n        return isTainted;\n    };\n\n    /**\n     * A ratio comparing the device screen's pixel density to the canvas's backing store pixel density. Defaults to 1 if canvas isn't supported by the browser.\n     * @member {Number} pixelDensityRatio\n     * @memberof OpenSeadragon\n     */\n    $.pixelDensityRatio = (function () {\n        if ( $.supportsCanvas ) {\n            var context = document.createElement('canvas').getContext('2d');\n            var devicePixelRatio = window.devicePixelRatio || 1;\n            var backingStoreRatio = context.webkitBackingStorePixelRatio ||\n                                    context.mozBackingStorePixelRatio ||\n                                    context.msBackingStorePixelRatio ||\n                                    context.oBackingStorePixelRatio ||\n                                    context.backingStorePixelRatio || 1;\n            return devicePixelRatio / backingStoreRatio;\n        } else {\n            return 1;\n        }\n    }());\n\n}( OpenSeadragon ));\n\n/**\n *  This closure defines all static methods available to the OpenSeadragon\n *  namespace.  Many, if not most, are taked directly from jQuery for use\n *  to simplify and reduce common programming patterns.  More static methods\n *  from jQuery may eventually make their way into this though we are\n *  attempting to avoid an explicit dependency on jQuery only because\n *  OpenSeadragon is a broadly useful code base and would be made less broad\n *  by requiring jQuery fully.\n *\n *  Some static methods have also been refactored from the original OpenSeadragon\n *  project.\n */\n(function( $ ){\n\n    /**\n     * Taken from jQuery 1.6.1\n     * @function extend\n     * @memberof OpenSeadragon\n     * @see {@link http://www.jquery.com/ jQuery}\n     */\n    $.extend = function() {\n        var options,\n            name,\n            src,\n            copy,\n            copyIsArray,\n            clone,\n            target  = arguments[ 0 ] || {},\n            length  = arguments.length,\n            deep    = false,\n            i       = 1;\n\n        // Handle a deep copy situation\n        if ( typeof target === \"boolean\" ) {\n            deep    = target;\n            target  = arguments[ 1 ] || {};\n            // skip the boolean and the target\n            i = 2;\n        }\n\n        // Handle case when target is a string or something (possible in deep copy)\n        if ( typeof target !== \"object\" && !OpenSeadragon.isFunction( target ) ) {\n            target = {};\n        }\n\n        // extend jQuery itself if only one argument is passed\n        if ( length === i ) {\n            target = this;\n            --i;\n        }\n\n        for ( ; i < length; i++ ) {\n            // Only deal with non-null/undefined values\n            options = arguments[ i ];\n            if ( options !== null || options !== undefined ) {\n                // Extend the base object\n                for ( name in options ) {\n                    src = target[ name ];\n                    copy = options[ name ];\n\n                    // Prevent never-ending loop\n                    if ( target === copy ) {\n                        continue;\n                    }\n\n                    // Recurse if we're merging plain objects or arrays\n                    if ( deep && copy && ( OpenSeadragon.isPlainObject( copy ) || ( copyIsArray = OpenSeadragon.isArray( copy ) ) ) ) {\n                        if ( copyIsArray ) {\n                            copyIsArray = false;\n                            clone = src && OpenSeadragon.isArray( src ) ? src : [];\n\n                        } else {\n                            clone = src && OpenSeadragon.isPlainObject( src ) ? src : {};\n                        }\n\n                        // Never move original objects, clone them\n                        target[ name ] = OpenSeadragon.extend( deep, clone, copy );\n\n                    // Don't bring in undefined values\n                    } else if ( copy !== undefined ) {\n                        target[ name ] = copy;\n                    }\n                }\n            }\n        }\n\n        // Return the modified object\n        return target;\n    };\n\n    var isIOSDevice = function () {\n        if (typeof navigator !== 'object') {\n            return false;\n        }\n        var userAgent = navigator.userAgent;\n        if (typeof userAgent !== 'string') {\n            return false;\n        }\n        return userAgent.indexOf('iPhone') !== -1 ||\n               userAgent.indexOf('iPad') !== -1 ||\n               userAgent.indexOf('iPod') !== -1;\n    };\n\n    $.extend( $, /** @lends OpenSeadragon */{\n        /**\n         * The default values for the optional settings documented at {@link OpenSeadragon.Options}.\n         * @static\n         * @type {Object}\n         */\n        DEFAULT_SETTINGS: {\n            //DATA SOURCE DETAILS\n            xmlPath:                null,\n            tileSources:            null,\n            tileHost:               null,\n            initialPage:            0,\n            crossOriginPolicy:      false,\n            ajaxWithCredentials:    false,\n\n            //PAN AND ZOOM SETTINGS AND CONSTRAINTS\n            panHorizontal:          true,\n            panVertical:            true,\n            constrainDuringPan:     false,\n            wrapHorizontal:         false,\n            wrapVertical:           false,\n            visibilityRatio:        0.5, //-> how much of the viewer can be negative space\n            minPixelRatio:          0.5, //->closer to 0 draws tiles meant for a higher zoom at this zoom\n            defaultZoomLevel:       0,\n            minZoomLevel:           null,\n            maxZoomLevel:           null,\n            homeFillsViewer:        false,\n\n            //UI RESPONSIVENESS AND FEEL\n            clickTimeThreshold:     300,\n            clickDistThreshold:     5,\n            dblClickTimeThreshold:  300,\n            dblClickDistThreshold:  20,\n            springStiffness:        6.5,\n            animationTime:          1.2,\n            gestureSettingsMouse:   { scrollToZoom: true,  clickToZoom: true,  dblClickToZoom: false, pinchToZoom: false, flickEnabled: false, flickMinSpeed: 120, flickMomentum: 0.25, pinchRotate: false },\n            gestureSettingsTouch:   { scrollToZoom: false, clickToZoom: false, dblClickToZoom: true,  pinchToZoom: true,  flickEnabled: true,  flickMinSpeed: 120, flickMomentum: 0.25, pinchRotate: false },\n            gestureSettingsPen:     { scrollToZoom: false, clickToZoom: true,  dblClickToZoom: false, pinchToZoom: false, flickEnabled: false, flickMinSpeed: 120, flickMomentum: 0.25, pinchRotate: false },\n            gestureSettingsUnknown: { scrollToZoom: false, clickToZoom: false, dblClickToZoom: true,  pinchToZoom: true,  flickEnabled: true,  flickMinSpeed: 120, flickMomentum: 0.25, pinchRotate: false },\n            zoomPerClick:           2,\n            zoomPerScroll:          1.2,\n            zoomPerSecond:          1.0,\n            blendTime:              0,\n            alwaysBlend:            false,\n            autoHideControls:       true,\n            immediateRender:        false,\n            minZoomImageRatio:      0.9, //-> closer to 0 allows zoom out to infinity\n            maxZoomPixelRatio:      1.1, //-> higher allows 'over zoom' into pixels\n            smoothTileEdgesMinZoom: 1.1, //-> higher than maxZoomPixelRatio disables it\n            iOSDevice:              isIOSDevice(),\n            pixelsPerWheelLine:     40,\n            autoResize:             true,\n            preserveImageSizeOnResize: false, // requires autoResize=true\n            minScrollDeltaTime:     50,\n\n            //DEFAULT CONTROL SETTINGS\n            showSequenceControl:     true,  //SEQUENCE\n            sequenceControlAnchor:   null,  //SEQUENCE\n            preserveViewport:        false, //SEQUENCE\n            preserveOverlays:        false, //SEQUENCE\n            navPrevNextWrap:         false, //SEQUENCE\n            showNavigationControl:   true,  //ZOOM/HOME/FULL/ROTATION\n            navigationControlAnchor: null,  //ZOOM/HOME/FULL/ROTATION\n            showZoomControl:         true,  //ZOOM\n            showHomeControl:         true,  //HOME\n            showFullPageControl:     true,  //FULL\n            showRotationControl:     false, //ROTATION\n            controlsFadeDelay:       2000,  //ZOOM/HOME/FULL/SEQUENCE\n            controlsFadeLength:      1500,  //ZOOM/HOME/FULL/SEQUENCE\n            mouseNavEnabled:         true,  //GENERAL MOUSE INTERACTIVITY\n\n            //VIEWPORT NAVIGATOR SETTINGS\n            showNavigator:              false,\n            navigatorId:                null,\n            navigatorPosition:          null,\n            navigatorSizeRatio:         0.2,\n            navigatorMaintainSizeRatio: false,\n            navigatorTop:               null,\n            navigatorLeft:              null,\n            navigatorHeight:            null,\n            navigatorWidth:             null,\n            navigatorAutoResize:        true,\n            navigatorAutoFade:          true,\n            navigatorRotate:            true,\n\n            // INITIAL ROTATION\n            degrees:                    0,\n\n            // APPEARANCE\n            opacity:                    1,\n            compositeOperation:         null,\n            placeholderFillStyle:       null,\n\n            //REFERENCE STRIP SETTINGS\n            showReferenceStrip:          false,\n            referenceStripScroll:       'horizontal',\n            referenceStripElement:       null,\n            referenceStripHeight:        null,\n            referenceStripWidth:         null,\n            referenceStripPosition:      'BOTTOM_LEFT',\n            referenceStripSizeRatio:     0.2,\n\n            //COLLECTION VISUALIZATION SETTINGS\n            collectionRows:         3, //or columns depending on layout\n            collectionColumns:      0, //columns in horizontal layout, rows in vertical layout\n            collectionLayout:       'horizontal', //vertical\n            collectionMode:         false,\n            collectionTileSize:     800,\n            collectionTileMargin:   80,\n\n            //PERFORMANCE SETTINGS\n            imageLoaderLimit:       0,\n            maxImageCacheCount:     200,\n            timeout:                30000,\n            useCanvas:              true,  // Use canvas element for drawing if available\n\n            //INTERFACE RESOURCE SETTINGS\n            prefixUrl:              \"/images/\",\n            navImages: {\n                zoomIn: {\n                    REST:   'zoomin_rest.png',\n                    GROUP:  'zoomin_grouphover.png',\n                    HOVER:  'zoomin_hover.png',\n                    DOWN:   'zoomin_pressed.png'\n                },\n                zoomOut: {\n                    REST:   'zoomout_rest.png',\n                    GROUP:  'zoomout_grouphover.png',\n                    HOVER:  'zoomout_hover.png',\n                    DOWN:   'zoomout_pressed.png'\n                },\n                home: {\n                    REST:   'home_rest.png',\n                    GROUP:  'home_grouphover.png',\n                    HOVER:  'home_hover.png',\n                    DOWN:   'home_pressed.png'\n                },\n                fullpage: {\n                    REST:   'fullpage_rest.png',\n                    GROUP:  'fullpage_grouphover.png',\n                    HOVER:  'fullpage_hover.png',\n                    DOWN:   'fullpage_pressed.png'\n                },\n                rotateleft: {\n                    REST:   'rotateleft_rest.png',\n                    GROUP:  'rotateleft_grouphover.png',\n                    HOVER:  'rotateleft_hover.png',\n                    DOWN:   'rotateleft_pressed.png'\n                },\n                rotateright: {\n                    REST:   'rotateright_rest.png',\n                    GROUP:  'rotateright_grouphover.png',\n                    HOVER:  'rotateright_hover.png',\n                    DOWN:   'rotateright_pressed.png'\n                },\n                previous: {\n                    REST:   'previous_rest.png',\n                    GROUP:  'previous_grouphover.png',\n                    HOVER:  'previous_hover.png',\n                    DOWN:   'previous_pressed.png'\n                },\n                next: {\n                    REST:   'next_rest.png',\n                    GROUP:  'next_grouphover.png',\n                    HOVER:  'next_hover.png',\n                    DOWN:   'next_pressed.png'\n                }\n            },\n\n            //DEVELOPER SETTINGS\n            debugMode:              false,\n            debugGridColor:         '#437AB2'\n        },\n\n\n        /**\n         * TODO: get rid of this.  I can't see how it's required at all.  Looks\n         *       like an early legacy code artifact.\n         * @static\n         * @ignore\n         */\n        SIGNAL: \"----seadragon----\",\n\n\n        /**\n         * Returns a function which invokes the method as if it were a method belonging to the object.\n         * @function\n         * @param {Object} object\n         * @param {Function} method\n         * @returns {Function}\n         */\n        delegate: function( object, method ) {\n            return function(){\n                var args = arguments;\n                if ( args === undefined ){\n                    args = [];\n                }\n                return method.apply( object, args );\n            };\n        },\n\n\n        /**\n         * An enumeration of Browser vendors.\n         * @static\n         * @type {Object}\n         * @property {Number} UNKNOWN\n         * @property {Number} IE\n         * @property {Number} FIREFOX\n         * @property {Number} SAFARI\n         * @property {Number} CHROME\n         * @property {Number} OPERA\n         */\n        BROWSERS: {\n            UNKNOWN:    0,\n            IE:         1,\n            FIREFOX:    2,\n            SAFARI:     3,\n            CHROME:     4,\n            OPERA:      5\n        },\n\n\n        /**\n         * Returns a DOM Element for the given id or element.\n         * @function\n         * @param {String|Element} element Accepts an id or element.\n         * @returns {Element} The element with the given id, null, or the element itself.\n         */\n        getElement: function( element ) {\n            if ( typeof ( element ) == \"string\" ) {\n                element = document.getElementById( element );\n            }\n            return element;\n        },\n\n\n        /**\n         * Determines the position of the upper-left corner of the element.\n         * @function\n         * @param {Element|String} element - the elemenet we want the position for.\n         * @returns {OpenSeadragon.Point} - the position of the upper left corner of the element.\n         */\n        getElementPosition: function( element ) {\n            var result = new $.Point(),\n                isFixed,\n                offsetParent;\n\n            element      = $.getElement( element );\n            isFixed      = $.getElementStyle( element ).position == \"fixed\";\n            offsetParent = getOffsetParent( element, isFixed );\n\n            while ( offsetParent ) {\n\n                result.x += element.offsetLeft;\n                result.y += element.offsetTop;\n\n                if ( isFixed ) {\n                    result = result.plus( $.getPageScroll() );\n                }\n\n                element = offsetParent;\n                isFixed = $.getElementStyle( element ).position == \"fixed\";\n                offsetParent = getOffsetParent( element, isFixed );\n            }\n\n            return result;\n        },\n\n\n        /**\n         * Determines the position of the upper-left corner of the element adjusted for current page and/or element scroll.\n         * @function\n         * @param {Element|String} element - the element we want the position for.\n         * @returns {OpenSeadragon.Point} - the position of the upper left corner of the element adjusted for current page and/or element scroll.\n         */\n        getElementOffset: function( element ) {\n            element = $.getElement( element );\n\n            var doc = element && element.ownerDocument,\n                docElement,\n                win,\n                boundingRect = { top: 0, left: 0 };\n\n            if ( !doc ) {\n                return new $.Point();\n            }\n\n            docElement = doc.documentElement;\n\n            if ( typeof element.getBoundingClientRect !== typeof undefined ) {\n                boundingRect = element.getBoundingClientRect();\n            }\n\n            win = ( doc == doc.window ) ?\n                doc :\n                ( doc.nodeType === 9 ) ?\n                    doc.defaultView || doc.parentWindow :\n                    false;\n\n            return new $.Point(\n                boundingRect.left + ( win.pageXOffset || docElement.scrollLeft ) - ( docElement.clientLeft || 0 ),\n                boundingRect.top + ( win.pageYOffset || docElement.scrollTop ) - ( docElement.clientTop || 0 )\n            );\n        },\n\n\n        /**\n         * Determines the height and width of the given element.\n         * @function\n         * @param {Element|String} element\n         * @returns {OpenSeadragon.Point}\n         */\n        getElementSize: function( element ) {\n            element = $.getElement( element );\n\n            return new $.Point(\n                element.clientWidth,\n                element.clientHeight\n            );\n        },\n\n\n        /**\n         * Returns the CSSStyle object for the given element.\n         * @function\n         * @param {Element|String} element\n         * @returns {CSSStyle}\n         */\n        getElementStyle:\n            document.documentElement.currentStyle ?\n            function( element ) {\n                element = $.getElement( element );\n                return element.currentStyle;\n            } :\n            function( element ) {\n                element = $.getElement( element );\n                return window.getComputedStyle( element, \"\" );\n            },\n\n        /**\n         * Returns the property with the correct vendor prefix appended.\n         * @param {String} property the property name\n         * @returns {String} the property with the correct prefix or null if not\n         * supported.\n         */\n        getCssPropertyWithVendorPrefix: function(property) {\n            var memo = {};\n\n            $.getCssPropertyWithVendorPrefix = function(property) {\n                if (memo[property] !== undefined) {\n                    return memo[property];\n                }\n                var style = document.createElement('div').style;\n                var result = null;\n                if (style[property] !== undefined) {\n                    result = property;\n                } else {\n                    var prefixes = ['Webkit', 'Moz', 'MS', 'O',\n                        'webkit', 'moz', 'ms', 'o'];\n                    var suffix = $.capitalizeFirstLetter(property);\n                    for (var i = 0; i < prefixes.length; i++) {\n                        var prop = prefixes[i] + suffix;\n                        if (style[prop] !== undefined) {\n                            result = prop;\n                            break;\n                        }\n                    }\n                }\n                memo[property] = result;\n                return result;\n            };\n            return $.getCssPropertyWithVendorPrefix(property);\n        },\n\n        /**\n         * Capitalizes the first letter of a string\n         * @param {String} string\n         * @returns {String} The string with the first letter capitalized\n         */\n        capitalizeFirstLetter: function(string) {\n            return string.charAt(0).toUpperCase() + string.slice(1);\n        },\n\n        /**\n         * Determines if a point is within the bounding rectangle of the given element (hit-test).\n         * @function\n         * @param {Element|String} element\n         * @param {OpenSeadragon.Point} point\n         * @returns {Boolean}\n         */\n        pointInElement: function( element, point ) {\n            element = $.getElement( element );\n            var offset = $.getElementOffset( element ),\n                size = $.getElementSize( element );\n            return point.x >= offset.x && point.x < offset.x + size.x && point.y < offset.y + size.y && point.y >= offset.y;\n        },\n\n\n        /**\n         * Gets the latest event, really only useful internally since its\n         * specific to IE behavior.\n         * @function\n         * @param {Event} [event]\n         * @returns {Event}\n         * @deprecated For internal use only\n         * @private\n         */\n        getEvent: function( event ) {\n            if( event ){\n                $.getEvent = function( event ) {\n                    return event;\n                };\n            } else {\n                $.getEvent = function() {\n                    return window.event;\n                };\n            }\n            return $.getEvent( event );\n        },\n\n\n        /**\n         * Gets the position of the mouse on the screen for a given event.\n         * @function\n         * @param {Event} [event]\n         * @returns {OpenSeadragon.Point}\n         */\n        getMousePosition: function( event ) {\n\n            if ( typeof( event.pageX ) == \"number\" ) {\n                $.getMousePosition = function( event ){\n                    var result = new $.Point();\n\n                    event = $.getEvent( event );\n                    result.x = event.pageX;\n                    result.y = event.pageY;\n\n                    return result;\n                };\n            } else if ( typeof( event.clientX ) == \"number\" ) {\n                $.getMousePosition = function( event ){\n                    var result = new $.Point();\n\n                    event = $.getEvent( event );\n                    result.x =\n                        event.clientX +\n                        document.body.scrollLeft +\n                        document.documentElement.scrollLeft;\n                    result.y =\n                        event.clientY +\n                        document.body.scrollTop +\n                        document.documentElement.scrollTop;\n\n                    return result;\n                };\n            } else {\n                throw new Error(\n                    \"Unknown event mouse position, no known technique.\"\n                );\n            }\n\n            return $.getMousePosition( event );\n        },\n\n\n        /**\n         * Determines the page's current scroll position.\n         * @function\n         * @returns {OpenSeadragon.Point}\n         */\n        getPageScroll: function() {\n            var docElement  = document.documentElement || {},\n                body        = document.body || {};\n\n            if ( typeof( window.pageXOffset ) == \"number\" ) {\n                $.getPageScroll = function(){\n                    return new $.Point(\n                        window.pageXOffset,\n                        window.pageYOffset\n                    );\n                };\n            } else if ( body.scrollLeft || body.scrollTop ) {\n                $.getPageScroll = function(){\n                    return new $.Point(\n                        document.body.scrollLeft,\n                        document.body.scrollTop\n                    );\n                };\n            } else if ( docElement.scrollLeft || docElement.scrollTop ) {\n                $.getPageScroll = function(){\n                    return new $.Point(\n                        document.documentElement.scrollLeft,\n                        document.documentElement.scrollTop\n                    );\n                };\n            } else {\n                // We can't reassign the function yet, as there was no scroll.\n                return new $.Point(0,0);\n            }\n\n            return $.getPageScroll();\n        },\n\n        /**\n         * Set the page scroll position.\n         * @function\n         * @returns {OpenSeadragon.Point}\n         */\n        setPageScroll: function( scroll ) {\n            if ( typeof ( window.scrollTo ) !== \"undefined\" ) {\n                $.setPageScroll = function( scroll ) {\n                    window.scrollTo( scroll.x, scroll.y );\n                };\n            } else {\n                var originalScroll = $.getPageScroll();\n                if ( originalScroll.x === scroll.x &&\n                    originalScroll.y === scroll.y ) {\n                    // We are already correctly positioned and there\n                    // is no way to detect the correct method.\n                    return;\n                }\n\n                document.body.scrollLeft = scroll.x;\n                document.body.scrollTop = scroll.y;\n                var currentScroll = $.getPageScroll();\n                if ( currentScroll.x !== originalScroll.x &&\n                    currentScroll.y !== originalScroll.y ) {\n                    $.setPageScroll = function( scroll ) {\n                        document.body.scrollLeft = scroll.x;\n                        document.body.scrollTop = scroll.y;\n                    };\n                    return;\n                }\n\n                document.documentElement.scrollLeft = scroll.x;\n                document.documentElement.scrollTop = scroll.y;\n                currentScroll = $.getPageScroll();\n                if ( currentScroll.x !== originalScroll.x &&\n                    currentScroll.y !== originalScroll.y ) {\n                    $.setPageScroll = function( scroll ) {\n                        document.documentElement.scrollLeft = scroll.x;\n                        document.documentElement.scrollTop = scroll.y;\n                    };\n                    return;\n                }\n\n                // We can't find anything working, so we do nothing.\n                $.setPageScroll = function( scroll ) {\n                };\n            }\n\n            return $.setPageScroll( scroll );\n        },\n\n        /**\n         * Determines the size of the browsers window.\n         * @function\n         * @returns {OpenSeadragon.Point}\n         */\n        getWindowSize: function() {\n            var docElement = document.documentElement || {},\n                body    = document.body || {};\n\n            if ( typeof( window.innerWidth ) == 'number' ) {\n                $.getWindowSize = function(){\n                    return new $.Point(\n                        window.innerWidth,\n                        window.innerHeight\n                    );\n                };\n            } else if ( docElement.clientWidth || docElement.clientHeight ) {\n                $.getWindowSize = function(){\n                    return new $.Point(\n                        document.documentElement.clientWidth,\n                        document.documentElement.clientHeight\n                    );\n                };\n            } else if ( body.clientWidth || body.clientHeight ) {\n                $.getWindowSize = function(){\n                    return new $.Point(\n                        document.body.clientWidth,\n                        document.body.clientHeight\n                    );\n                };\n            } else {\n                throw new Error(\"Unknown window size, no known technique.\");\n            }\n\n            return $.getWindowSize();\n        },\n\n\n        /**\n         * Wraps the given element in a nest of divs so that the element can\n         * be easily centered using CSS tables\n         * @function\n         * @param {Element|String} element\n         * @returns {Element} outermost wrapper element\n         */\n        makeCenteredNode: function( element ) {\n            // Convert a possible ID to an actual HTMLElement\n            element = $.getElement( element );\n\n            /*\n                CSS tables require you to have a display:table/row/cell hierarchy so we need to create\n                three nested wrapper divs:\n             */\n\n            var wrappers = [\n                $.makeNeutralElement( 'div' ),\n                $.makeNeutralElement( 'div' ),\n                $.makeNeutralElement( 'div' )\n            ];\n\n            // It feels like we should be able to pass style dicts to makeNeutralElement:\n            $.extend(wrappers[0].style, {\n                display: \"table\",\n                height: \"100%\",\n                width: \"100%\"\n            });\n\n            $.extend(wrappers[1].style, {\n                display: \"table-row\"\n            });\n\n            $.extend(wrappers[2].style, {\n                display: \"table-cell\",\n                verticalAlign: \"middle\",\n                textAlign: \"center\"\n            });\n\n            wrappers[0].appendChild(wrappers[1]);\n            wrappers[1].appendChild(wrappers[2]);\n            wrappers[2].appendChild(element);\n\n            return wrappers[0];\n        },\n\n\n        /**\n         * Creates an easily positionable element of the given type that therefor\n         * serves as an excellent container element.\n         * @function\n         * @param {String} tagName\n         * @returns {Element}\n         */\n        makeNeutralElement: function( tagName ) {\n            var element = document.createElement( tagName ),\n                style   = element.style;\n\n            style.background = \"transparent none\";\n            style.border     = \"none\";\n            style.margin     = \"0px\";\n            style.padding    = \"0px\";\n            style.position   = \"static\";\n\n            return element;\n        },\n\n\n        /**\n         * Returns the current milliseconds, using Date.now() if available\n         * @function\n         */\n        now: function( ) {\n          if (Date.now) {\n            $.now = Date.now;\n          } else {\n            $.now = function() { return new Date().getTime(); };\n          }\n\n          return $.now();\n        },\n\n\n        /**\n         * Ensures an image is loaded correctly to support alpha transparency.\n         * Generally only IE has issues doing this correctly for formats like\n         * png.\n         * @function\n         * @param {String} src\n         * @returns {Element}\n         */\n        makeTransparentImage: function( src ) {\n\n            $.makeTransparentImage = function( src ){\n                var img = $.makeNeutralElement( \"img\" );\n\n                img.src = src;\n\n                return img;\n            };\n\n            if ( $.Browser.vendor == $.BROWSERS.IE && $.Browser.version < 7 ) {\n\n                $.makeTransparentImage = function( src ){\n                    var img     = $.makeNeutralElement( \"img\" ),\n                        element = null;\n\n                    element = $.makeNeutralElement(\"span\");\n                    element.style.display = \"inline-block\";\n\n                    img.onload = function() {\n                        element.style.width  = element.style.width || img.width + \"px\";\n                        element.style.height = element.style.height || img.height + \"px\";\n\n                        img.onload = null;\n                        img = null;     // to prevent memory leaks in IE\n                    };\n\n                    img.src = src;\n                    element.style.filter =\n                        \"progid:DXImageTransform.Microsoft.AlphaImageLoader(src='\" +\n                        src +\n                        \"', sizingMethod='scale')\";\n\n                    return element;\n                };\n\n            }\n\n            return $.makeTransparentImage( src );\n        },\n\n\n        /**\n         * Sets the opacity of the specified element.\n         * @function\n         * @param {Element|String} element\n         * @param {Number} opacity\n         * @param {Boolean} [usesAlpha]\n         */\n        setElementOpacity: function( element, opacity, usesAlpha ) {\n\n            var ieOpacity,\n                ieFilter;\n\n            element = $.getElement( element );\n\n            if ( usesAlpha && !$.Browser.alpha ) {\n                opacity = Math.round( opacity );\n            }\n\n            if ( $.Browser.opacity ) {\n                element.style.opacity = opacity < 1 ? opacity : \"\";\n            } else {\n                if ( opacity < 1 ) {\n                    ieOpacity = Math.round( 100 * opacity );\n                    ieFilter  = \"alpha(opacity=\" + ieOpacity + \")\";\n                    element.style.filter = ieFilter;\n                } else {\n                    element.style.filter = \"\";\n                }\n            }\n        },\n\n\n        /**\n         * Sets the specified element's touch-action style attribute to 'none'.\n         * @function\n         * @param {Element|String} element\n         */\n        setElementTouchActionNone: function( element ) {\n            element = $.getElement( element );\n            if ( typeof element.style.touchAction !== 'undefined' ) {\n                element.style.touchAction = 'none';\n            } else if ( typeof element.style.msTouchAction !== 'undefined' ) {\n                element.style.msTouchAction = 'none';\n            }\n        },\n\n\n        /**\n         * Add the specified CSS class to the element if not present.\n         * @function\n         * @param {Element|String} element\n         * @param {String} className\n         */\n        addClass: function( element, className ) {\n            element = $.getElement( element );\n\n            if ( ! element.className ) {\n                element.className = className;\n            } else if ( ( ' ' + element.className + ' ' ).\n                indexOf( ' ' + className + ' ' ) === -1 ) {\n                element.className += ' ' + className;\n            }\n        },\n\n        /**\n         * Find the first index at which an element is found in an array or -1\n         * if not present.\n         *\n         * Code taken and adapted from\n         * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf#Compatibility\n         *\n         * @function\n         * @param {Array} array The array from which to find the element\n         * @param {Object} searchElement The element to find\n         * @param {Number} [fromIndex=0] Index to start research.\n         * @returns {Number} The index of the element in the array.\n         */\n        indexOf: function( array, searchElement, fromIndex ) {\n            if ( Array.prototype.indexOf ) {\n                this.indexOf = function( array, searchElement, fromIndex ) {\n                    return array.indexOf( searchElement, fromIndex );\n                };\n            } else {\n                this.indexOf = function( array, searchElement, fromIndex ) {\n                    var i,\n                        pivot = ( fromIndex ) ? fromIndex : 0,\n                        length;\n                    if ( !array ) {\n                        throw new TypeError( );\n                    }\n\n                    length = array.length;\n                    if ( length === 0 || pivot >= length ) {\n                        return -1;\n                    }\n\n                    if ( pivot < 0 ) {\n                        pivot = length - Math.abs( pivot );\n                    }\n\n                    for ( i = pivot; i < length; i++ ) {\n                        if ( array[i] === searchElement ) {\n                            return i;\n                        }\n                    }\n                    return -1;\n                };\n            }\n            return this.indexOf( array, searchElement, fromIndex );\n        },\n\n        /**\n         * Remove the specified CSS class from the element.\n         * @function\n         * @param {Element|String} element\n         * @param {String} className\n         */\n        removeClass: function( element, className ) {\n            var oldClasses,\n                newClasses = [],\n                i;\n\n            element = $.getElement( element );\n            oldClasses = element.className.split( /\\s+/ );\n            for ( i = 0; i < oldClasses.length; i++ ) {\n                if ( oldClasses[ i ] && oldClasses[ i ] !== className ) {\n                    newClasses.push( oldClasses[ i ] );\n                }\n            }\n            element.className = newClasses.join(' ');\n        },\n\n\n        /**\n         * Adds an event listener for the given element, eventName and handler.\n         * @function\n         * @param {Element|String} element\n         * @param {String} eventName\n         * @param {Function} handler\n         * @param {Boolean} [useCapture]\n         */\n        addEvent: (function () {\n            if ( window.addEventListener ) {\n                return function ( element, eventName, handler, useCapture ) {\n                    element = $.getElement( element );\n                    element.addEventListener( eventName, handler, useCapture );\n                };\n            } else if ( window.attachEvent ) {\n                return function ( element, eventName, handler, useCapture ) {\n                    element = $.getElement( element );\n                    element.attachEvent( 'on' + eventName, handler );\n                };\n            } else {\n                throw new Error( \"No known event model.\" );\n            }\n        }()),\n\n\n        /**\n         * Remove a given event listener for the given element, event type and\n         * handler.\n         * @function\n         * @param {Element|String} element\n         * @param {String} eventName\n         * @param {Function} handler\n         * @param {Boolean} [useCapture]\n         */\n        removeEvent: (function () {\n            if ( window.removeEventListener ) {\n                return function ( element, eventName, handler, useCapture ) {\n                    element = $.getElement( element );\n                    element.removeEventListener( eventName, handler, useCapture );\n                };\n            } else if ( window.detachEvent ) {\n                return function( element, eventName, handler, useCapture ) {\n                    element = $.getElement( element );\n                    element.detachEvent( 'on' + eventName, handler );\n                };\n            } else {\n                throw new Error( \"No known event model.\" );\n            }\n        }()),\n\n\n        /**\n         * Cancels the default browser behavior had the event propagated all\n         * the way up the DOM to the window object.\n         * @function\n         * @param {Event} [event]\n         */\n        cancelEvent: function( event ) {\n            event = $.getEvent( event );\n\n            if ( event.preventDefault ) {\n                $.cancelEvent = function( event ){\n                    // W3C for preventing default\n                    event.preventDefault();\n                };\n            } else {\n                $.cancelEvent = function( event ){\n                    event = $.getEvent( event );\n                    // legacy for preventing default\n                    event.cancel = true;\n                    // IE for preventing default\n                    event.returnValue = false;\n                };\n            }\n            $.cancelEvent( event );\n        },\n\n\n        /**\n         * Stops the propagation of the event up the DOM.\n         * @function\n         * @param {Event} [event]\n         */\n        stopEvent: function( event ) {\n            event = $.getEvent( event );\n\n            if ( event.stopPropagation ) {\n                // W3C for stopping propagation\n                $.stopEvent = function( event ){\n                    event.stopPropagation();\n                };\n            } else {\n                // IE for stopping propagation\n                $.stopEvent = function( event ){\n                    event = $.getEvent( event );\n                    event.cancelBubble = true;\n                };\n\n            }\n\n            $.stopEvent( event );\n        },\n\n\n        /**\n         * Similar to OpenSeadragon.delegate, but it does not immediately call\n         * the method on the object, returning a function which can be called\n         * repeatedly to delegate the method. It also allows additonal arguments\n         * to be passed during construction which will be added during each\n         * invocation, and each invocation can add additional arguments as well.\n         *\n         * @function\n         * @param {Object} object\n         * @param {Function} method\n         * @param [args] any additional arguments are passed as arguments to the\n         *  created callback\n         * @returns {Function}\n         */\n        createCallback: function( object, method ) {\n            //TODO: This pattern is painful to use and debug.  It's much cleaner\n            //      to use pinning plus anonymous functions.  Get rid of this\n            //      pattern!\n            var initialArgs = [],\n                i;\n            for ( i = 2; i < arguments.length; i++ ) {\n                initialArgs.push( arguments[ i ] );\n            }\n\n            return function() {\n                var args = initialArgs.concat( [] ),\n                    i;\n                for ( i = 0; i < arguments.length; i++ ) {\n                    args.push( arguments[ i ] );\n                }\n\n                return method.apply( object, args );\n            };\n        },\n\n\n        /**\n         * Retreives the value of a url parameter from the window.location string.\n         * @function\n         * @param {String} key\n         * @returns {String} The value of the url parameter or null if no param matches.\n         */\n        getUrlParameter: function( key ) {\n            var value = URLPARAMS[ key ];\n            return value ? value : null;\n        },\n\n        /**\n         * Retrieves the protocol used by the url. The url can either be absolute\n         * or relative.\n         * @function\n         * @private\n         * @param {String} url The url to retrieve the protocol from.\n         * @return {String} The protocol (http:, https:, file:, ftp: ...)\n         */\n        getUrlProtocol: function( url ) {\n            var match = url.match(/^([a-z]+:)\\/\\//i);\n            if ( match === null ) {\n                // Relative URL, retrive the protocol from window.location\n                return window.location.protocol;\n            }\n            return match[1].toLowerCase();\n        },\n\n        /**\n         * Create an XHR object\n         * @private\n         * @param {type} [local] If set to true, the XHR will be file: protocol\n         * compatible if possible (but may raise a warning in the browser).\n         * @returns {XMLHttpRequest}\n         */\n        createAjaxRequest: function( local ) {\n            // IE11 does not support window.ActiveXObject so we just try to\n            // create one to see if it is supported.\n            // See: http://msdn.microsoft.com/en-us/library/ie/dn423948%28v=vs.85%29.aspx\n            var supportActiveX;\n            try {\n                /* global ActiveXObject:true */\n                supportActiveX = !!new ActiveXObject( \"Microsoft.XMLHTTP\" );\n            } catch( e ) {\n                supportActiveX = false;\n            }\n\n            if ( supportActiveX ) {\n                if ( window.XMLHttpRequest ) {\n                    $.createAjaxRequest = function( local ) {\n                        if ( local ) {\n                            return new ActiveXObject( \"Microsoft.XMLHTTP\" );\n                        }\n                        return new XMLHttpRequest();\n                    };\n                } else {\n                    $.createAjaxRequest = function() {\n                        return new ActiveXObject( \"Microsoft.XMLHTTP\" );\n                    };\n                }\n            } else if ( window.XMLHttpRequest ) {\n                $.createAjaxRequest = function() {\n                    return new XMLHttpRequest();\n                };\n            } else {\n                throw new Error( \"Browser doesn't support XMLHttpRequest.\" );\n            }\n            return $.createAjaxRequest( local );\n        },\n\n        /**\n         * Makes an AJAX request.\n         * @param {Object} options\n         * @param {String} options.url - the url to request\n         * @param {Function} options.success - a function to call on a successful response\n         * @param {Function} options.error - a function to call on when an error occurs\n         * @param {Boolean} [options.withCredentials=false] - whether to set the XHR's withCredentials\n         * @throws {Error}\n         */\n        makeAjaxRequest: function( url, onSuccess, onError ) {\n            var withCredentials;\n\n            // Note that our preferred API is that you pass in a single object; the named\n            // arguments are for legacy support.\n            if( $.isPlainObject( url ) ){\n                onSuccess = url.success;\n                onError = url.error;\n                withCredentials = url.withCredentials;\n                url = url.url;\n            }\n\n            var protocol = $.getUrlProtocol( url );\n            var request = $.createAjaxRequest( protocol === \"file:\" );\n\n            if ( !$.isFunction( onSuccess ) ) {\n                throw new Error( \"makeAjaxRequest requires a success callback\" );\n            }\n\n            request.onreadystatechange = function() {\n                // 4 = DONE (https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest#Properties)\n                if ( request.readyState == 4 ) {\n                    request.onreadystatechange = function(){};\n\n                    // With protocols other than http/https, the status is 200\n                    // on Firefox and 0 on other browsers\n                    if ( request.status === 200 ||\n                        ( request.status === 0 &&\n                          protocol !== \"http:\" &&\n                          protocol !== \"https:\" )) {\n                        onSuccess( request );\n                    } else {\n                        $.console.log( \"AJAX request returned %d: %s\", request.status, url );\n\n                        if ( $.isFunction( onError ) ) {\n                            onError( request );\n                        }\n                    }\n                }\n            };\n\n            if (withCredentials) {\n                request.withCredentials = true;\n            }\n\n            try {\n                request.open( \"GET\", url, true );\n                request.send( null );\n            } catch (e) {\n                var msg = e.message;\n\n                /*\n                    IE < 10 does not support CORS and an XHR request to a different origin will fail as soon\n                    as send() is called. This is particularly easy to miss during development and appear in\n                    production if you use a CDN or domain sharding and the security policy is likely to break\n                    exception handlers since any attempt to access a property of the request object will\n                    raise an access denied TypeError inside the catch block.\n\n                    To be friendlier, we'll check for this specific error and add a documentation pointer\n                    to point developers in the right direction. We test the exception number because IE's\n                    error messages are localized.\n                */\n                var oldIE = $.Browser.vendor == $.BROWSERS.IE && $.Browser.version < 10;\n                if ( oldIE && typeof( e.number ) != \"undefined\" && e.number == -2147024891 ) {\n                    msg += \"\\nSee http://msdn.microsoft.com/en-us/library/ms537505(v=vs.85).aspx#xdomain\";\n                }\n\n                $.console.log( \"%s while making AJAX request: %s\", e.name, msg );\n\n                request.onreadystatechange = function(){};\n\n                if (window.XDomainRequest) { // IE9 or IE8 might as well try to use XDomainRequest\n                    var xdr = new XDomainRequest();\n                    if (xdr) {\n                        xdr.onload = function (e) {\n                            if ( $.isFunction( onSuccess ) ) {\n                                onSuccess({ // Faking an xhr object\n                                    responseText: xdr.responseText,\n                                    status: 200, // XDomainRequest doesn't support status codes, so we just fake one! :/\n                                    statusText: 'OK'\n                                });\n                            }\n                        };\n                        xdr.onerror = function (e) {\n                            if ( $.isFunction ( onError ) ) {\n                                onError({ // Faking an xhr object\n                                    responseText: xdr.responseText,\n                                    status: 444, // 444 No Response\n                                    statusText: 'An error happened. Due to an XDomainRequest deficiency we can not extract any information about this error. Upgrade your browser.'\n                                });\n                            }\n                        };\n                        try {\n                            xdr.open('GET', url);\n                            xdr.send();\n                        } catch (e2) {\n                            if ( $.isFunction( onError ) ) {\n                                onError( request, e );\n                            }\n                        }\n                    }\n                } else {\n                    if ( $.isFunction( onError ) ) {\n                        onError( request, e );\n                    }\n                }\n            }\n        },\n\n        /**\n         * Taken from jQuery 1.6.1\n         * @function\n         * @param {Object} options\n         * @param {String} options.url\n         * @param {Function} options.callback\n         * @param {String} [options.param='callback'] The name of the url parameter\n         *      to request the jsonp provider with.\n         * @param {String} [options.callbackName=] The name of the callback to\n         *      request the jsonp provider with.\n         */\n        jsonp: function( options ){\n            var script,\n                url     = options.url,\n                head    = document.head ||\n                    document.getElementsByTagName( \"head\" )[ 0 ] ||\n                    document.documentElement,\n                jsonpCallback = options.callbackName || 'openseadragon' + $.now(),\n                previous      = window[ jsonpCallback ],\n                replace       = \"$1\" + jsonpCallback + \"$2\",\n                callbackParam = options.param || 'callback',\n                callback      = options.callback;\n\n            url = url.replace( /(\\=)\\?(&|$)|\\?\\?/i, replace );\n            // Add callback manually\n            url += (/\\?/.test( url ) ? \"&\" : \"?\") + callbackParam + \"=\" + jsonpCallback;\n\n            // Install callback\n            window[ jsonpCallback ] = function( response ) {\n                if ( !previous ){\n                    try{\n                        delete window[ jsonpCallback ];\n                    }catch(e){\n                        //swallow\n                    }\n                } else {\n                    window[ jsonpCallback ] = previous;\n                }\n                if( callback && $.isFunction( callback ) ){\n                    callback( response );\n                }\n            };\n\n            script = document.createElement( \"script\" );\n\n            //TODO: having an issue with async info requests\n            if( undefined !== options.async || false !== options.async ){\n                script.async = \"async\";\n            }\n\n            if ( options.scriptCharset ) {\n                script.charset = options.scriptCharset;\n            }\n\n            script.src = url;\n\n            // Attach handlers for all browsers\n            script.onload = script.onreadystatechange = function( _, isAbort ) {\n\n                if ( isAbort || !script.readyState || /loaded|complete/.test( script.readyState ) ) {\n\n                    // Handle memory leak in IE\n                    script.onload = script.onreadystatechange = null;\n\n                    // Remove the script\n                    if ( head && script.parentNode ) {\n                        head.removeChild( script );\n                    }\n\n                    // Dereference the script\n                    script = undefined;\n                }\n            };\n            // Use insertBefore instead of appendChild  to circumvent an IE6 bug.\n            // This arises when a base node is used (#2709 and #4378).\n            head.insertBefore( script, head.firstChild );\n\n        },\n\n\n        /**\n         * Fully deprecated. Will throw an error.\n         * @function\n         * @deprecated use {@link OpenSeadragon.Viewer#open}\n         */\n        createFromDZI: function() {\n            throw \"OpenSeadragon.createFromDZI is deprecated, use Viewer.open.\";\n        },\n\n        /**\n         * Parses an XML string into a DOM Document.\n         * @function\n         * @param {String} string\n         * @returns {Document}\n         */\n        parseXml: function( string ) {\n            if ( window.DOMParser ) {\n\n                $.parseXml = function( string ) {\n                    var xmlDoc = null,\n                        parser;\n\n                    parser = new DOMParser();\n                    xmlDoc = parser.parseFromString( string, \"text/xml\" );\n                    return xmlDoc;\n                };\n\n            } else if ( window.ActiveXObject ) {\n\n                $.parseXml = function( string ) {\n                    var xmlDoc = null;\n\n                    xmlDoc = new ActiveXObject( \"Microsoft.XMLDOM\" );\n                    xmlDoc.async = false;\n                    xmlDoc.loadXML( string );\n                    return xmlDoc;\n                };\n\n            } else {\n                throw new Error( \"Browser doesn't support XML DOM.\" );\n            }\n\n            return $.parseXml( string );\n        },\n\n        /**\n         * Parses a JSON string into a Javascript object.\n         * @function\n         * @param {String} string\n         * @returns {Object}\n         */\n        parseJSON: function(string) {\n            if (window.JSON && window.JSON.parse) {\n                $.parseJSON = window.JSON.parse;\n            } else {\n                // Should only be used by IE8 in non standards mode\n                $.parseJSON = function(string) {\n                    /*jshint evil:true*/\n                    return eval('(' + string + ')');\n                };\n            }\n            return $.parseJSON(string);\n        },\n\n        /**\n         * Reports whether the image format is supported for tiling in this\n         * version.\n         * @function\n         * @param {String} [extension]\n         * @returns {Boolean}\n         */\n        imageFormatSupported: function( extension ) {\n            extension = extension ? extension : \"\";\n            return !!FILEFORMATS[ extension.toLowerCase() ];\n        }\n\n    });\n\n\n    /**\n     * The current browser vendor, version, and related information regarding detected features.\n     * @member {Object} Browser\n     * @memberof OpenSeadragon\n     * @static\n     * @type {Object}\n     * @property {OpenSeadragon.BROWSERS} vendor - One of the {@link OpenSeadragon.BROWSERS} enumeration values.\n     * @property {Number} version\n     * @property {Boolean} alpha - Does the browser support image alpha transparency.\n     */\n    $.Browser = {\n        vendor:     $.BROWSERS.UNKNOWN,\n        version:    0,\n        alpha:      true\n    };\n\n\n    var FILEFORMATS = {\n            \"bmp\":  false,\n            \"jpeg\": true,\n            \"jpg\":  true,\n            \"png\":  true,\n            \"tif\":  false,\n            \"wdp\":  false\n        },\n        URLPARAMS = {};\n\n    (function() {\n        //A small auto-executing routine to determine the browser vendor,\n        //version and supporting feature sets.\n        var app = navigator.appName,\n            ver = navigator.appVersion,\n            ua  = navigator.userAgent,\n            regex;\n\n        //console.error( 'appName: ' + navigator.appName );\n        //console.error( 'appVersion: ' + navigator.appVersion );\n        //console.error( 'userAgent: ' + navigator.userAgent );\n\n        switch( navigator.appName ){\n            case \"Microsoft Internet Explorer\":\n                if( !!window.attachEvent &&\n                    !!window.ActiveXObject ) {\n\n                    $.Browser.vendor = $.BROWSERS.IE;\n                    $.Browser.version = parseFloat(\n                        ua.substring(\n                            ua.indexOf( \"MSIE\" ) + 5,\n                            ua.indexOf( \";\", ua.indexOf( \"MSIE\" ) ) )\n                        );\n                }\n                break;\n            case \"Netscape\":\n                if( !!window.addEventListener ){\n                    if ( ua.indexOf( \"Firefox\" ) >= 0 ) {\n                        $.Browser.vendor = $.BROWSERS.FIREFOX;\n                        $.Browser.version = parseFloat(\n                            ua.substring( ua.indexOf( \"Firefox\" ) + 8 )\n                        );\n                    } else if ( ua.indexOf( \"Safari\" ) >= 0 ) {\n                        $.Browser.vendor = ua.indexOf( \"Chrome\" ) >= 0 ?\n                            $.BROWSERS.CHROME :\n                            $.BROWSERS.SAFARI;\n                        $.Browser.version = parseFloat(\n                            ua.substring(\n                                ua.substring( 0, ua.indexOf( \"Safari\" ) ).lastIndexOf( \"/\" ) + 1,\n                                ua.indexOf( \"Safari\" )\n                            )\n                        );\n                    } else {\n                        regex = new RegExp( \"Trident/.*rv:([0-9]{1,}[.0-9]{0,})\");\n                        if ( regex.exec( ua ) !== null ) {\n                            $.Browser.vendor = $.BROWSERS.IE;\n                            $.Browser.version = parseFloat( RegExp.$1 );\n                        }\n                    }\n                }\n                break;\n            case \"Opera\":\n                $.Browser.vendor = $.BROWSERS.OPERA;\n                $.Browser.version = parseFloat( ver );\n                break;\n        }\n\n            // ignore '?' portion of query string\n        var query = window.location.search.substring( 1 ),\n            parts = query.split('&'),\n            part,\n            sep,\n            i;\n\n        for ( i = 0; i < parts.length; i++ ) {\n            part = parts[ i ];\n            sep  = part.indexOf( '=' );\n\n            if ( sep > 0 ) {\n                URLPARAMS[ part.substring( 0, sep ) ] =\n                    decodeURIComponent( part.substring( sep + 1 ) );\n            }\n        }\n\n        //determine if this browser supports image alpha transparency\n        $.Browser.alpha = !(\n            (\n                $.Browser.vendor == $.BROWSERS.IE &&\n                $.Browser.version < 9\n            ) || (\n                $.Browser.vendor == $.BROWSERS.CHROME &&\n                $.Browser.version < 2\n            )\n        );\n\n        //determine if this browser supports element.style.opacity\n        $.Browser.opacity = !(\n            $.Browser.vendor == $.BROWSERS.IE &&\n            $.Browser.version < 9\n        );\n\n    })();\n\n\n    //TODO: $.console is often used inside a try/catch block which generally\n    //      prevents allowings errors to occur with detection until a debugger\n    //      is attached.  Although I've been guilty of the same anti-pattern\n    //      I eventually was convinced that errors should naturally propogate in\n    //      all but the most special cases.\n    /**\n     * A convenient alias for console when available, and a simple null\n     * function when console is unavailable.\n     * @static\n     * @private\n     */\n    var nullfunction = function( msg ){\n            //document.location.hash = msg;\n        };\n\n    $.console = window.console || {\n        log:    nullfunction,\n        debug:  nullfunction,\n        info:   nullfunction,\n        warn:   nullfunction,\n        error:  nullfunction,\n        assert: nullfunction\n    };\n\n\n    // Adding support for HTML5's requestAnimationFrame as suggested by acdha.\n    // Implementation taken from matt synder's post here:\n    // http://mattsnider.com/cross-browser-and-legacy-supported-requestframeanimation/\n    (function( w ) {\n\n        // most browsers have an implementation\n        var requestAnimationFrame = w.requestAnimationFrame ||\n            w.mozRequestAnimationFrame ||\n            w.webkitRequestAnimationFrame ||\n            w.msRequestAnimationFrame;\n\n        var cancelAnimationFrame = w.cancelAnimationFrame ||\n            w.mozCancelAnimationFrame ||\n            w.webkitCancelAnimationFrame ||\n            w.msCancelAnimationFrame;\n\n        // polyfill, when necessary\n        if ( requestAnimationFrame && cancelAnimationFrame ) {\n            // We can't assign these window methods directly to $ because they\n            // expect their \"this\" to be \"window\", so we call them in wrappers.\n            $.requestAnimationFrame = function(){\n                return requestAnimationFrame.apply( w, arguments );\n            };\n            $.cancelAnimationFrame = function(){\n                return cancelAnimationFrame.apply( w, arguments );\n            };\n        } else {\n            var aAnimQueue = [],\n                processing = [],\n                iRequestId = 0,\n                iIntervalId;\n\n            // create a mock requestAnimationFrame function\n            $.requestAnimationFrame = function( callback ) {\n                aAnimQueue.push( [ ++iRequestId, callback ] );\n\n                if ( !iIntervalId ) {\n                    iIntervalId = setInterval( function() {\n                        if ( aAnimQueue.length ) {\n                            var time = $.now();\n                            // Process all of the currently outstanding frame\n                            // requests, but none that get added during the\n                            // processing.\n                            // Swap the arrays so we don't have to create a new\n                            // array every frame.\n                            var temp = processing;\n                            processing = aAnimQueue;\n                            aAnimQueue = temp;\n                            while ( processing.length ) {\n                                processing.shift()[ 1 ]( time );\n                            }\n                        } else {\n                            // don't continue the interval, if unnecessary\n                            clearInterval( iIntervalId );\n                            iIntervalId = undefined;\n                        }\n                    }, 1000 / 50);  // estimating support for 50 frames per second\n                }\n\n                return iRequestId;\n            };\n\n            // create a mock cancelAnimationFrame function\n            $.cancelAnimationFrame = function( requestId ) {\n                // find the request ID and remove it\n                var i, j;\n                for ( i = 0, j = aAnimQueue.length; i < j; i += 1 ) {\n                    if ( aAnimQueue[ i ][ 0 ] === requestId ) {\n                        aAnimQueue.splice( i, 1 );\n                        return;\n                    }\n                }\n\n                // If it's not in the queue, it may be in the set we're currently\n                // processing (if cancelAnimationFrame is called from within a\n                // requestAnimationFrame callback).\n                for ( i = 0, j = processing.length; i < j; i += 1 ) {\n                    if ( processing[ i ][ 0 ] === requestId ) {\n                        processing.splice( i, 1 );\n                        return;\n                    }\n                }\n            };\n        }\n    })( window );\n\n    /**\n     * @private\n     * @inner\n     * @function\n     * @param {Element} element\n     * @param {Boolean} [isFixed]\n     * @returns {Element}\n     */\n    function getOffsetParent( element, isFixed ) {\n        if ( isFixed && element != document.body ) {\n            return document.body;\n        } else {\n            return element.offsetParent;\n        }\n    }\n\n}(OpenSeadragon));\n\n/*\n * OpenSeadragon - full-screen support functions\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ) {\n    /**\n     * Determine native full screen support we can get from the browser.\n     * @member fullScreenApi\n     * @memberof OpenSeadragon\n     * @type {object}\n     * @property {Boolean} supportsFullScreen Return true if full screen API is supported.\n     * @property {Function} isFullScreen Return true if currently in full screen mode.\n     * @property {Function} getFullScreenElement Return the element currently in full screen mode.\n     * @property {Function} requestFullScreen Make a request to go in full screen mode.\n     * @property {Function} exitFullScreen Make a request to exit full screen mode.\n     * @property {Function} cancelFullScreen Deprecated, use exitFullScreen instead.\n     * @property {String} fullScreenEventName Event fired when the full screen mode change.\n     * @property {String} fullScreenErrorEventName Event fired when a request to go\n     * in full screen mode failed.\n     */\n    var fullScreenApi = {\n        supportsFullScreen: false,\n        isFullScreen: function() { return false; },\n        getFullScreenElement: function() { return null; },\n        requestFullScreen: function() {},\n        exitFullScreen: function() {},\n        cancelFullScreen: function() {},\n        fullScreenEventName: '',\n        fullScreenErrorEventName: ''\n    };\n\n    // check for native support\n    if ( document.exitFullscreen ) {\n        // W3C standard\n        fullScreenApi.supportsFullScreen = true;\n        fullScreenApi.getFullScreenElement = function() {\n            return document.fullscreenElement;\n        };\n        fullScreenApi.requestFullScreen = function( element ) {\n            return element.requestFullscreen();\n        };\n        fullScreenApi.exitFullScreen = function() {\n            document.exitFullscreen();\n        };\n        fullScreenApi.fullScreenEventName = \"fullscreenchange\";\n        fullScreenApi.fullScreenErrorEventName = \"fullscreenerror\";\n    } else if ( document.msExitFullscreen ) {\n        // IE 11\n        fullScreenApi.supportsFullScreen = true;\n        fullScreenApi.getFullScreenElement = function() {\n            return document.msFullscreenElement;\n        };\n        fullScreenApi.requestFullScreen = function( element ) {\n            return element.msRequestFullscreen();\n        };\n        fullScreenApi.exitFullScreen = function() {\n            document.msExitFullscreen();\n        };\n        fullScreenApi.fullScreenEventName = \"MSFullscreenChange\";\n        fullScreenApi.fullScreenErrorEventName = \"MSFullscreenError\";\n    } else if ( document.webkitExitFullscreen ) {\n        // Recent webkit\n        fullScreenApi.supportsFullScreen = true;\n        fullScreenApi.getFullScreenElement = function() {\n            return document.webkitFullscreenElement;\n        };\n        fullScreenApi.requestFullScreen = function( element ) {\n            return element.webkitRequestFullscreen();\n        };\n        fullScreenApi.exitFullScreen = function() {\n            document.webkitExitFullscreen();\n        };\n        fullScreenApi.fullScreenEventName = \"webkitfullscreenchange\";\n        fullScreenApi.fullScreenErrorEventName = \"webkitfullscreenerror\";\n    } else if ( document.webkitCancelFullScreen ) {\n        // Old webkit\n        fullScreenApi.supportsFullScreen = true;\n        fullScreenApi.getFullScreenElement = function() {\n            return document.webkitCurrentFullScreenElement;\n        };\n        fullScreenApi.requestFullScreen = function( element ) {\n            return element.webkitRequestFullScreen();\n        };\n        fullScreenApi.exitFullScreen = function() {\n            document.webkitCancelFullScreen();\n        };\n        fullScreenApi.fullScreenEventName = \"webkitfullscreenchange\";\n        fullScreenApi.fullScreenErrorEventName = \"webkitfullscreenerror\";\n    } else if ( document.mozCancelFullScreen ) {\n        // Firefox\n        fullScreenApi.supportsFullScreen = true;\n        fullScreenApi.getFullScreenElement = function() {\n            return document.mozFullScreenElement;\n        };\n        fullScreenApi.requestFullScreen = function( element ) {\n            return element.mozRequestFullScreen();\n        };\n        fullScreenApi.exitFullScreen = function() {\n            document.mozCancelFullScreen();\n        };\n        fullScreenApi.fullScreenEventName = \"mozfullscreenchange\";\n        fullScreenApi.fullScreenErrorEventName = \"mozfullscreenerror\";\n    }\n    fullScreenApi.isFullScreen = function() {\n        return fullScreenApi.getFullScreenElement() !== null;\n    };\n    fullScreenApi.cancelFullScreen = function() {\n        $.console.error(\"cancelFullScreen is deprecated. Use exitFullScreen instead.\");\n        fullScreenApi.exitFullScreen();\n    };\n\n    // export api\n    $.extend( $, fullScreenApi );\n\n})( OpenSeadragon );\n\n/*\n * OpenSeadragon - EventSource\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function($){\n\n/**\n * Event handler method signature used by all OpenSeadragon events.\n *\n * @callback EventHandler\n * @memberof OpenSeadragon\n * @param {Object} event - See individual events for event-specific properties.\n */\n\n\n/**\n * @class EventSource\n * @classdesc For use by classes which want to support custom, non-browser events.\n *\n * @memberof OpenSeadragon\n */\n$.EventSource = function() {\n    this.events = {};\n};\n\n/** @lends OpenSeadragon.EventSource.prototype */\n$.EventSource.prototype = {\n\n    /**\n     * Add an event handler to be triggered only once (or a given number of times)\n     * for a given event.\n     * @function\n     * @param {String} eventName - Name of event to register.\n     * @param {OpenSeadragon.EventHandler} handler - Function to call when event\n     * is triggered.\n     * @param {Object} [userData=null] - Arbitrary object to be passed unchanged\n     * to the handler.\n     * @param {Number} [times=1] - The number of times to handle the event\n     * before removing it.\n     */\n    addOnceHandler: function(eventName, handler, userData, times) {\n        var self = this;\n        times = times || 1;\n        var count = 0;\n        var onceHandler = function(event) {\n            count++;\n            if (count === times) {\n                self.removeHandler(eventName, onceHandler);\n            }\n            handler(event);\n        };\n        this.addHandler(eventName, onceHandler, userData);\n    },\n\n    /**\n     * Add an event handler for a given event.\n     * @function\n     * @param {String} eventName - Name of event to register.\n     * @param {OpenSeadragon.EventHandler} handler - Function to call when event is triggered.\n     * @param {Object} [userData=null] - Arbitrary object to be passed unchanged to the handler.\n     */\n    addHandler: function ( eventName, handler, userData ) {\n        var events = this.events[ eventName ];\n        if ( !events ) {\n            this.events[ eventName ] = events = [];\n        }\n        if ( handler && $.isFunction( handler ) ) {\n            events[ events.length ] = { handler: handler, userData: userData || null };\n        }\n    },\n\n    /**\n     * Remove a specific event handler for a given event.\n     * @function\n     * @param {String} eventName - Name of event for which the handler is to be removed.\n     * @param {OpenSeadragon.EventHandler} handler - Function to be removed.\n     */\n    removeHandler: function ( eventName, handler ) {\n        var events = this.events[ eventName ],\n            handlers = [],\n            i;\n        if ( !events ) {\n            return;\n        }\n        if ( $.isArray( events ) ) {\n            for ( i = 0; i < events.length; i++ ) {\n                if ( events[i].handler !== handler ) {\n                    handlers.push( events[ i ] );\n                }\n            }\n            this.events[ eventName ] = handlers;\n        }\n    },\n\n\n    /**\n     * Remove all event handlers for a given event type. If no type is given all\n     * event handlers for every event type are removed.\n     * @function\n     * @param {String} eventName - Name of event for which all handlers are to be removed.\n     */\n    removeAllHandlers: function( eventName ) {\n        if ( eventName ){\n            this.events[ eventName ] = [];\n        } else{\n            for ( var eventType in this.events ) {\n                this.events[ eventType ] = [];\n            }\n        }\n    },\n\n    /**\n     * Get a function which iterates the list of all handlers registered for a given event, calling the handler for each.\n     * @function\n     * @param {String} eventName - Name of event to get handlers for.\n     */\n    getHandler: function ( eventName ) {\n        var events = this.events[ eventName ];\n        if ( !events || !events.length ) {\n            return null;\n        }\n        events = events.length === 1 ?\n            [ events[ 0 ] ] :\n            Array.apply( null, events );\n        return function ( source, args ) {\n            var i,\n                length = events.length;\n            for ( i = 0; i < length; i++ ) {\n                if ( events[ i ] ) {\n                    args.eventSource = source;\n                    args.userData = events[ i ].userData;\n                    events[ i ].handler( args );\n                }\n            }\n        };\n    },\n\n    /**\n     * Trigger an event, optionally passing additional information.\n     * @function\n     * @param {String} eventName - Name of event to register.\n     * @param {Object} eventArgs - Event-specific data.\n     */\n    raiseEvent: function( eventName, eventArgs ) {\n        //uncomment if you want to get a log of all events\n        //$.console.log( eventName );\n        var handler = this.getHandler( eventName );\n\n        if ( handler ) {\n            if ( !eventArgs ) {\n                eventArgs = {};\n            }\n\n            handler( this, eventArgs );\n        }\n    }\n};\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - MouseTracker\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function ( $ ) {\n\n    // All MouseTracker instances\n    var MOUSETRACKERS  = [];\n\n    // dictionary from hash to private properties\n    var THIS           = {};\n\n\n    /**\n     * @class MouseTracker\n     * @classdesc Provides simplified handling of common pointer device (mouse, touch, pen, etc.) gestures\n     *            and keyboard events on a specified element.\n     * @memberof OpenSeadragon\n     * @param {Object} options\n     *      Allows configurable properties to be entirely specified by passing\n     *      an options object to the constructor.  The constructor also supports\n     *      the original positional arguments 'element', 'clickTimeThreshold',\n     *      and 'clickDistThreshold' in that order.\n     * @param {Element|String} options.element\n     *      A reference to an element or an element id for which the pointer/key\n     *      events will be monitored.\n     * @param {Boolean} [options.startDisabled=false]\n     *      If true, event tracking on the element will not start until\n     *      {@link OpenSeadragon.MouseTracker.setTracking|setTracking} is called.\n     * @param {Number} options.clickTimeThreshold\n     *      The number of milliseconds within which a pointer down-up event combination\n     *      will be treated as a click gesture.\n     * @param {Number} options.clickDistThreshold\n     *      The maximum distance allowed between a pointer down event and a pointer up event\n     *      to be treated as a click gesture.\n     * @param {Number} options.dblClickTimeThreshold\n     *      The number of milliseconds within which two pointer down-up event combinations\n     *      will be treated as a double-click gesture.\n     * @param {Number} options.dblClickDistThreshold\n     *      The maximum distance allowed between two pointer click events\n     *      to be treated as a click gesture.\n     * @param {Number} [options.stopDelay=50]\n     *      The number of milliseconds without pointer move before the stop\n     *      event is fired.\n     * @param {OpenSeadragon.EventHandler} [options.enterHandler=null]\n     *      An optional handler for pointer enter.\n     * @param {OpenSeadragon.EventHandler} [options.exitHandler=null]\n     *      An optional handler for pointer exit.\n     * @param {OpenSeadragon.EventHandler} [options.pressHandler=null]\n     *      An optional handler for pointer press.\n     * @param {OpenSeadragon.EventHandler} [options.nonPrimaryPressHandler=null]\n     *      An optional handler for pointer non-primary button press.\n     * @param {OpenSeadragon.EventHandler} [options.releaseHandler=null]\n     *      An optional handler for pointer release.\n     * @param {OpenSeadragon.EventHandler} [options.nonPrimaryReleaseHandler=null]\n     *      An optional handler for pointer non-primary button release.\n     * @param {OpenSeadragon.EventHandler} [options.moveHandler=null]\n     *      An optional handler for pointer move.\n     * @param {OpenSeadragon.EventHandler} [options.scrollHandler=null]\n     *      An optional handler for mouse wheel scroll.\n     * @param {OpenSeadragon.EventHandler} [options.clickHandler=null]\n     *      An optional handler for pointer click.\n     * @param {OpenSeadragon.EventHandler} [options.dblClickHandler=null]\n     *      An optional handler for pointer double-click.\n     * @param {OpenSeadragon.EventHandler} [options.dragHandler=null]\n     *      An optional handler for the drag gesture.\n     * @param {OpenSeadragon.EventHandler} [options.dragEndHandler=null]\n     *      An optional handler for after a drag gesture.\n     * @param {OpenSeadragon.EventHandler} [options.pinchHandler=null]\n     *      An optional handler for the pinch gesture.\n     * @param {OpenSeadragon.EventHandler} [options.keyDownHandler=null]\n     *      An optional handler for keydown.\n     * @param {OpenSeadragon.EventHandler} [options.keyUpHandler=null]\n     *      An optional handler for keyup.\n     * @param {OpenSeadragon.EventHandler} [options.keyHandler=null]\n     *      An optional handler for keypress.\n     * @param {OpenSeadragon.EventHandler} [options.focusHandler=null]\n     *      An optional handler for focus.\n     * @param {OpenSeadragon.EventHandler} [options.blurHandler=null]\n     *      An optional handler for blur.\n     * @param {Object} [options.userData=null]\n     *      Arbitrary object to be passed unchanged to any attached handler methods.\n     */\n    $.MouseTracker = function ( options ) {\n\n        MOUSETRACKERS.push( this );\n\n        var args = arguments;\n\n        if ( !$.isPlainObject( options ) ) {\n            options = {\n                element:            args[ 0 ],\n                clickTimeThreshold: args[ 1 ],\n                clickDistThreshold: args[ 2 ]\n            };\n        }\n\n        this.hash               = Math.random(); // An unique hash for this tracker.\n        /**\n         * The element for which pointer events are being monitored.\n         * @member {Element} element\n         * @memberof OpenSeadragon.MouseTracker#\n         */\n        this.element            = $.getElement( options.element );\n        /**\n         * The number of milliseconds within which a pointer down-up event combination\n         * will be treated as a click gesture.\n         * @member {Number} clickTimeThreshold\n         * @memberof OpenSeadragon.MouseTracker#\n         */\n        this.clickTimeThreshold = options.clickTimeThreshold || $.DEFAULT_SETTINGS.clickTimeThreshold;\n        /**\n         * The maximum distance allowed between a pointer down event and a pointer up event\n         * to be treated as a click gesture.\n         * @member {Number} clickDistThreshold\n         * @memberof OpenSeadragon.MouseTracker#\n         */\n        this.clickDistThreshold = options.clickDistThreshold || $.DEFAULT_SETTINGS.clickDistThreshold;\n        /**\n         * The number of milliseconds within which two pointer down-up event combinations\n         * will be treated as a double-click gesture.\n         * @member {Number} dblClickTimeThreshold\n         * @memberof OpenSeadragon.MouseTracker#\n         */\n        this.dblClickTimeThreshold = options.dblClickTimeThreshold || $.DEFAULT_SETTINGS.dblClickTimeThreshold;\n        /**\n         * The maximum distance allowed between two pointer click events\n         * to be treated as a click gesture.\n         * @member {Number} clickDistThreshold\n         * @memberof OpenSeadragon.MouseTracker#\n         */\n        this.dblClickDistThreshold = options.dblClickDistThreshold || $.DEFAULT_SETTINGS.dblClickDistThreshold;\n        this.userData              = options.userData          || null;\n        this.stopDelay             = options.stopDelay         || 50;\n\n        this.enterHandler             = options.enterHandler             || null;\n        this.exitHandler              = options.exitHandler              || null;\n        this.pressHandler             = options.pressHandler             || null;\n        this.nonPrimaryPressHandler   = options.nonPrimaryPressHandler   || null;\n        this.releaseHandler           = options.releaseHandler           || null;\n        this.nonPrimaryReleaseHandler = options.nonPrimaryReleaseHandler || null;\n        this.moveHandler              = options.moveHandler              || null;\n        this.scrollHandler            = options.scrollHandler            || null;\n        this.clickHandler             = options.clickHandler             || null;\n        this.dblClickHandler          = options.dblClickHandler          || null;\n        this.dragHandler              = options.dragHandler              || null;\n        this.dragEndHandler           = options.dragEndHandler           || null;\n        this.pinchHandler             = options.pinchHandler             || null;\n        this.stopHandler              = options.stopHandler              || null;\n        this.keyDownHandler           = options.keyDownHandler           || null;\n        this.keyUpHandler             = options.keyUpHandler             || null;\n        this.keyHandler               = options.keyHandler               || null;\n        this.focusHandler             = options.focusHandler             || null;\n        this.blurHandler              = options.blurHandler              || null;\n\n        //Store private properties in a scope sealed hash map\n        var _this = this;\n\n        /**\n         * @private\n         * @property {Boolean} tracking\n         *      Are we currently tracking pointer events for this element.\n         */\n        THIS[ this.hash ] = {\n            click:                 function ( event ) { onClick( _this, event ); },\n            dblclick:              function ( event ) { onDblClick( _this, event ); },\n            keydown:               function ( event ) { onKeyDown( _this, event ); },\n            keyup:                 function ( event ) { onKeyUp( _this, event ); },\n            keypress:              function ( event ) { onKeyPress( _this, event ); },\n            focus:                 function ( event ) { onFocus( _this, event ); },\n            blur:                  function ( event ) { onBlur( _this, event ); },\n\n            wheel:                 function ( event ) { onWheel( _this, event ); },\n            mousewheel:            function ( event ) { onMouseWheel( _this, event ); },\n            DOMMouseScroll:        function ( event ) { onMouseWheel( _this, event ); },\n            MozMousePixelScroll:   function ( event ) { onMouseWheel( _this, event ); },\n\n            mouseenter:            function ( event ) { onMouseEnter( _this, event ); }, // Used on IE8 only\n            mouseleave:            function ( event ) { onMouseLeave( _this, event ); }, // Used on IE8 only\n            mouseover:             function ( event ) { onMouseOver( _this, event ); },\n            mouseout:              function ( event ) { onMouseOut( _this, event ); },\n            mousedown:             function ( event ) { onMouseDown( _this, event ); },\n            mouseup:               function ( event ) { onMouseUp( _this, event ); },\n            mouseupcaptured:       function ( event ) { onMouseUpCaptured( _this, event ); },\n            mousemove:             function ( event ) { onMouseMove( _this, event ); },\n            mousemovecaptured:     function ( event ) { onMouseMoveCaptured( _this, event ); },\n\n            touchstart:            function ( event ) { onTouchStart( _this, event ); },\n            touchend:              function ( event ) { onTouchEnd( _this, event ); },\n            touchendcaptured:      function ( event ) { onTouchEndCaptured( _this, event ); },\n            touchmove:             function ( event ) { onTouchMove( _this, event ); },\n            touchmovecaptured:     function ( event ) { onTouchMoveCaptured( _this, event ); },\n            touchcancel:           function ( event ) { onTouchCancel( _this, event ); },\n\n            gesturestart:          function ( event ) { onGestureStart( _this, event ); },\n            gesturechange:         function ( event ) { onGestureChange( _this, event ); },\n\n            pointerover:           function ( event ) { onPointerOver( _this, event ); },\n            MSPointerOver:         function ( event ) { onPointerOver( _this, event ); },\n            pointerout:            function ( event ) { onPointerOut( _this, event ); },\n            MSPointerOut:          function ( event ) { onPointerOut( _this, event ); },\n            pointerdown:           function ( event ) { onPointerDown( _this, event ); },\n            MSPointerDown:         function ( event ) { onPointerDown( _this, event ); },\n            pointerup:             function ( event ) { onPointerUp( _this, event ); },\n            MSPointerUp:           function ( event ) { onPointerUp( _this, event ); },\n            pointermove:           function ( event ) { onPointerMove( _this, event ); },\n            MSPointerMove:         function ( event ) { onPointerMove( _this, event ); },\n            pointercancel:         function ( event ) { onPointerCancel( _this, event ); },\n            MSPointerCancel:       function ( event ) { onPointerCancel( _this, event ); },\n            pointerupcaptured:     function ( event ) { onPointerUpCaptured( _this, event ); },\n            pointermovecaptured:   function ( event ) { onPointerMoveCaptured( _this, event ); },\n\n            tracking:              false,\n\n            // Active pointers lists. Array of GesturePointList objects, one for each pointer device type.\n            // GesturePointList objects are added each time a pointer is tracked by a new pointer device type (see getActivePointersListByType()).\n            // Active pointers are any pointer being tracked for this element which are in the hit-test area\n            //     of the element (for hover-capable devices) and/or have contact or a button press initiated in the element.\n            activePointersLists:   [],\n\n            // Tracking for double-click gesture\n            lastClickPos:          null,\n            dblClickTimeOut:       null,\n\n            // Tracking for pinch gesture\n            pinchGPoints:          [],\n            lastPinchDist:         0,\n            currentPinchDist:      0,\n            lastPinchCenter:       null,\n            currentPinchCenter:    null\n        };\n\n        if ( !options.startDisabled ) {\n            this.setTracking( true );\n        }\n    };\n\n    /** @lends OpenSeadragon.MouseTracker.prototype */\n    $.MouseTracker.prototype = {\n\n        /**\n         * Clean up any events or objects created by the tracker.\n         * @function\n         */\n        destroy: function () {\n            var i;\n\n            stopTracking( this );\n            this.element = null;\n\n            for ( i = 0; i < MOUSETRACKERS.length; i++ ) {\n                if ( MOUSETRACKERS[ i ] === this ) {\n                    MOUSETRACKERS.splice( i, 1 );\n                    break;\n                }\n            }\n\n            THIS[ this.hash ] = null;\n            delete THIS[ this.hash ];\n        },\n\n        /**\n         * Are we currently tracking events on this element.\n         * @deprecated Just use this.tracking\n         * @function\n         * @returns {Boolean} Are we currently tracking events on this element.\n         */\n        isTracking: function () {\n            return THIS[ this.hash ].tracking;\n        },\n\n        /**\n         * Enable or disable whether or not we are tracking events on this element.\n         * @function\n         * @param {Boolean} track True to start tracking, false to stop tracking.\n         * @returns {OpenSeadragon.MouseTracker} Chainable.\n         */\n        setTracking: function ( track ) {\n            if ( track ) {\n                startTracking( this );\n            } else {\n                stopTracking( this );\n            }\n            //chain\n            return this;\n        },\n\n        /**\n         * Returns the {@link OpenSeadragon.MouseTracker.GesturePointList|GesturePointList} for the given pointer device type,\n         * creating and caching a new {@link OpenSeadragon.MouseTracker.GesturePointList|GesturePointList} if one doesn't already exist for the type.\n         * @function\n         * @param {String} type - The pointer device type: \"mouse\", \"touch\", \"pen\", etc.\n         * @returns {OpenSeadragon.MouseTracker.GesturePointList}\n         */\n        getActivePointersListByType: function ( type ) {\n            var delegate = THIS[ this.hash ],\n                i,\n                len = delegate.activePointersLists.length,\n                list;\n\n            for ( i = 0; i < len; i++ ) {\n                if ( delegate.activePointersLists[ i ].type === type ) {\n                    return delegate.activePointersLists[ i ];\n                }\n            }\n\n            list = new $.MouseTracker.GesturePointList( type );\n            delegate.activePointersLists.push( list );\n            return list;\n        },\n\n        /**\n         * Returns the total number of pointers currently active on the tracked element.\n         * @function\n         * @returns {Number}\n         */\n        getActivePointerCount: function () {\n            var delegate = THIS[ this.hash ],\n                i,\n                len = delegate.activePointersLists.length,\n                count = 0;\n\n            for ( i = 0; i < len; i++ ) {\n                count += delegate.activePointersLists[ i ].getLength();\n            }\n\n            return count;\n        },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {String} event.pointerType\n         *     \"mouse\", \"touch\", \"pen\", etc.\n         * @param {OpenSeadragon.Point} event.position\n         *      The position of the event relative to the tracked element.\n         * @param {Number} event.buttons\n         *      Current buttons pressed.\n         *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n         * @param {Number} event.pointers\n         *      Number of pointers (all types) active in the tracked element.\n         * @param {Boolean} event.insideElementPressed\n         *      True if the left mouse button is currently being pressed and was\n         *      initiated inside the tracked element, otherwise false.\n         * @param {Boolean} event.buttonDownAny\n         *      Was the button down anywhere in the screen during the event. <span style=\"color:red;\">Deprecated. Use buttons instead.</span>\n         * @param {Boolean} event.isTouchEvent\n         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Boolean} event.preventDefaultAction\n         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        enterHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {String} event.pointerType\n         *     \"mouse\", \"touch\", \"pen\", etc.\n         * @param {OpenSeadragon.Point} event.position\n         *      The position of the event relative to the tracked element.\n         * @param {Number} event.buttons\n         *      Current buttons pressed.\n         *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n         * @param {Number} event.pointers\n         *      Number of pointers (all types) active in the tracked element.\n         * @param {Boolean} event.insideElementPressed\n         *      True if the left mouse button is currently being pressed and was\n         *      initiated inside the tracked element, otherwise false.\n         * @param {Boolean} event.buttonDownAny\n         *      Was the button down anywhere in the screen during the event. <span style=\"color:red;\">Deprecated. Use buttons instead.</span>\n         * @param {Boolean} event.isTouchEvent\n         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Boolean} event.preventDefaultAction\n         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        exitHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {String} event.pointerType\n         *     \"mouse\", \"touch\", \"pen\", etc.\n         * @param {OpenSeadragon.Point} event.position\n         *      The position of the event relative to the tracked element.\n         * @param {Number} event.buttons\n         *      Current buttons pressed.\n         *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n         * @param {Boolean} event.isTouchEvent\n         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Boolean} event.preventDefaultAction\n         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        pressHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {String} event.pointerType\n         *     \"mouse\", \"touch\", \"pen\", etc.\n         * @param {OpenSeadragon.Point} event.position\n         *      The position of the event relative to the tracked element.\n         * @param {Number} event.button\n         *      Button which caused the event.\n         *      -1: none, 0: primary/left, 1: aux/middle, 2: secondary/right, 3: X1/back, 4: X2/forward, 5: pen eraser.\n         * @param {Number} event.buttons\n         *      Current buttons pressed.\n         *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n         * @param {Boolean} event.isTouchEvent\n         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Boolean} event.preventDefaultAction\n         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        nonPrimaryPressHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {String} event.pointerType\n         *     \"mouse\", \"touch\", \"pen\", etc.\n         * @param {OpenSeadragon.Point} event.position\n         *      The position of the event relative to the tracked element.\n         * @param {Number} event.buttons\n         *      Current buttons pressed.\n         *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n         * @param {Boolean} event.insideElementPressed\n         *      True if the left mouse button is currently being pressed and was\n         *      initiated inside the tracked element, otherwise false.\n         * @param {Boolean} event.insideElementReleased\n         *      True if the cursor inside the tracked element when the button was released.\n         * @param {Boolean} event.isTouchEvent\n         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Boolean} event.preventDefaultAction\n         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        releaseHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {String} event.pointerType\n         *     \"mouse\", \"touch\", \"pen\", etc.\n         * @param {OpenSeadragon.Point} event.position\n         *      The position of the event relative to the tracked element.\n         * @param {Number} event.button\n         *      Button which caused the event.\n         *      -1: none, 0: primary/left, 1: aux/middle, 2: secondary/right, 3: X1/back, 4: X2/forward, 5: pen eraser.\n         * @param {Number} event.buttons\n         *      Current buttons pressed.\n         *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n         * @param {Boolean} event.isTouchEvent\n         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Boolean} event.preventDefaultAction\n         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        nonPrimaryReleaseHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {String} event.pointerType\n         *     \"mouse\", \"touch\", \"pen\", etc.\n         * @param {OpenSeadragon.Point} event.position\n         *      The position of the event relative to the tracked element.\n         * @param {Number} event.buttons\n         *      Current buttons pressed.\n         *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n         * @param {Boolean} event.isTouchEvent\n         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Boolean} event.preventDefaultAction\n         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        moveHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {String} event.pointerType\n         *     \"mouse\", \"touch\", \"pen\", etc.\n         * @param {OpenSeadragon.Point} event.position\n         *      The position of the event relative to the tracked element.\n         * @param {Number} event.scroll\n         *      The scroll delta for the event.\n         * @param {Boolean} event.shift\n         *      True if the shift key was pressed during this event.\n         * @param {Boolean} event.isTouchEvent\n         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead. Touch devices no longer generate scroll event.</span>\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Boolean} event.preventDefaultAction\n         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        scrollHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {String} event.pointerType\n         *     \"mouse\", \"touch\", \"pen\", etc.\n         * @param {OpenSeadragon.Point} event.position\n         *      The position of the event relative to the tracked element.\n         * @param {Boolean} event.quick\n         *      True only if the clickDistThreshold and clickTimeThreshold are both passed. Useful for ignoring drag events.\n         * @param {Boolean} event.shift\n         *      True if the shift key was pressed during this event.\n         * @param {Boolean} event.isTouchEvent\n         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Boolean} event.preventDefaultAction\n         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        clickHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {String} event.pointerType\n         *     \"mouse\", \"touch\", \"pen\", etc.\n         * @param {OpenSeadragon.Point} event.position\n         *      The position of the event relative to the tracked element.\n         * @param {Boolean} event.shift\n         *      True if the shift key was pressed during this event.\n         * @param {Boolean} event.isTouchEvent\n         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Boolean} event.preventDefaultAction\n         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        dblClickHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {String} event.pointerType\n         *     \"mouse\", \"touch\", \"pen\", etc.\n         * @param {OpenSeadragon.Point} event.position\n         *      The position of the event relative to the tracked element.\n         * @param {Number} event.buttons\n         *      Current buttons pressed.\n         *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n         * @param {OpenSeadragon.Point} event.delta\n         *      The x,y components of the difference between the current position and the last drag event position.  Useful for ignoring or weighting the events.\n         * @param {Number} event.speed\n         *     Current computed speed, in pixels per second.\n         * @param {Number} event.direction\n         *     Current computed direction, expressed as an angle counterclockwise relative to the positive X axis (-pi to pi, in radians). Only valid if speed > 0.\n         * @param {Boolean} event.shift\n         *      True if the shift key was pressed during this event.\n         * @param {Boolean} event.isTouchEvent\n         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Boolean} event.preventDefaultAction\n         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        dragHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {String} event.pointerType\n         *     \"mouse\", \"touch\", \"pen\", etc.\n         * @param {OpenSeadragon.Point} event.position\n         *      The position of the event relative to the tracked element.\n         * @param {Number} event.speed\n         *     Speed at the end of a drag gesture, in pixels per second.\n         * @param {Number} event.direction\n         *     Direction at the end of a drag gesture, expressed as an angle counterclockwise relative to the positive X axis (-pi to pi, in radians). Only valid if speed > 0.\n         * @param {Boolean} event.shift\n         *      True if the shift key was pressed during this event.\n         * @param {Boolean} event.isTouchEvent\n         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Boolean} event.preventDefaultAction\n         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        dragEndHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {String} event.pointerType\n         *     \"mouse\", \"touch\", \"pen\", etc.\n         * @param {Array.<OpenSeadragon.MouseTracker.GesturePoint>} event.gesturePoints\n         *      Gesture points associated with the gesture. Velocity data can be found here.\n         * @param {OpenSeadragon.Point} event.lastCenter\n         *      The previous center point of the two pinch contact points relative to the tracked element.\n         * @param {OpenSeadragon.Point} event.center\n         *      The center point of the two pinch contact points relative to the tracked element.\n         * @param {Number} event.lastDistance\n         *      The previous distance between the two pinch contact points in CSS pixels.\n         * @param {Number} event.distance\n         *      The distance between the two pinch contact points in CSS pixels.\n         * @param {Boolean} event.shift\n         *      True if the shift key was pressed during this event.\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Boolean} event.preventDefaultAction\n         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        pinchHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {String} event.pointerType\n         *     \"mouse\", \"touch\", \"pen\", etc.\n         * @param {OpenSeadragon.Point} event.position\n         *      The position of the event relative to the tracked element.\n         * @param {Number} event.buttons\n         *      Current buttons pressed.\n         *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n         * @param {Boolean} event.isTouchEvent\n         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Boolean} event.preventDefaultAction\n         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        stopHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {Number} event.keyCode\n         *      The key code that was pressed.\n         * @param {Boolean} event.ctrl\n         *      True if the ctrl key was pressed during this event.\n         * @param {Boolean} event.shift\n         *      True if the shift key was pressed during this event.\n         * @param {Boolean} event.alt\n         *      True if the alt key was pressed during this event.\n         * @param {Boolean} event.meta\n         *      True if the meta key was pressed during this event.\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Boolean} event.preventDefaultAction\n         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        keyDownHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {Number} event.keyCode\n         *      The key code that was pressed.\n         * @param {Boolean} event.ctrl\n         *      True if the ctrl key was pressed during this event.\n         * @param {Boolean} event.shift\n         *      True if the shift key was pressed during this event.\n         * @param {Boolean} event.alt\n         *      True if the alt key was pressed during this event.\n         * @param {Boolean} event.meta\n         *      True if the meta key was pressed during this event.\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Boolean} event.preventDefaultAction\n         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        keyUpHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {Number} event.keyCode\n         *      The key code that was pressed.\n         * @param {Boolean} event.ctrl\n         *      True if the ctrl key was pressed during this event.\n         * @param {Boolean} event.shift\n         *      True if the shift key was pressed during this event.\n         * @param {Boolean} event.alt\n         *      True if the alt key was pressed during this event.\n         * @param {Boolean} event.meta\n         *      True if the meta key was pressed during this event.\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Boolean} event.preventDefaultAction\n         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        keyHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Boolean} event.preventDefaultAction\n         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        focusHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Boolean} event.preventDefaultAction\n         *      Set to true to prevent the tracker subscriber from performing its default action (subscriber implementation dependent). Default: false.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        blurHandler: function () { }\n    };\n\n\n    /**\n     * Provides continuous computation of velocity (speed and direction) of active pointers.\n     * This is a singleton, used by all MouseTracker instances, as it is unlikely there will ever be more than\n     * two active gesture pointers at a time.\n     *\n     * @private\n     * @member gesturePointVelocityTracker\n     * @memberof OpenSeadragon.MouseTracker\n     */\n    $.MouseTracker.gesturePointVelocityTracker = (function () {\n        var trackerPoints = [],\n            intervalId = 0,\n            lastTime = 0;\n\n        // Generates a unique identifier for a tracked gesture point\n        var _generateGuid = function ( tracker, gPoint ) {\n            return tracker.hash.toString() + gPoint.type + gPoint.id.toString();\n        };\n\n        // Interval timer callback. Computes velocity for all tracked gesture points.\n        var _doTracking = function () {\n            var i,\n                len = trackerPoints.length,\n                trackPoint,\n                gPoint,\n                now = $.now(),\n                elapsedTime,\n                distance,\n                speed;\n\n            elapsedTime = now - lastTime;\n            lastTime = now;\n\n            for ( i = 0; i < len; i++ ) {\n                trackPoint = trackerPoints[ i ];\n                gPoint = trackPoint.gPoint;\n                // Math.atan2 gives us just what we need for a velocity vector, as we can simply\n                //   use cos()/sin() to extract the x/y velocity components.\n                gPoint.direction = Math.atan2( gPoint.currentPos.y - trackPoint.lastPos.y, gPoint.currentPos.x - trackPoint.lastPos.x );\n                // speed = distance / elapsed time\n                distance = trackPoint.lastPos.distanceTo( gPoint.currentPos );\n                trackPoint.lastPos = gPoint.currentPos;\n                speed = 1000 * distance / ( elapsedTime + 1 );\n                // Simple biased average, favors the most recent speed computation. Smooths out erratic gestures a bit.\n                gPoint.speed = 0.75 * speed + 0.25 * gPoint.speed;\n            }\n        };\n\n        // Public. Add a gesture point to be tracked\n        var addPoint = function ( tracker, gPoint ) {\n            var guid = _generateGuid( tracker, gPoint );\n\n            trackerPoints.push(\n                {\n                    guid: guid,\n                    gPoint: gPoint,\n                    lastPos: gPoint.currentPos\n                } );\n\n            // Only fire up the interval timer when there's gesture pointers to track\n            if ( trackerPoints.length === 1 ) {\n                lastTime = $.now();\n                intervalId = window.setInterval( _doTracking, 50 );\n            }\n        };\n\n        // Public. Stop tracking a gesture point\n        var removePoint = function ( tracker, gPoint ) {\n            var guid = _generateGuid( tracker, gPoint ),\n                i,\n                len = trackerPoints.length;\n            for ( i = 0; i < len; i++ ) {\n                if ( trackerPoints[ i ].guid === guid ) {\n                    trackerPoints.splice( i, 1 );\n                    // Only run the interval timer if theres gesture pointers to track\n                    len--;\n                    if ( len === 0 ) {\n                        window.clearInterval( intervalId );\n                    }\n                    break;\n                }\n            }\n        };\n\n        return {\n            addPoint:    addPoint,\n            removePoint: removePoint\n        };\n    } )();\n\n\n///////////////////////////////////////////////////////////////////////////////\n// Pointer event model and feature detection\n///////////////////////////////////////////////////////////////////////////////\n\n    $.MouseTracker.captureElement = document;\n\n    /**\n     * Detect available mouse wheel event name.\n     */\n    $.MouseTracker.wheelEventName = ( $.Browser.vendor == $.BROWSERS.IE && $.Browser.version > 8 ) ||\n                                                ( 'onwheel' in document.createElement( 'div' ) ) ? 'wheel' : // Modern browsers support 'wheel'\n                                    document.onmousewheel !== undefined ? 'mousewheel' :                     // Webkit and IE support at least 'mousewheel'\n                                    'DOMMouseScroll';                                                        // Assume old Firefox\n\n    /**\n     * Detect legacy mouse capture support.\n     */\n    $.MouseTracker.supportsMouseCapture = (function () {\n        var divElement = document.createElement( 'div' );\n        return $.isFunction( divElement.setCapture ) && $.isFunction( divElement.releaseCapture );\n    }());\n\n    /**\n     * Detect browser pointer device event model(s) and build appropriate list of events to subscribe to.\n     */\n    $.MouseTracker.subscribeEvents = [ \"click\", \"dblclick\", \"keydown\", \"keyup\", \"keypress\", \"focus\", \"blur\", $.MouseTracker.wheelEventName ];\n\n    if( $.MouseTracker.wheelEventName == \"DOMMouseScroll\" ) {\n        // Older Firefox\n        $.MouseTracker.subscribeEvents.push( \"MozMousePixelScroll\" );\n    }\n\n    // Note: window.navigator.pointerEnable is deprecated on IE 11 and not part of W3C spec.\n    if ( window.PointerEvent && ( window.navigator.pointerEnabled || $.Browser.vendor !== $.BROWSERS.IE ) ) {\n        // IE11 and other W3C Pointer Event implementations (see http://www.w3.org/TR/pointerevents)\n        $.MouseTracker.havePointerEvents = true;\n        $.MouseTracker.subscribeEvents.push( \"pointerover\", \"pointerout\", \"pointerdown\", \"pointerup\", \"pointermove\", \"pointercancel\" );\n        $.MouseTracker.unprefixedPointerEvents = true;\n        if( navigator.maxTouchPoints ) {\n            $.MouseTracker.maxTouchPoints = navigator.maxTouchPoints;\n        } else {\n            $.MouseTracker.maxTouchPoints = 0;\n        }\n        $.MouseTracker.haveMouseEnter = false;\n    } else if ( window.MSPointerEvent && window.navigator.msPointerEnabled ) {\n        // IE10\n        $.MouseTracker.havePointerEvents = true;\n        $.MouseTracker.subscribeEvents.push( \"MSPointerOver\", \"MSPointerOut\", \"MSPointerDown\", \"MSPointerUp\", \"MSPointerMove\", \"MSPointerCancel\" );\n        $.MouseTracker.unprefixedPointerEvents = false;\n        if( navigator.msMaxTouchPoints ) {\n            $.MouseTracker.maxTouchPoints = navigator.msMaxTouchPoints;\n        } else {\n            $.MouseTracker.maxTouchPoints = 0;\n        }\n        $.MouseTracker.haveMouseEnter = false;\n    } else {\n        // Legacy W3C mouse events\n        $.MouseTracker.havePointerEvents = false;\n        if ( $.Browser.vendor === $.BROWSERS.IE && $.Browser.version < 9 ) {\n            $.MouseTracker.subscribeEvents.push( \"mouseenter\", \"mouseleave\" );\n            $.MouseTracker.haveMouseEnter = true;\n        } else {\n            $.MouseTracker.subscribeEvents.push( \"mouseover\", \"mouseout\" );\n            $.MouseTracker.haveMouseEnter = false;\n        }\n        $.MouseTracker.subscribeEvents.push( \"mousedown\", \"mouseup\", \"mousemove\" );\n        if ( 'ontouchstart' in window ) {\n            // iOS, Android, and other W3c Touch Event implementations\n            //    (see http://www.w3.org/TR/touch-events/)\n            //    (see https://developer.apple.com/library/ios/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html)\n            //    (see https://developer.apple.com/library/safari/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html)\n            $.MouseTracker.subscribeEvents.push( \"touchstart\", \"touchend\", \"touchmove\", \"touchcancel\" );\n        }\n        if ( 'ongesturestart' in window ) {\n            // iOS (see https://developer.apple.com/library/ios/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html)\n            //   Subscribe to these to prevent default gesture handling\n            $.MouseTracker.subscribeEvents.push( \"gesturestart\", \"gesturechange\" );\n        }\n        $.MouseTracker.mousePointerId = \"legacy-mouse\";\n        $.MouseTracker.maxTouchPoints = 10;\n    }\n\n\n///////////////////////////////////////////////////////////////////////////////\n// Classes and typedefs\n///////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * Represents a point of contact on the screen made by a mouse cursor, pen, touch, or other pointer device.\n     *\n     * @typedef {Object} GesturePoint\n     * @memberof OpenSeadragon.MouseTracker\n     *\n     * @property {Number} id\n     *     Identifier unique from all other active GesturePoints for a given pointer device.\n     * @property {String} type\n     *     The pointer device type: \"mouse\", \"touch\", \"pen\", etc.\n     * @property {Boolean} captured\n     *     True if events for the gesture point are captured to the tracked element.\n     * @property {Boolean} isPrimary\n     *     True if the gesture point is a master pointer amongst the set of active pointers for each pointer type. True for mouse and primary (first) touch/pen pointers.\n     * @property {Boolean} insideElementPressed\n     *     True if button pressed or contact point initiated inside the screen area of the tracked element.\n     * @property {Boolean} insideElement\n     *     True if pointer or contact point is currently inside the bounds of the tracked element.\n     * @property {Number} speed\n     *     Current computed speed, in pixels per second.\n     * @property {Number} direction\n     *     Current computed direction, expressed as an angle counterclockwise relative to the positive X axis (-pi to pi, in radians). Only valid if speed > 0.\n     * @property {OpenSeadragon.Point} contactPos\n     *     The initial pointer contact position, relative to the page including any scrolling. Only valid if the pointer has contact (pressed, touch contact, pen contact).\n     * @property {Number} contactTime\n     *     The initial pointer contact time, in milliseconds. Only valid if the pointer has contact (pressed, touch contact, pen contact).\n     * @property {OpenSeadragon.Point} lastPos\n     *     The last pointer position, relative to the page including any scrolling.\n     * @property {Number} lastTime\n     *     The last pointer contact time, in milliseconds.\n     * @property {OpenSeadragon.Point} currentPos\n     *     The current pointer position, relative to the page including any scrolling.\n     * @property {Number} currentTime\n     *     The current pointer contact time, in milliseconds.\n     */\n\n\n    /**\n     * @class GesturePointList\n     * @classdesc Provides an abstraction for a set of active {@link OpenSeadragon.MouseTracker.GesturePoint|GesturePoint} objects for a given pointer device type.\n     *            Active pointers are any pointer being tracked for this element which are in the hit-test area\n     *            of the element (for hover-capable devices) and/or have contact or a button press initiated in the element.\n     * @memberof OpenSeadragon.MouseTracker\n     * @param {String} type - The pointer device type: \"mouse\", \"touch\", \"pen\", etc.\n     */\n    $.MouseTracker.GesturePointList = function ( type ) {\n        this._gPoints = [];\n        /**\n         * The pointer device type: \"mouse\", \"touch\", \"pen\", etc.\n         * @member {String} type\n         * @memberof OpenSeadragon.MouseTracker.GesturePointList#\n         */\n        this.type = type;\n        /**\n         * Current buttons pressed for the device.\n         * Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n         * @member {Number} buttons\n         * @memberof OpenSeadragon.MouseTracker.GesturePointList#\n         */\n        this.buttons = 0;\n        /**\n         * Current number of contact points (touch points, mouse down, etc.) for the device.\n         * @member {Number} contacts\n         * @memberof OpenSeadragon.MouseTracker.GesturePointList#\n         */\n        this.contacts = 0;\n        /**\n         * Current number of clicks for the device. Used for multiple click gesture tracking.\n         * @member {Number} clicks\n         * @memberof OpenSeadragon.MouseTracker.GesturePointList#\n         */\n        this.clicks = 0;\n        /**\n         * Current number of captured pointers for the device.\n         * @member {Number} captureCount\n         * @memberof OpenSeadragon.MouseTracker.GesturePointList#\n         */\n        this.captureCount = 0;\n    };\n\n    /** @lends OpenSeadragon.MouseTracker.GesturePointList.prototype */\n    $.MouseTracker.GesturePointList.prototype = {\n        /**\n         * @function\n         * @returns {Number} Number of gesture points in the list.\n         */\n        getLength: function () {\n            return this._gPoints.length;\n        },\n        /**\n         * @function\n         * @returns {Array.<OpenSeadragon.MouseTracker.GesturePoint>} The list of gesture points in the list as an array (read-only).\n         */\n        asArray: function () {\n            return this._gPoints;\n        },\n        /**\n         * @function\n         * @param {OpenSeadragon.MouseTracker.GesturePoint} gesturePoint - A gesture point to add to the list.\n         * @returns {Number} Number of gesture points in the list.\n         */\n        add: function ( gp ) {\n            return this._gPoints.push( gp );\n        },\n        /**\n         * @function\n         * @param {Number} id - The id of the gesture point to remove from the list.\n         * @returns {Number} Number of gesture points in the list.\n         */\n        removeById: function ( id ) {\n            var i,\n                len = this._gPoints.length;\n            for ( i = 0; i < len; i++ ) {\n                if ( this._gPoints[ i ].id === id ) {\n                    this._gPoints.splice( i, 1 );\n                    break;\n                }\n            }\n            return this._gPoints.length;\n        },\n        /**\n         * @function\n         * @param {Number} index - The index of the gesture point to retrieve from the list.\n         * @returns {OpenSeadragon.MouseTracker.GesturePoint|null} The gesture point at the given index, or null if not found.\n         */\n        getByIndex: function ( index ) {\n            if ( index < this._gPoints.length) {\n                return this._gPoints[ index ];\n            }\n\n            return null;\n        },\n        /**\n         * @function\n         * @param {Number} id - The id of the gesture point to retrieve from the list.\n         * @returns {OpenSeadragon.MouseTracker.GesturePoint|null} The gesture point with the given id, or null if not found.\n         */\n        getById: function ( id ) {\n            var i,\n                len = this._gPoints.length;\n            for ( i = 0; i < len; i++ ) {\n                if ( this._gPoints[ i ].id === id ) {\n                    return this._gPoints[ i ];\n                }\n            }\n            return null;\n        },\n        /**\n         * @function\n         * @returns {OpenSeadragon.MouseTracker.GesturePoint|null} The primary gesture point in the list, or null if not found.\n         */\n        getPrimary: function ( id ) {\n            var i,\n                len = this._gPoints.length;\n            for ( i = 0; i < len; i++ ) {\n                if ( this._gPoints[ i ].isPrimary ) {\n                    return this._gPoints[ i ];\n                }\n            }\n            return null;\n        }\n    };\n\n\n///////////////////////////////////////////////////////////////////////////////\n// Utility functions\n///////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * Removes all tracked pointers.\n     * @private\n     * @inner\n     */\n    function clearTrackedPointers( tracker ) {\n        var delegate = THIS[ tracker.hash ],\n            i,\n            pointerListCount = delegate.activePointersLists.length;\n\n        for ( i = 0; i < pointerListCount; i++ ) {\n            if ( delegate.activePointersLists[ i ].captureCount > 0 ) {\n                $.removeEvent(\n                    $.MouseTracker.captureElement,\n                    'mousemove',\n                    delegate.mousemovecaptured,\n                    true\n                );\n                $.removeEvent(\n                    $.MouseTracker.captureElement,\n                    'mouseup',\n                    delegate.mouseupcaptured,\n                    true\n                );\n                $.removeEvent(\n                    $.MouseTracker.captureElement,\n                    $.MouseTracker.unprefixedPointerEvents ? 'pointermove' : 'MSPointerMove',\n                    delegate.pointermovecaptured,\n                    true\n                );\n                $.removeEvent(\n                    $.MouseTracker.captureElement,\n                    $.MouseTracker.unprefixedPointerEvents ? 'pointerup' : 'MSPointerUp',\n                    delegate.pointerupcaptured,\n                    true\n                );\n                $.removeEvent(\n                    $.MouseTracker.captureElement,\n                    'touchmove',\n                    delegate.touchmovecaptured,\n                    true\n                );\n                $.removeEvent(\n                    $.MouseTracker.captureElement,\n                    'touchend',\n                    delegate.touchendcaptured,\n                    true\n                );\n\n                delegate.activePointersLists[ i ].captureCount = 0;\n            }\n        }\n\n        for ( i = 0; i < pointerListCount; i++ ) {\n            delegate.activePointersLists.pop();\n        }\n    }\n\n    /**\n     * Starts tracking pointer events on the tracked element.\n     * @private\n     * @inner\n     */\n    function startTracking( tracker ) {\n        var delegate = THIS[ tracker.hash ],\n            event,\n            i;\n\n        if ( !delegate.tracking ) {\n            for ( i = 0; i < $.MouseTracker.subscribeEvents.length; i++ ) {\n                event = $.MouseTracker.subscribeEvents[ i ];\n                $.addEvent(\n                    tracker.element,\n                    event,\n                    delegate[ event ],\n                    false\n                );\n            }\n\n            clearTrackedPointers( tracker );\n\n            delegate.tracking = true;\n        }\n    }\n\n    /**\n     * Stops tracking pointer events on the tracked element.\n     * @private\n     * @inner\n     */\n    function stopTracking( tracker ) {\n        var delegate = THIS[ tracker.hash ],\n            event,\n            i;\n\n        if ( delegate.tracking ) {\n            for ( i = 0; i < $.MouseTracker.subscribeEvents.length; i++ ) {\n                event = $.MouseTracker.subscribeEvents[ i ];\n                $.removeEvent(\n                    tracker.element,\n                    event,\n                    delegate[ event ],\n                    false\n                );\n            }\n\n            clearTrackedPointers( tracker );\n\n            delegate.tracking = false;\n        }\n    }\n\n    /**\n     * @private\n     * @inner\n     */\n    function getCaptureEventParams( tracker, pointerType ) {\n        var delegate = THIS[ tracker.hash ];\n\n        if ( pointerType === 'pointerevent' ) {\n            return {\n                upName: $.MouseTracker.unprefixedPointerEvents ? 'pointerup' : 'MSPointerUp',\n                upHandler: delegate.pointerupcaptured,\n                moveName: $.MouseTracker.unprefixedPointerEvents ? 'pointermove' : 'MSPointerMove',\n                moveHandler: delegate.pointermovecaptured\n            };\n        } else if ( pointerType === 'mouse' ) {\n            return {\n                upName: 'mouseup',\n                upHandler: delegate.mouseupcaptured,\n                moveName: 'mousemove',\n                moveHandler: delegate.mousemovecaptured\n            };\n        } else if ( pointerType === 'touch' ) {\n            return {\n                upName: 'touchend',\n                upHandler: delegate.touchendcaptured,\n                moveName: 'touchmove',\n                moveHandler: delegate.touchmovecaptured\n            };\n        } else {\n            throw new Error( \"MouseTracker.getCaptureEventParams: Unknown pointer type.\" );\n        }\n    }\n\n    /**\n     * Begin capturing pointer events to the tracked element.\n     * @private\n     * @inner\n     */\n    function capturePointer( tracker, pointerType, pointerCount ) {\n        var pointsList = tracker.getActivePointersListByType( pointerType ),\n            eventParams;\n\n        pointsList.captureCount += (pointerCount || 1);\n\n        if ( pointsList.captureCount === 1 ) {\n            if ( $.Browser.vendor === $.BROWSERS.IE && $.Browser.version < 9 ) {\n                tracker.element.setCapture( true );\n            } else {\n                eventParams = getCaptureEventParams( tracker, $.MouseTracker.havePointerEvents ? 'pointerevent' : pointerType );\n                // We emulate mouse capture by hanging listeners on the document object.\n                //    (Note we listen on the capture phase so the captured handlers will get called first)\n                if (isInIframe && canAccessEvents(window.top)) {\n                    $.addEvent(\n                        window.top,\n                        eventParams.upName,\n                        eventParams.upHandler,\n                        true\n                    );\n                }\n                $.addEvent(\n                    $.MouseTracker.captureElement,\n                    eventParams.upName,\n                    eventParams.upHandler,\n                    true\n                );\n                $.addEvent(\n                    $.MouseTracker.captureElement,\n                    eventParams.moveName,\n                    eventParams.moveHandler,\n                    true\n                );\n            }\n        }\n    }\n\n\n    /**\n     * Stop capturing pointer events to the tracked element.\n     * @private\n     * @inner\n     */\n    function releasePointer( tracker, pointerType, pointerCount ) {\n        var pointsList = tracker.getActivePointersListByType( pointerType ),\n            eventParams;\n\n        pointsList.captureCount -= (pointerCount || 1);\n\n        if ( pointsList.captureCount === 0 ) {\n            if ( $.Browser.vendor === $.BROWSERS.IE && $.Browser.version < 9 ) {\n                tracker.element.releaseCapture();\n            } else {\n                eventParams = getCaptureEventParams( tracker, $.MouseTracker.havePointerEvents ? 'pointerevent' : pointerType );\n                // We emulate mouse capture by hanging listeners on the document object.\n                //    (Note we listen on the capture phase so the captured handlers will get called first)\n                if (isInIframe && canAccessEvents(window.top)) {\n                    $.removeEvent(\n                        window.top,\n                        eventParams.upName,\n                        eventParams.upHandler,\n                        true\n                    );\n                }\n                $.removeEvent(\n                    $.MouseTracker.captureElement,\n                    eventParams.moveName,\n                    eventParams.moveHandler,\n                    true\n                );\n                $.removeEvent(\n                    $.MouseTracker.captureElement,\n                    eventParams.upName,\n                    eventParams.upHandler,\n                    true\n                );\n            }\n        }\n    }\n\n\n    /**\n     * Gets a W3C Pointer Events model compatible pointer type string from a DOM pointer event.\n     * IE10 used a long integer value, but the W3C specification (and IE11+) use a string \"mouse\", \"touch\", \"pen\", etc.\n     * @private\n     * @inner\n     */\n    function getPointerType( event ) {\n        var pointerTypeStr;\n        if ( $.MouseTracker.unprefixedPointerEvents ) {\n            pointerTypeStr = event.pointerType;\n        } else {\n            // IE10\n            //  MSPOINTER_TYPE_TOUCH: 0x00000002\n            //  MSPOINTER_TYPE_PEN:   0x00000003\n            //  MSPOINTER_TYPE_MOUSE: 0x00000004\n            switch( event.pointerType )\n            {\n                case 0x00000002:\n                    pointerTypeStr = 'touch';\n                    break;\n                case 0x00000003:\n                    pointerTypeStr = 'pen';\n                    break;\n                case 0x00000004:\n                    pointerTypeStr = 'mouse';\n                    break;\n                default:\n                    pointerTypeStr = '';\n            }\n        }\n        return pointerTypeStr;\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function getMouseAbsolute( event ) {\n        return $.getMousePosition( event );\n    }\n\n    /**\n     * @private\n     * @inner\n     */\n    function getMouseRelative( event, element ) {\n        return getPointRelativeToAbsolute( getMouseAbsolute( event ), element );\n    }\n\n    /**\n     * @private\n     * @inner\n     */\n    function getPointRelativeToAbsolute( point, element ) {\n        var offset = $.getElementOffset( element );\n        return point.minus( offset );\n    }\n\n    /**\n     * @private\n     * @inner\n     */\n    function getCenterPoint( point1, point2 ) {\n        return new $.Point( ( point1.x + point2.x ) / 2, ( point1.y + point2.y ) / 2 );\n    }\n\n\n///////////////////////////////////////////////////////////////////////////////\n// Device-specific DOM event handlers\n///////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * @private\n     * @inner\n     */\n    function onClick( tracker, event ) {\n        if ( tracker.clickHandler ) {\n            $.cancelEvent( event );\n        }\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onDblClick( tracker, event ) {\n        if ( tracker.dblClickHandler ) {\n            $.cancelEvent( event );\n        }\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onKeyDown( tracker, event ) {\n        //$.console.log( \"keydown %s %s %s %s %s\", event.keyCode, event.charCode, event.ctrlKey, event.shiftKey, event.altKey );\n        var propagate;\n        if ( tracker.keyDownHandler ) {\n            event = $.getEvent( event );\n            propagate = tracker.keyDownHandler(\n                {\n                    eventSource:          tracker,\n                    keyCode:              event.keyCode ? event.keyCode : event.charCode,\n                    ctrl:                 event.ctrlKey,\n                    shift:                event.shiftKey,\n                    alt:                  event.altKey,\n                    meta:                 event.metaKey,\n                    originalEvent:        event,\n                    preventDefaultAction: false,\n                    userData:             tracker.userData\n                }\n            );\n            if ( !propagate ) {\n                $.cancelEvent( event );\n            }\n        }\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onKeyUp( tracker, event ) {\n        //$.console.log( \"keyup %s %s %s %s %s\", event.keyCode, event.charCode, event.ctrlKey, event.shiftKey, event.altKey );\n        var propagate;\n        if ( tracker.keyUpHandler ) {\n            event = $.getEvent( event );\n            propagate = tracker.keyUpHandler(\n                {\n                    eventSource:          tracker,\n                    keyCode:              event.keyCode ? event.keyCode : event.charCode,\n                    ctrl:                 event.ctrlKey,\n                    shift:                event.shiftKey,\n                    alt:                  event.altKey,\n                    meta:                 event.metaKey,\n                    originalEvent:        event,\n                    preventDefaultAction: false,\n                    userData:             tracker.userData\n                }\n            );\n            if ( !propagate ) {\n                $.cancelEvent( event );\n            }\n        }\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onKeyPress( tracker, event ) {\n        //$.console.log( \"keypress %s %s %s %s %s\", event.keyCode, event.charCode, event.ctrlKey, event.shiftKey, event.altKey );\n        var propagate;\n        if ( tracker.keyHandler ) {\n            event = $.getEvent( event );\n            propagate = tracker.keyHandler(\n                {\n                    eventSource:          tracker,\n                    keyCode:              event.keyCode ? event.keyCode : event.charCode,\n                    ctrl:                 event.ctrlKey,\n                    shift:                event.shiftKey,\n                    alt:                  event.altKey,\n                    meta:                 event.metaKey,\n                    originalEvent:        event,\n                    preventDefaultAction: false,\n                    userData:             tracker.userData\n                }\n            );\n            if ( !propagate ) {\n                $.cancelEvent( event );\n            }\n        }\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onFocus( tracker, event ) {\n        //console.log( \"focus %s\", event );\n        var propagate;\n        if ( tracker.focusHandler ) {\n            event = $.getEvent( event );\n            propagate = tracker.focusHandler(\n                {\n                    eventSource:          tracker,\n                    originalEvent:        event,\n                    preventDefaultAction: false,\n                    userData:             tracker.userData\n                }\n            );\n            if ( propagate === false ) {\n                $.cancelEvent( event );\n            }\n        }\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onBlur( tracker, event ) {\n        //console.log( \"blur %s\", event );\n        var propagate;\n        if ( tracker.blurHandler ) {\n            event = $.getEvent( event );\n            propagate = tracker.blurHandler(\n                {\n                    eventSource:          tracker,\n                    originalEvent:        event,\n                    preventDefaultAction: false,\n                    userData:             tracker.userData\n                }\n            );\n            if ( propagate === false ) {\n                $.cancelEvent( event );\n            }\n        }\n    }\n\n\n    /**\n     * Handler for 'wheel' events\n     *\n     * @private\n     * @inner\n     */\n    function onWheel( tracker, event ) {\n        handleWheelEvent( tracker, event, event );\n    }\n\n\n    /**\n     * Handler for 'mousewheel', 'DOMMouseScroll', and 'MozMousePixelScroll' events\n     *\n     * @private\n     * @inner\n     */\n    function onMouseWheel( tracker, event ) {\n        event = $.getEvent( event );\n\n        // Simulate a 'wheel' event\n        var simulatedEvent = {\n            target:     event.target || event.srcElement,\n            type:       \"wheel\",\n            shiftKey:   event.shiftKey || false,\n            clientX:    event.clientX,\n            clientY:    event.clientY,\n            pageX:      event.pageX ? event.pageX : event.clientX,\n            pageY:      event.pageY ? event.pageY : event.clientY,\n            deltaMode:  event.type == \"MozMousePixelScroll\" ? 0 : 1, // 0=pixel, 1=line, 2=page\n            deltaX:     0,\n            deltaZ:     0\n        };\n\n        // Calculate deltaY\n        if ( $.MouseTracker.wheelEventName == \"mousewheel\" ) {\n            simulatedEvent.deltaY = - 1 / $.DEFAULT_SETTINGS.pixelsPerWheelLine * event.wheelDelta;\n        } else {\n            simulatedEvent.deltaY = event.detail;\n        }\n\n        handleWheelEvent( tracker, simulatedEvent, event );\n    }\n\n\n    /**\n     * Handles 'wheel' events.\n     * The event may be simulated by the legacy mouse wheel event handler (onMouseWheel()).\n     *\n     * @private\n     * @inner\n     */\n    function handleWheelEvent( tracker, event, originalEvent ) {\n        var nDelta = 0,\n            propagate;\n\n        // The nDelta variable is gated to provide smooth z-index scrolling\n        //   since the mouse wheel allows for substantial deltas meant for rapid\n        //   y-index scrolling.\n        // event.deltaMode: 0=pixel, 1=line, 2=page\n        // TODO: Deltas in pixel mode should be accumulated then a scroll value computed after $.DEFAULT_SETTINGS.pixelsPerWheelLine threshold reached\n        nDelta = event.deltaY < 0 ? 1 : -1;\n\n        if ( tracker.scrollHandler ) {\n            propagate = tracker.scrollHandler(\n                {\n                    eventSource:          tracker,\n                    pointerType:          'mouse',\n                    position:             getMouseRelative( event, tracker.element ),\n                    scroll:               nDelta,\n                    shift:                event.shiftKey,\n                    isTouchEvent:         false,\n                    originalEvent:        originalEvent,\n                    preventDefaultAction: false,\n                    userData:             tracker.userData\n                }\n            );\n            if ( propagate === false ) {\n                $.cancelEvent( originalEvent );\n            }\n        }\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function isParentChild( parent, child )\n    {\n       if ( parent === child ) {\n           return false;\n       }\n       while ( child && child !== parent ) {\n           child = child.parentNode;\n       }\n       return child === parent;\n    }\n\n\n    /**\n     * Only used on IE 8\n     *\n     * @private\n     * @inner\n     */\n    function onMouseEnter( tracker, event ) {\n        event = $.getEvent( event );\n\n        handleMouseEnter( tracker, event );\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onMouseOver( tracker, event ) {\n        event = $.getEvent( event );\n\n        if ( event.currentTarget === event.relatedTarget || isParentChild( event.currentTarget, event.relatedTarget ) ) {\n            return;\n        }\n\n        handleMouseEnter( tracker, event );\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function handleMouseEnter( tracker, event ) {\n        var gPoint = {\n            id: $.MouseTracker.mousePointerId,\n            type: 'mouse',\n            isPrimary: true,\n            currentPos: getMouseAbsolute( event ),\n            currentTime: $.now()\n        };\n\n        updatePointersEnter( tracker, event, [ gPoint ] );\n    }\n\n\n    /**\n     * Only used on IE 8\n     *\n     * @private\n     * @inner\n     */\n    function onMouseLeave( tracker, event ) {\n        event = $.getEvent( event );\n\n        handleMouseExit( tracker, event );\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onMouseOut( tracker, event ) {\n        event = $.getEvent( event );\n\n        if ( event.currentTarget === event.relatedTarget || isParentChild( event.currentTarget, event.relatedTarget ) ) {\n            return;\n        }\n\n        handleMouseExit( tracker, event );\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function handleMouseExit( tracker, event ) {\n        var gPoint = {\n            id: $.MouseTracker.mousePointerId,\n            type: 'mouse',\n            isPrimary: true,\n            currentPos: getMouseAbsolute( event ),\n            currentTime: $.now()\n        };\n\n        updatePointersExit( tracker, event, [ gPoint ] );\n    }\n\n\n    /**\n     * Returns a W3C DOM level 3 standard button value given an event.button property:\n     *   -1 == none, 0 == primary/left, 1 == middle, 2 == secondary/right, 3 == X1/back, 4 == X2/forward, 5 == eraser (pen)\n     * @private\n     * @inner\n     */\n    function getStandardizedButton( button ) {\n        if ( $.Browser.vendor === $.BROWSERS.IE && $.Browser.version < 9 ) {\n            // On IE 8, 0 == none, 1 == left, 2 == right, 3 == left and right, 4 == middle, 5 == left and middle, 6 == right and middle, 7 == all three\n            // TODO: Support chorded (multiple) button presses on IE 8?\n            if ( button === 1 ) {\n                return 0;\n            } else if ( button === 2 ) {\n                return 2;\n            } else if ( button === 4 ) {\n                return 1;\n            } else {\n                return -1;\n            }\n        } else {\n            return button;\n        }\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onMouseDown( tracker, event ) {\n        var gPoint;\n\n        event = $.getEvent( event );\n\n        gPoint = {\n            id: $.MouseTracker.mousePointerId,\n            type: 'mouse',\n            isPrimary: true,\n            currentPos: getMouseAbsolute( event ),\n            currentTime: $.now()\n        };\n\n        if ( updatePointersDown( tracker, event, [ gPoint ], getStandardizedButton( event.button ) ) ) {\n            $.stopEvent( event );\n            capturePointer( tracker, 'mouse' );\n        }\n\n        if ( tracker.clickHandler || tracker.dblClickHandler || tracker.pressHandler || tracker.dragHandler || tracker.dragEndHandler ) {\n            $.cancelEvent( event );\n        }\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onMouseUp( tracker, event ) {\n        handleMouseUp( tracker, event );\n    }\n\n    /**\n     * This handler is attached to the window object (on the capture phase) to emulate mouse capture.\n     * onMouseUp is still attached to the tracked element, so stop propagation to avoid processing twice.\n     *\n     * @private\n     * @inner\n     */\n    function onMouseUpCaptured( tracker, event ) {\n        handleMouseUp( tracker, event );\n        $.stopEvent( event );\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function handleMouseUp( tracker, event ) {\n        var gPoint;\n\n        event = $.getEvent( event );\n\n        gPoint = {\n            id: $.MouseTracker.mousePointerId,\n            type: 'mouse',\n            isPrimary: true,\n            currentPos: getMouseAbsolute( event ),\n            currentTime: $.now()\n        };\n\n        if ( updatePointersUp( tracker, event, [ gPoint ], getStandardizedButton( event.button ) ) ) {\n            releasePointer( tracker, 'mouse' );\n        }\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onMouseMove( tracker, event ) {\n        handleMouseMove( tracker, event );\n   }\n\n\n    /**\n     * This handler is attached to the window object (on the capture phase) to emulate mouse capture.\n     * onMouseMove is still attached to the tracked element, so stop propagation to avoid processing twice.\n     *\n     * @private\n     * @inner\n     */\n    function onMouseMoveCaptured( tracker, event ) {\n        handleMouseMove( tracker, event );\n        $.stopEvent( event );\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function handleMouseMove( tracker, event ) {\n        var gPoint;\n\n        event = $.getEvent( event );\n\n        gPoint = {\n            id: $.MouseTracker.mousePointerId,\n            type: 'mouse',\n            isPrimary: true,\n            currentPos: getMouseAbsolute( event ),\n            currentTime: $.now()\n        };\n\n        updatePointersMove( tracker, event, [ gPoint ] );\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function abortTouchContacts( tracker, event, pointsList ) {\n        var i,\n            gPointCount = pointsList.getLength(),\n            abortGPoints = [];\n\n        for ( i = 0; i < gPointCount; i++ ) {\n            abortGPoints.push( pointsList.getByIndex( i ) );\n        }\n\n        if ( abortGPoints.length > 0 ) {\n            // simulate touchend\n            updatePointersUp( tracker, event, abortGPoints, 0 ); // 0 means primary button press/release or touch contact\n            // release pointer capture\n            pointsList.captureCount = 1;\n            releasePointer( tracker, 'touch' );\n            // simulate touchleave\n            updatePointersExit( tracker, event, abortGPoints );\n        }\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onTouchStart( tracker, event ) {\n        var time,\n            i,\n            j,\n            touchCount = event.changedTouches.length,\n            gPoints = [],\n            parentGPoints,\n            pointsList = tracker.getActivePointersListByType( 'touch' );\n\n        time = $.now();\n\n        if ( pointsList.getLength() > event.touches.length - touchCount ) {\n            $.console.warn('Tracked touch contact count doesn\\'t match event.touches.length. Removing all tracked touch pointers.');\n            abortTouchContacts( tracker, event, pointsList );\n        }\n\n        for ( i = 0; i < touchCount; i++ ) {\n            gPoints.push( {\n                id: event.changedTouches[ i ].identifier,\n                type: 'touch',\n                // isPrimary not set - let the updatePointers functions determine it\n                currentPos: getMouseAbsolute( event.changedTouches[ i ] ),\n                currentTime: time\n            } );\n        }\n\n        // simulate touchenter on our tracked element\n        updatePointersEnter( tracker, event, gPoints );\n\n        // simulate touchenter on our tracked element's tracked ancestor elements\n        for ( i = 0; i < MOUSETRACKERS.length; i++ ) {\n            if ( MOUSETRACKERS[ i ] !== tracker && MOUSETRACKERS[ i ].isTracking() && isParentChild( MOUSETRACKERS[ i ].element, tracker.element ) ) {\n                parentGPoints = [];\n                for ( j = 0; j < touchCount; j++ ) {\n                    parentGPoints.push( {\n                        id: event.changedTouches[ j ].identifier,\n                        type: 'touch',\n                        // isPrimary not set - let the updatePointers functions determine it\n                        currentPos: getMouseAbsolute( event.changedTouches[ j ] ),\n                        currentTime: time\n                    } );\n                }\n                updatePointersEnter( MOUSETRACKERS[ i ], event, parentGPoints );\n            }\n        }\n\n        if ( updatePointersDown( tracker, event, gPoints, 0 ) ) { // 0 means primary button press/release or touch contact\n            $.stopEvent( event );\n            capturePointer( tracker, 'touch', touchCount );\n        }\n\n        $.cancelEvent( event );\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onTouchEnd( tracker, event ) {\n        handleTouchEnd( tracker, event );\n    }\n\n\n    /**\n     * This handler is attached to the window object (on the capture phase) to emulate pointer capture.\n     * onTouchEnd is still attached to the tracked element, so stop propagation to avoid processing twice.\n     *\n     * @private\n     * @inner\n     */\n    function onTouchEndCaptured( tracker, event ) {\n        handleTouchEnd( tracker, event );\n        $.stopEvent( event );\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function handleTouchEnd( tracker, event ) {\n        var time,\n            i,\n            j,\n            touchCount = event.changedTouches.length,\n            gPoints = [],\n            parentGPoints;\n\n        time = $.now();\n\n        for ( i = 0; i < touchCount; i++ ) {\n            gPoints.push( {\n                id: event.changedTouches[ i ].identifier,\n                type: 'touch',\n                // isPrimary not set - let the updatePointers functions determine it\n                currentPos: getMouseAbsolute( event.changedTouches[ i ] ),\n                currentTime: time\n            } );\n        }\n\n        if ( updatePointersUp( tracker, event, gPoints, 0 ) ) {\n            releasePointer( tracker, 'touch', touchCount );\n        }\n\n        // simulate touchleave on our tracked element\n        updatePointersExit( tracker, event, gPoints );\n\n        // simulate touchleave on our tracked element's tracked ancestor elements\n        for ( i = 0; i < MOUSETRACKERS.length; i++ ) {\n            if ( MOUSETRACKERS[ i ] !== tracker && MOUSETRACKERS[ i ].isTracking() && isParentChild( MOUSETRACKERS[ i ].element, tracker.element ) ) {\n                parentGPoints = [];\n                for ( j = 0; j < touchCount; j++ ) {\n                    parentGPoints.push( {\n                        id: event.changedTouches[ j ].identifier,\n                        type: 'touch',\n                        // isPrimary not set - let the updatePointers functions determine it\n                        currentPos: getMouseAbsolute( event.changedTouches[ j ] ),\n                        currentTime: time\n                    } );\n                }\n                updatePointersExit( MOUSETRACKERS[ i ], event, parentGPoints );\n            }\n        }\n\n        $.cancelEvent( event );\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onTouchMove( tracker, event ) {\n        handleTouchMove( tracker, event );\n    }\n\n\n    /**\n     * This handler is attached to the window object (on the capture phase) to emulate pointer capture.\n     * onTouchMove is still attached to the tracked element, so stop propagation to avoid processing twice.\n     *\n     * @private\n     * @inner\n     */\n    function onTouchMoveCaptured( tracker, event ) {\n        handleTouchMove( tracker, event );\n        $.stopEvent( event );\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function handleTouchMove( tracker, event ) {\n        var i,\n            touchCount = event.changedTouches.length,\n            gPoints = [];\n\n        for ( i = 0; i < touchCount; i++ ) {\n            gPoints.push( {\n                id: event.changedTouches[ i ].identifier,\n                type: 'touch',\n                // isPrimary not set - let the updatePointers functions determine it\n                currentPos: getMouseAbsolute( event.changedTouches[ i ] ),\n                currentTime: $.now()\n            } );\n        }\n\n        updatePointersMove( tracker, event, gPoints );\n\n        $.cancelEvent( event );\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onTouchCancel( tracker, event ) {\n        var i,\n            touchCount = event.changedTouches.length,\n            gPoints = [],\n            pointsList = tracker.getActivePointersListByType( 'touch' );\n        \n        abortTouchContacts( tracker, event, pointsList );\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onGestureStart( tracker, event ) {\n        event.stopPropagation();\n        event.preventDefault();\n        return false;\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onGestureChange( tracker, event ) {\n        event.stopPropagation();\n        event.preventDefault();\n        return false;\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onPointerOver( tracker, event ) {\n        var gPoint;\n\n        if ( event.currentTarget === event.relatedTarget || isParentChild( event.currentTarget, event.relatedTarget ) ) {\n            return;\n        }\n\n        gPoint = {\n            id: event.pointerId,\n            type: getPointerType( event ),\n            isPrimary: event.isPrimary,\n            currentPos: getMouseAbsolute( event ),\n            currentTime: $.now()\n        };\n\n        updatePointersEnter( tracker, event, [ gPoint ] );\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onPointerOut( tracker, event ) {\n        var gPoint;\n\n        if ( event.currentTarget === event.relatedTarget || isParentChild( event.currentTarget, event.relatedTarget ) ) {\n            return;\n        }\n\n        gPoint = {\n            id: event.pointerId,\n            type: getPointerType( event ),\n            isPrimary: event.isPrimary,\n            currentPos: getMouseAbsolute( event ),\n            currentTime: $.now()\n        };\n\n        updatePointersExit( tracker, event, [ gPoint ] );\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onPointerDown( tracker, event ) {\n        var gPoint;\n\n        gPoint = {\n            id: event.pointerId,\n            type: getPointerType( event ),\n            isPrimary: event.isPrimary,\n            currentPos: getMouseAbsolute( event ),\n            currentTime: $.now()\n        };\n\n        if ( updatePointersDown( tracker, event, [ gPoint ], event.button ) ) {\n            $.stopEvent( event );\n            capturePointer( tracker, gPoint.type );\n        }\n\n        if ( tracker.clickHandler || tracker.dblClickHandler || tracker.pressHandler || tracker.dragHandler || tracker.dragEndHandler || tracker.pinchHandler ) {\n            $.cancelEvent( event );\n        }\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onPointerUp( tracker, event ) {\n        handlePointerUp( tracker, event );\n    }\n\n\n    /**\n     * This handler is attached to the window object (on the capture phase) to emulate mouse capture.\n     * onPointerUp is still attached to the tracked element, so stop propagation to avoid processing twice.\n     *\n     * @private\n     * @inner\n     */\n    function onPointerUpCaptured( tracker, event ) {\n        var pointsList = tracker.getActivePointersListByType( getPointerType( event ) );\n        if ( pointsList.getById( event.pointerId ) ) {\n            handlePointerUp( tracker, event );\n        }\n        $.stopEvent( event );\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function handlePointerUp( tracker, event ) {\n        var gPoint;\n\n        gPoint = {\n            id: event.pointerId,\n            type: getPointerType( event ),\n            isPrimary: event.isPrimary,\n            currentPos: getMouseAbsolute( event ),\n            currentTime: $.now()\n        };\n\n        if ( updatePointersUp( tracker, event, [ gPoint ], event.button ) ) {\n            releasePointer( tracker, gPoint.type );\n        }\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onPointerMove( tracker, event ) {\n        handlePointerMove( tracker, event );\n    }\n\n\n    /**\n     * This handler is attached to the window object (on the capture phase) to emulate mouse capture.\n     * onPointerMove is still attached to the tracked element, so stop propagation to avoid processing twice.\n     *\n     * @private\n     * @inner\n     */\n    function onPointerMoveCaptured( tracker, event ) {\n        var pointsList = tracker.getActivePointersListByType( getPointerType( event ) );\n        if ( pointsList.getById( event.pointerId ) ) {\n            handlePointerMove( tracker, event );\n        }\n        $.stopEvent( event );\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function handlePointerMove( tracker, event ) {\n        // Pointer changed coordinates, button state, pressure, tilt, or contact geometry (e.g. width and height)\n        var gPoint;\n\n        gPoint = {\n            id: event.pointerId,\n            type: getPointerType( event ),\n            isPrimary: event.isPrimary,\n            currentPos: getMouseAbsolute( event ),\n            currentTime: $.now()\n        };\n\n        updatePointersMove( tracker, event, [ gPoint ] );\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onPointerCancel( tracker, event ) {\n        var gPoint;\n\n        gPoint = {\n            id: event.pointerId,\n            type: getPointerType( event )\n        };\n\n        updatePointersCancel( tracker, event, [ gPoint ] );\n    }\n\n\n///////////////////////////////////////////////////////////////////////////////\n// Device-agnostic DOM event handlers\n///////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * @function\n     * @private\n     * @inner\n     * @param {OpenSeadragon.MouseTracker.GesturePointList} pointsList\n     *     The GesturePointList to track the pointer in.\n     * @param {OpenSeadragon.MouseTracker.GesturePoint} gPoint\n     *      Gesture point to track.\n     * @returns {Number} Number of gesture points in pointsList.\n     */\n    function startTrackingPointer( pointsList, gPoint ) {\n\n        // If isPrimary is not known for the pointer then set it according to our rules:\n        //    true if the first pointer in the gesture, otherwise false\n        if ( !gPoint.hasOwnProperty( 'isPrimary' ) ) {\n            if ( pointsList.getLength() === 0 ) {\n                gPoint.isPrimary = true;\n            } else {\n                gPoint.isPrimary = false;\n            }\n        }\n        gPoint.speed = 0;\n        gPoint.direction = 0;\n        gPoint.contactPos = gPoint.currentPos;\n        gPoint.contactTime = gPoint.currentTime;\n        gPoint.lastPos = gPoint.currentPos;\n        gPoint.lastTime = gPoint.currentTime;\n\n        return pointsList.add( gPoint );\n    }\n\n\n    /**\n     * @function\n     * @private\n     * @inner\n     * @param {OpenSeadragon.MouseTracker.GesturePointList} pointsList\n     *     The GesturePointList to stop tracking the pointer on.\n     * @param {OpenSeadragon.MouseTracker.GesturePoint} gPoint\n     *      Gesture point to stop tracking.\n     * @returns {Number} Number of gesture points in pointsList.\n     */\n    function stopTrackingPointer( pointsList, gPoint ) {\n        var listLength,\n            primaryPoint;\n\n        if ( pointsList.getById( gPoint.id ) ) {\n            listLength = pointsList.removeById( gPoint.id );\n\n            // If isPrimary is not known for the pointer and we just removed the primary pointer from the list then we need to set another pointer as primary\n            if ( !gPoint.hasOwnProperty( 'isPrimary' ) ) {\n                primaryPoint = pointsList.getPrimary();\n                if ( !primaryPoint ) {\n                    primaryPoint = pointsList.getByIndex( 0 );\n                    if ( primaryPoint ) {\n                        primaryPoint.isPrimary = true;\n                    }\n                }\n            }\n        } else {\n            listLength = pointsList.getLength();\n        }\n\n        return listLength;\n    }\n\n\n    /**\n     * @function\n     * @private\n     * @inner\n     * @param {OpenSeadragon.MouseTracker} tracker\n     *     A reference to the MouseTracker instance.\n     * @param {Object} event\n     *     A reference to the originating DOM event.\n     * @param {Array.<OpenSeadragon.MouseTracker.GesturePoint>} gPoints\n     *      Gesture points associated with the event.\n     */\n    function updatePointersEnter( tracker, event, gPoints ) {\n        var pointsList = tracker.getActivePointersListByType( gPoints[ 0 ].type ),\n            i,\n            gPointCount = gPoints.length,\n            curGPoint,\n            updateGPoint,\n            propagate;\n\n        for ( i = 0; i < gPointCount; i++ ) {\n            curGPoint = gPoints[ i ];\n            updateGPoint = pointsList.getById( curGPoint.id );\n\n            if ( updateGPoint ) {\n                // Already tracking the pointer...update it\n                updateGPoint.insideElement = true;\n                updateGPoint.lastPos = updateGPoint.currentPos;\n                updateGPoint.lastTime = updateGPoint.currentTime;\n                updateGPoint.currentPos = curGPoint.currentPos;\n                updateGPoint.currentTime = curGPoint.currentTime;\n\n                curGPoint = updateGPoint;\n            } else {\n                // Initialize for tracking and add to the tracking list\n                curGPoint.captured = false;\n                curGPoint.insideElementPressed = false;\n                curGPoint.insideElement = true;\n                startTrackingPointer( pointsList, curGPoint );\n            }\n\n            // Enter\n            if ( tracker.enterHandler ) {\n                propagate = tracker.enterHandler(\n                    {\n                        eventSource:          tracker,\n                        pointerType:          curGPoint.type,\n                        position:             getPointRelativeToAbsolute( curGPoint.currentPos, tracker.element ),\n                        buttons:              pointsList.buttons,\n                        pointers:             tracker.getActivePointerCount(),\n                        insideElementPressed: curGPoint.insideElementPressed,\n                        buttonDownAny:        pointsList.buttons !== 0,\n                        isTouchEvent:         curGPoint.type === 'touch',\n                        originalEvent:        event,\n                        preventDefaultAction: false,\n                        userData:             tracker.userData\n                    }\n                );\n                if ( propagate === false ) {\n                    $.cancelEvent( event );\n                }\n            }\n        }\n    }\n\n\n    /**\n     * @function\n     * @private\n     * @inner\n     * @param {OpenSeadragon.MouseTracker} tracker\n     *     A reference to the MouseTracker instance.\n     * @param {Object} event\n     *     A reference to the originating DOM event.\n     * @param {Array.<OpenSeadragon.MouseTracker.GesturePoint>} gPoints\n     *      Gesture points associated with the event.\n     */\n    function updatePointersExit( tracker, event, gPoints ) {\n        var delegate = THIS[ tracker.hash ],\n            pointsList = tracker.getActivePointersListByType( gPoints[ 0 ].type ),\n            i,\n            gPointCount = gPoints.length,\n            curGPoint,\n            updateGPoint,\n            propagate;\n\n        for ( i = 0; i < gPointCount; i++ ) {\n            curGPoint = gPoints[ i ];\n            updateGPoint = pointsList.getById( curGPoint.id );\n\n            if ( updateGPoint ) {\n                // Already tracking the pointer. If captured then update it, else stop tracking it\n                if ( updateGPoint.captured ) {\n                    updateGPoint.insideElement = false;\n                    updateGPoint.lastPos = updateGPoint.currentPos;\n                    updateGPoint.lastTime = updateGPoint.currentTime;\n                    updateGPoint.currentPos = curGPoint.currentPos;\n                    updateGPoint.currentTime = curGPoint.currentTime;\n                } else {\n                    stopTrackingPointer( pointsList, updateGPoint );\n                }\n\n                curGPoint = updateGPoint;\n            }\n\n            // Exit\n            if ( tracker.exitHandler ) {\n                propagate = tracker.exitHandler(\n                    {\n                        eventSource:          tracker,\n                        pointerType:          curGPoint.type,\n                        position:             getPointRelativeToAbsolute( curGPoint.currentPos, tracker.element ),\n                        buttons:              pointsList.buttons,\n                        pointers:             tracker.getActivePointerCount(),\n                        insideElementPressed: updateGPoint ? updateGPoint.insideElementPressed : false,\n                        buttonDownAny:        pointsList.buttons !== 0,\n                        isTouchEvent:         curGPoint.type === 'touch',\n                        originalEvent:        event,\n                        preventDefaultAction: false,\n                        userData:             tracker.userData\n                    }\n                );\n\n                if ( propagate === false ) {\n                    $.cancelEvent( event );\n                }\n            }\n        }\n    }\n\n\n    /**\n     * @function\n     * @private\n     * @inner\n     * @param {OpenSeadragon.MouseTracker} tracker\n     *     A reference to the MouseTracker instance.\n     * @param {Object} event\n     *     A reference to the originating DOM event.\n     * @param {Array.<OpenSeadragon.MouseTracker.GesturePoint>} gPoints\n     *      Gesture points associated with the event.\n     * @param {Number} buttonChanged\n     *      The button involved in the event: -1: none, 0: primary/left, 1: aux/middle, 2: secondary/right, 3: X1/back, 4: X2/forward, 5: pen eraser.\n     *      Note on chorded button presses (a button pressed when another button is already pressed): In the W3C Pointer Events model,\n     *      only one pointerdown/pointerup event combo is fired. Chorded button state changes instead fire pointermove events.\n     *\n     * @returns {Boolean} True if pointers should be captured to the tracked element, otherwise false.\n     */\n    function updatePointersDown( tracker, event, gPoints, buttonChanged ) {\n        var delegate = THIS[ tracker.hash ],\n            propagate,\n            pointsList = tracker.getActivePointersListByType( gPoints[ 0 ].type ),\n            i,\n            gPointCount = gPoints.length,\n            curGPoint,\n            updateGPoint;\n\n        if ( typeof event.buttons !== 'undefined' ) {\n            pointsList.buttons = event.buttons;\n        } else {\n            if ( $.Browser.vendor === $.BROWSERS.IE && $.Browser.version < 9 ) {\n                if ( buttonChanged === 0 ) {\n                    // Primary\n                    pointsList.buttons += 1;\n                } else if ( buttonChanged === 1 ) {\n                    // Aux\n                    pointsList.buttons += 4;\n                } else if ( buttonChanged === 2 ) {\n                    // Secondary\n                    pointsList.buttons += 2;\n                } else if ( buttonChanged === 3 ) {\n                    // X1 (Back)\n                    pointsList.buttons += 8;\n                } else if ( buttonChanged === 4 ) {\n                    // X2 (Forward)\n                    pointsList.buttons += 16;\n                } else if ( buttonChanged === 5 ) {\n                    // Pen Eraser\n                    pointsList.buttons += 32;\n                }\n            } else {\n                if ( buttonChanged === 0 ) {\n                    // Primary\n                    pointsList.buttons |= 1;\n                } else if ( buttonChanged === 1 ) {\n                    // Aux\n                    pointsList.buttons |= 4;\n                } else if ( buttonChanged === 2 ) {\n                    // Secondary\n                    pointsList.buttons |= 2;\n                } else if ( buttonChanged === 3 ) {\n                    // X1 (Back)\n                    pointsList.buttons |= 8;\n                } else if ( buttonChanged === 4 ) {\n                    // X2 (Forward)\n                    pointsList.buttons |= 16;\n                } else if ( buttonChanged === 5 ) {\n                    // Pen Eraser\n                    pointsList.buttons |= 32;\n                }\n            }\n        }\n\n        // Only capture and track primary button, pen, and touch contacts\n        if ( buttonChanged !== 0 ) {\n            // Aux Press\n            if ( tracker.nonPrimaryPressHandler ) {\n                propagate = tracker.nonPrimaryPressHandler(\n                    {\n                        eventSource:          tracker,\n                        pointerType:          gPoints[ 0 ].type,\n                        position:             getPointRelativeToAbsolute( gPoints[ 0 ].currentPos, tracker.element ),\n                        button:               buttonChanged,\n                        buttons:              pointsList.buttons,\n                        isTouchEvent:         gPoints[ 0 ].type === 'touch',\n                        originalEvent:        event,\n                        preventDefaultAction: false,\n                        userData:             tracker.userData\n                    }\n                );\n                if ( propagate === false ) {\n                    $.cancelEvent( event );\n                }\n            }\n\n            return false;\n        }\n\n        for ( i = 0; i < gPointCount; i++ ) {\n            curGPoint = gPoints[ i ];\n            updateGPoint = pointsList.getById( curGPoint.id );\n\n            if ( updateGPoint ) {\n                // Already tracking the pointer...update it\n                updateGPoint.captured = true;\n                updateGPoint.insideElementPressed = true;\n                updateGPoint.insideElement = true;\n                updateGPoint.contactPos = curGPoint.currentPos;\n                updateGPoint.contactTime = curGPoint.currentTime;\n                updateGPoint.lastPos = updateGPoint.currentPos;\n                updateGPoint.lastTime = updateGPoint.currentTime;\n                updateGPoint.currentPos = curGPoint.currentPos;\n                updateGPoint.currentTime = curGPoint.currentTime;\n\n                curGPoint = updateGPoint;\n            } else {\n                // Initialize for tracking and add to the tracking list (no pointerover or pointermove event occurred before this)\n                curGPoint.captured = true;\n                curGPoint.insideElementPressed = true;\n                curGPoint.insideElement = true;\n                startTrackingPointer( pointsList, curGPoint );\n            }\n\n            pointsList.contacts++;\n            //$.console.log('contacts++ ', pointsList.contacts);\n\n            if ( tracker.dragHandler || tracker.dragEndHandler || tracker.pinchHandler ) {\n                $.MouseTracker.gesturePointVelocityTracker.addPoint( tracker, curGPoint );\n            }\n\n            if ( pointsList.contacts === 1 ) {\n                // Press\n                if ( tracker.pressHandler ) {\n                    propagate = tracker.pressHandler(\n                        {\n                            eventSource:          tracker,\n                            pointerType:          curGPoint.type,\n                            position:             getPointRelativeToAbsolute( curGPoint.contactPos, tracker.element ),\n                            buttons:              pointsList.buttons,\n                            isTouchEvent:         curGPoint.type === 'touch',\n                            originalEvent:        event,\n                            preventDefaultAction: false,\n                            userData:             tracker.userData\n                        }\n                    );\n                    if ( propagate === false ) {\n                        $.cancelEvent( event );\n                    }\n                }\n            } else if ( pointsList.contacts === 2 ) {\n                if ( tracker.pinchHandler && curGPoint.type === 'touch' ) {\n                    // Initialize for pinch\n                    delegate.pinchGPoints = pointsList.asArray();\n                    delegate.lastPinchDist = delegate.currentPinchDist = delegate.pinchGPoints[ 0 ].currentPos.distanceTo( delegate.pinchGPoints[ 1 ].currentPos );\n                    delegate.lastPinchCenter = delegate.currentPinchCenter = getCenterPoint( delegate.pinchGPoints[ 0 ].currentPos, delegate.pinchGPoints[ 1 ].currentPos );\n                }\n            }\n        }\n\n        return true;\n    }\n\n\n    /**\n     * @function\n     * @private\n     * @inner\n     * @param {OpenSeadragon.MouseTracker} tracker\n     *     A reference to the MouseTracker instance.\n     * @param {Object} event\n     *     A reference to the originating DOM event.\n     * @param {Array.<OpenSeadragon.MouseTracker.GesturePoint>} gPoints\n     *      Gesture points associated with the event.\n     * @param {Number} buttonChanged\n     *      The button involved in the event: -1: none, 0: primary/left, 1: aux/middle, 2: secondary/right, 3: X1/back, 4: X2/forward, 5: pen eraser.\n     *      Note on chorded button presses (a button pressed when another button is already pressed): In the W3C Pointer Events model,\n     *      only one pointerdown/pointerup event combo is fired. Chorded button state changes instead fire pointermove events.\n     *\n     * @returns {Boolean} True if pointer capture should be released from the tracked element, otherwise false.\n     */\n    function updatePointersUp( tracker, event, gPoints, buttonChanged ) {\n        var delegate = THIS[ tracker.hash ],\n            pointsList = tracker.getActivePointersListByType( gPoints[ 0 ].type ),\n            propagate,\n            insideElementReleased,\n            releasePoint,\n            releaseTime,\n            i,\n            gPointCount = gPoints.length,\n            curGPoint,\n            updateGPoint,\n            releaseCapture = false,\n            wasCaptured = false,\n            quick;\n\n        if ( typeof event.buttons !== 'undefined' ) {\n            pointsList.buttons = event.buttons;\n        } else {\n            if ( $.Browser.vendor === $.BROWSERS.IE && $.Browser.version < 9 ) {\n                if ( buttonChanged === 0 ) {\n                    // Primary\n                    pointsList.buttons -= 1;\n                } else if ( buttonChanged === 1 ) {\n                    // Aux\n                    pointsList.buttons -= 4;\n                } else if ( buttonChanged === 2 ) {\n                    // Secondary\n                    pointsList.buttons -= 2;\n                } else if ( buttonChanged === 3 ) {\n                    // X1 (Back)\n                    pointsList.buttons -= 8;\n                } else if ( buttonChanged === 4 ) {\n                    // X2 (Forward)\n                    pointsList.buttons -= 16;\n                } else if ( buttonChanged === 5 ) {\n                    // Pen Eraser\n                    pointsList.buttons -= 32;\n                }\n            } else {\n                if ( buttonChanged === 0 ) {\n                    // Primary\n                    pointsList.buttons ^= ~1;\n                } else if ( buttonChanged === 1 ) {\n                    // Aux\n                    pointsList.buttons ^= ~4;\n                } else if ( buttonChanged === 2 ) {\n                    // Secondary\n                    pointsList.buttons ^= ~2;\n                } else if ( buttonChanged === 3 ) {\n                    // X1 (Back)\n                    pointsList.buttons ^= ~8;\n                } else if ( buttonChanged === 4 ) {\n                    // X2 (Forward)\n                    pointsList.buttons ^= ~16;\n                } else if ( buttonChanged === 5 ) {\n                    // Pen Eraser\n                    pointsList.buttons ^= ~32;\n                }\n            }\n        }\n\n        // Only capture and track primary button, pen, and touch contacts\n        if ( buttonChanged !== 0 ) {\n            // Aux Release\n            if ( tracker.nonPrimaryReleaseHandler ) {\n                propagate = tracker.nonPrimaryReleaseHandler(\n                    {\n                        eventSource:           tracker,\n                        pointerType:           gPoints[ 0 ].type,\n                        position:              getPointRelativeToAbsolute(  gPoints[ 0 ].currentPos, tracker.element ),\n                        button:                buttonChanged,\n                        buttons:               pointsList.buttons,\n                        isTouchEvent:          gPoints[ 0 ].type === 'touch',\n                        originalEvent:         event,\n                        preventDefaultAction:  false,\n                        userData:              tracker.userData\n                    }\n                );\n                if ( propagate === false ) {\n                    $.cancelEvent( event );\n                }\n            }\n\n            return false;\n        }\n\n        for ( i = 0; i < gPointCount; i++ ) {\n            curGPoint = gPoints[ i ];\n            updateGPoint = pointsList.getById( curGPoint.id );\n\n            if ( updateGPoint ) {\n                // Update the pointer, stop tracking it if not still in this element\n                if ( updateGPoint.captured ) {\n                    updateGPoint.captured = false;\n                    releaseCapture = true;\n                    wasCaptured = true;\n                }\n                updateGPoint.lastPos = updateGPoint.currentPos;\n                updateGPoint.lastTime = updateGPoint.currentTime;\n                updateGPoint.currentPos = curGPoint.currentPos;\n                updateGPoint.currentTime = curGPoint.currentTime;\n                if ( !updateGPoint.insideElement ) {\n                    stopTrackingPointer( pointsList, updateGPoint );\n                }\n\n                releasePoint = updateGPoint.currentPos;\n                releaseTime = updateGPoint.currentTime;\n\n                if ( wasCaptured ) {\n                    // Pointer was activated in our element but could have been removed in any element since events are captured to our element\n\n                    pointsList.contacts--;\n                    //$.console.log('contacts-- ', pointsList.contacts);\n\n                    if ( tracker.dragHandler || tracker.dragEndHandler || tracker.pinchHandler ) {\n                        $.MouseTracker.gesturePointVelocityTracker.removePoint( tracker, updateGPoint );\n                    }\n\n                    if ( pointsList.contacts === 0 ) {\n\n                        // Release (pressed in our element)\n                        if ( tracker.releaseHandler ) {\n                            propagate = tracker.releaseHandler(\n                                {\n                                    eventSource:           tracker,\n                                    pointerType:           updateGPoint.type,\n                                    position:              getPointRelativeToAbsolute( releasePoint, tracker.element ),\n                                    buttons:               pointsList.buttons,\n                                    insideElementPressed:  updateGPoint.insideElementPressed,\n                                    insideElementReleased: updateGPoint.insideElement,\n                                    isTouchEvent:          updateGPoint.type === 'touch',\n                                    originalEvent:         event,\n                                    preventDefaultAction:  false,\n                                    userData:              tracker.userData\n                                }\n                            );\n                            if ( propagate === false ) {\n                                $.cancelEvent( event );\n                            }\n                        }\n\n                        // Drag End\n                        if ( tracker.dragEndHandler && !updateGPoint.currentPos.equals( updateGPoint.contactPos ) ) {\n                            propagate = tracker.dragEndHandler(\n                                {\n                                    eventSource:          tracker,\n                                    pointerType:          updateGPoint.type,\n                                    position:             getPointRelativeToAbsolute( updateGPoint.currentPos, tracker.element ),\n                                    speed:                updateGPoint.speed,\n                                    direction:            updateGPoint.direction,\n                                    shift:                event.shiftKey,\n                                    isTouchEvent:         updateGPoint.type === 'touch',\n                                    originalEvent:        event,\n                                    preventDefaultAction: false,\n                                    userData:             tracker.userData\n                                }\n                            );\n                            if ( propagate === false ) {\n                                $.cancelEvent( event );\n                            }\n                        }\n\n                        // Click / Double-Click\n                        if ( ( tracker.clickHandler || tracker.dblClickHandler ) && updateGPoint.insideElement ) {\n                            quick = releaseTime - updateGPoint.contactTime <= tracker.clickTimeThreshold &&\n                                            updateGPoint.contactPos.distanceTo( releasePoint ) <= tracker.clickDistThreshold;\n\n                            // Click\n                            if ( tracker.clickHandler ) {\n                                propagate = tracker.clickHandler(\n                                    {\n                                        eventSource:          tracker,\n                                        pointerType:          updateGPoint.type,\n                                        position:             getPointRelativeToAbsolute( updateGPoint.currentPos, tracker.element ),\n                                        quick:                quick,\n                                        shift:                event.shiftKey,\n                                        isTouchEvent:         updateGPoint.type === 'touch',\n                                        originalEvent:        event,\n                                        preventDefaultAction: false,\n                                        userData:             tracker.userData\n                                    }\n                                );\n                                if ( propagate === false ) {\n                                    $.cancelEvent( event );\n                                }\n                            }\n\n                            // Double-Click\n                            if ( tracker.dblClickHandler && quick ) {\n                                pointsList.clicks++;\n                                if ( pointsList.clicks === 1 ) {\n                                    delegate.lastClickPos = releasePoint;\n                                    /*jshint loopfunc:true*/\n                                    delegate.dblClickTimeOut = setTimeout( function() {\n                                        pointsList.clicks = 0;\n                                    }, tracker.dblClickTimeThreshold );\n                                    /*jshint loopfunc:false*/\n                                } else if ( pointsList.clicks === 2 ) {\n                                    clearTimeout( delegate.dblClickTimeOut );\n                                    pointsList.clicks = 0;\n                                    if ( delegate.lastClickPos.distanceTo( releasePoint ) <= tracker.dblClickDistThreshold ) {\n                                        propagate = tracker.dblClickHandler(\n                                            {\n                                                eventSource:          tracker,\n                                                pointerType:          updateGPoint.type,\n                                                position:             getPointRelativeToAbsolute( updateGPoint.currentPos, tracker.element ),\n                                                shift:                event.shiftKey,\n                                                isTouchEvent:         updateGPoint.type === 'touch',\n                                                originalEvent:        event,\n                                                preventDefaultAction: false,\n                                                userData:             tracker.userData\n                                            }\n                                        );\n                                        if ( propagate === false ) {\n                                            $.cancelEvent( event );\n                                        }\n                                    }\n                                    delegate.lastClickPos = null;\n                                }\n                            }\n                        }\n                    } else if ( pointsList.contacts === 2 ) {\n                        if ( tracker.pinchHandler && updateGPoint.type === 'touch' ) {\n                            // Reset for pinch\n                            delegate.pinchGPoints = pointsList.asArray();\n                            delegate.lastPinchDist = delegate.currentPinchDist = delegate.pinchGPoints[ 0 ].currentPos.distanceTo( delegate.pinchGPoints[ 1 ].currentPos );\n                            delegate.lastPinchCenter = delegate.currentPinchCenter = getCenterPoint( delegate.pinchGPoints[ 0 ].currentPos, delegate.pinchGPoints[ 1 ].currentPos );\n                        }\n                    }\n                } else {\n                    // Pointer was activated in another element but removed in our element\n\n                    // Release (pressed in another element)\n                    if ( tracker.releaseHandler ) {\n                        propagate = tracker.releaseHandler(\n                            {\n                                eventSource:           tracker,\n                                pointerType:           updateGPoint.type,\n                                position:              getPointRelativeToAbsolute( releasePoint, tracker.element ),\n                                buttons:               pointsList.buttons,\n                                insideElementPressed:  updateGPoint.insideElementPressed,\n                                insideElementReleased: updateGPoint.insideElement,\n                                isTouchEvent:          updateGPoint.type === 'touch',\n                                originalEvent:         event,\n                                preventDefaultAction:  false,\n                                userData:              tracker.userData\n                            }\n                        );\n                        if ( propagate === false ) {\n                            $.cancelEvent( event );\n                        }\n                    }\n                }\n            }\n        }\n\n        return releaseCapture;\n    }\n\n\n    /**\n     * Call when pointer(s) change coordinates, button state, pressure, tilt, or contact geometry (e.g. width and height)\n     *\n     * @function\n     * @private\n     * @inner\n     * @param {OpenSeadragon.MouseTracker} tracker\n     *     A reference to the MouseTracker instance.\n     * @param {Object} event\n     *     A reference to the originating DOM event.\n     * @param {Array.<OpenSeadragon.MouseTracker.GesturePoint>} gPoints\n     *      Gesture points associated with the event.\n     */\n    function updatePointersMove( tracker, event, gPoints ) {\n        var delegate = THIS[ tracker.hash ],\n            pointsList = tracker.getActivePointersListByType( gPoints[ 0 ].type ),\n            i,\n            gPointCount = gPoints.length,\n            curGPoint,\n            updateGPoint,\n            gPointArray,\n            delta,\n            propagate;\n\n        if ( typeof event.buttons !== 'undefined' ) {\n            pointsList.buttons = event.buttons;\n        }\n\n        for ( i = 0; i < gPointCount; i++ ) {\n            curGPoint = gPoints[ i ];\n            updateGPoint = pointsList.getById( curGPoint.id );\n\n            if ( updateGPoint ) {\n                // Already tracking the pointer...update it\n                if ( curGPoint.hasOwnProperty( 'isPrimary' ) ) {\n                    updateGPoint.isPrimary = curGPoint.isPrimary;\n                }\n                updateGPoint.lastPos = updateGPoint.currentPos;\n                updateGPoint.lastTime = updateGPoint.currentTime;\n                updateGPoint.currentPos = curGPoint.currentPos;\n                updateGPoint.currentTime = curGPoint.currentTime;\n            } else {\n                // Initialize for tracking and add to the tracking list (no pointerover or pointerdown event occurred before this)\n                curGPoint.captured = false;\n                curGPoint.insideElementPressed = false;\n                curGPoint.insideElement = true;\n                startTrackingPointer( pointsList, curGPoint );\n            }\n        }\n\n        // Stop (mouse only)\n        if ( tracker.stopHandler && gPoints[ 0 ].type === 'mouse' ) {\n            clearTimeout( tracker.stopTimeOut );\n            tracker.stopTimeOut = setTimeout( function() {\n                handlePointerStop( tracker, event, gPoints[ 0 ].type );\n            }, tracker.stopDelay );\n        }\n\n        if ( pointsList.contacts === 0 ) {\n            // Move (no contacts: hovering mouse or other hover-capable device)\n            if ( tracker.moveHandler ) {\n                propagate = tracker.moveHandler(\n                    {\n                        eventSource:          tracker,\n                        pointerType:          gPoints[ 0 ].type,\n                        position:             getPointRelativeToAbsolute( gPoints[ 0 ].currentPos, tracker.element ),\n                        buttons:              pointsList.buttons,\n                        isTouchEvent:         gPoints[ 0 ].type === 'touch',\n                        originalEvent:        event,\n                        preventDefaultAction: false,\n                        userData:             tracker.userData\n                    }\n                );\n                if ( propagate === false ) {\n                    $.cancelEvent( event );\n                }\n            }\n        } else if ( pointsList.contacts === 1 ) {\n            // Move (1 contact)\n            if ( tracker.moveHandler ) {\n                updateGPoint = pointsList.asArray()[ 0 ];\n                propagate = tracker.moveHandler(\n                    {\n                        eventSource:          tracker,\n                        pointerType:          updateGPoint.type,\n                        position:             getPointRelativeToAbsolute( updateGPoint.currentPos, tracker.element ),\n                        buttons:              pointsList.buttons,\n                        isTouchEvent:         updateGPoint.type === 'touch',\n                        originalEvent:        event,\n                        preventDefaultAction: false,\n                        userData:             tracker.userData\n                    }\n                );\n                if ( propagate === false ) {\n                    $.cancelEvent( event );\n                }\n            }\n\n            // Drag\n            if ( tracker.dragHandler ) {\n                updateGPoint = pointsList.asArray()[ 0 ];\n                delta = updateGPoint.currentPos.minus( updateGPoint.lastPos );\n                propagate = tracker.dragHandler(\n                    {\n                        eventSource:          tracker,\n                        pointerType:          updateGPoint.type,\n                        position:             getPointRelativeToAbsolute( updateGPoint.currentPos, tracker.element ),\n                        buttons:              pointsList.buttons,\n                        delta:                delta,\n                        speed:                updateGPoint.speed,\n                        direction:            updateGPoint.direction,\n                        shift:                event.shiftKey,\n                        isTouchEvent:         updateGPoint.type === 'touch',\n                        originalEvent:        event,\n                        preventDefaultAction: false,\n                        userData:             tracker.userData\n                    }\n                );\n                if ( propagate === false ) {\n                    $.cancelEvent( event );\n                }\n            }\n        } else if ( pointsList.contacts === 2 ) {\n            // Move (2 contacts, use center)\n            if ( tracker.moveHandler ) {\n                gPointArray = pointsList.asArray();\n                propagate = tracker.moveHandler(\n                    {\n                        eventSource:          tracker,\n                        pointerType:          gPointArray[ 0 ].type,\n                        position:             getPointRelativeToAbsolute( getCenterPoint( gPointArray[ 0 ].currentPos, gPointArray[ 1 ].currentPos ), tracker.element ),\n                        buttons:              pointsList.buttons,\n                        isTouchEvent:         gPointArray[ 0 ].type === 'touch',\n                        originalEvent:        event,\n                        preventDefaultAction: false,\n                        userData:             tracker.userData\n                    }\n                );\n                if ( propagate === false ) {\n                    $.cancelEvent( event );\n                }\n            }\n\n            // Pinch\n            if ( tracker.pinchHandler && gPoints[ 0 ].type === 'touch' ) {\n                delta = delegate.pinchGPoints[ 0 ].currentPos.distanceTo( delegate.pinchGPoints[ 1 ].currentPos );\n                if ( delta != delegate.currentPinchDist ) {\n                    delegate.lastPinchDist = delegate.currentPinchDist;\n                    delegate.currentPinchDist = delta;\n                    delegate.lastPinchCenter = delegate.currentPinchCenter;\n                    delegate.currentPinchCenter = getCenterPoint( delegate.pinchGPoints[ 0 ].currentPos, delegate.pinchGPoints[ 1 ].currentPos );\n                    propagate = tracker.pinchHandler(\n                        {\n                            eventSource:          tracker,\n                            pointerType:          'touch',\n                            gesturePoints:        delegate.pinchGPoints,\n                            lastCenter:           getPointRelativeToAbsolute( delegate.lastPinchCenter, tracker.element ),\n                            center:               getPointRelativeToAbsolute( delegate.currentPinchCenter, tracker.element ),\n                            lastDistance:         delegate.lastPinchDist,\n                            distance:             delegate.currentPinchDist,\n                            shift:                event.shiftKey,\n                            originalEvent:        event,\n                            preventDefaultAction: false,\n                            userData:             tracker.userData\n                        }\n                    );\n                    if ( propagate === false ) {\n                        $.cancelEvent( event );\n                    }\n                }\n            }\n        }\n    }\n\n\n    /**\n     * @function\n     * @private\n     * @inner\n     * @param {OpenSeadragon.MouseTracker} tracker\n     *     A reference to the MouseTracker instance.\n     * @param {Object} event\n     *     A reference to the originating DOM event.\n     * @param {Array.<OpenSeadragon.MouseTracker.GesturePoint>} gPoints\n     *      Gesture points associated with the event.\n     */\n    function updatePointersCancel( tracker, event, gPoints ) {\n        updatePointersUp( tracker, event, gPoints, 0 );\n        updatePointersExit( tracker, event, gPoints );\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function handlePointerStop( tracker, originalMoveEvent, pointerType ) {\n        if ( tracker.stopHandler ) {\n            tracker.stopHandler( {\n                eventSource:          tracker,\n                pointerType:          pointerType,\n                position:             getMouseRelative( originalMoveEvent, tracker.element ),\n                buttons:              tracker.getActivePointersListByType( pointerType ).buttons,\n                isTouchEvent:         pointerType === 'touch',\n                originalEvent:        originalMoveEvent,\n                preventDefaultAction: false,\n                userData:             tracker.userData\n            } );\n        }\n    }\n    \n    // True if inside an iframe, otherwise false.\n    // @member {Boolean} isInIframe\n    // @private\n    // @inner\n    var isInIframe = (function() {\n        try {\n            return window.self !== window.top;\n        } catch (e) {\n            return true;\n        }\n    })();\n \n    // @function\n    // @private\n    // @inner\n    // @returns {Boolean} True if the target has access rights to events, otherwise false.\n    function canAccessEvents (target) {\n        try {\n            return target.addEventListener && target.removeEventListener;\n        } catch (e) {\n            return false;\n        }\n    }\n\n} ( OpenSeadragon ) );\n\n/*\n * OpenSeadragon - Control\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n/**\n * An enumeration of supported locations where controls can be anchored.\n * The anchoring is always relative to the container.\n * @member ControlAnchor\n * @memberof OpenSeadragon\n * @static\n * @type {Object}\n * @property {Number} NONE\n * @property {Number} TOP_LEFT\n * @property {Number} TOP_RIGHT\n * @property {Number} BOTTOM_LEFT\n * @property {Number} BOTTOM_RIGHT\n * @property {Number} ABSOLUTE\n */\n$.ControlAnchor = {\n    NONE: 0,\n    TOP_LEFT: 1,\n    TOP_RIGHT: 2,\n    BOTTOM_RIGHT: 3,\n    BOTTOM_LEFT: 4,\n    ABSOLUTE: 5\n};\n\n/**\n * @class Control\n * @classdesc A Control represents any interface element which is meant to allow the user\n * to interact with the zoomable interface. Any control can be anchored to any\n * element.\n *\n * @memberof OpenSeadragon\n * @param {Element} element - the control element to be anchored in the container.\n * @param {Object } options - All required and optional settings for configuring a control element.\n * @param {OpenSeadragon.ControlAnchor} [options.anchor=OpenSeadragon.ControlAnchor.NONE] - the position of the control\n *  relative to the container.\n * @param {Boolean} [options.attachToViewer=true] - Whether the control should be added directly to the viewer, or\n *  directly to the container\n * @param {Boolean} [options.autoFade=true] - Whether the control should have the autofade behavior\n * @param {Element} container - the element to control will be anchored too.\n */\n$.Control = function ( element, options, container ) {\n    var parent = element.parentNode;\n    if (typeof options === 'number')\n    {\n        $.console.error(\"Passing an anchor directly into the OpenSeadragon.Control constructor is deprecated; \" +\n                        \"please use an options object instead.  \" +\n                        \"Support for this deprecated variant is scheduled for removal in December 2013\");\n         options = {anchor: options};\n    }\n    options.attachToViewer = (typeof options.attachToViewer === 'undefined') ? true : options.attachToViewer;\n    /**\n     * True if the control should have autofade behavior.\n     * @member {Boolean} autoFade\n     * @memberof OpenSeadragon.Control#\n     */\n    this.autoFade = (typeof options.autoFade === 'undefined') ? true : options.autoFade;\n    /**\n     * The element providing the user interface with some type of control (e.g. a zoom-in button).\n     * @member {Element} element\n     * @memberof OpenSeadragon.Control#\n     */\n    this.element    = element;\n    /**\n     * The position of the Control relative to its container.\n     * @member {OpenSeadragon.ControlAnchor} anchor\n     * @memberof OpenSeadragon.Control#\n     */\n    this.anchor     = options.anchor;\n    /**\n     * The Control's containing element.\n     * @member {Element} container\n     * @memberof OpenSeadragon.Control#\n     */\n    this.container  = container;\n    /**\n     * A neutral element surrounding the control element.\n     * @member {Element} wrapper\n     * @memberof OpenSeadragon.Control#\n     */\n    if ( this.anchor == $.ControlAnchor.ABSOLUTE ) {\n        this.wrapper    = $.makeNeutralElement( \"div\" );\n        this.wrapper.style.position = \"absolute\";\n        this.wrapper.style.top = typeof ( options.top )  == \"number\" ? ( options.top + 'px' ) : options.top;\n        this.wrapper.style.left  = typeof ( options.left )  == \"number\" ?  (options.left + 'px' ) : options.left;\n        this.wrapper.style.height = typeof ( options.height )  == \"number\" ? ( options.height + 'px' ) : options.height;\n        this.wrapper.style.width  = typeof ( options.width )  == \"number\" ? ( options.width + 'px' ) : options.width;\n        this.wrapper.style.margin = \"0px\";\n        this.wrapper.style.padding = \"0px\";\n\n        this.element.style.position = \"relative\";\n        this.element.style.top = \"0px\";\n        this.element.style.left = \"0px\";\n        this.element.style.height = \"100%\";\n        this.element.style.width = \"100%\";\n    } else {\n        this.wrapper    = $.makeNeutralElement( \"div\" );\n        this.wrapper.style.display = \"inline-block\";\n        if ( this.anchor == $.ControlAnchor.NONE ) {\n            // IE6 fix\n            this.wrapper.style.width = this.wrapper.style.height = \"100%\";\n        }\n    }\n    this.wrapper.appendChild( this.element );\n\n    if (options.attachToViewer ) {\n        if ( this.anchor == $.ControlAnchor.TOP_RIGHT ||\n             this.anchor == $.ControlAnchor.BOTTOM_RIGHT ) {\n            this.container.insertBefore(\n                this.wrapper,\n                this.container.firstChild\n            );\n        } else {\n            this.container.appendChild( this.wrapper );\n        }\n    } else {\n        parent.appendChild( this.wrapper );\n    }\n};\n\n/** @lends OpenSeadragon.Control.prototype */\n$.Control.prototype = {\n\n    /**\n     * Removes the control from the container.\n     * @function\n     */\n    destroy: function() {\n        this.wrapper.removeChild( this.element );\n        this.container.removeChild( this.wrapper );\n    },\n\n    /**\n     * Determines if the control is currently visible.\n     * @function\n     * @return {Boolean} true if currenly visible, false otherwise.\n     */\n    isVisible: function() {\n        return this.wrapper.style.display != \"none\";\n    },\n\n    /**\n     * Toggles the visibility of the control.\n     * @function\n     * @param {Boolean} visible - true to make visible, false to hide.\n     */\n    setVisible: function( visible ) {\n        this.wrapper.style.display = visible ?\n            ( this.anchor == $.ControlAnchor.ABSOLUTE ? 'block' : 'inline-block' ) :\n            \"none\";\n    },\n\n    /**\n     * Sets the opacity level for the control.\n     * @function\n     * @param {Number} opactiy - a value between 1 and 0 inclusively.\n     */\n    setOpacity: function( opacity ) {\n        if ( this.element[ $.SIGNAL ] && $.Browser.vendor == $.BROWSERS.IE ) {\n            $.setElementOpacity( this.element, opacity, true );\n        } else {\n            $.setElementOpacity( this.wrapper, opacity, true );\n        }\n    }\n};\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - ControlDock\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n    /**\n     * @class ControlDock\n     * @classdesc Provides a container element (a &lt;form&gt; element) with support for the layout of control elements.\n     *\n     * @memberof OpenSeadragon\n     */\n    $.ControlDock = function( options ){\n        var layouts = [ 'topleft', 'topright', 'bottomright', 'bottomleft'],\n            layout,\n            i;\n\n        $.extend( true, this, {\n            id: 'controldock-'+$.now()+'-'+Math.floor(Math.random()*1000000),\n            container: $.makeNeutralElement( 'div' ),\n            controls: []\n        }, options );\n\n        // Disable the form's submit; otherwise button clicks and return keys\n        // can trigger it.\n        this.container.onsubmit = function() {\n            return false;\n        };\n\n        if( this.element ){\n            this.element = $.getElement( this.element );\n            this.element.appendChild( this.container );\n            this.element.style.position = 'relative';\n            this.container.style.width = '100%';\n            this.container.style.height = '100%';\n        }\n\n        for( i = 0; i < layouts.length; i++ ){\n            layout = layouts[ i ];\n            this.controls[ layout ] = $.makeNeutralElement( \"div\" );\n            this.controls[ layout ].style.position = 'absolute';\n            if ( layout.match( 'left' ) ){\n                this.controls[ layout ].style.left = '0px';\n            }\n            if ( layout.match( 'right' ) ){\n                this.controls[ layout ].style.right = '0px';\n            }\n            if ( layout.match( 'top' ) ){\n                this.controls[ layout ].style.top = '0px';\n            }\n            if ( layout.match( 'bottom' ) ){\n                this.controls[ layout ].style.bottom = '0px';\n            }\n        }\n\n        this.container.appendChild( this.controls.topleft );\n        this.container.appendChild( this.controls.topright );\n        this.container.appendChild( this.controls.bottomright );\n        this.container.appendChild( this.controls.bottomleft );\n    };\n\n    /** @lends OpenSeadragon.ControlDock.prototype */\n    $.ControlDock.prototype = {\n\n        /**\n         * @function\n         */\n        addControl: function ( element, controlOptions ) {\n            element = $.getElement( element );\n            var div = null;\n\n            if ( getControlIndex( this, element ) >= 0 ) {\n                return;     // they're trying to add a duplicate control\n            }\n\n            switch ( controlOptions.anchor ) {\n                case $.ControlAnchor.TOP_RIGHT:\n                    div = this.controls.topright;\n                    element.style.position = \"relative\";\n                    element.style.paddingRight = \"0px\";\n                    element.style.paddingTop = \"0px\";\n                    break;\n                case $.ControlAnchor.BOTTOM_RIGHT:\n                    div = this.controls.bottomright;\n                    element.style.position = \"relative\";\n                    element.style.paddingRight = \"0px\";\n                    element.style.paddingBottom = \"0px\";\n                    break;\n                case $.ControlAnchor.BOTTOM_LEFT:\n                    div = this.controls.bottomleft;\n                    element.style.position = \"relative\";\n                    element.style.paddingLeft = \"0px\";\n                    element.style.paddingBottom = \"0px\";\n                    break;\n                case $.ControlAnchor.TOP_LEFT:\n                    div = this.controls.topleft;\n                    element.style.position = \"relative\";\n                    element.style.paddingLeft = \"0px\";\n                    element.style.paddingTop = \"0px\";\n                    break;\n                case $.ControlAnchor.ABSOLUTE:\n                    div = this.container;\n                    element.style.margin = \"0px\";\n                    element.style.padding = \"0px\";\n                    break;\n                default:\n                case $.ControlAnchor.NONE:\n                    div = this.container;\n                    element.style.margin = \"0px\";\n                    element.style.padding = \"0px\";\n                    break;\n            }\n\n            this.controls.push(\n                new $.Control( element, controlOptions, div )\n            );\n            element.style.display = \"inline-block\";\n        },\n\n\n        /**\n         * @function\n         * @return {OpenSeadragon.ControlDock} Chainable.\n         */\n        removeControl: function ( element ) {\n            element = $.getElement( element );\n            var i = getControlIndex( this, element );\n\n            if ( i >= 0 ) {\n                this.controls[ i ].destroy();\n                this.controls.splice( i, 1 );\n            }\n\n            return this;\n        },\n\n        /**\n         * @function\n         * @return {OpenSeadragon.ControlDock} Chainable.\n         */\n        clearControls: function () {\n            while ( this.controls.length > 0 ) {\n                this.controls.pop().destroy();\n            }\n\n            return this;\n        },\n\n\n        /**\n         * @function\n         * @return {Boolean}\n         */\n        areControlsEnabled: function () {\n            var i;\n\n            for ( i = this.controls.length - 1; i >= 0; i-- ) {\n                if ( this.controls[ i ].isVisible() ) {\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n\n        /**\n         * @function\n         * @return {OpenSeadragon.ControlDock} Chainable.\n         */\n        setControlsEnabled: function( enabled ) {\n            var i;\n\n            for ( i = this.controls.length - 1; i >= 0; i-- ) {\n                this.controls[ i ].setVisible( enabled );\n            }\n\n            return this;\n        }\n\n    };\n\n\n    ///////////////////////////////////////////////////////////////////////////////\n    // Utility methods\n    ///////////////////////////////////////////////////////////////////////////////\n    function getControlIndex( dock, element ) {\n        var controls = dock.controls,\n            i;\n\n        for ( i = controls.length - 1; i >= 0; i-- ) {\n            if ( controls[ i ].element == element ) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - Placement\n *\n * Copyright (C) 2010-2016 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function($) {\n\n    /**\n     * An enumeration of positions to anchor an element.\n     * @member Placement\n     * @memberOf OpenSeadragon\n     * @static\n     * @readonly\n     * @property {OpenSeadragon.Placement} CENTER\n     * @property {OpenSeadragon.Placement} TOP_LEFT\n     * @property {OpenSeadragon.Placement} TOP\n     * @property {OpenSeadragon.Placement} TOP_RIGHT\n     * @property {OpenSeadragon.Placement} RIGHT\n     * @property {OpenSeadragon.Placement} BOTTOM_RIGHT\n     * @property {OpenSeadragon.Placement} BOTTOM\n     * @property {OpenSeadragon.Placement} BOTTOM_LEFT\n     * @property {OpenSeadragon.Placement} LEFT\n     */\n    $.Placement = $.freezeObject({\n        CENTER:       0,\n        TOP_LEFT:     1,\n        TOP:          2,\n        TOP_RIGHT:    3,\n        RIGHT:        4,\n        BOTTOM_RIGHT: 5,\n        BOTTOM:       6,\n        BOTTOM_LEFT:  7,\n        LEFT:         8,\n        properties: {\n            0: {\n                isLeft: false,\n                isHorizontallyCentered: true,\n                isRight: false,\n                isTop: false,\n                isVerticallyCentered: true,\n                isBottom: false\n            },\n            1: {\n                isLeft: true,\n                isHorizontallyCentered: false,\n                isRight: false,\n                isTop: true,\n                isVerticallyCentered: false,\n                isBottom: false\n            },\n            2: {\n                isLeft: false,\n                isHorizontallyCentered: true,\n                isRight: false,\n                isTop: true,\n                isVerticallyCentered: false,\n                isBottom: false\n            },\n            3: {\n                isLeft: false,\n                isHorizontallyCentered: false,\n                isRight: true,\n                isTop: true,\n                isVerticallyCentered: false,\n                isBottom: false\n            },\n            4: {\n                isLeft: false,\n                isHorizontallyCentered: false,\n                isRight: true,\n                isTop: false,\n                isVerticallyCentered: true,\n                isBottom: false\n            },\n            5: {\n                isLeft: false,\n                isHorizontallyCentered: false,\n                isRight: true,\n                isTop: false,\n                isVerticallyCentered: false,\n                isBottom: true\n            },\n            6: {\n                isLeft: false,\n                isHorizontallyCentered: true,\n                isRight: false,\n                isTop: false,\n                isVerticallyCentered: false,\n                isBottom: true\n            },\n            7: {\n                isLeft: true,\n                isHorizontallyCentered: false,\n                isRight: false,\n                isTop: false,\n                isVerticallyCentered: false,\n                isBottom: true\n            },\n            8: {\n                isLeft: true,\n                isHorizontallyCentered: false,\n                isRight: false,\n                isTop: false,\n                isVerticallyCentered: true,\n                isBottom: false\n            }\n        }\n    });\n\n}(OpenSeadragon));\n\n/*\n * OpenSeadragon - Viewer\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n// dictionary from hash to private properties\nvar THIS = {};\nvar nextHash = 1;\n\n/**\n *\n * The main point of entry into creating a zoomable image on the page.<br>\n * <br>\n * We have provided an idiomatic javascript constructor which takes\n * a single object, but still support the legacy positional arguments.<br>\n * <br>\n * The options below are given in order that they appeared in the constructor\n * as arguments and we translate a positional call into an idiomatic call.<br>\n * <br>\n * To create a viewer, you can use either of this methods:<br>\n * <ul>\n * <li><code>var viewer = new OpenSeadragon.Viewer(options);</code></li>\n * <li><code>var viewer = OpenSeadragon(options);</code></li>\n * </ul>\n * @class Viewer\n * @classdesc The main OpenSeadragon viewer class.\n *\n * @memberof OpenSeadragon\n * @extends OpenSeadragon.EventSource\n * @extends OpenSeadragon.ControlDock\n * @param {OpenSeadragon.Options} options - Viewer options.\n *\n **/\n$.Viewer = function( options ) {\n\n    var args  = arguments,\n        _this = this,\n        i;\n\n\n    //backward compatibility for positional args while prefering more\n    //idiomatic javascript options object as the only argument\n    if( !$.isPlainObject( options ) ){\n        options = {\n            id:                 args[ 0 ],\n            xmlPath:            args.length > 1 ? args[ 1 ] : undefined,\n            prefixUrl:          args.length > 2 ? args[ 2 ] : undefined,\n            controls:           args.length > 3 ? args[ 3 ] : undefined,\n            overlays:           args.length > 4 ? args[ 4 ] : undefined\n        };\n    }\n\n    //options.config and the general config argument are deprecated\n    //in favor of the more direct specification of optional settings\n    //being pass directly on the options object\n    if ( options.config ){\n        $.extend( true, options, options.config );\n        delete options.config;\n    }\n\n    //Public properties\n    //Allow the options object to override global defaults\n    $.extend( true, this, {\n\n        //internal state and dom identifiers\n        id:             options.id,\n        hash:           options.hash || nextHash++,\n\n        //dom nodes\n        /**\n         * The parent element of this Viewer instance, passed in when the Viewer was created.\n         * @member {Element} element\n         * @memberof OpenSeadragon.Viewer#\n         */\n        element:        null,\n        /**\n         * A &lt;div&gt; element (provided by {@link OpenSeadragon.ControlDock}), the base element of this Viewer instance.<br><br>\n         * Child element of {@link OpenSeadragon.Viewer#element}.\n         * @member {Element} container\n         * @memberof OpenSeadragon.Viewer#\n         */\n        container:      null,\n        /**\n         * A &lt;div&gt; element, the element where user-input events are handled for panning and zooming.<br><br>\n         * Child element of {@link OpenSeadragon.Viewer#container},\n         * positioned on top of {@link OpenSeadragon.Viewer#keyboardCommandArea}.<br><br>\n         * The parent of {@link OpenSeadragon.Drawer#canvas} instances.\n         * @member {Element} canvas\n         * @memberof OpenSeadragon.Viewer#\n         */\n        canvas:         null,\n\n        // Overlays list. An overlay allows to add html on top of the viewer.\n        overlays:           [],\n        // Container inside the canvas where overlays are drawn.\n        overlaysContainer:  null,\n\n        //private state properties\n        previousBody:   [],\n\n        //This was originally initialized in the constructor and so could never\n        //have anything in it.  now it can because we allow it to be specified\n        //in the options and is only empty by default if not specified. Also\n        //this array was returned from get_controls which I find confusing\n        //since this object has a controls property which is treated in other\n        //functions like clearControls.  I'm removing the accessors.\n        customControls: [],\n\n        //These are originally not part options but declared as members\n        //in initialize.  It's still considered idiomatic to put them here\n        source:         null,\n        /**\n         * Handles rendering of tiles in the viewer. Created for each TileSource opened.\n         * @member {OpenSeadragon.Drawer} drawer\n         * @memberof OpenSeadragon.Viewer#\n         */\n        drawer:             null,\n        world:              null,\n        /**\n         * Handles coordinate-related functionality - zoom, pan, rotation, etc. Created for each TileSource opened.\n         * @member {OpenSeadragon.Viewport} viewport\n         * @memberof OpenSeadragon.Viewer#\n         */\n        viewport:       null,\n        /**\n         * @member {OpenSeadragon.Navigator} navigator\n         * @memberof OpenSeadragon.Viewer#\n         */\n        navigator:      null,\n\n        //A collection viewport is a separate viewport used to provide\n        //simultaneous rendering of sets of tiles\n        collectionViewport:     null,\n        collectionDrawer:       null,\n\n        //UI image resources\n        //TODO: rename navImages to uiImages\n        navImages:      null,\n\n        //interface button controls\n        buttons:        null,\n\n        //TODO: this is defunct so safely remove it\n        profiler:       null\n\n    }, $.DEFAULT_SETTINGS, options );\n\n    if ( typeof( this.hash) === \"undefined\" ) {\n        throw new Error(\"A hash must be defined, either by specifying options.id or options.hash.\");\n    }\n    if ( typeof( THIS[ this.hash ] ) !== \"undefined\" ) {\n        // We don't want to throw an error here, as the user might have discarded\n        // the previous viewer with the same hash and now want to recreate it.\n        $.console.warn(\"Hash \" + this.hash + \" has already been used.\");\n    }\n\n    //Private state properties\n    THIS[ this.hash ] = {\n        \"fsBoundsDelta\":     new $.Point( 1, 1 ),\n        \"prevContainerSize\": null,\n        \"animating\":         false,\n        \"forceRedraw\":       false,\n        \"mouseInside\":       false,\n        \"group\":             null,\n        // whether we should be continuously zooming\n        \"zooming\":           false,\n        // how much we should be continuously zooming by\n        \"zoomFactor\":        null,\n        \"lastZoomTime\":      null,\n        \"fullPage\":          false,\n        \"onfullscreenchange\": null\n    };\n\n    this._sequenceIndex = 0;\n    this._firstOpen = true;\n    this._updateRequestId = null;\n    this._loadQueue = [];\n    this.currentOverlays = [];\n\n    this._lastScrollTime = $.now(); // variable used to help normalize the scroll event speed of different devices\n\n    //Inherit some behaviors and properties\n    $.EventSource.call( this );\n\n    this.addHandler( 'open-failed', function ( event ) {\n        var msg = $.getString( \"Errors.OpenFailed\", event.eventSource, event.message);\n        _this._showMessage( msg );\n    });\n\n    $.ControlDock.call( this, options );\n\n    //Deal with tile sources\n    if ( this.xmlPath  ){\n        //Deprecated option.  Now it is preferred to use the tileSources option\n        this.tileSources = [ this.xmlPath ];\n    }\n\n    this.element              = this.element || document.getElementById( this.id );\n    this.canvas               = $.makeNeutralElement( \"div\" );\n\n    this.canvas.className = \"openseadragon-canvas\";\n    (function( style ){\n        style.width    = \"100%\";\n        style.height   = \"100%\";\n        style.overflow = \"hidden\";\n        style.position = \"absolute\";\n        style.top      = \"0px\";\n        style.left     = \"0px\";\n    }(this.canvas.style));\n    $.setElementTouchActionNone( this.canvas );\n    if (options.tabIndex !== \"\") {\n        this.canvas.tabIndex = (options.tabIndex === undefined ? 0 : options.tabIndex);\n    }\n\n    //the container is created through applying the ControlDock constructor above\n    this.container.className = \"openseadragon-container\";\n    (function( style ){\n        style.width     = \"100%\";\n        style.height    = \"100%\";\n        style.position  = \"relative\";\n        style.overflow  = \"hidden\";\n        style.left      = \"0px\";\n        style.top       = \"0px\";\n        style.textAlign = \"left\";  // needed to protect against\n    }( this.container.style ));\n\n    this.container.insertBefore( this.canvas, this.container.firstChild );\n    this.element.appendChild( this.container );\n\n    //Used for toggling between fullscreen and default container size\n    //TODO: these can be closure private and shared across Viewer\n    //      instances.\n    this.bodyWidth      = document.body.style.width;\n    this.bodyHeight     = document.body.style.height;\n    this.bodyOverflow   = document.body.style.overflow;\n    this.docOverflow    = document.documentElement.style.overflow;\n\n    this.innerTracker = new $.MouseTracker({\n        element:                  this.canvas,\n        startDisabled:            this.mouseNavEnabled ? false : true,\n        clickTimeThreshold:       this.clickTimeThreshold,\n        clickDistThreshold:       this.clickDistThreshold,\n        dblClickTimeThreshold:    this.dblClickTimeThreshold,\n        dblClickDistThreshold:    this.dblClickDistThreshold,\n        keyDownHandler:           $.delegate( this, onCanvasKeyDown ),\n        keyHandler:               $.delegate( this, onCanvasKeyPress ),\n        clickHandler:             $.delegate( this, onCanvasClick ),\n        dblClickHandler:          $.delegate( this, onCanvasDblClick ),\n        dragHandler:              $.delegate( this, onCanvasDrag ),\n        dragEndHandler:           $.delegate( this, onCanvasDragEnd ),\n        enterHandler:             $.delegate( this, onCanvasEnter ),\n        exitHandler:              $.delegate( this, onCanvasExit ),\n        pressHandler:             $.delegate( this, onCanvasPress ),\n        releaseHandler:           $.delegate( this, onCanvasRelease ),\n        nonPrimaryPressHandler:   $.delegate( this, onCanvasNonPrimaryPress ),\n        nonPrimaryReleaseHandler: $.delegate( this, onCanvasNonPrimaryRelease ),\n        scrollHandler:            $.delegate( this, onCanvasScroll ),\n        pinchHandler:             $.delegate( this, onCanvasPinch )\n    });\n\n    this.outerTracker = new $.MouseTracker({\n        element:               this.container,\n        startDisabled:         this.mouseNavEnabled ? false : true,\n        clickTimeThreshold:    this.clickTimeThreshold,\n        clickDistThreshold:    this.clickDistThreshold,\n        dblClickTimeThreshold: this.dblClickTimeThreshold,\n        dblClickDistThreshold: this.dblClickDistThreshold,\n        enterHandler:          $.delegate( this, onContainerEnter ),\n        exitHandler:           $.delegate( this, onContainerExit )\n    });\n\n    if( this.toolbar ){\n        this.toolbar = new $.ControlDock({ element: this.toolbar });\n    }\n\n    this.bindStandardControls();\n\n    THIS[ this.hash ].prevContainerSize = _getSafeElemSize( this.container );\n\n    // Create the world\n    this.world = new $.World({\n        viewer: this\n    });\n\n    this.world.addHandler('add-item', function(event) {\n        // For backwards compatibility, we maintain the source property\n        _this.source = _this.world.getItemAt(0).source;\n\n        THIS[ _this.hash ].forceRedraw = true;\n\n        if (!_this._updateRequestId) {\n            _this._updateRequestId = scheduleUpdate( _this, updateMulti );\n        }\n    });\n\n    this.world.addHandler('remove-item', function(event) {\n        // For backwards compatibility, we maintain the source property\n        if (_this.world.getItemCount()) {\n            _this.source = _this.world.getItemAt(0).source;\n        } else {\n            _this.source = null;\n        }\n\n        THIS[ _this.hash ].forceRedraw = true;\n    });\n\n    this.world.addHandler('metrics-change', function(event) {\n        if (_this.viewport) {\n            _this.viewport._setContentBounds(_this.world.getHomeBounds(), _this.world.getContentFactor());\n        }\n    });\n\n    this.world.addHandler('item-index-change', function(event) {\n        // For backwards compatibility, we maintain the source property\n        _this.source = _this.world.getItemAt(0).source;\n    });\n\n    // Create the viewport\n    this.viewport = new $.Viewport({\n        containerSize:      THIS[ this.hash ].prevContainerSize,\n        springStiffness:    this.springStiffness,\n        animationTime:      this.animationTime,\n        minZoomImageRatio:  this.minZoomImageRatio,\n        maxZoomPixelRatio:  this.maxZoomPixelRatio,\n        visibilityRatio:    this.visibilityRatio,\n        wrapHorizontal:     this.wrapHorizontal,\n        wrapVertical:       this.wrapVertical,\n        defaultZoomLevel:   this.defaultZoomLevel,\n        minZoomLevel:       this.minZoomLevel,\n        maxZoomLevel:       this.maxZoomLevel,\n        viewer:             this,\n        degrees:            this.degrees,\n        navigatorRotate:    this.navigatorRotate,\n        homeFillsViewer:    this.homeFillsViewer,\n        margins:            this.viewportMargins\n    });\n\n    this.viewport._setContentBounds(this.world.getHomeBounds(), this.world.getContentFactor());\n\n    // Create the image loader\n    this.imageLoader = new $.ImageLoader({\n        jobLimit: this.imageLoaderLimit\n    });\n\n    // Create the tile cache\n    this.tileCache = new $.TileCache({\n        maxImageCacheCount: this.maxImageCacheCount\n    });\n\n    // Create the drawer\n    this.drawer = new $.Drawer({\n        viewer:             this,\n        viewport:           this.viewport,\n        element:            this.canvas,\n        debugGridColor:     this.debugGridColor\n    });\n\n    // Overlay container\n    this.overlaysContainer    = $.makeNeutralElement( \"div\" );\n    this.canvas.appendChild( this.overlaysContainer );\n\n    // Now that we have a drawer, see if it supports rotate. If not we need to remove the rotate buttons\n    if (!this.drawer.canRotate()) {\n        // Disable/remove the rotate left/right buttons since they aren't supported\n        if (this.rotateLeft) {\n            i = this.buttons.buttons.indexOf(this.rotateLeft);\n            this.buttons.buttons.splice(i, 1);\n            this.buttons.element.removeChild(this.rotateLeft.element);\n        }\n        if (this.rotateRight) {\n            i = this.buttons.buttons.indexOf(this.rotateRight);\n            this.buttons.buttons.splice(i, 1);\n            this.buttons.element.removeChild(this.rotateRight.element);\n        }\n    }\n\n    //Instantiate a navigator if configured\n    if ( this.showNavigator){\n        this.navigator = new $.Navigator({\n            id:                this.navigatorId,\n            position:          this.navigatorPosition,\n            sizeRatio:         this.navigatorSizeRatio,\n            maintainSizeRatio: this.navigatorMaintainSizeRatio,\n            top:               this.navigatorTop,\n            left:              this.navigatorLeft,\n            width:             this.navigatorWidth,\n            height:            this.navigatorHeight,\n            autoResize:        this.navigatorAutoResize,\n            autoFade:          this.navigatorAutoFade,\n            prefixUrl:         this.prefixUrl,\n            viewer:            this,\n            navigatorRotate:   this.navigatorRotate,\n            crossOriginPolicy: this.crossOriginPolicy\n        });\n    }\n\n    // Sequence mode\n    if (this.sequenceMode) {\n        this.bindSequenceControls();\n    }\n\n    // Open initial tilesources\n    if (this.tileSources) {\n        this.open( this.tileSources );\n    }\n\n    // Add custom controls\n    for ( i = 0; i < this.customControls.length; i++ ) {\n        this.addControl(\n            this.customControls[ i ].id,\n            {anchor: this.customControls[ i ].anchor}\n        );\n    }\n\n    // Initial fade out\n    $.requestAnimationFrame( function(){\n        beginControlsAutoHide( _this );\n    } );\n};\n\n$.extend( $.Viewer.prototype, $.EventSource.prototype, $.ControlDock.prototype, /** @lends OpenSeadragon.Viewer.prototype */{\n\n\n    /**\n     * @function\n     * @return {Boolean}\n     */\n    isOpen: function () {\n        return !!this.world.getItemCount();\n    },\n\n    // deprecated\n    openDzi: function ( dzi ) {\n        $.console.error( \"[Viewer.openDzi] this function is deprecated; use Viewer.open() instead.\" );\n        return this.open( dzi );\n    },\n\n    // deprecated\n    openTileSource: function ( tileSource ) {\n        $.console.error( \"[Viewer.openTileSource] this function is deprecated; use Viewer.open() instead.\" );\n        return this.open( tileSource );\n    },\n\n    /**\n     * Open tiled images into the viewer, closing any others.\n     * @function\n     * @param {Array|String|Object|Function} tileSources - This can be a TiledImage\n     * specifier, a TileSource specifier, or an array of either. A TiledImage specifier\n     * is the same as the options parameter for {@link OpenSeadragon.Viewer#addTiledImage},\n     * except for the index property; images are added in sequence.\n     * A TileSource specifier is anything you could pass as the tileSource property\n     * of the options parameter for {@link OpenSeadragon.Viewer#addTiledImage}.\n     * @return {OpenSeadragon.Viewer} Chainable.\n     * @fires OpenSeadragon.Viewer.event:open\n     * @fires OpenSeadragon.Viewer.event:open-failed\n     */\n    open: function (tileSources) {\n        var _this = this;\n\n        this.close();\n\n        if (!tileSources) {\n            return;\n        }\n\n        if (this.sequenceMode && $.isArray(tileSources)) {\n            if (this.referenceStrip) {\n                this.referenceStrip.destroy();\n                this.referenceStrip = null;\n            }\n\n            this.tileSources = tileSources;\n            this._sequenceIndex = Math.max(0, Math.min(this.tileSources.length - 1, this.initialPage));\n            if (this.tileSources.length) {\n                this.open(this.tileSources[this._sequenceIndex]);\n\n                if ( this.showReferenceStrip ){\n                    this.referenceStrip = new $.ReferenceStrip({\n                        id:          this.referenceStripElement,\n                        position:    this.referenceStripPosition,\n                        sizeRatio:   this.referenceStripSizeRatio,\n                        scroll:      this.referenceStripScroll,\n                        height:      this.referenceStripHeight,\n                        width:       this.referenceStripWidth,\n                        tileSources: this.tileSources,\n                        prefixUrl:   this.prefixUrl,\n                        viewer:      this\n                    });\n                }\n            }\n\n            this._updateSequenceButtons( this._sequenceIndex );\n            return;\n        }\n\n        if (!$.isArray(tileSources)) {\n            tileSources = [tileSources];\n        }\n\n        if (!tileSources.length) {\n            return;\n        }\n\n        this._opening = true;\n\n        var expected = tileSources.length;\n        var successes = 0;\n        var failures = 0;\n        var failEvent;\n\n        var checkCompletion = function() {\n            if (successes + failures === expected) {\n                if (successes) {\n                    if (_this._firstOpen || !_this.preserveViewport) {\n                        _this.viewport.goHome( true );\n                        _this.viewport.update();\n                    }\n\n                    _this._firstOpen = false;\n\n                    var source = tileSources[0];\n                    if (source.tileSource) {\n                        source = source.tileSource;\n                    }\n\n                    // Global overlays\n                    if( _this.overlays && !_this.preserveOverlays ){\n                        for ( var i = 0; i < _this.overlays.length; i++ ) {\n                            _this.currentOverlays[ i ] = getOverlayObject( _this, _this.overlays[ i ] );\n                        }\n                    }\n\n                    _this._drawOverlays();\n                    _this._opening = false;\n\n                    /**\n                     * Raised when the viewer has opened and loaded one or more TileSources.\n                     *\n                     * @event open\n                     * @memberof OpenSeadragon.Viewer\n                     * @type {object}\n                     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n                     * @property {OpenSeadragon.TileSource} source - The tile source that was opened.\n                     * @property {?Object} userData - Arbitrary subscriber-defined object.\n                     */\n                    // TODO: what if there are multiple sources?\n                    _this.raiseEvent( 'open', { source: source } );\n                } else {\n                    _this._opening = false;\n\n                    /**\n                     * Raised when an error occurs loading a TileSource.\n                     *\n                     * @event open-failed\n                     * @memberof OpenSeadragon.Viewer\n                     * @type {object}\n                     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n                     * @property {String} message - Information about what failed.\n                     * @property {String} source - The tile source that failed.\n                     * @property {?Object} userData - Arbitrary subscriber-defined object.\n                     */\n                    _this.raiseEvent( 'open-failed', failEvent );\n                }\n            }\n        };\n\n        var doOne = function(options) {\n            if (!$.isPlainObject(options) || !options.tileSource) {\n                options = {\n                    tileSource: options\n                };\n            }\n\n            if (options.index !== undefined) {\n                $.console.error('[Viewer.open] setting indexes here is not supported; use addTiledImage instead');\n                delete options.index;\n            }\n\n            if (options.collectionImmediately === undefined) {\n                options.collectionImmediately = true;\n            }\n\n            var originalSuccess = options.success;\n            options.success = function(event) {\n                successes++;\n\n                // TODO: now that options has other things besides tileSource, the overlays\n                // should probably be at the options level, not the tileSource level.\n                if (options.tileSource.overlays) {\n                    for (var i = 0; i < options.tileSource.overlays.length; i++) {\n                        _this.addOverlay(options.tileSource.overlays[i]);\n                    }\n                }\n\n                if (originalSuccess) {\n                    originalSuccess(event);\n                }\n\n                checkCompletion();\n            };\n\n            var originalError = options.error;\n            options.error = function(event) {\n                failures++;\n\n                if (!failEvent) {\n                    failEvent = event;\n                }\n\n                if (originalError) {\n                    originalError(event);\n                }\n\n                checkCompletion();\n            };\n\n            _this.addTiledImage(options);\n        };\n\n        // TileSources\n        for (var i = 0; i < tileSources.length; i++) {\n            doOne(tileSources[i]);\n        }\n\n        return this;\n    },\n\n\n    /**\n     * @function\n     * @return {OpenSeadragon.Viewer} Chainable.\n     * @fires OpenSeadragon.Viewer.event:close\n     */\n    close: function ( ) {\n        if ( !THIS[ this.hash ] ) {\n            //this viewer has already been destroyed: returning immediately\n            return this;\n        }\n\n        this._opening = false;\n\n        if ( this.navigator ) {\n            this.navigator.close();\n        }\n\n        if( ! this.preserveOverlays) {\n            this.clearOverlays();\n            this.overlaysContainer.innerHTML = \"\";\n        }\n\n        THIS[ this.hash ].animating = false;\n        this.world.removeAll();\n        this.imageLoader.clear();\n\n        /**\n         * Raised when the viewer is closed (see {@link OpenSeadragon.Viewer#close}).\n         *\n         * @event close\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        this.raiseEvent( 'close' );\n\n        return this;\n    },\n\n\n    /**\n     * Function to destroy the viewer and clean up everything created by OpenSeadragon.\n     *\n     * Example:\n     * var viewer = OpenSeadragon({\n     *   [...]\n     * });\n     *\n     * //when you are done with the viewer:\n     * viewer.destroy();\n     * viewer = null; //important\n     *\n     * @function\n     */\n    destroy: function( ) {\n        if ( !THIS[ this.hash ] ) {\n            //this viewer has already been destroyed: returning immediately\n            return;\n        }\n\n        this.close();\n\n        this.clearOverlays();\n        this.overlaysContainer.innerHTML = \"\";\n\n        //TODO: implement this...\n        //this.unbindSequenceControls()\n        //this.unbindStandardControls()\n\n        if (this.referenceStrip) {\n            this.referenceStrip.destroy();\n            this.referenceStrip = null;\n        }\n\n        if ( this._updateRequestId !== null ) {\n            $.cancelAnimationFrame( this._updateRequestId );\n            this._updateRequestId = null;\n        }\n\n        if ( this.drawer ) {\n            this.drawer.destroy();\n        }\n\n        this.removeAllHandlers();\n\n        // Go through top element (passed to us) and remove all children\n        // Use removeChild to make sure it handles SVG or any non-html\n        // also it performs better - http://jsperf.com/innerhtml-vs-removechild/15\n        if (this.element){\n            while (this.element.firstChild) {\n                this.element.removeChild(this.element.firstChild);\n            }\n        }\n\n        // destroy the mouse trackers\n        if (this.innerTracker){\n            this.innerTracker.destroy();\n        }\n        if (this.outerTracker){\n            this.outerTracker.destroy();\n        }\n\n        THIS[ this.hash ] = null;\n        delete THIS[ this.hash ];\n\n        // clear all our references to dom objects\n        this.canvas = null;\n        this.container = null;\n\n        // clear our reference to the main element - they will need to pass it in again, creating a new viewer\n        this.element = null;\n    },\n\n    /**\n     * @function\n     * @return {Boolean}\n     */\n    isMouseNavEnabled: function () {\n        return this.innerTracker.isTracking();\n    },\n\n    /**\n     * @function\n     * @param {Boolean} enabled - true to enable, false to disable\n     * @return {OpenSeadragon.Viewer} Chainable.\n     * @fires OpenSeadragon.Viewer.event:mouse-enabled\n     */\n    setMouseNavEnabled: function( enabled ){\n        this.innerTracker.setTracking( enabled );\n        this.outerTracker.setTracking( enabled );\n        /**\n         * Raised when mouse/touch navigation is enabled or disabled (see {@link OpenSeadragon.Viewer#setMouseNavEnabled}).\n         *\n         * @event mouse-enabled\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n         * @property {Boolean} enabled\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        this.raiseEvent( 'mouse-enabled', { enabled: enabled } );\n        return this;\n    },\n\n\n    /**\n     * @function\n     * @return {Boolean}\n     */\n    areControlsEnabled: function () {\n        var enabled = this.controls.length,\n            i;\n        for( i = 0; i < this.controls.length; i++ ){\n            enabled = enabled && this.controls[ i ].isVisibile();\n        }\n        return enabled;\n    },\n\n\n    /**\n     * Shows or hides the controls (e.g. the default navigation buttons).\n     *\n     * @function\n     * @param {Boolean} true to show, false to hide.\n     * @return {OpenSeadragon.Viewer} Chainable.\n     * @fires OpenSeadragon.Viewer.event:controls-enabled\n     */\n    setControlsEnabled: function( enabled ) {\n        if( enabled ){\n            abortControlsAutoHide( this );\n        } else {\n            beginControlsAutoHide( this );\n        }\n        /**\n         * Raised when the navigation controls are shown or hidden (see {@link OpenSeadragon.Viewer#setControlsEnabled}).\n         *\n         * @event controls-enabled\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n         * @property {Boolean} enabled\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        this.raiseEvent( 'controls-enabled', { enabled: enabled } );\n        return this;\n    },\n\n    /**\n     * @function\n     * @return {Boolean}\n     */\n    isFullPage: function () {\n        return THIS[ this.hash ].fullPage;\n    },\n\n\n    /**\n     * Toggle full page mode.\n     * @function\n     * @param {Boolean} fullPage\n     *      If true, enter full page mode.  If false, exit full page mode.\n     * @return {OpenSeadragon.Viewer} Chainable.\n     * @fires OpenSeadragon.Viewer.event:pre-full-page\n     * @fires OpenSeadragon.Viewer.event:full-page\n     */\n    setFullPage: function( fullPage ) {\n\n        var body = document.body,\n            bodyStyle = body.style,\n            docStyle = document.documentElement.style,\n            _this = this,\n            hash,\n            nodes,\n            i;\n\n        //dont bother modifying the DOM if we are already in full page mode.\n        if ( fullPage == this.isFullPage() ) {\n            return this;\n        }\n\n        var fullPageEventArgs = {\n            fullPage: fullPage,\n            preventDefaultAction: false\n        };\n        /**\n         * Raised when the viewer is about to change to/from full-page mode (see {@link OpenSeadragon.Viewer#setFullPage}).\n         *\n         * @event pre-full-page\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n         * @property {Boolean} fullPage - True if entering full-page mode, false if exiting full-page mode.\n         * @property {Boolean} preventDefaultAction - Set to true to prevent full-page mode change. Default: false.\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        this.raiseEvent( 'pre-full-page', fullPageEventArgs );\n        if ( fullPageEventArgs.preventDefaultAction ) {\n            return this;\n        }\n\n        if ( fullPage ) {\n\n            this.elementSize = $.getElementSize( this.element );\n            this.pageScroll = $.getPageScroll();\n\n            this.elementMargin = this.element.style.margin;\n            this.element.style.margin = \"0\";\n            this.elementPadding = this.element.style.padding;\n            this.element.style.padding = \"0\";\n\n            this.bodyMargin = bodyStyle.margin;\n            this.docMargin = docStyle.margin;\n            bodyStyle.margin = \"0\";\n            docStyle.margin = \"0\";\n\n            this.bodyPadding = bodyStyle.padding;\n            this.docPadding = docStyle.padding;\n            bodyStyle.padding = \"0\";\n            docStyle.padding = \"0\";\n\n            this.bodyWidth = bodyStyle.width;\n            this.docWidth = docStyle.width;\n            bodyStyle.width = \"100%\";\n            docStyle.width = \"100%\";\n\n            this.bodyHeight = bodyStyle.height;\n            this.docHeight = docStyle.height;\n            bodyStyle.height = \"100%\";\n            docStyle.height = \"100%\";\n\n            //when entering full screen on the ipad it wasnt sufficient to leave\n            //the body intact as only only the top half of the screen would\n            //respond to touch events on the canvas, while the bottom half treated\n            //them as touch events on the document body.  Thus we remove and store\n            //the bodies elements and replace them when we leave full screen.\n            this.previousBody = [];\n            THIS[ this.hash ].prevElementParent = this.element.parentNode;\n            THIS[ this.hash ].prevNextSibling = this.element.nextSibling;\n            THIS[ this.hash ].prevElementWidth = this.element.style.width;\n            THIS[ this.hash ].prevElementHeight = this.element.style.height;\n            nodes = body.childNodes.length;\n            for ( i = 0; i < nodes; i++ ) {\n                this.previousBody.push( body.childNodes[ 0 ] );\n                body.removeChild( body.childNodes[ 0 ] );\n            }\n\n            //If we've got a toolbar, we need to enable the user to use css to\n            //preserve it in fullpage mode\n            if ( this.toolbar && this.toolbar.element ) {\n                //save a reference to the parent so we can put it back\n                //in the long run we need a better strategy\n                this.toolbar.parentNode = this.toolbar.element.parentNode;\n                this.toolbar.nextSibling = this.toolbar.element.nextSibling;\n                body.appendChild( this.toolbar.element );\n\n                //Make sure the user has some ability to style the toolbar based\n                //on the mode\n                $.addClass( this.toolbar.element, 'fullpage' );\n            }\n\n            $.addClass( this.element, 'fullpage' );\n            body.appendChild( this.element );\n\n            this.element.style.height = $.getWindowSize().y + 'px';\n            this.element.style.width = $.getWindowSize().x + 'px';\n\n            if ( this.toolbar && this.toolbar.element ) {\n                this.element.style.height = (\n                    $.getElementSize( this.element ).y - $.getElementSize( this.toolbar.element ).y\n                ) + 'px';\n            }\n\n            THIS[ this.hash ].fullPage = true;\n\n            // mouse will be inside container now\n            $.delegate( this, onContainerEnter )( {} );\n\n        } else {\n\n            this.element.style.margin = this.elementMargin;\n            this.element.style.padding = this.elementPadding;\n\n            bodyStyle.margin = this.bodyMargin;\n            docStyle.margin = this.docMargin;\n\n            bodyStyle.padding = this.bodyPadding;\n            docStyle.padding = this.docPadding;\n\n            bodyStyle.width = this.bodyWidth;\n            docStyle.width = this.docWidth;\n\n            bodyStyle.height = this.bodyHeight;\n            docStyle.height = this.docHeight;\n\n            body.removeChild( this.element );\n            nodes = this.previousBody.length;\n            for ( i = 0; i < nodes; i++ ) {\n                body.appendChild( this.previousBody.shift() );\n            }\n\n            $.removeClass( this.element, 'fullpage' );\n            THIS[ this.hash ].prevElementParent.insertBefore(\n                this.element,\n                THIS[ this.hash ].prevNextSibling\n            );\n\n            //If we've got a toolbar, we need to enable the user to use css to\n            //reset it to its original state\n            if ( this.toolbar && this.toolbar.element ) {\n                body.removeChild( this.toolbar.element );\n\n                //Make sure the user has some ability to style the toolbar based\n                //on the mode\n                $.removeClass( this.toolbar.element, 'fullpage' );\n\n                this.toolbar.parentNode.insertBefore(\n                    this.toolbar.element,\n                    this.toolbar.nextSibling\n                );\n                delete this.toolbar.parentNode;\n                delete this.toolbar.nextSibling;\n            }\n\n            this.element.style.width = THIS[ this.hash ].prevElementWidth;\n            this.element.style.height = THIS[ this.hash ].prevElementHeight;\n\n            // After exiting fullPage or fullScreen, it can take some time\n            // before the browser can actually set the scroll.\n            var restoreScrollCounter = 0;\n            var restoreScroll = function() {\n                $.setPageScroll( _this.pageScroll );\n                var pageScroll = $.getPageScroll();\n                restoreScrollCounter++;\n                if ( restoreScrollCounter < 10 &&\n                    pageScroll.x !== _this.pageScroll.x ||\n                    pageScroll.y !== _this.pageScroll.y ) {\n                    $.requestAnimationFrame( restoreScroll );\n                }\n            };\n            $.requestAnimationFrame( restoreScroll );\n\n            THIS[ this.hash ].fullPage = false;\n\n            // mouse will likely be outside now\n            $.delegate( this, onContainerExit )( { } );\n\n        }\n\n        if ( this.navigator && this.viewport ) {\n            this.navigator.update( this.viewport );\n        }\n\n        /**\n         * Raised when the viewer has changed to/from full-page mode (see {@link OpenSeadragon.Viewer#setFullPage}).\n         *\n         * @event full-page\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n         * @property {Boolean} fullPage - True if changed to full-page mode, false if exited full-page mode.\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        this.raiseEvent( 'full-page', { fullPage: fullPage } );\n\n        return this;\n    },\n\n    /**\n     * Toggle full screen mode if supported. Toggle full page mode otherwise.\n     * @function\n     * @param {Boolean} fullScreen\n     *      If true, enter full screen mode.  If false, exit full screen mode.\n     * @return {OpenSeadragon.Viewer} Chainable.\n     * @fires OpenSeadragon.Viewer.event:pre-full-screen\n     * @fires OpenSeadragon.Viewer.event:full-screen\n     */\n    setFullScreen: function( fullScreen ) {\n        var _this = this;\n\n        if ( !$.supportsFullScreen ) {\n            return this.setFullPage( fullScreen );\n        }\n\n        if ( $.isFullScreen() === fullScreen ) {\n            return this;\n        }\n\n        var fullScreeEventArgs = {\n            fullScreen: fullScreen,\n            preventDefaultAction: false\n        };\n        /**\n         * Raised when the viewer is about to change to/from full-screen mode (see {@link OpenSeadragon.Viewer#setFullScreen}).\n         * Note: the pre-full-screen event is not raised when the user is exiting\n         * full-screen mode by pressing the Esc key. In that case, consider using\n         * the full-screen, pre-full-page or full-page events.\n         *\n         * @event pre-full-screen\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n         * @property {Boolean} fullScreen - True if entering full-screen mode, false if exiting full-screen mode.\n         * @property {Boolean} preventDefaultAction - Set to true to prevent full-screen mode change. Default: false.\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        this.raiseEvent( 'pre-full-screen', fullScreeEventArgs );\n        if ( fullScreeEventArgs.preventDefaultAction ) {\n            return this;\n        }\n\n        if ( fullScreen ) {\n\n            this.setFullPage( true );\n            // If the full page mode is not actually entered, we need to prevent\n            // the full screen mode.\n            if ( !this.isFullPage() ) {\n                return this;\n            }\n\n            this.fullPageStyleWidth = this.element.style.width;\n            this.fullPageStyleHeight = this.element.style.height;\n            this.element.style.width = '100%';\n            this.element.style.height = '100%';\n\n            var onFullScreenChange = function() {\n                var isFullScreen = $.isFullScreen();\n                if ( !isFullScreen ) {\n                    $.removeEvent( document, $.fullScreenEventName, onFullScreenChange );\n                    $.removeEvent( document, $.fullScreenErrorEventName, onFullScreenChange );\n\n                    _this.setFullPage( false );\n                    if ( _this.isFullPage() ) {\n                        _this.element.style.width = _this.fullPageStyleWidth;\n                        _this.element.style.height = _this.fullPageStyleHeight;\n                    }\n                }\n                if ( _this.navigator && _this.viewport ) {\n                    _this.navigator.update( _this.viewport );\n                }\n                /**\n                 * Raised when the viewer has changed to/from full-screen mode (see {@link OpenSeadragon.Viewer#setFullScreen}).\n                 *\n                 * @event full-screen\n                 * @memberof OpenSeadragon.Viewer\n                 * @type {object}\n                 * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n                 * @property {Boolean} fullScreen - True if changed to full-screen mode, false if exited full-screen mode.\n                 * @property {?Object} userData - Arbitrary subscriber-defined object.\n                 */\n                _this.raiseEvent( 'full-screen', { fullScreen: isFullScreen } );\n            };\n            $.addEvent( document, $.fullScreenEventName, onFullScreenChange );\n            $.addEvent( document, $.fullScreenErrorEventName, onFullScreenChange );\n\n            $.requestFullScreen( document.body );\n\n        } else {\n            $.exitFullScreen();\n        }\n        return this;\n    },\n\n    /**\n     * @function\n     * @return {Boolean}\n     */\n    isVisible: function () {\n        return this.container.style.visibility != \"hidden\";\n    },\n\n\n    /**\n     * @function\n     * @param {Boolean} visible\n     * @return {OpenSeadragon.Viewer} Chainable.\n     * @fires OpenSeadragon.Viewer.event:visible\n     */\n    setVisible: function( visible ){\n        this.container.style.visibility = visible ? \"\" : \"hidden\";\n        /**\n         * Raised when the viewer is shown or hidden (see {@link OpenSeadragon.Viewer#setVisible}).\n         *\n         * @event visible\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n         * @property {Boolean} visible\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        this.raiseEvent( 'visible', { visible: visible } );\n        return this;\n    },\n\n    /**\n     * Add a tiled image to the viewer.\n     * options.tileSource can be anything that {@link OpenSeadragon.Viewer#open}\n     *  supports except arrays of images.\n     * Note that you can specify options.width or options.height, but not both.\n     * The other dimension will be calculated according to the item's aspect ratio.\n     * If collectionMode is on (see {@link OpenSeadragon.Options}), the new image is\n     * automatically arranged with the others.\n     * @function\n     * @param {Object} options\n     * @param {String|Object|Function} options.tileSource - The TileSource specifier.\n     * A String implies a url used to determine the tileSource implementation\n     *      based on the file extension of url. JSONP is implied by *.js,\n     *      otherwise the url is retrieved as text and the resulting text is\n     *      introspected to determine if its json, xml, or text and parsed.\n     * An Object implies an inline configuration which has a single\n     *      property sufficient for being able to determine tileSource\n     *      implementation. If the object has a property which is a function\n     *      named 'getTileUrl', it is treated as a custom TileSource.\n     * @param {Number} [options.index] The index of the item. Added on top of\n     * all other items if not specified.\n     * @param {Boolean} [options.replace=false] If true, the item at options.index will be\n     * removed and the new item is added in its place. options.tileSource will be\n     * interpreted and fetched if necessary before the old item is removed to avoid leaving\n     * a gap in the world.\n     * @param {Number} [options.x=0] The X position for the image in viewport coordinates.\n     * @param {Number} [options.y=0] The Y position for the image in viewport coordinates.\n     * @param {Number} [options.width=1] The width for the image in viewport coordinates.\n     * @param {Number} [options.height] The height for the image in viewport coordinates.\n     * @param {OpenSeadragon.Rect} [options.fitBounds] The bounds in viewport coordinates\n     * to fit the image into. If specified, x, y, width and height get ignored.\n     * @param {OpenSeadragon.Placement} [options.fitBoundsPlacement=OpenSeadragon.Placement.CENTER]\n     * How to anchor the image in the bounds if options.fitBounds is set.\n     * @param {OpenSeadragon.Rect} [options.clip] - An area, in image pixels, to clip to\n     * (portions of the image outside of this area will not be visible). Only works on\n     * browsers that support the HTML5 canvas.\n     * @param {Number} [options.opacity] Opacity the tiled image should be drawn at by default.\n     * @param {String} [options.compositeOperation] How the image is composited onto other images.\n     * @param {Function} [options.success] A function that gets called when the image is\n     * successfully added. It's passed the event object which contains a single property:\n     * \"item\", the resulting TiledImage.\n     * @param {Function} [options.error] A function that gets called if the image is\n     * unable to be added. It's passed the error event object, which contains \"message\"\n     * and \"source\" properties.\n     * @param {Boolean} [options.collectionImmediately=false] If collectionMode is on,\n     * specifies whether to snap to the new arrangement immediately or to animate to it.\n     * @param {String|CanvasGradient|CanvasPattern|Function} [options.placeholderFillStyle] - See {@link OpenSeadragon.Options}.\n     * @fires OpenSeadragon.World.event:add-item\n     * @fires OpenSeadragon.Viewer.event:add-item-failed\n     */\n    addTiledImage: function( options ) {\n        $.console.assert(options, \"[Viewer.addTiledImage] options is required\");\n        $.console.assert(options.tileSource, \"[Viewer.addTiledImage] options.tileSource is required\");\n        $.console.assert(!options.replace || (options.index > -1 && options.index < this.world.getItemCount()),\n            \"[Viewer.addTiledImage] if options.replace is used, options.index must be a valid index in Viewer.world\");\n\n        var _this = this;\n\n        if (options.replace) {\n            options.replaceItem = _this.world.getItemAt(options.index);\n        }\n\n        this._hideMessage();\n\n        if (options.placeholderFillStyle === undefined) {\n            options.placeholderFillStyle = this.placeholderFillStyle;\n        }\n        if (options.opacity === undefined) {\n            options.opacity = this.opacity;\n        }\n        if (options.compositeOperation === undefined) {\n            options.compositeOperation = this.compositeOperation;\n        }\n\n        var myQueueItem = {\n            options: options\n        };\n\n        function raiseAddItemFailed( event ) {\n            for (var i = 0; i < _this._loadQueue.length; i++) {\n                if (_this._loadQueue[i] === myQueueItem) {\n                    _this._loadQueue.splice(i, 1);\n                    break;\n                }\n            }\n\n            if (_this._loadQueue.length === 0) {\n                refreshWorld(myQueueItem);\n            }\n\n             /**\n             * Raised when an error occurs while adding a item.\n             * @event add-item-failed\n             * @memberOf OpenSeadragon.Viewer\n             * @type {object}\n             * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n             * @property {String} message\n             * @property {String} source\n             * @property {Object} options The options passed to the addTiledImage method.\n             * @property {?Object} userData - Arbitrary subscriber-defined object.\n             */\n            _this.raiseEvent( 'add-item-failed', event );\n\n            if (options.error) {\n                options.error(event);\n            }\n        }\n\n        function refreshWorld(theItem) {\n            if (_this.collectionMode) {\n                _this.world.arrange({\n                    immediately: theItem.options.collectionImmediately,\n                    rows: _this.collectionRows,\n                    columns: _this.collectionColumns,\n                    layout: _this.collectionLayout,\n                    tileSize: _this.collectionTileSize,\n                    tileMargin: _this.collectionTileMargin\n                });\n                _this.world.setAutoRefigureSizes(true);\n            }\n        }\n\n        if ($.isArray(options.tileSource)) {\n            setTimeout(function() {\n                raiseAddItemFailed({\n                    message: \"[Viewer.addTiledImage] Sequences can not be added; add them one at a time instead.\",\n                    source: options.tileSource,\n                    options: options\n                });\n            });\n            return;\n        }\n\n        this._loadQueue.push(myQueueItem);\n\n        getTileSourceImplementation( this, options.tileSource, function( tileSource ) {\n\n            myQueueItem.tileSource = tileSource;\n\n            // add everybody at the front of the queue that's ready to go\n            var queueItem, tiledImage, optionsClone;\n            while (_this._loadQueue.length) {\n                queueItem = _this._loadQueue[0];\n                if (!queueItem.tileSource) {\n                    break;\n                }\n\n                _this._loadQueue.splice(0, 1);\n\n                if (queueItem.options.replace) {\n                    var newIndex = _this.world.getIndexOfItem(queueItem.options.replaceItem);\n                    if (newIndex != -1) {\n                        queueItem.options.index = newIndex;\n                    }\n                    _this.world.removeItem(queueItem.options.replaceItem);\n                }\n\n                tiledImage = new $.TiledImage({\n                    viewer: _this,\n                    source: queueItem.tileSource,\n                    viewport: _this.viewport,\n                    drawer: _this.drawer,\n                    tileCache: _this.tileCache,\n                    imageLoader: _this.imageLoader,\n                    x: queueItem.options.x,\n                    y: queueItem.options.y,\n                    width: queueItem.options.width,\n                    height: queueItem.options.height,\n                    fitBounds: queueItem.options.fitBounds,\n                    fitBoundsPlacement: queueItem.options.fitBoundsPlacement,\n                    clip: queueItem.options.clip,\n                    placeholderFillStyle: queueItem.options.placeholderFillStyle,\n                    opacity: queueItem.options.opacity,\n                    compositeOperation: queueItem.options.compositeOperation,\n                    springStiffness: _this.springStiffness,\n                    animationTime: _this.animationTime,\n                    minZoomImageRatio: _this.minZoomImageRatio,\n                    wrapHorizontal: _this.wrapHorizontal,\n                    wrapVertical: _this.wrapVertical,\n                    immediateRender: _this.immediateRender,\n                    blendTime: _this.blendTime,\n                    alwaysBlend: _this.alwaysBlend,\n                    minPixelRatio: _this.minPixelRatio,\n                    smoothTileEdgesMinZoom: _this.smoothTileEdgesMinZoom,\n                    iOSDevice: _this.iOSDevice,\n                    crossOriginPolicy: _this.crossOriginPolicy,\n                    debugMode: _this.debugMode\n                });\n\n                if (_this.collectionMode) {\n                    _this.world.setAutoRefigureSizes(false);\n                }\n                _this.world.addItem( tiledImage, {\n                    index: queueItem.options.index\n                });\n\n                if (_this._loadQueue.length === 0) {\n                    //this restores the autoRefigureSizes flag to true.\n                    refreshWorld(queueItem);\n                }\n\n                if (_this.world.getItemCount() === 1 && !_this.preserveViewport) {\n                    _this.viewport.goHome(true);\n                }\n\n                if (_this.navigator) {\n                    optionsClone = $.extend({}, queueItem.options, {\n                        replace: false, // navigator already removed the layer, nothing to replace\n                        originalTiledImage: tiledImage,\n                        tileSource: queueItem.tileSource\n                    });\n\n                    _this.navigator.addTiledImage(optionsClone);\n                }\n\n                if (queueItem.options.success) {\n                    queueItem.options.success({\n                        item: tiledImage\n                    });\n                }\n            }\n        }, function( event ) {\n            event.options = options;\n            raiseAddItemFailed(event);\n        } );\n    },\n\n    /**\n     * Add a simple image to the viewer.\n     * The options are the same as the ones in {@link OpenSeadragon.Viewer#addTiledImage}\n     * except for options.tileSource which is replaced by options.url.\n     * @function\n     * @param {Object} options - See {@link OpenSeadragon.Viewer#addTiledImage}\n     * for all the options\n     * @param {String} options.url - The URL of the image to add.\n     * @fires OpenSeadragon.World.event:add-item\n     * @fires OpenSeadragon.Viewer.event:add-item-failed\n     */\n    addSimpleImage: function(options) {\n        $.console.assert(options, \"[Viewer.addSimpleImage] options is required\");\n        $.console.assert(options.url, \"[Viewer.addSimpleImage] options.url is required\");\n\n        var opts = $.extend({}, options, {\n            tileSource: {\n                type: 'image',\n                url:  options.url\n            }\n        });\n        delete opts.url;\n        this.addTiledImage(opts);\n    },\n\n    // deprecated\n    addLayer: function( options ) {\n        var _this = this;\n\n        $.console.error( \"[Viewer.addLayer] this function is deprecated; use Viewer.addTiledImage() instead.\" );\n\n        var optionsClone = $.extend({}, options, {\n            success: function(event) {\n                _this.raiseEvent(\"add-layer\", {\n                    options: options,\n                    drawer: event.item\n                });\n            },\n            error: function(event) {\n                _this.raiseEvent(\"add-layer-failed\", event);\n            }\n        });\n\n        this.addTiledImage(optionsClone);\n        return this;\n    },\n\n    // deprecated\n    getLayerAtLevel: function( level ) {\n        $.console.error( \"[Viewer.getLayerAtLevel] this function is deprecated; use World.getItemAt() instead.\" );\n        return this.world.getItemAt(level);\n    },\n\n    // deprecated\n    getLevelOfLayer: function( drawer ) {\n        $.console.error( \"[Viewer.getLevelOfLayer] this function is deprecated; use World.getIndexOfItem() instead.\" );\n        return this.world.getIndexOfItem(drawer);\n    },\n\n    // deprecated\n    getLayersCount: function() {\n        $.console.error( \"[Viewer.getLayersCount] this function is deprecated; use World.getItemCount() instead.\" );\n        return this.world.getItemCount();\n    },\n\n    // deprecated\n    setLayerLevel: function( drawer, level ) {\n        $.console.error( \"[Viewer.setLayerLevel] this function is deprecated; use World.setItemIndex() instead.\" );\n        return this.world.setItemIndex(drawer, level);\n    },\n\n    // deprecated\n    removeLayer: function( drawer ) {\n        $.console.error( \"[Viewer.removeLayer] this function is deprecated; use World.removeItem() instead.\" );\n        return this.world.removeItem(drawer);\n    },\n\n    /**\n     * Force the viewer to redraw its contents.\n     * @returns {OpenSeadragon.Viewer} Chainable.\n     */\n    forceRedraw: function() {\n        THIS[ this.hash ].forceRedraw = true;\n        return this;\n    },\n\n    /**\n     * @function\n     * @return {OpenSeadragon.Viewer} Chainable.\n     */\n    bindSequenceControls: function(){\n\n        //////////////////////////////////////////////////////////////////////////\n        // Image Sequence Controls\n        //////////////////////////////////////////////////////////////////////////\n        var onFocusHandler          = $.delegate( this, onFocus ),\n            onBlurHandler           = $.delegate( this, onBlur ),\n            onNextHandler           = $.delegate( this, onNext ),\n            onPreviousHandler       = $.delegate( this, onPrevious ),\n            navImages               = this.navImages,\n            useGroup                = true ;\n\n        if( this.showSequenceControl ){\n\n            if( this.previousButton || this.nextButton ){\n                //if we are binding to custom buttons then layout and\n                //grouping is the responsibility of the page author\n                useGroup = false;\n            }\n\n            this.previousButton = new $.Button({\n                element:    this.previousButton ? $.getElement( this.previousButton ) : null,\n                clickTimeThreshold: this.clickTimeThreshold,\n                clickDistThreshold: this.clickDistThreshold,\n                tooltip:    $.getString( \"Tooltips.PreviousPage\" ),\n                srcRest:    resolveUrl( this.prefixUrl, navImages.previous.REST ),\n                srcGroup:   resolveUrl( this.prefixUrl, navImages.previous.GROUP ),\n                srcHover:   resolveUrl( this.prefixUrl, navImages.previous.HOVER ),\n                srcDown:    resolveUrl( this.prefixUrl, navImages.previous.DOWN ),\n                onRelease:  onPreviousHandler,\n                onFocus:    onFocusHandler,\n                onBlur:     onBlurHandler\n            });\n\n            this.nextButton = new $.Button({\n                element:    this.nextButton ? $.getElement( this.nextButton ) : null,\n                clickTimeThreshold: this.clickTimeThreshold,\n                clickDistThreshold: this.clickDistThreshold,\n                tooltip:    $.getString( \"Tooltips.NextPage\" ),\n                srcRest:    resolveUrl( this.prefixUrl, navImages.next.REST ),\n                srcGroup:   resolveUrl( this.prefixUrl, navImages.next.GROUP ),\n                srcHover:   resolveUrl( this.prefixUrl, navImages.next.HOVER ),\n                srcDown:    resolveUrl( this.prefixUrl, navImages.next.DOWN ),\n                onRelease:  onNextHandler,\n                onFocus:    onFocusHandler,\n                onBlur:     onBlurHandler\n            });\n\n            if( !this.navPrevNextWrap ){\n                this.previousButton.disable();\n            }\n\n            if (!this.tileSources || !this.tileSources.length) {\n                this.nextButton.disable();\n            }\n\n            if( useGroup ){\n                this.paging = new $.ButtonGroup({\n                    buttons: [\n                        this.previousButton,\n                        this.nextButton\n                    ],\n                    clickTimeThreshold: this.clickTimeThreshold,\n                    clickDistThreshold: this.clickDistThreshold\n                });\n\n                this.pagingControl = this.paging.element;\n\n                if( this.toolbar ){\n                    this.toolbar.addControl(\n                        this.pagingControl,\n                        {anchor: $.ControlAnchor.BOTTOM_RIGHT}\n                    );\n                }else{\n                    this.addControl(\n                        this.pagingControl,\n                        {anchor: this.sequenceControlAnchor || $.ControlAnchor.TOP_LEFT}\n                    );\n                }\n            }\n        }\n        return this;\n    },\n\n\n    /**\n     * @function\n     * @return {OpenSeadragon.Viewer} Chainable.\n     */\n    bindStandardControls: function(){\n        //////////////////////////////////////////////////////////////////////////\n        // Navigation Controls\n        //////////////////////////////////////////////////////////////////////////\n        var beginZoomingInHandler   = $.delegate( this, beginZoomingIn ),\n            endZoomingHandler       = $.delegate( this, endZooming ),\n            doSingleZoomInHandler   = $.delegate( this, doSingleZoomIn ),\n            beginZoomingOutHandler  = $.delegate( this, beginZoomingOut ),\n            doSingleZoomOutHandler  = $.delegate( this, doSingleZoomOut ),\n            onHomeHandler           = $.delegate( this, onHome ),\n            onFullScreenHandler     = $.delegate( this, onFullScreen ),\n            onRotateLeftHandler     = $.delegate( this, onRotateLeft ),\n            onRotateRightHandler    = $.delegate( this, onRotateRight ),\n            onFocusHandler          = $.delegate( this, onFocus ),\n            onBlurHandler           = $.delegate( this, onBlur ),\n            navImages               = this.navImages,\n            buttons                 = [],\n            useGroup                = true ;\n\n\n        if ( this.showNavigationControl ) {\n\n            if( this.zoomInButton || this.zoomOutButton ||\n                this.homeButton || this.fullPageButton ||\n                this.rotateLeftButton || this.rotateRightButton ) {\n                //if we are binding to custom buttons then layout and\n                //grouping is the responsibility of the page author\n                useGroup = false;\n            }\n\n            if ( this.showZoomControl ) {\n                buttons.push( this.zoomInButton = new $.Button({\n                    element:    this.zoomInButton ? $.getElement( this.zoomInButton ) : null,\n                    clickTimeThreshold: this.clickTimeThreshold,\n                    clickDistThreshold: this.clickDistThreshold,\n                    tooltip:    $.getString( \"Tooltips.ZoomIn\" ),\n                    srcRest:    resolveUrl( this.prefixUrl, navImages.zoomIn.REST ),\n                    srcGroup:   resolveUrl( this.prefixUrl, navImages.zoomIn.GROUP ),\n                    srcHover:   resolveUrl( this.prefixUrl, navImages.zoomIn.HOVER ),\n                    srcDown:    resolveUrl( this.prefixUrl, navImages.zoomIn.DOWN ),\n                    onPress:    beginZoomingInHandler,\n                    onRelease:  endZoomingHandler,\n                    onClick:    doSingleZoomInHandler,\n                    onEnter:    beginZoomingInHandler,\n                    onExit:     endZoomingHandler,\n                    onFocus:    onFocusHandler,\n                    onBlur:     onBlurHandler\n                }));\n\n                buttons.push( this.zoomOutButton = new $.Button({\n                    element:    this.zoomOutButton ? $.getElement( this.zoomOutButton ) : null,\n                    clickTimeThreshold: this.clickTimeThreshold,\n                    clickDistThreshold: this.clickDistThreshold,\n                    tooltip:    $.getString( \"Tooltips.ZoomOut\" ),\n                    srcRest:    resolveUrl( this.prefixUrl, navImages.zoomOut.REST ),\n                    srcGroup:   resolveUrl( this.prefixUrl, navImages.zoomOut.GROUP ),\n                    srcHover:   resolveUrl( this.prefixUrl, navImages.zoomOut.HOVER ),\n                    srcDown:    resolveUrl( this.prefixUrl, navImages.zoomOut.DOWN ),\n                    onPress:    beginZoomingOutHandler,\n                    onRelease:  endZoomingHandler,\n                    onClick:    doSingleZoomOutHandler,\n                    onEnter:    beginZoomingOutHandler,\n                    onExit:     endZoomingHandler,\n                    onFocus:    onFocusHandler,\n                    onBlur:     onBlurHandler\n                }));\n            }\n\n            if ( this.showHomeControl ) {\n                buttons.push( this.homeButton = new $.Button({\n                    element:    this.homeButton ? $.getElement( this.homeButton ) : null,\n                    clickTimeThreshold: this.clickTimeThreshold,\n                    clickDistThreshold: this.clickDistThreshold,\n                    tooltip:    $.getString( \"Tooltips.Home\" ),\n                    srcRest:    resolveUrl( this.prefixUrl, navImages.home.REST ),\n                    srcGroup:   resolveUrl( this.prefixUrl, navImages.home.GROUP ),\n                    srcHover:   resolveUrl( this.prefixUrl, navImages.home.HOVER ),\n                    srcDown:    resolveUrl( this.prefixUrl, navImages.home.DOWN ),\n                    onRelease:  onHomeHandler,\n                    onFocus:    onFocusHandler,\n                    onBlur:     onBlurHandler\n                }));\n            }\n\n            if ( this.showFullPageControl ) {\n                buttons.push( this.fullPageButton = new $.Button({\n                    element:    this.fullPageButton ? $.getElement( this.fullPageButton ) : null,\n                    clickTimeThreshold: this.clickTimeThreshold,\n                    clickDistThreshold: this.clickDistThreshold,\n                    tooltip:    $.getString( \"Tooltips.FullPage\" ),\n                    srcRest:    resolveUrl( this.prefixUrl, navImages.fullpage.REST ),\n                    srcGroup:   resolveUrl( this.prefixUrl, navImages.fullpage.GROUP ),\n                    srcHover:   resolveUrl( this.prefixUrl, navImages.fullpage.HOVER ),\n                    srcDown:    resolveUrl( this.prefixUrl, navImages.fullpage.DOWN ),\n                    onRelease:  onFullScreenHandler,\n                    onFocus:    onFocusHandler,\n                    onBlur:     onBlurHandler\n                }));\n            }\n\n            if ( this.showRotationControl ) {\n                buttons.push( this.rotateLeftButton = new $.Button({\n                    element:    this.rotateLeftButton ? $.getElement( this.rotateLeftButton ) : null,\n                    clickTimeThreshold: this.clickTimeThreshold,\n                    clickDistThreshold: this.clickDistThreshold,\n                    tooltip:    $.getString( \"Tooltips.RotateLeft\" ),\n                    srcRest:    resolveUrl( this.prefixUrl, navImages.rotateleft.REST ),\n                    srcGroup:   resolveUrl( this.prefixUrl, navImages.rotateleft.GROUP ),\n                    srcHover:   resolveUrl( this.prefixUrl, navImages.rotateleft.HOVER ),\n                    srcDown:    resolveUrl( this.prefixUrl, navImages.rotateleft.DOWN ),\n                    onRelease:  onRotateLeftHandler,\n                    onFocus:    onFocusHandler,\n                    onBlur:     onBlurHandler\n                }));\n\n                buttons.push( this.rotateRightButton = new $.Button({\n                    element:    this.rotateRightButton ? $.getElement( this.rotateRightButton ) : null,\n                    clickTimeThreshold: this.clickTimeThreshold,\n                    clickDistThreshold: this.clickDistThreshold,\n                    tooltip:    $.getString( \"Tooltips.RotateRight\" ),\n                    srcRest:    resolveUrl( this.prefixUrl, navImages.rotateright.REST ),\n                    srcGroup:   resolveUrl( this.prefixUrl, navImages.rotateright.GROUP ),\n                    srcHover:   resolveUrl( this.prefixUrl, navImages.rotateright.HOVER ),\n                    srcDown:    resolveUrl( this.prefixUrl, navImages.rotateright.DOWN ),\n                    onRelease:  onRotateRightHandler,\n                    onFocus:    onFocusHandler,\n                    onBlur:     onBlurHandler\n                }));\n\n            }\n\n            if ( useGroup ) {\n                this.buttons = new $.ButtonGroup({\n                    buttons:            buttons,\n                    clickTimeThreshold: this.clickTimeThreshold,\n                    clickDistThreshold: this.clickDistThreshold\n                });\n\n                this.navControl  = this.buttons.element;\n                this.addHandler( 'open', $.delegate( this, lightUp ) );\n\n                if( this.toolbar ){\n                    this.toolbar.addControl(\n                        this.navControl,\n                        {anchor: $.ControlAnchor.TOP_LEFT}\n                    );\n                } else {\n                    this.addControl(\n                        this.navControl,\n                        {anchor: this.navigationControlAnchor || $.ControlAnchor.TOP_LEFT}\n                    );\n                }\n            }\n\n        }\n        return this;\n    },\n\n    /**\n     * Gets the active page of a sequence\n     * @function\n     * @return {Number}\n     */\n    currentPage: function() {\n        return this._sequenceIndex;\n    },\n\n    /**\n     * @function\n     * @return {OpenSeadragon.Viewer} Chainable.\n     * @fires OpenSeadragon.Viewer.event:page\n     */\n    goToPage: function( page ){\n        if( this.tileSources && page >= 0 && page < this.tileSources.length ){\n            /**\n             * Raised when the page is changed on a viewer configured with multiple image sources (see {@link OpenSeadragon.Viewer#goToPage}).\n             *\n             * @event page\n             * @memberof OpenSeadragon.Viewer\n             * @type {Object}\n             * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n             * @property {Number} page - The page index.\n             * @property {?Object} userData - Arbitrary subscriber-defined object.\n             */\n            this.raiseEvent( 'page', { page: page } );\n\n            this._sequenceIndex = page;\n\n            this._updateSequenceButtons( page );\n\n            this.open( this.tileSources[ page ] );\n\n            if( this.referenceStrip ){\n                this.referenceStrip.setFocus( page );\n            }\n        }\n\n        return this;\n    },\n\n   /**\n     * Adds an html element as an overlay to the current viewport.  Useful for\n     * highlighting words or areas of interest on an image or other zoomable\n     * interface. The overlays added via this method are removed when the viewport\n     * is closed which include when changing page.\n     * @method\n     * @param {Element|String|Object} element - A reference to an element or an id for\n     *      the element which will be overlayed. Or an Object specifying the configuration for the overlay.\n     *      If using an object, see {@link OpenSeadragon.Overlay} for a list of\n     *      all available options.\n     * @param {OpenSeadragon.Point|OpenSeadragon.Rect} location - The point or\n     *      rectangle which will be overlayed. This is a viewport relative location.\n     * @param {OpenSeadragon.Placement} placement - The position of the\n     *      viewport which the location coordinates will be treated as relative\n     *      to.\n     * @param {function} onDraw - If supplied the callback is called when the overlay\n     *      needs to be drawn. It it the responsibility of the callback to do any drawing/positioning.\n     *      It is passed position, size and element.\n     * @return {OpenSeadragon.Viewer} Chainable.\n     * @fires OpenSeadragon.Viewer.event:add-overlay\n     */\n    addOverlay: function( element, location, placement, onDraw ) {\n        var options;\n        if( $.isPlainObject( element ) ){\n            options = element;\n        } else {\n            options = {\n                element: element,\n                location: location,\n                placement: placement,\n                onDraw: onDraw\n            };\n        }\n\n        element = $.getElement( options.element );\n\n        if ( getOverlayIndex( this.currentOverlays, element ) >= 0 ) {\n            // they're trying to add a duplicate overlay\n            return this;\n        }\n\n        var overlay = getOverlayObject( this, options);\n        this.currentOverlays.push(overlay);\n        overlay.drawHTML( this.overlaysContainer, this.viewport );\n\n        /**\n         * Raised when an overlay is added to the viewer (see {@link OpenSeadragon.Viewer#addOverlay}).\n         *\n         * @event add-overlay\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n         * @property {Element} element - The overlay element.\n         * @property {OpenSeadragon.Point|OpenSeadragon.Rect} location\n         * @property {OpenSeadragon.Placement} placement\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        this.raiseEvent( 'add-overlay', {\n            element: element,\n            location: options.location,\n            placement: options.placement\n        });\n        return this;\n    },\n\n    /**\n     * Updates the overlay represented by the reference to the element or\n     * element id moving it to the new location, relative to the new placement.\n     * @method\n     * @param {Element|String} element - A reference to an element or an id for\n     *      the element which is overlayed.\n     * @param {OpenSeadragon.Point|OpenSeadragon.Rect} location - The point or\n     *      rectangle which will be overlayed. This is a viewport relative location.\n     * @param {OpenSeadragon.Placement} placement - The position of the\n     *      viewport which the location coordinates will be treated as relative\n     *      to.\n     * @return {OpenSeadragon.Viewer} Chainable.\n     * @fires OpenSeadragon.Viewer.event:update-overlay\n     */\n    updateOverlay: function( element, location, placement ) {\n        var i;\n\n        element = $.getElement( element );\n        i = getOverlayIndex( this.currentOverlays, element );\n\n        if ( i >= 0 ) {\n            this.currentOverlays[ i ].update( location, placement );\n            THIS[ this.hash ].forceRedraw = true;\n            /**\n             * Raised when an overlay's location or placement changes\n             * (see {@link OpenSeadragon.Viewer#updateOverlay}).\n             *\n             * @event update-overlay\n             * @memberof OpenSeadragon.Viewer\n             * @type {object}\n             * @property {OpenSeadragon.Viewer} eventSource - A reference to the\n             * Viewer which raised the event.\n             * @property {Element} element\n             * @property {OpenSeadragon.Point|OpenSeadragon.Rect} location\n             * @property {OpenSeadragon.Placement} placement\n             * @property {?Object} userData - Arbitrary subscriber-defined object.\n             */\n            this.raiseEvent( 'update-overlay', {\n                element: element,\n                location: location,\n                placement: placement\n            });\n        }\n        return this;\n    },\n\n    /**\n     * Removes an overlay identified by the reference element or element id\n     * and schedules an update.\n     * @method\n     * @param {Element|String} element - A reference to the element or an\n     *      element id which represent the ovelay content to be removed.\n     * @return {OpenSeadragon.Viewer} Chainable.\n     * @fires OpenSeadragon.Viewer.event:remove-overlay\n     */\n    removeOverlay: function( element ) {\n        var i;\n\n        element = $.getElement( element );\n        i = getOverlayIndex( this.currentOverlays, element );\n\n        if ( i >= 0 ) {\n            this.currentOverlays[ i ].destroy();\n            this.currentOverlays.splice( i, 1 );\n            THIS[ this.hash ].forceRedraw = true;\n            /**\n             * Raised when an overlay is removed from the viewer\n             * (see {@link OpenSeadragon.Viewer#removeOverlay}).\n             *\n             * @event remove-overlay\n             * @memberof OpenSeadragon.Viewer\n             * @type {object}\n             * @property {OpenSeadragon.Viewer} eventSource - A reference to the\n             * Viewer which raised the event.\n             * @property {Element} element - The overlay element.\n             * @property {?Object} userData - Arbitrary subscriber-defined object.\n             */\n            this.raiseEvent( 'remove-overlay', {\n                element: element\n            });\n        }\n        return this;\n    },\n\n    /**\n     * Removes all currently configured Overlays from this Viewer and schedules\n     * an update.\n     * @method\n     * @return {OpenSeadragon.Viewer} Chainable.\n     * @fires OpenSeadragon.Viewer.event:clear-overlay\n     */\n    clearOverlays: function() {\n        while ( this.currentOverlays.length > 0 ) {\n            this.currentOverlays.pop().destroy();\n        }\n        THIS[ this.hash ].forceRedraw = true;\n        /**\n         * Raised when all overlays are removed from the viewer (see {@link OpenSeadragon.Drawer#clearOverlays}).\n         *\n         * @event clear-overlay\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        this.raiseEvent( 'clear-overlay', {} );\n        return this;\n    },\n\n     /**\n     * Finds an overlay identified by the reference element or element id\n     * and returns it as an object, return null if not found.\n     * @method\n     * @param {Element|String} element - A reference to the element or an\n     *      element id which represents the overlay content.\n     * @return {OpenSeadragon.Overlay} the matching overlay or null if none found.\n     */\n    getOverlayById: function( element ) {\n        var i;\n\n        element = $.getElement( element );\n        i = getOverlayIndex( this.currentOverlays, element );\n\n        if (i>=0) {\n            return this.currentOverlays[i];\n        } else {\n            return null;\n        }\n    },\n\n    /**\n     * Updates the sequence buttons.\n     * @function OpenSeadragon.Viewer.prototype._updateSequenceButtons\n     * @private\n     * @param {Number} Sequence Value\n     */\n    _updateSequenceButtons: function( page ) {\n\n            if ( this.nextButton ) {\n                if(!this.tileSources || this.tileSources.length - 1 === page) {\n                    //Disable next button\n                    if ( !this.navPrevNextWrap ) {\n                        this.nextButton.disable();\n                    }\n                } else {\n                    this.nextButton.enable();\n                }\n            }\n            if ( this.previousButton ) {\n                if ( page > 0 ) {\n                    //Enable previous button\n                    this.previousButton.enable();\n                } else {\n                    if ( !this.navPrevNextWrap ) {\n                        this.previousButton.disable();\n                    }\n                }\n            }\n      },\n\n    /**\n     * Display a message in the viewport\n     * @function OpenSeadragon.Viewer.prototype._showMessage\n     * @private\n     * @param {String} text message\n     */\n    _showMessage: function ( message ) {\n        this._hideMessage();\n\n        var div = $.makeNeutralElement( \"div\" );\n        div.appendChild( document.createTextNode( message ) );\n\n        this.messageDiv = $.makeCenteredNode( div );\n\n        $.addClass(this.messageDiv, \"openseadragon-message\");\n\n        this.container.appendChild( this.messageDiv );\n    },\n\n    /**\n     * Hide any currently displayed viewport message\n     * @function OpenSeadragon.Viewer.prototype._hideMessage\n     * @private\n     */\n    _hideMessage: function () {\n        var div = this.messageDiv;\n        if (div) {\n            div.parentNode.removeChild(div);\n            delete this.messageDiv;\n        }\n    },\n\n    /**\n     * Gets this viewer's gesture settings for the given pointer device type.\n     * @method\n     * @param {String} type - The pointer device type to get the gesture settings for (\"mouse\", \"touch\", \"pen\", etc.).\n     * @return {OpenSeadragon.GestureSettings}\n     */\n    gestureSettingsByDeviceType: function ( type ) {\n        switch ( type ) {\n            case 'mouse':\n                return this.gestureSettingsMouse;\n            case 'touch':\n                return this.gestureSettingsTouch;\n            case 'pen':\n                return this.gestureSettingsPen;\n            default:\n                return this.gestureSettingsUnknown;\n        }\n    },\n\n    // private\n    _drawOverlays: function() {\n        var i,\n            length = this.currentOverlays.length;\n        for ( i = 0; i < length; i++ ) {\n            this.currentOverlays[ i ].drawHTML( this.overlaysContainer, this.viewport );\n        }\n    },\n\n    /**\n     * Cancel the \"in flight\" images.\n     */\n    _cancelPendingImages: function() {\n        this._loadQueue = [];\n    }\n});\n\n\n/**\n * _getSafeElemSize is like getElementSize(), but refuses to return 0 for x or y,\n * which was causing some calling operations to return NaN.\n * @returns {Point}\n * @private\n */\nfunction _getSafeElemSize (oElement) {\n    oElement = $.getElement( oElement );\n\n    return new $.Point(\n        (oElement.clientWidth === 0 ? 1 : oElement.clientWidth),\n        (oElement.clientHeight === 0 ? 1 : oElement.clientHeight)\n    );\n}\n\n/**\n * @function\n * @private\n */\nfunction getTileSourceImplementation( viewer, tileSource, successCallback,\n    failCallback ) {\n    var _this = viewer;\n\n    //allow plain xml strings or json strings to be parsed here\n    if ( $.type( tileSource ) == 'string' ) {\n        if ( tileSource.match( /\\s*<.*/ ) ) {\n            tileSource = $.parseXml( tileSource );\n        } else if ( tileSource.match( /\\s*[\\{\\[].*/ ) ) {\n            tileSource = $.parseJSON(tileSource);\n        }\n    }\n\n    function waitUntilReady(tileSource, originalTileSource) {\n        if (tileSource.ready) {\n            successCallback(tileSource);\n        } else {\n            tileSource.addHandler('ready', function () {\n                successCallback(tileSource);\n            });\n            tileSource.addHandler('open-failed', function (event) {\n                failCallback({\n                    message: event.message,\n                    source: originalTileSource\n                });\n            });\n        }\n    }\n\n    setTimeout( function() {\n        if ( $.type( tileSource ) == 'string' ) {\n            //If its still a string it means it must be a url at this point\n            tileSource = new $.TileSource({\n                url: tileSource,\n                crossOriginPolicy: viewer.crossOriginPolicy,\n                ajaxWithCredentials: viewer.ajaxWithCredentials,\n                useCanvas: viewer.useCanvas,\n                success: function( event ) {\n                    successCallback( event.tileSource );\n                }\n            });\n            tileSource.addHandler( 'open-failed', function( event ) {\n                failCallback( event );\n            } );\n\n        } else if ($.isPlainObject(tileSource) || tileSource.nodeType) {\n            if (!tileSource.crossOriginPolicy && viewer.crossOriginPolicy) {\n                tileSource.crossOriginPolicy = viewer.crossOriginPolicy;\n            }\n            if (tileSource.ajaxWithCredentials === undefined) {\n                tileSource.ajaxWithCredentials = viewer.ajaxWithCredentials;\n            }\n            if (tileSource.useCanvas === undefined) {\n                tileSource.useCanvas = viewer.useCanvas;\n            }\n\n            if ( $.isFunction( tileSource.getTileUrl ) ) {\n                //Custom tile source\n                var customTileSource = new $.TileSource( tileSource );\n                customTileSource.getTileUrl = tileSource.getTileUrl;\n                successCallback( customTileSource );\n            } else {\n                //inline configuration\n                var $TileSource = $.TileSource.determineType( _this, tileSource );\n                if ( !$TileSource ) {\n                    failCallback( {\n                        message: \"Unable to load TileSource\",\n                        source: tileSource\n                    });\n                    return;\n                }\n                var options = $TileSource.prototype.configure.apply( _this, [ tileSource ] );\n                waitUntilReady(new $TileSource(options), tileSource);\n            }\n        } else {\n            //can assume it's already a tile source implementation\n            waitUntilReady(tileSource, tileSource);\n        }\n    });\n}\n\nfunction getOverlayObject( viewer, overlay ) {\n    if ( overlay instanceof $.Overlay ) {\n        return overlay;\n    }\n\n    var element = null;\n    if ( overlay.element ) {\n        element = $.getElement( overlay.element );\n    } else {\n        var id = overlay.id ?\n            overlay.id :\n            \"openseadragon-overlay-\" + Math.floor( Math.random() * 10000000 );\n\n        element = $.getElement( overlay.id );\n        if ( !element ) {\n            element         = document.createElement( \"a\" );\n            element.href    = \"#/overlay/\" + id;\n        }\n        element.id = id;\n        $.addClass( element, overlay.className ?\n            overlay.className :\n            \"openseadragon-overlay\"\n        );\n    }\n\n    var location = overlay.location;\n    var width = overlay.width;\n    var height = overlay.height;\n    if (!location) {\n        var x = overlay.x;\n        var y = overlay.y;\n        if (overlay.px !== undefined) {\n            var rect = viewer.viewport.imageToViewportRectangle(new $.Rect(\n                overlay.px,\n                overlay.py,\n                width || 0,\n                height || 0));\n            x = rect.x;\n            y = rect.y;\n            width = width !== undefined ? rect.width : undefined;\n            height = height !== undefined ? rect.height : undefined;\n        }\n        location = new $.Point(x, y);\n    }\n\n    var placement = overlay.placement;\n    if (placement && $.type(placement) === \"string\") {\n        placement = $.Placement[overlay.placement.toUpperCase()];\n    }\n\n    return new $.Overlay({\n        element: element,\n        location: location,\n        placement: placement,\n        onDraw: overlay.onDraw,\n        checkResize: overlay.checkResize,\n        width: width,\n        height: height,\n        rotationMode: overlay.rotationMode\n    });\n}\n\n/**\n * @private\n * @inner\n * Determines the index of the given overlay in the given overlays array.\n */\nfunction getOverlayIndex( overlays, element ) {\n    var i;\n    for ( i = overlays.length - 1; i >= 0; i-- ) {\n        if ( overlays[ i ].element === element ) {\n            return i;\n        }\n    }\n\n    return -1;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// Schedulers provide the general engine for animation\n///////////////////////////////////////////////////////////////////////////////\nfunction scheduleUpdate( viewer, updateFunc ){\n    return $.requestAnimationFrame( function(){\n        updateFunc( viewer );\n    } );\n}\n\n\n//provides a sequence in the fade animation\nfunction scheduleControlsFade( viewer ) {\n    $.requestAnimationFrame( function(){\n        updateControlsFade( viewer );\n    });\n}\n\n\n//initiates an animation to hide the controls\nfunction beginControlsAutoHide( viewer ) {\n    if ( !viewer.autoHideControls ) {\n        return;\n    }\n    viewer.controlsShouldFade = true;\n    viewer.controlsFadeBeginTime =\n        $.now() +\n        viewer.controlsFadeDelay;\n\n    window.setTimeout( function(){\n        scheduleControlsFade( viewer );\n    }, viewer.controlsFadeDelay );\n}\n\n\n//determines if fade animation is done or continues the animation\nfunction updateControlsFade( viewer ) {\n    var currentTime,\n        deltaTime,\n        opacity,\n        i;\n    if ( viewer.controlsShouldFade ) {\n        currentTime = $.now();\n        deltaTime = currentTime - viewer.controlsFadeBeginTime;\n        opacity = 1.0 - deltaTime / viewer.controlsFadeLength;\n\n        opacity = Math.min( 1.0, opacity );\n        opacity = Math.max( 0.0, opacity );\n\n        for ( i = viewer.controls.length - 1; i >= 0; i--) {\n            if (viewer.controls[ i ].autoFade) {\n                viewer.controls[ i ].setOpacity( opacity );\n            }\n        }\n\n        if ( opacity > 0 ) {\n            // fade again\n            scheduleControlsFade( viewer );\n        }\n    }\n}\n\n\n//stop the fade animation on the controls and show them\nfunction abortControlsAutoHide( viewer ) {\n    var i;\n    viewer.controlsShouldFade = false;\n    for ( i = viewer.controls.length - 1; i >= 0; i-- ) {\n        viewer.controls[ i ].setOpacity( 1.0 );\n    }\n}\n\n\n\n///////////////////////////////////////////////////////////////////////////////\n// Default view event handlers.\n///////////////////////////////////////////////////////////////////////////////\nfunction onFocus(){\n    abortControlsAutoHide( this );\n}\n\nfunction onBlur(){\n    beginControlsAutoHide( this );\n\n}\n\nfunction onCanvasKeyDown( event ) {\n    if ( !event.preventDefaultAction && !event.ctrl && !event.alt && !event.meta ) {\n        switch( event.keyCode ){\n            case 38://up arrow\n                if ( event.shift ) {\n                    this.viewport.zoomBy(1.1);\n                } else {\n                    this.viewport.panBy(this.viewport.deltaPointsFromPixels(new $.Point(0, -40)));\n                }\n                this.viewport.applyConstraints();\n                return false;\n            case 40://down arrow\n                if ( event.shift ) {\n                    this.viewport.zoomBy(0.9);\n                } else {\n                    this.viewport.panBy(this.viewport.deltaPointsFromPixels(new $.Point(0, 40)));\n                }\n                this.viewport.applyConstraints();\n                return false;\n            case 37://left arrow\n                this.viewport.panBy(this.viewport.deltaPointsFromPixels(new $.Point(-40, 0)));\n                this.viewport.applyConstraints();\n                return false;\n            case 39://right arrow\n                this.viewport.panBy(this.viewport.deltaPointsFromPixels(new $.Point(40, 0)));\n                this.viewport.applyConstraints();\n                return false;\n            default:\n                //console.log( 'navigator keycode %s', event.keyCode );\n                return true;\n        }\n    } else {\n        return true;\n    }\n}\n\nfunction onCanvasKeyPress( event ) {\n    if ( !event.preventDefaultAction && !event.ctrl && !event.alt && !event.meta ) {\n        switch( event.keyCode ){\n            case 43://=|+\n            case 61://=|+\n                this.viewport.zoomBy(1.1);\n                this.viewport.applyConstraints();\n                return false;\n            case 45://-|_\n                this.viewport.zoomBy(0.9);\n                this.viewport.applyConstraints();\n                return false;\n            case 48://0|)\n                this.viewport.goHome();\n                this.viewport.applyConstraints();\n                return false;\n            case 119://w\n            case 87://W\n                if ( event.shift ) {\n                    this.viewport.zoomBy(1.1);\n                } else {\n                    this.viewport.panBy(this.viewport.deltaPointsFromPixels(new $.Point(0, -40)));\n                }\n                this.viewport.applyConstraints();\n                return false;\n            case 115://s\n            case 83://S\n                if ( event.shift ) {\n                    this.viewport.zoomBy(0.9);\n                } else {\n                    this.viewport.panBy(this.viewport.deltaPointsFromPixels(new $.Point(0, 40)));\n                }\n                this.viewport.applyConstraints();\n                return false;\n            case 97://a\n                this.viewport.panBy(this.viewport.deltaPointsFromPixels(new $.Point(-40, 0)));\n                this.viewport.applyConstraints();\n                return false;\n            case 100://d\n                this.viewport.panBy(this.viewport.deltaPointsFromPixels(new $.Point(40, 0)));\n                this.viewport.applyConstraints();\n                return false;\n            default:\n                //console.log( 'navigator keycode %s', event.keyCode );\n                return true;\n        }\n    } else {\n        return true;\n    }\n}\n\nfunction onCanvasClick( event ) {\n    var gestureSettings;\n\n    var haveKeyboardFocus = document.activeElement == this.canvas;\n\n    // If we don't have keyboard focus, request it.\n    if ( !haveKeyboardFocus ) {\n        this.canvas.focus();\n    }\n\n    if ( !event.preventDefaultAction && this.viewport && event.quick ) {\n        gestureSettings = this.gestureSettingsByDeviceType( event.pointerType );\n        if ( gestureSettings.clickToZoom ) {\n            this.viewport.zoomBy(\n                event.shift ? 1.0 / this.zoomPerClick : this.zoomPerClick,\n                this.viewport.pointFromPixel( event.position, true )\n            );\n            this.viewport.applyConstraints();\n        }\n    }\n    /**\n     * Raised when a mouse press/release or touch/remove occurs on the {@link OpenSeadragon.Viewer#canvas} element.\n     *\n     * @event canvas-click\n     * @memberof OpenSeadragon.Viewer\n     * @type {object}\n     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n     * @property {Boolean} quick - True only if the clickDistThreshold and clickTimeThreshold are both passed. Useful for differentiating between clicks and drags.\n     * @property {Boolean} shift - True if the shift key was pressed during this event.\n     * @property {Object} originalEvent - The original DOM event.\n     * @property {?Object} userData - Arbitrary subscriber-defined object.\n     */\n    this.raiseEvent( 'canvas-click', {\n        tracker: event.eventSource,\n        position: event.position,\n        quick: event.quick,\n        shift: event.shift,\n        originalEvent: event.originalEvent\n    });\n}\n\nfunction onCanvasDblClick( event ) {\n    var gestureSettings;\n\n    if ( !event.preventDefaultAction && this.viewport ) {\n        gestureSettings = this.gestureSettingsByDeviceType( event.pointerType );\n        if ( gestureSettings.dblClickToZoom ) {\n            this.viewport.zoomBy(\n                event.shift ? 1.0 / this.zoomPerClick : this.zoomPerClick,\n                this.viewport.pointFromPixel( event.position, true )\n            );\n            this.viewport.applyConstraints();\n        }\n    }\n    /**\n     * Raised when a double mouse press/release or touch/remove occurs on the {@link OpenSeadragon.Viewer#canvas} element.\n     *\n     * @event canvas-double-click\n     * @memberof OpenSeadragon.Viewer\n     * @type {object}\n     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n     * @property {Boolean} shift - True if the shift key was pressed during this event.\n     * @property {Object} originalEvent - The original DOM event.\n     * @property {?Object} userData - Arbitrary subscriber-defined object.\n     */\n    this.raiseEvent( 'canvas-double-click', {\n        tracker: event.eventSource,\n        position: event.position,\n        shift: event.shift,\n        originalEvent: event.originalEvent\n    });\n}\n\nfunction onCanvasDrag( event ) {\n    var gestureSettings;\n\n    if ( !event.preventDefaultAction && this.viewport ) {\n        gestureSettings = this.gestureSettingsByDeviceType( event.pointerType );\n        if( !this.panHorizontal ){\n            event.delta.x = 0;\n        }\n        if( !this.panVertical ){\n            event.delta.y = 0;\n        }\n        this.viewport.panBy( this.viewport.deltaPointsFromPixels( event.delta.negate() ), gestureSettings.flickEnabled );\n        if( this.constrainDuringPan ){\n            this.viewport.applyConstraints();\n        }\n    }\n    /**\n     * Raised when a mouse or touch drag operation occurs on the {@link OpenSeadragon.Viewer#canvas} element.\n     *\n     * @event canvas-drag\n     * @memberof OpenSeadragon.Viewer\n     * @type {object}\n     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n     * @property {OpenSeadragon.Point} delta - The x,y components of the difference between start drag and end drag.\n     * @property {Number} speed - Current computed speed, in pixels per second.\n     * @property {Number} direction - Current computed direction, expressed as an angle counterclockwise relative to the positive X axis (-pi to pi, in radians). Only valid if speed > 0.\n     * @property {Boolean} shift - True if the shift key was pressed during this event.\n     * @property {Object} originalEvent - The original DOM event.\n     * @property {?Object} userData - Arbitrary subscriber-defined object.\n     */\n    this.raiseEvent( 'canvas-drag', {\n        tracker: event.eventSource,\n        position: event.position,\n        delta: event.delta,\n        speed: event.speed,\n        direction: event.direction,\n        shift: event.shift,\n        originalEvent: event.originalEvent\n    });\n}\n\nfunction onCanvasDragEnd( event ) {\n    if (!event.preventDefaultAction && this.viewport) {\n        var gestureSettings = this.gestureSettingsByDeviceType(event.pointerType);\n        if (gestureSettings.flickEnabled &&\n            event.speed >= gestureSettings.flickMinSpeed) {\n            var amplitudeX = 0;\n            if (this.panHorizontal) {\n                amplitudeX = gestureSettings.flickMomentum * event.speed *\n                    Math.cos(event.direction);\n            }\n            var amplitudeY = 0;\n            if (this.panVertical) {\n                amplitudeY = gestureSettings.flickMomentum * event.speed *\n                    Math.sin(event.direction);\n            }\n            var center = this.viewport.pixelFromPoint(\n                this.viewport.getCenter(true));\n            var target = this.viewport.pointFromPixel(\n                new $.Point(center.x - amplitudeX, center.y - amplitudeY));\n            this.viewport.panTo(target, false);\n        }\n        this.viewport.applyConstraints();\n    }\n    /**\n     * Raised when a mouse or touch drag operation ends on the {@link OpenSeadragon.Viewer#canvas} element.\n     *\n     * @event canvas-drag-end\n     * @memberof OpenSeadragon.Viewer\n     * @type {object}\n     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n     * @property {Number} speed - Speed at the end of a drag gesture, in pixels per second.\n     * @property {Number} direction - Direction at the end of a drag gesture, expressed as an angle counterclockwise relative to the positive X axis (-pi to pi, in radians). Only valid if speed > 0.\n     * @property {Boolean} shift - True if the shift key was pressed during this event.\n     * @property {Object} originalEvent - The original DOM event.\n     * @property {?Object} userData - Arbitrary subscriber-defined object.\n     */\n    this.raiseEvent('canvas-drag-end', {\n        tracker: event.eventSource,\n        position: event.position,\n        speed: event.speed,\n        direction: event.direction,\n        shift: event.shift,\n        originalEvent: event.originalEvent\n    });\n}\n\nfunction onCanvasEnter( event ) {\n    /**\n     * Raised when a pointer enters the {@link OpenSeadragon.Viewer#canvas} element.\n     *\n     * @event canvas-enter\n     * @memberof OpenSeadragon.Viewer\n     * @type {object}\n     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n     * @property {String} pointerType - \"mouse\", \"touch\", \"pen\", etc.\n     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n     * @property {Number} buttons - Current buttons pressed. A combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n     * @property {Number} pointers - Number of pointers (all types) active in the tracked element.\n     * @property {Boolean} insideElementPressed - True if the left mouse button is currently being pressed and was initiated inside the tracked element, otherwise false.\n     * @property {Boolean} buttonDownAny - Was the button down anywhere in the screen during the event. <span style=\"color:red;\">Deprecated. Use buttons instead.</span>\n     * @property {Object} originalEvent - The original DOM event.\n     * @property {?Object} userData - Arbitrary subscriber-defined object.\n     */\n    this.raiseEvent( 'canvas-enter', {\n        tracker: event.eventSource,\n        pointerType: event.pointerType,\n        position: event.position,\n        buttons: event.buttons,\n        pointers: event.pointers,\n        insideElementPressed: event.insideElementPressed,\n        buttonDownAny: event.buttonDownAny,\n        originalEvent: event.originalEvent\n    });\n}\n\nfunction onCanvasExit( event ) {\n    /**\n     * Raised when a pointer leaves the {@link OpenSeadragon.Viewer#canvas} element.\n     *\n     * @event canvas-exit\n     * @memberof OpenSeadragon.Viewer\n     * @type {object}\n     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n     * @property {String} pointerType - \"mouse\", \"touch\", \"pen\", etc.\n     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n     * @property {Number} buttons - Current buttons pressed. A combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n     * @property {Number} pointers - Number of pointers (all types) active in the tracked element.\n     * @property {Boolean} insideElementPressed - True if the left mouse button is currently being pressed and was initiated inside the tracked element, otherwise false.\n     * @property {Boolean} buttonDownAny - Was the button down anywhere in the screen during the event. <span style=\"color:red;\">Deprecated. Use buttons instead.</span>\n     * @property {Object} originalEvent - The original DOM event.\n     * @property {?Object} userData - Arbitrary subscriber-defined object.\n     */\n    this.raiseEvent( 'canvas-exit', {\n        tracker: event.eventSource,\n        pointerType: event.pointerType,\n        position: event.position,\n        buttons: event.buttons,\n        pointers: event.pointers,\n        insideElementPressed: event.insideElementPressed,\n        buttonDownAny: event.buttonDownAny,\n        originalEvent: event.originalEvent\n    });\n}\n\nfunction onCanvasPress( event ) {\n    /**\n     * Raised when the primary mouse button is pressed or touch starts on the {@link OpenSeadragon.Viewer#canvas} element.\n     *\n     * @event canvas-press\n     * @memberof OpenSeadragon.Viewer\n     * @type {object}\n     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n     * @property {String} pointerType - \"mouse\", \"touch\", \"pen\", etc.\n     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n     * @property {Boolean} insideElementPressed - True if the left mouse button is currently being pressed and was initiated inside the tracked element, otherwise false.\n     * @property {Boolean} insideElementReleased - True if the cursor still inside the tracked element when the button was released.\n     * @property {Object} originalEvent - The original DOM event.\n     * @property {?Object} userData - Arbitrary subscriber-defined object.\n     */\n    this.raiseEvent( 'canvas-press', {\n        tracker: event.eventSource,\n        pointerType: event.pointerType,\n        position: event.position,\n        insideElementPressed: event.insideElementPressed,\n        insideElementReleased: event.insideElementReleased,\n        originalEvent: event.originalEvent\n    });\n}\n\nfunction onCanvasRelease( event ) {\n    /**\n     * Raised when the primary mouse button is released or touch ends on the {@link OpenSeadragon.Viewer#canvas} element.\n     *\n     * @event canvas-release\n     * @memberof OpenSeadragon.Viewer\n     * @type {object}\n     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n     * @property {String} pointerType - \"mouse\", \"touch\", \"pen\", etc.\n     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n     * @property {Boolean} insideElementPressed - True if the left mouse button is currently being pressed and was initiated inside the tracked element, otherwise false.\n     * @property {Boolean} insideElementReleased - True if the cursor still inside the tracked element when the button was released.\n     * @property {Object} originalEvent - The original DOM event.\n     * @property {?Object} userData - Arbitrary subscriber-defined object.\n     */\n    this.raiseEvent( 'canvas-release', {\n        tracker: event.eventSource,\n        pointerType: event.pointerType,\n        position: event.position,\n        insideElementPressed: event.insideElementPressed,\n        insideElementReleased: event.insideElementReleased,\n        originalEvent: event.originalEvent\n    });\n}\n\nfunction onCanvasNonPrimaryPress( event ) {\n    /**\n     * Raised when any non-primary pointer button is pressed on the {@link OpenSeadragon.Viewer#canvas} element.\n     *\n     * @event canvas-nonprimary-press\n     * @memberof OpenSeadragon.Viewer\n     * @type {object}\n     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n     * @property {String} pointerType - \"mouse\", \"touch\", \"pen\", etc.\n     * @property {Number} button - Button which caused the event.\n     *      -1: none, 0: primary/left, 1: aux/middle, 2: secondary/right, 3: X1/back, 4: X2/forward, 5: pen eraser.\n     * @property {Number} buttons - Current buttons pressed.\n     *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n     * @property {Object} originalEvent - The original DOM event.\n     * @property {?Object} userData - Arbitrary subscriber-defined object.\n     */\n    this.raiseEvent( 'canvas-nonprimary-press', {\n        tracker: event.eventSource,\n        position: event.position,\n        pointerType: event.pointerType,\n        button: event.button,\n        buttons: event.buttons,\n        originalEvent: event.originalEvent\n    });\n}\n\nfunction onCanvasNonPrimaryRelease( event ) {\n    /**\n     * Raised when any non-primary pointer button is released on the {@link OpenSeadragon.Viewer#canvas} element.\n     *\n     * @event canvas-nonprimary-release\n     * @memberof OpenSeadragon.Viewer\n     * @type {object}\n     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n     * @property {String} pointerType - \"mouse\", \"touch\", \"pen\", etc.\n     * @property {Number} button - Button which caused the event.\n     *      -1: none, 0: primary/left, 1: aux/middle, 2: secondary/right, 3: X1/back, 4: X2/forward, 5: pen eraser.\n     * @property {Number} buttons - Current buttons pressed.\n     *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n     * @property {Object} originalEvent - The original DOM event.\n     * @property {?Object} userData - Arbitrary subscriber-defined object.\n     */\n    this.raiseEvent( 'canvas-nonprimary-release', {\n        tracker: event.eventSource,\n        position: event.position,\n        pointerType: event.pointerType,\n        button: event.button,\n        buttons: event.buttons,\n        originalEvent: event.originalEvent\n    });\n}\n\nfunction onCanvasPinch( event ) {\n    var gestureSettings,\n        centerPt,\n        lastCenterPt,\n        panByPt;\n\n    if ( !event.preventDefaultAction && this.viewport ) {\n        gestureSettings = this.gestureSettingsByDeviceType( event.pointerType );\n        if ( gestureSettings.pinchToZoom ) {\n            centerPt = this.viewport.pointFromPixel( event.center, true );\n            lastCenterPt = this.viewport.pointFromPixel( event.lastCenter, true );\n            panByPt = lastCenterPt.minus( centerPt );\n            if( !this.panHorizontal ) {\n                panByPt.x = 0;\n            }\n            if( !this.panVertical ) {\n                panByPt.y = 0;\n            }\n            this.viewport.zoomBy( event.distance / event.lastDistance, centerPt, true );\n            this.viewport.panBy( panByPt, true );\n            this.viewport.applyConstraints();\n        }\n        if ( gestureSettings.pinchRotate ) {\n            // Pinch rotate\n            var angle1 = Math.atan2(event.gesturePoints[0].currentPos.y - event.gesturePoints[1].currentPos.y,\n                event.gesturePoints[0].currentPos.x - event.gesturePoints[1].currentPos.x);\n            var angle2 = Math.atan2(event.gesturePoints[0].lastPos.y - event.gesturePoints[1].lastPos.y,\n                event.gesturePoints[0].lastPos.x - event.gesturePoints[1].lastPos.x);\n            this.viewport.setRotation(this.viewport.getRotation() + ((angle1 - angle2) * (180 / Math.PI)));\n        }\n    }\n    /**\n     * Raised when a pinch event occurs on the {@link OpenSeadragon.Viewer#canvas} element.\n     *\n     * @event canvas-pinch\n     * @memberof OpenSeadragon.Viewer\n     * @type {object}\n     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n     * @property {Array.<OpenSeadragon.MouseTracker.GesturePoint>} gesturePoints - Gesture points associated with the gesture. Velocity data can be found here.\n     * @property {OpenSeadragon.Point} lastCenter - The previous center point of the two pinch contact points relative to the tracked element.\n     * @property {OpenSeadragon.Point} center - The center point of the two pinch contact points relative to the tracked element.\n     * @property {Number} lastDistance - The previous distance between the two pinch contact points in CSS pixels.\n     * @property {Number} distance - The distance between the two pinch contact points in CSS pixels.\n     * @property {Boolean} shift - True if the shift key was pressed during this event.\n     * @property {Object} originalEvent - The original DOM event.\n     * @property {?Object} userData - Arbitrary subscriber-defined object.\n     */\n    this.raiseEvent('canvas-pinch', {\n        tracker: event.eventSource,\n        gesturePoints: event.gesturePoints,\n        lastCenter: event.lastCenter,\n        center: event.center,\n        lastDistance: event.lastDistance,\n        distance: event.distance,\n        shift: event.shift,\n        originalEvent: event.originalEvent\n    });\n    //cancels event\n    return false;\n}\n\nfunction onCanvasScroll( event ) {\n    var gestureSettings,\n        factor,\n        thisScrollTime,\n        deltaScrollTime;\n\n    /* Certain scroll devices fire the scroll event way too fast so we are injecting a simple adjustment to keep things\n     * partially normalized. If we have already fired an event within the last 'minScrollDelta' milliseconds we skip\n     * this one and wait for the next event. */\n    thisScrollTime = $.now();\n    deltaScrollTime = thisScrollTime - this._lastScrollTime;\n    if (deltaScrollTime > this.minScrollDeltaTime) {\n        this._lastScrollTime = thisScrollTime;\n\n        if ( !event.preventDefaultAction && this.viewport ) {\n            gestureSettings = this.gestureSettingsByDeviceType( event.pointerType );\n            if ( gestureSettings.scrollToZoom ) {\n                factor = Math.pow( this.zoomPerScroll, event.scroll );\n                this.viewport.zoomBy(\n                    factor,\n                    this.viewport.pointFromPixel( event.position, true )\n                );\n                this.viewport.applyConstraints();\n            }\n        }\n        /**\n         * Raised when a scroll event occurs on the {@link OpenSeadragon.Viewer#canvas} element (mouse wheel).\n         *\n         * @event canvas-scroll\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n         * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n         * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n         * @property {Number} scroll - The scroll delta for the event.\n         * @property {Boolean} shift - True if the shift key was pressed during this event.\n         * @property {Object} originalEvent - The original DOM event.\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        this.raiseEvent( 'canvas-scroll', {\n            tracker: event.eventSource,\n            position: event.position,\n            scroll: event.scroll,\n            shift: event.shift,\n            originalEvent: event.originalEvent\n        });\n        if (gestureSettings && gestureSettings.scrollToZoom) {\n            //cancels event\n            return false;\n        }\n    }\n    else {\n        gestureSettings = this.gestureSettingsByDeviceType( event.pointerType );\n        if (gestureSettings && gestureSettings.scrollToZoom) {\n            return false;   // We are swallowing this event\n        }\n    }\n}\n\nfunction onContainerEnter( event ) {\n    THIS[ this.hash ].mouseInside = true;\n    abortControlsAutoHide( this );\n    /**\n     * Raised when the cursor enters the {@link OpenSeadragon.Viewer#container} element.\n     *\n     * @event container-enter\n     * @memberof OpenSeadragon.Viewer\n     * @type {object}\n     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n     * @property {Number} buttons - Current buttons pressed. A combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n     * @property {Number} pointers - Number of pointers (all types) active in the tracked element.\n     * @property {Boolean} insideElementPressed - True if the left mouse button is currently being pressed and was initiated inside the tracked element, otherwise false.\n     * @property {Boolean} buttonDownAny - Was the button down anywhere in the screen during the event. <span style=\"color:red;\">Deprecated. Use buttons instead.</span>\n     * @property {Object} originalEvent - The original DOM event.\n     * @property {?Object} userData - Arbitrary subscriber-defined object.\n     */\n    this.raiseEvent( 'container-enter', {\n        tracker: event.eventSource,\n        position: event.position,\n        buttons: event.buttons,\n        pointers: event.pointers,\n        insideElementPressed: event.insideElementPressed,\n        buttonDownAny: event.buttonDownAny,\n        originalEvent: event.originalEvent\n    });\n}\n\nfunction onContainerExit( event ) {\n    if ( event.pointers < 1 ) {\n        THIS[ this.hash ].mouseInside = false;\n        if ( !THIS[ this.hash ].animating ) {\n            beginControlsAutoHide( this );\n        }\n    }\n    /**\n     * Raised when the cursor leaves the {@link OpenSeadragon.Viewer#container} element.\n     *\n     * @event container-exit\n     * @memberof OpenSeadragon.Viewer\n     * @type {object}\n     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n     * @property {Number} buttons - Current buttons pressed. A combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n     * @property {Number} pointers - Number of pointers (all types) active in the tracked element.\n     * @property {Boolean} insideElementPressed - True if the left mouse button is currently being pressed and was initiated inside the tracked element, otherwise false.\n     * @property {Boolean} buttonDownAny - Was the button down anywhere in the screen during the event. <span style=\"color:red;\">Deprecated. Use buttons instead.</span>\n     * @property {Object} originalEvent - The original DOM event.\n     * @property {?Object} userData - Arbitrary subscriber-defined object.\n     */\n    this.raiseEvent( 'container-exit', {\n        tracker: event.eventSource,\n        position: event.position,\n        buttons: event.buttons,\n        pointers: event.pointers,\n        insideElementPressed: event.insideElementPressed,\n        buttonDownAny: event.buttonDownAny,\n        originalEvent: event.originalEvent\n    });\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n// Page update routines ( aka Views - for future reference )\n///////////////////////////////////////////////////////////////////////////////\n\nfunction updateMulti( viewer ) {\n    updateOnce( viewer );\n\n    // Request the next frame, unless we've been closed\n    if ( viewer.isOpen() ) {\n        viewer._updateRequestId = scheduleUpdate( viewer, updateMulti );\n    } else {\n        viewer._updateRequestId = false;\n    }\n}\n\nfunction updateOnce( viewer ) {\n\n    //viewer.profiler.beginUpdate();\n\n    if (viewer._opening) {\n        return;\n    }\n\n    if (viewer.autoResize) {\n        var containerSize = _getSafeElemSize(viewer.container);\n        var prevContainerSize = THIS[viewer.hash].prevContainerSize;\n        if (!containerSize.equals(prevContainerSize)) {\n            var viewport = viewer.viewport;\n            if (viewer.preserveImageSizeOnResize) {\n                var resizeRatio = prevContainerSize.x / containerSize.x;\n                var zoom = viewport.getZoom() * resizeRatio;\n                var center = viewport.getCenter();\n                viewport.resize(containerSize, false);\n                viewport.zoomTo(zoom, null, true);\n                viewport.panTo(center, true);\n            } else {\n                // maintain image position\n                var oldBounds = viewport.getBounds();\n                viewport.resize(containerSize, true);\n                viewport.fitBoundsWithConstraints(oldBounds, true);\n            }\n            THIS[viewer.hash].prevContainerSize = containerSize;\n            THIS[viewer.hash].forceRedraw = true;\n        }\n    }\n\n    var viewportChange = viewer.viewport.update();\n    var animated = viewer.world.update() || viewportChange;\n\n    if (viewportChange) {\n        /**\n         * Raised when any spring animation update occurs (zoom, pan, etc.),\n         * before the viewer has drawn the new location.\n         *\n         * @event viewport-change\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        viewer.raiseEvent('viewport-change');\n    }\n\n    if( viewer.referenceStrip ){\n        animated = viewer.referenceStrip.update( viewer.viewport ) || animated;\n    }\n\n    if ( !THIS[ viewer.hash ].animating && animated ) {\n        /**\n         * Raised when any spring animation starts (zoom, pan, etc.).\n         *\n         * @event animation-start\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        viewer.raiseEvent( \"animation-start\" );\n        abortControlsAutoHide( viewer );\n    }\n\n    if ( animated || THIS[ viewer.hash ].forceRedraw || viewer.world.needsDraw() ) {\n        drawWorld( viewer );\n        viewer._drawOverlays();\n        if( viewer.navigator ){\n            viewer.navigator.update( viewer.viewport );\n        }\n\n        THIS[ viewer.hash ].forceRedraw = false;\n\n        if (animated) {\n            /**\n             * Raised when any spring animation update occurs (zoom, pan, etc.),\n             * after the viewer has drawn the new location.\n             *\n             * @event animation\n             * @memberof OpenSeadragon.Viewer\n             * @type {object}\n             * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n             * @property {?Object} userData - Arbitrary subscriber-defined object.\n             */\n            viewer.raiseEvent( \"animation\" );\n        }\n    }\n\n    if ( THIS[ viewer.hash ].animating && !animated ) {\n        /**\n         * Raised when any spring animation ends (zoom, pan, etc.).\n         *\n         * @event animation-finish\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        viewer.raiseEvent( \"animation-finish\" );\n\n        if ( !THIS[ viewer.hash ].mouseInside ) {\n            beginControlsAutoHide( viewer );\n        }\n    }\n\n    THIS[ viewer.hash ].animating = animated;\n\n    //viewer.profiler.endUpdate();\n}\n\nfunction drawWorld( viewer ) {\n    viewer.imageLoader.clear();\n    viewer.drawer.clear();\n    viewer.world.draw();\n\n    /**\n     * <em>- Needs documentation -</em>\n     *\n     * @event update-viewport\n     * @memberof OpenSeadragon.Viewer\n     * @type {object}\n     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n     * @property {?Object} userData - Arbitrary subscriber-defined object.\n     */\n    viewer.raiseEvent( 'update-viewport', {} );\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// Navigation Controls\n///////////////////////////////////////////////////////////////////////////////\nfunction resolveUrl( prefix, url ) {\n    return prefix ? prefix + url : url;\n}\n\n\n\nfunction beginZoomingIn() {\n    THIS[ this.hash ].lastZoomTime = $.now();\n    THIS[ this.hash ].zoomFactor = this.zoomPerSecond;\n    THIS[ this.hash ].zooming = true;\n    scheduleZoom( this );\n}\n\n\nfunction beginZoomingOut() {\n    THIS[ this.hash ].lastZoomTime = $.now();\n    THIS[ this.hash ].zoomFactor = 1.0 / this.zoomPerSecond;\n    THIS[ this.hash ].zooming = true;\n    scheduleZoom( this );\n}\n\n\nfunction endZooming() {\n    THIS[ this.hash ].zooming = false;\n}\n\n\nfunction scheduleZoom( viewer ) {\n    $.requestAnimationFrame( $.delegate( viewer, doZoom ) );\n}\n\n\nfunction doZoom() {\n    var currentTime,\n        deltaTime,\n        adjustedFactor;\n\n    if ( THIS[ this.hash ].zooming && this.viewport) {\n        currentTime     = $.now();\n        deltaTime       = currentTime - THIS[ this.hash ].lastZoomTime;\n        adjustedFactor  = Math.pow( THIS[ this.hash ].zoomFactor, deltaTime / 1000 );\n\n        this.viewport.zoomBy( adjustedFactor );\n        this.viewport.applyConstraints();\n        THIS[ this.hash ].lastZoomTime = currentTime;\n        scheduleZoom( this );\n    }\n}\n\n\nfunction doSingleZoomIn() {\n    if ( this.viewport ) {\n        THIS[ this.hash ].zooming = false;\n        this.viewport.zoomBy(\n            this.zoomPerClick / 1.0\n        );\n        this.viewport.applyConstraints();\n    }\n}\n\n\nfunction doSingleZoomOut() {\n    if ( this.viewport ) {\n        THIS[ this.hash ].zooming = false;\n        this.viewport.zoomBy(\n            1.0 / this.zoomPerClick\n        );\n        this.viewport.applyConstraints();\n    }\n}\n\n\nfunction lightUp() {\n    this.buttons.emulateEnter();\n    this.buttons.emulateExit();\n}\n\n\nfunction onHome() {\n    if ( this.viewport ) {\n        this.viewport.goHome();\n    }\n}\n\n\nfunction onFullScreen() {\n    if ( this.isFullPage() && !$.isFullScreen() ) {\n        // Is fullPage but not fullScreen\n        this.setFullPage( false );\n    } else {\n        this.setFullScreen( !this.isFullPage() );\n    }\n    // correct for no mouseout event on change\n    if ( this.buttons ) {\n        this.buttons.emulateExit();\n    }\n    this.fullPageButton.element.focus();\n    if ( this.viewport ) {\n        this.viewport.applyConstraints();\n    }\n}\n\n/**\n * Note: The current rotation feature is limited to 90 degree turns.\n */\nfunction onRotateLeft() {\n    if ( this.viewport ) {\n        var currRotation = this.viewport.getRotation();\n        if (currRotation === 0) {\n            currRotation = 270;\n        }\n        else {\n            currRotation -= 90;\n        }\n        this.viewport.setRotation(currRotation);\n    }\n}\n\n/**\n * Note: The current rotation feature is limited to 90 degree turns.\n */\nfunction onRotateRight() {\n    if ( this.viewport ) {\n        var currRotation = this.viewport.getRotation();\n        if (currRotation === 270) {\n            currRotation = 0;\n        }\n        else {\n            currRotation += 90;\n        }\n        this.viewport.setRotation(currRotation);\n    }\n}\n\n\nfunction onPrevious(){\n    var previous = this._sequenceIndex - 1;\n    if(this.navPrevNextWrap && previous < 0){\n        previous += this.tileSources.length;\n    }\n    this.goToPage( previous );\n}\n\n\nfunction onNext(){\n    var next = this._sequenceIndex + 1;\n    if(this.navPrevNextWrap && next >= this.tileSources.length){\n        next = 0;\n    }\n    this.goToPage( next );\n}\n\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - Navigator\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n/**\n * @class Navigator\n * @classdesc The Navigator provides a small view of the current image as fixed\n * while representing the viewport as a moving box serving as a frame\n * of reference in the larger viewport as to which portion of the image\n * is currently being examined.  The navigator's viewport can be interacted\n * with using the keyboard or the mouse.\n *\n * @memberof OpenSeadragon\n * @extends OpenSeadragon.Viewer\n * @extends OpenSeadragon.EventSource\n * @param {Object} options\n */\n$.Navigator = function( options ){\n\n    var viewer      = options.viewer,\n        _this = this,\n        viewerSize,\n        navigatorSize;\n\n    //We may need to create a new element and id if they did not\n    //provide the id for the existing element\n    if( !options.id ){\n        options.id              = 'navigator-' + $.now();\n        this.element            = $.makeNeutralElement( \"div\" );\n        options.controlOptions  = {\n            anchor:           $.ControlAnchor.TOP_RIGHT,\n            attachToViewer:   true,\n            autoFade:         options.autoFade\n        };\n\n        if( options.position ){\n            if( 'BOTTOM_RIGHT' == options.position ){\n               options.controlOptions.anchor = $.ControlAnchor.BOTTOM_RIGHT;\n            } else if( 'BOTTOM_LEFT' == options.position ){\n               options.controlOptions.anchor = $.ControlAnchor.BOTTOM_LEFT;\n            } else if( 'TOP_RIGHT' == options.position ){\n               options.controlOptions.anchor = $.ControlAnchor.TOP_RIGHT;\n            } else if( 'TOP_LEFT' == options.position ){\n               options.controlOptions.anchor = $.ControlAnchor.TOP_LEFT;\n            } else if( 'ABSOLUTE' == options.position ){\n               options.controlOptions.anchor = $.ControlAnchor.ABSOLUTE;\n               options.controlOptions.top = options.top;\n               options.controlOptions.left = options.left;\n               options.controlOptions.height = options.height;\n               options.controlOptions.width = options.width;\n            }\n        }\n\n    } else {\n        this.element            = document.getElementById( options.id );\n        options.controlOptions  = {\n            anchor:           $.ControlAnchor.NONE,\n            attachToViewer:   false,\n            autoFade:         false\n        };\n    }\n    this.element.id         = options.id;\n    this.element.className  += ' navigator';\n\n    options = $.extend( true, {\n        sizeRatio:     $.DEFAULT_SETTINGS.navigatorSizeRatio\n    }, options, {\n        element:                this.element,\n        tabIndex:               -1, // No keyboard navigation, omit from tab order\n        //These need to be overridden to prevent recursion since\n        //the navigator is a viewer and a viewer has a navigator\n        showNavigator:          false,\n        mouseNavEnabled:        false,\n        showNavigationControl:  false,\n        showSequenceControl:    false,\n        immediateRender:        true,\n        blendTime:              0,\n        animationTime:          0,\n        autoResize:             options.autoResize,\n        // prevent resizing the navigator from adding unwanted space around the image\n        minZoomImageRatio:      1.0\n    });\n\n    options.minPixelRatio = this.minPixelRatio = viewer.minPixelRatio;\n\n    $.setElementTouchActionNone( this.element );\n\n    this.borderWidth = 2;\n    //At some browser magnification levels the display regions lines up correctly, but at some there appears to\n    //be a one pixel gap.\n    this.fudge = new $.Point(1, 1);\n    this.totalBorderWidths = new $.Point(this.borderWidth*2, this.borderWidth*2).minus(this.fudge);\n\n\n    if ( options.controlOptions.anchor != $.ControlAnchor.NONE ) {\n        (function( style, borderWidth ){\n            style.margin        = '0px';\n            style.border        = borderWidth + 'px solid #555';\n            style.padding       = '0px';\n            style.background    = '#000';\n            style.opacity       = 0.8;\n            style.overflow      = 'hidden';\n        }( this.element.style, this.borderWidth));\n    }\n\n    this.displayRegion           = $.makeNeutralElement( \"div\" );\n    this.displayRegion.id        = this.element.id + '-displayregion';\n    this.displayRegion.className = 'displayregion';\n\n    (function( style, borderWidth ){\n        style.position      = 'relative';\n        style.top           = '0px';\n        style.left          = '0px';\n        style.fontSize      = '0px';\n        style.overflow      = 'hidden';\n        style.border        = borderWidth + 'px solid #900';\n        style.margin        = '0px';\n        style.padding       = '0px';\n        //TODO: IE doesnt like this property being set\n        //try{ style.outline  = '2px auto #909'; }catch(e){/*ignore*/}\n\n        style.background    = 'transparent';\n\n        // We use square bracket notation on the statement below, because float is a keyword.\n        // This is important for the Google Closure compiler, if nothing else.\n        /*jshint sub:true */\n        style['float']      = 'left'; //Webkit\n\n        style.cssFloat      = 'left'; //Firefox\n        style.styleFloat    = 'left'; //IE\n        style.zIndex        = 999999999;\n        style.cursor        = 'default';\n    }( this.displayRegion.style, this.borderWidth ));\n\n    this.displayRegionContainer = $.makeNeutralElement(\"div\");\n    this.displayRegionContainer.id = this.element.id + '-displayregioncontainer';\n    this.displayRegionContainer.className = \"displayregioncontainer\";\n    this.displayRegionContainer.style.width = \"100%\";\n    this.displayRegionContainer.style.height = \"100%\";\n\n    viewer.addControl(\n        this.element,\n        options.controlOptions\n    );\n\n    this._resizeWithViewer = options.controlOptions.anchor != $.ControlAnchor.ABSOLUTE &&\n        options.controlOptions.anchor != $.ControlAnchor.NONE;\n\n    if ( this._resizeWithViewer ) {\n        if ( options.width && options.height ) {\n            this.element.style.height = typeof ( options.height )  == \"number\" ? ( options.height + 'px' ) : options.height;\n            this.element.style.width  = typeof ( options.width )  == \"number\" ? ( options.width + 'px' ) : options.width;\n        } else {\n            viewerSize = $.getElementSize( viewer.element );\n            this.element.style.height = Math.round( viewerSize.y * options.sizeRatio ) + 'px';\n            this.element.style.width  = Math.round( viewerSize.x * options.sizeRatio ) + 'px';\n            this.oldViewerSize = viewerSize;\n        }\n        navigatorSize = $.getElementSize( this.element );\n        this.elementArea = navigatorSize.x * navigatorSize.y;\n    }\n\n    this.oldContainerSize = new $.Point( 0, 0 );\n\n    $.Viewer.apply( this, [ options ] );\n\n    this.displayRegionContainer.appendChild(this.displayRegion);\n    this.element.getElementsByTagName('div')[0].appendChild(this.displayRegionContainer);\n\n    function rotate(degrees) {\n        _setTransformRotate(_this.displayRegionContainer, degrees);\n        _setTransformRotate(_this.displayRegion, -degrees);\n        _this.viewport.setRotation(degrees);\n    }\n    if (options.navigatorRotate) {\n        var degrees = options.viewer.viewport ?\n            options.viewer.viewport.getRotation() :\n            options.viewer.degrees || 0;\n        rotate(degrees);\n        options.viewer.addHandler(\"rotate\", function (args) {\n            rotate(args.degrees);\n        });\n    }\n\n    // Remove the base class' (Viewer's) innerTracker and replace it with our own\n    this.innerTracker.destroy();\n    this.innerTracker = new $.MouseTracker({\n        element:         this.element,\n        dragHandler:     $.delegate( this, onCanvasDrag ),\n        clickHandler:    $.delegate( this, onCanvasClick ),\n        releaseHandler:  $.delegate( this, onCanvasRelease ),\n        scrollHandler:   $.delegate( this, onCanvasScroll )\n    });\n\n    this.addHandler(\"reset-size\", function() {\n        if (_this.viewport) {\n            _this.viewport.goHome(true);\n        }\n    });\n\n    viewer.world.addHandler(\"item-index-change\", function(event) {\n        var item = _this.world.getItemAt(event.previousIndex);\n        _this.world.setItemIndex(item, event.newIndex);\n    });\n\n    viewer.world.addHandler(\"remove-item\", function(event) {\n        var theirItem = event.item;\n        var myItem = _this._getMatchingItem(theirItem);\n        if (myItem) {\n            _this.world.removeItem(myItem);\n        }\n    });\n\n    this.update(viewer.viewport);\n};\n\n$.extend( $.Navigator.prototype, $.EventSource.prototype, $.Viewer.prototype, /** @lends OpenSeadragon.Navigator.prototype */{\n\n    /**\n     * Used to notify the navigator when its size has changed.\n     * Especially useful when {@link OpenSeadragon.Options}.navigatorAutoResize is set to false and the navigator is resizable.\n     * @function\n     */\n    updateSize: function () {\n        if ( this.viewport ) {\n            var containerSize = new $.Point(\n                    (this.container.clientWidth === 0 ? 1 : this.container.clientWidth),\n                    (this.container.clientHeight === 0 ? 1 : this.container.clientHeight)\n                );\n\n            if ( !containerSize.equals( this.oldContainerSize ) ) {\n                this.viewport.resize( containerSize, true );\n                this.viewport.goHome(true);\n                this.oldContainerSize = containerSize;\n                this.drawer.clear();\n                this.world.draw();\n            }\n        }\n    },\n\n    /**\n     * Used to update the navigator minimap's viewport rectangle when a change in the viewer's viewport occurs.\n     * @function\n     * @param {OpenSeadragon.Viewport} The viewport this navigator is tracking.\n     */\n    update: function( viewport ) {\n\n        var viewerSize,\n            newWidth,\n            newHeight,\n            bounds,\n            topleft,\n            bottomright;\n\n        viewerSize = $.getElementSize( this.viewer.element );\n        if ( this._resizeWithViewer && viewerSize.x && viewerSize.y && !viewerSize.equals( this.oldViewerSize ) ) {\n            this.oldViewerSize = viewerSize;\n\n            if ( this.maintainSizeRatio || !this.elementArea) {\n                newWidth  = viewerSize.x * this.sizeRatio;\n                newHeight = viewerSize.y * this.sizeRatio;\n            } else {\n                newWidth = Math.sqrt(this.elementArea * (viewerSize.x / viewerSize.y));\n                newHeight = this.elementArea / newWidth;\n            }\n\n            this.element.style.width  = Math.round( newWidth ) + 'px';\n            this.element.style.height = Math.round( newHeight ) + 'px';\n\n            if (!this.elementArea) {\n                this.elementArea = newWidth * newHeight;\n            }\n\n            this.updateSize();\n        }\n\n        if (viewport && this.viewport) {\n            bounds      = viewport.getBoundsNoRotate(true);\n            topleft     = this.viewport.pixelFromPointNoRotate(bounds.getTopLeft(), false);\n            bottomright = this.viewport.pixelFromPointNoRotate(bounds.getBottomRight(), false)\n                .minus( this.totalBorderWidths );\n\n            //update style for navigator-box\n            var style = this.displayRegion.style;\n            style.display = this.world.getItemCount() ? 'block' : 'none';\n\n            style.top    = Math.round( topleft.y ) + 'px';\n            style.left   = Math.round( topleft.x ) + 'px';\n\n            var width = Math.abs( topleft.x - bottomright.x );\n            var height = Math.abs( topleft.y - bottomright.y );\n            // make sure width and height are non-negative so IE doesn't throw\n            style.width  = Math.round( Math.max( width, 0 ) ) + 'px';\n            style.height = Math.round( Math.max( height, 0 ) ) + 'px';\n        }\n\n    },\n\n    // overrides Viewer.addTiledImage\n    addTiledImage: function(options) {\n        var _this = this;\n\n        var original = options.originalTiledImage;\n        delete options.original;\n\n        var optionsClone = $.extend({}, options, {\n            success: function(event) {\n                var myItem = event.item;\n                myItem._originalForNavigator = original;\n                _this._matchBounds(myItem, original, true);\n\n                original.addHandler('bounds-change', function() {\n                    _this._matchBounds(myItem, original);\n                });\n            }\n        });\n\n        return $.Viewer.prototype.addTiledImage.apply(this, [optionsClone]);\n    },\n\n    // private\n    _getMatchingItem: function(theirItem) {\n        var count = this.world.getItemCount();\n        var item;\n        for (var i = 0; i < count; i++) {\n            item = this.world.getItemAt(i);\n            if (item._originalForNavigator === theirItem) {\n                return item;\n            }\n        }\n\n        return null;\n    },\n\n    // private\n    _matchBounds: function(myItem, theirItem, immediately) {\n        var bounds = theirItem.getBounds();\n        myItem.setPosition(bounds.getTopLeft(), immediately);\n        myItem.setWidth(bounds.width, immediately);\n    }\n});\n\n/**\n * @private\n * @inner\n * @function\n */\nfunction onCanvasClick( event ) {\n    if ( event.quick && this.viewer.viewport ) {\n        this.viewer.viewport.panTo(this.viewport.pointFromPixel(event.position));\n        this.viewer.viewport.applyConstraints();\n    }\n}\n\n/**\n * @private\n * @inner\n * @function\n */\nfunction onCanvasDrag( event ) {\n    if ( this.viewer.viewport ) {\n        if( !this.panHorizontal ){\n            event.delta.x = 0;\n        }\n        if( !this.panVertical ){\n            event.delta.y = 0;\n        }\n        this.viewer.viewport.panBy(\n            this.viewport.deltaPointsFromPixels(\n                event.delta\n            )\n        );\n    }\n}\n\n\n/**\n * @private\n * @inner\n * @function\n */\nfunction onCanvasRelease( event ) {\n    if ( event.insideElementPressed && this.viewer.viewport ) {\n        this.viewer.viewport.applyConstraints();\n    }\n}\n\n\n/**\n * @private\n * @inner\n * @function\n */\nfunction onCanvasScroll( event ) {\n    /**\n     * Raised when a scroll event occurs on the {@link OpenSeadragon.Viewer#navigator} element (mouse wheel, touch pinch, etc.).\n     *\n     * @event navigator-scroll\n     * @memberof OpenSeadragon.Viewer\n     * @type {object}\n     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n     * @property {Number} scroll - The scroll delta for the event.\n     * @property {Boolean} shift - True if the shift key was pressed during this event.\n     * @property {Object} originalEvent - The original DOM event.\n     * @property {?Object} userData - Arbitrary subscriber-defined object.\n     */\n    this.viewer.raiseEvent( 'navigator-scroll', {\n        tracker: event.eventSource,\n        position: event.position,\n        scroll: event.scroll,\n        shift: event.shift,\n        originalEvent: event.originalEvent\n    });\n\n    //dont scroll the page up and down if the user is scrolling\n    //in the navigator\n    return false;\n}\n\n/**\n    * @function\n    * @private\n    * @param {Object} element\n    * @param {Number} degrees\n    */\nfunction _setTransformRotate (element, degrees) {\n    element.style.webkitTransform = \"rotate(\" + degrees + \"deg)\";\n    element.style.mozTransform = \"rotate(\" + degrees + \"deg)\";\n    element.style.msTransform = \"rotate(\" + degrees + \"deg)\";\n    element.style.oTransform = \"rotate(\" + degrees + \"deg)\";\n    element.style.transform = \"rotate(\" + degrees + \"deg)\";\n}\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - getString/setString\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n//TODO: I guess this is where the i18n needs to be reimplemented.  I'll look\n//      into existing patterns for i18n in javascript but i think that mimicking\n//      pythons gettext might be a reasonable approach.\nvar I18N = {\n    Errors: {\n        Dzc:            \"Sorry, we don't support Deep Zoom Collections!\",\n        Dzi:            \"Hmm, this doesn't appear to be a valid Deep Zoom Image.\",\n        Xml:            \"Hmm, this doesn't appear to be a valid Deep Zoom Image.\",\n        ImageFormat:    \"Sorry, we don't support {0}-based Deep Zoom Images.\",\n        Security:       \"It looks like a security restriction stopped us from \" +\n                        \"loading this Deep Zoom Image.\",\n        Status:         \"This space unintentionally left blank ({0} {1}).\",\n        OpenFailed:     \"Unable to open {0}: {1}\"\n    },\n\n    Tooltips: {\n        FullPage:       \"Toggle full page\",\n        Home:           \"Go home\",\n        ZoomIn:         \"Zoom in\",\n        ZoomOut:        \"Zoom out\",\n        NextPage:       \"Next page\",\n        PreviousPage:   \"Previous page\",\n        RotateLeft:     \"Rotate left\",\n        RotateRight:    \"Rotate right\"\n    }\n};\n\n$.extend( $, /** @lends OpenSeadragon */{\n\n    /**\n     * @function\n     * @param {String} property\n     */\n    getString: function( prop ) {\n\n        var props   = prop.split('.'),\n            string  = null,\n            args    = arguments,\n            container = I18N,\n            i;\n\n        for ( i = 0; i < props.length-1; i++ ) {\n            // in case not a subproperty\n            container = container[ props[ i ] ] || {};\n        }\n        string = container[ props[ i ] ];\n\n        if ( typeof( string ) != \"string\" ) {\n            $.console.debug( \"Untranslated source string:\", prop );\n            string = \"\"; // FIXME: this breaks gettext()-style convention, which would return source\n        }\n\n        return string.replace(/\\{\\d+\\}/g, function(capture) {\n            var i = parseInt( capture.match( /\\d+/ ), 10 ) + 1;\n            return i < args.length ?\n                args[ i ] :\n                \"\";\n        });\n    },\n\n    /**\n     * @function\n     * @param {String} property\n     * @param {*} value\n     */\n    setString: function( prop, value ) {\n\n        var props     = prop.split('.'),\n            container = I18N,\n            i;\n\n        for ( i = 0; i < props.length - 1; i++ ) {\n            if ( !container[ props[ i ] ] ) {\n                container[ props[ i ] ] = {};\n            }\n            container = container[ props[ i ] ];\n        }\n\n        container[ props[ i ] ] = value;\n    }\n\n});\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - Point\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n/**\n * @class Point\n * @classdesc A Point is really used as a 2-dimensional vector, equally useful for\n * representing a point on a plane, or the height and width of a plane\n * not requiring any other frame of reference.\n *\n * @memberof OpenSeadragon\n * @param {Number} [x] The vector component 'x'. Defaults to the origin at 0.\n * @param {Number} [y] The vector component 'y'. Defaults to the origin at 0.\n */\n$.Point = function( x, y ) {\n    /**\n     * The vector component 'x'.\n     * @member {Number} x\n     * @memberof OpenSeadragon.Point#\n     */\n    this.x = typeof ( x ) == \"number\" ? x : 0;\n    /**\n     * The vector component 'y'.\n     * @member {Number} y\n     * @memberof OpenSeadragon.Point#\n     */\n    this.y = typeof ( y ) == \"number\" ? y : 0;\n};\n\n/** @lends OpenSeadragon.Point.prototype */\n$.Point.prototype = {\n    /**\n     * @function\n     * @returns {OpenSeadragon.Point} a duplicate of this Point\n     */\n    clone: function() {\n        return new $.Point(this.x, this.y);\n    },\n\n    /**\n     * Add another Point to this point and return a new Point.\n     * @function\n     * @param {OpenSeadragon.Point} point The point to add vector components.\n     * @returns {OpenSeadragon.Point} A new point representing the sum of the\n     *  vector components\n     */\n    plus: function( point ) {\n        return new $.Point(\n            this.x + point.x,\n            this.y + point.y\n        );\n    },\n\n    /**\n     * Substract another Point to this point and return a new Point.\n     * @function\n     * @param {OpenSeadragon.Point} point The point to substract vector components.\n     * @returns {OpenSeadragon.Point} A new point representing the substraction of the\n     *  vector components\n     */\n    minus: function( point ) {\n        return new $.Point(\n            this.x - point.x,\n            this.y - point.y\n        );\n    },\n\n    /**\n     * Multiply this point by a factor and return a new Point.\n     * @function\n     * @param {Number} factor The factor to multiply vector components.\n     * @returns {OpenSeadragon.Point} A new point representing the multiplication\n     *  of the vector components by the factor\n     */\n    times: function( factor ) {\n        return new $.Point(\n            this.x * factor,\n            this.y * factor\n        );\n    },\n\n    /**\n     * Divide this point by a factor and return a new Point.\n     * @function\n     * @param {Number} factor The factor to divide vector components.\n     * @returns {OpenSeadragon.Point} A new point representing the division of the\n     *  vector components by the factor\n     */\n    divide: function( factor ) {\n        return new $.Point(\n            this.x / factor,\n            this.y / factor\n        );\n    },\n\n    /**\n     * Compute the opposite of this point and return a new Point.\n     * @function\n     * @returns {OpenSeadragon.Point} A new point representing the opposite of the\n     *  vector components\n     */\n    negate: function() {\n        return new $.Point( -this.x, -this.y );\n    },\n\n    /**\n     * Compute the distance between this point and another point.\n     * @function\n     * @param {OpenSeadragon.Point} point The point to compute the distance with.\n     * @returns {Number} The distance between the 2 points\n     */\n    distanceTo: function( point ) {\n        return Math.sqrt(\n            Math.pow( this.x - point.x, 2 ) +\n            Math.pow( this.y - point.y, 2 )\n        );\n    },\n\n    /**\n     * Apply a function to each coordinate of this point and return a new point.\n     * @function\n     * @param {function} func The function to apply to each coordinate.\n     * @returns {OpenSeadragon.Point} A new point with the coordinates computed\n     * by the specified function\n     */\n    apply: function( func ) {\n        return new $.Point( func( this.x ), func( this.y ) );\n    },\n\n    /**\n     * Check if this point is equal to another one.\n     * @function\n     * @param {OpenSeadragon.Point} point The point to compare this point with.\n     * @returns {Boolean} true if they are equal, false otherwise.\n     */\n    equals: function( point ) {\n        return (\n            point instanceof $.Point\n        ) && (\n            this.x === point.x\n        ) && (\n            this.y === point.y\n        );\n    },\n\n    /**\n     * Rotates the point around the specified pivot\n     * From http://stackoverflow.com/questions/4465931/rotate-rectangle-around-a-point\n     * @function\n     * @param {Number} degress to rotate around the pivot.\n     * @param {OpenSeadragon.Point} [pivot=(0,0)] Point around which to rotate.\n     * Defaults to the origin.\n     * @returns {OpenSeadragon.Point}. A new point representing the point rotated around the specified pivot\n     */\n    rotate: function (degrees, pivot) {\n        pivot = pivot || new $.Point(0, 0);\n        var cos;\n        var sin;\n        // Avoid float computations when possible\n        if (degrees % 90 === 0) {\n            var d = degrees % 360;\n            if (d < 0) {\n                d += 360;\n            }\n            switch (d) {\n                case 0:\n                    cos = 1;\n                    sin = 0;\n                    break;\n                case 90:\n                    cos = 0;\n                    sin = 1;\n                    break;\n                case 180:\n                    cos = -1;\n                    sin = 0;\n                    break;\n                case 270:\n                    cos = 0;\n                    sin = -1;\n                    break;\n            }\n        } else {\n            var angle = degrees * Math.PI / 180.0;\n            cos = Math.cos(angle);\n            sin = Math.sin(angle);\n        }\n        var x = cos * (this.x - pivot.x) - sin * (this.y - pivot.y) + pivot.x;\n        var y = sin * (this.x - pivot.x) + cos * (this.y - pivot.y) + pivot.y;\n        return new $.Point(x, y);\n    },\n\n    /**\n     * Convert this point to a string in the format (x,y) where x and y are\n     * rounded to the nearest integer.\n     * @function\n     * @returns {String} A string representation of this point.\n     */\n    toString: function() {\n        return \"(\" + (Math.round(this.x * 100) / 100) + \",\" + (Math.round(this.y * 100) / 100) + \")\";\n    }\n};\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - TileSource\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n\n/**\n * @class TileSource\n * @classdesc The TileSource contains the most basic implementation required to create a\n * smooth transition between layers in an image pyramid. It has only a single key\n * interface that must be implemented to complete its key functionality:\n * 'getTileUrl'.  It also has several optional interfaces that can be\n * implemented if a new TileSource wishes to support configuration via a simple\n * object or array ('configure') and if the tile source supports or requires\n * configuration via retrieval of a document on the network ala AJAX or JSONP,\n * ('getImageInfo').\n * <br/>\n * By default the image pyramid is split into N layers where the image's longest\n * side in M (in pixels), where N is the smallest integer which satisfies\n *      <strong>2^(N+1) >= M</strong>.\n *\n * @memberof OpenSeadragon\n * @extends OpenSeadragon.EventSource\n * @param {Object} options\n *      You can either specify a URL, or literally define the TileSource (by specifying\n *      width, height, tileSize, tileOverlap, minLevel, and maxLevel). For the former,\n *      the extending class is expected to implement 'getImageInfo' and 'configure'.\n *      For the latter, the construction is assumed to occur through\n *      the extending classes implementation of 'configure'.\n * @param {String} [options.url]\n *      The URL for the data necessary for this TileSource.\n * @param {Function} [options.success]\n *      A function to be called upon successful creation.\n * @param {Boolean} [options.ajaxWithCredentials]\n *      If this TileSource needs to make an AJAX call, this specifies whether to set\n *      the XHR's withCredentials (for accessing secure data).\n * @param {Number} [options.width]\n *      Width of the source image at max resolution in pixels.\n * @param {Number} [options.height]\n *      Height of the source image at max resolution in pixels.\n * @param {Number} [options.tileSize]\n *      The size of the tiles to assumed to make up each pyramid layer in pixels.\n *      Tile size determines the point at which the image pyramid must be\n *      divided into a matrix of smaller images.\n *      Use options.tileWidth and options.tileHeight to support non-square tiles.\n * @param {Number} [options.tileWidth]\n *      The width of the tiles to assumed to make up each pyramid layer in pixels.\n * @param {Number} [options.tileHeight]\n *      The height of the tiles to assumed to make up each pyramid layer in pixels.\n * @param {Number} [options.tileOverlap]\n *      The number of pixels each tile is expected to overlap touching tiles.\n * @param {Number} [options.minLevel]\n *      The minimum level to attempt to load.\n * @param {Number} [options.maxLevel]\n *      The maximum level to attempt to load.\n */\n$.TileSource = function( width, height, tileSize, tileOverlap, minLevel, maxLevel ) {\n    var _this = this;\n\n    var args = arguments,\n        options,\n        i;\n\n    if( $.isPlainObject( width ) ){\n        options = width;\n    }else{\n        options = {\n            width: args[0],\n            height: args[1],\n            tileSize: args[2],\n            tileOverlap: args[3],\n            minLevel: args[4],\n            maxLevel: args[5]\n        };\n    }\n\n    //Tile sources supply some events, namely 'ready' when they must be configured\n    //by asynchronously fetching their configuration data.\n    $.EventSource.call( this );\n\n    //we allow options to override anything we dont treat as\n    //required via idiomatic options or which is functionally\n    //set depending on the state of the readiness of this tile\n    //source\n    $.extend( true, this, options );\n\n    if (!this.success) {\n        //Any functions that are passed as arguments are bound to the ready callback\n        for ( i = 0; i < arguments.length; i++ ) {\n            if ( $.isFunction( arguments[ i ] ) ) {\n                this.success = arguments[ i ];\n                //only one callback per constructor\n                break;\n            }\n        }\n    }\n\n    if (this.success) {\n        this.addHandler( 'ready', function ( event ) {\n            _this.success( event );\n        } );\n    }\n\n    /**\n     * Ratio of width to height\n     * @member {Number} aspectRatio\n     * @memberof OpenSeadragon.TileSource#\n     */\n    /**\n     * Vector storing x and y dimensions ( width and height respectively ).\n     * @member {OpenSeadragon.Point} dimensions\n     * @memberof OpenSeadragon.TileSource#\n     */\n    /**\n     * The overlap in pixels each tile shares with its adjacent neighbors.\n     * @member {Number} tileOverlap\n     * @memberof OpenSeadragon.TileSource#\n     */\n    /**\n     * The minimum pyramid level this tile source supports or should attempt to load.\n     * @member {Number} minLevel\n     * @memberof OpenSeadragon.TileSource#\n     */\n    /**\n     * The maximum pyramid level this tile source supports or should attempt to load.\n     * @member {Number} maxLevel\n     * @memberof OpenSeadragon.TileSource#\n     */\n    /**\n     *\n     * @member {Boolean} ready\n     * @memberof OpenSeadragon.TileSource#\n     */\n\n    if( 'string' == $.type( arguments[ 0 ] ) ){\n        this.url = arguments[0];\n    }\n\n    if (this.url) {\n        //in case the getImageInfo method is overriden and/or implies an\n        //async mechanism set some safe defaults first\n        this.aspectRatio = 1;\n        this.dimensions  = new $.Point( 10, 10 );\n        this._tileWidth  = 0;\n        this._tileHeight = 0;\n        this.tileOverlap = 0;\n        this.minLevel    = 0;\n        this.maxLevel    = 0;\n        this.ready       = false;\n        //configuration via url implies the extending class\n        //implements and 'configure'\n        this.getImageInfo( this.url );\n\n    } else {\n\n        //explicit configuration via positional args in constructor\n        //or the more idiomatic 'options' object\n        this.ready       = true;\n        this.aspectRatio = ( options.width && options.height ) ?\n            (  options.width / options.height ) : 1;\n        this.dimensions  = new $.Point( options.width, options.height );\n\n        if ( this.tileSize ){\n            this._tileWidth = this._tileHeight = this.tileSize;\n            delete this.tileSize;\n        } else {\n            if( this.tileWidth ){\n                // We were passed tileWidth in options, but we want to rename it\n                // with a leading underscore to make clear that it is not safe to directly modify it\n                this._tileWidth = this.tileWidth;\n                delete this.tileWidth;\n            } else {\n                this._tileWidth = 0;\n            }\n\n            if( this.tileHeight ){\n                // See note above about renaming this.tileWidth\n                this._tileHeight = this.tileHeight;\n                delete this.tileHeight;\n            } else {\n                this._tileHeight = 0;\n            }\n        }\n\n        this.tileOverlap = options.tileOverlap ? options.tileOverlap : 0;\n        this.minLevel    = options.minLevel ? options.minLevel : 0;\n        this.maxLevel    = ( undefined !== options.maxLevel && null !== options.maxLevel ) ?\n            options.maxLevel : (\n                ( options.width && options.height ) ? Math.ceil(\n                    Math.log( Math.max( options.width, options.height ) ) /\n                    Math.log( 2 )\n                ) : 0\n            );\n        if( this.success && $.isFunction( this.success ) ){\n            this.success( this );\n        }\n    }\n\n\n};\n\n/** @lends OpenSeadragon.TileSource.prototype */\n$.TileSource.prototype = {\n\n    getTileSize: function( level ) {\n        $.console.error(\n            \"[TileSource.getTileSize] is deprecated.\" +\n            \"Use TileSource.getTileWidth() and TileSource.getTileHeight() instead\"\n        );\n        return this._tileWidth;\n    },\n\n    /**\n     * Return the tileWidth for a given level.\n     * Subclasses should override this if tileWidth can be different at different levels\n     *   such as in IIIFTileSource.  Code should use this function rather than reading\n     *   from ._tileWidth directly.\n     * @function\n     * @param {Number} level\n     */\n    getTileWidth: function( level ) {\n        if (!this._tileWidth) {\n            return this.getTileSize(level);\n        }\n        return this._tileWidth;\n    },\n\n    /**\n     * Return the tileHeight for a given level.\n     * Subclasses should override this if tileHeight can be different at different levels\n     *   such as in IIIFTileSource.  Code should use this function rather than reading\n     *   from ._tileHeight directly.\n     * @function\n     * @param {Number} level\n     */\n    getTileHeight: function( level ) {\n        if (!this._tileHeight) {\n            return this.getTileSize(level);\n        }\n        return this._tileHeight;\n    },\n\n    /**\n     * @function\n     * @param {Number} level\n     */\n    getLevelScale: function( level ) {\n\n        // see https://github.com/openseadragon/openseadragon/issues/22\n        // we use the tilesources implementation of getLevelScale to generate\n        // a memoized re-implementation\n        var levelScaleCache = {},\n            i;\n        for( i = 0; i <= this.maxLevel; i++ ){\n            levelScaleCache[ i ] = 1 / Math.pow(2, this.maxLevel - i);\n        }\n        this.getLevelScale = function( _level ){\n            return levelScaleCache[ _level ];\n        };\n        return this.getLevelScale( level );\n    },\n\n    /**\n     * @function\n     * @param {Number} level\n     */\n    getNumTiles: function( level ) {\n        var scale = this.getLevelScale( level ),\n            x = Math.ceil( scale * this.dimensions.x / this.getTileWidth(level) ),\n            y = Math.ceil( scale * this.dimensions.y / this.getTileHeight(level) );\n\n        return new $.Point( x, y );\n    },\n\n    /**\n     * @function\n     * @param {Number} level\n     */\n    getPixelRatio: function( level ) {\n        var imageSizeScaled = this.dimensions.times( this.getLevelScale( level ) ),\n            rx = 1.0 / imageSizeScaled.x,\n            ry = 1.0 / imageSizeScaled.y;\n\n        return new $.Point(rx, ry);\n    },\n\n\n    /**\n     * @function\n     * @param {Number} level\n     */\n    getClosestLevel: function( rect ) {\n        var i,\n            tilesPerSide,\n            tiles;\n\n        for( i = this.minLevel; i < this.maxLevel; i++ ){\n            tiles = this.getNumTiles( i );\n            tilesPerSide = new $.Point(\n              Math.floor( rect.x / this.getTileWidth(i) ),\n              Math.floor( rect.y / this.getTileHeight(i) )\n            );\n\n            if( tiles.x + 1 >= tilesPerSide.x && tiles.y + 1 >= tilesPerSide.y ){\n                break;\n            }\n        }\n        return Math.max( 0, i - 1 );\n    },\n\n    /**\n     * @function\n     * @param {Number} level\n     * @param {OpenSeadragon.Point} point\n     */\n    getTileAtPoint: function( level, point ) {\n        var pixel = point.times( this.dimensions.x ).times( this.getLevelScale(level) ),\n            tx = Math.floor( pixel.x / this.getTileWidth(level) ),\n            ty = Math.floor( pixel.y / this.getTileHeight(level) );\n\n        return new $.Point( tx, ty );\n    },\n\n    /**\n     * @function\n     * @param {Number} level\n     * @param {Number} x\n     * @param {Number} y\n     */\n    getTileBounds: function( level, x, y ) {\n        var dimensionsScaled = this.dimensions.times( this.getLevelScale( level ) ),\n            tileWidth = this.getTileWidth(level),\n            tileHeight = this.getTileHeight(level),\n            px = ( x === 0 ) ? 0 : tileWidth * x - this.tileOverlap,\n            py = ( y === 0 ) ? 0 : tileHeight * y - this.tileOverlap,\n            sx = tileWidth + ( x === 0 ? 1 : 2 ) * this.tileOverlap,\n            sy = tileHeight + ( y === 0 ? 1 : 2 ) * this.tileOverlap,\n            scale = 1.0 / dimensionsScaled.x;\n\n        sx = Math.min( sx, dimensionsScaled.x - px );\n        sy = Math.min( sy, dimensionsScaled.y - py );\n\n        return new $.Rect( px * scale, py * scale, sx * scale, sy * scale );\n    },\n\n\n    /**\n     * Responsible for retrieving, and caching the\n     * image metadata pertinent to this TileSources implementation.\n     * @function\n     * @param {String} url\n     * @throws {Error}\n     */\n    getImageInfo: function( url ) {\n        var _this = this,\n            callbackName,\n            callback,\n            readySource,\n            options,\n            urlParts,\n            filename,\n            lastDot;\n\n\n        if( url ) {\n            urlParts = url.split( '/' );\n            filename = urlParts[ urlParts.length - 1 ];\n            lastDot  = filename.lastIndexOf( '.' );\n            if ( lastDot > -1 ) {\n                urlParts[ urlParts.length - 1 ] = filename.slice( 0, lastDot );\n            }\n        }\n\n        callback = function( data ){\n            if( typeof(data) === \"string\" ) {\n                data = $.parseXml( data );\n            }\n            var $TileSource = $.TileSource.determineType( _this, data, url );\n            if ( !$TileSource ) {\n                /**\n                 * Raised when an error occurs loading a TileSource.\n                 *\n                 * @event open-failed\n                 * @memberof OpenSeadragon.TileSource\n                 * @type {object}\n                 * @property {OpenSeadragon.TileSource} eventSource - A reference to the TileSource which raised the event.\n                 * @property {String} message\n                 * @property {String} source\n                 * @property {?Object} userData - Arbitrary subscriber-defined object.\n                 */\n                _this.raiseEvent( 'open-failed', { message: \"Unable to load TileSource\", source: url } );\n                return;\n            }\n\n            options = $TileSource.prototype.configure.apply( _this, [ data, url ]);\n            if (options.ajaxWithCredentials === undefined) {\n                options.ajaxWithCredentials = _this.ajaxWithCredentials;\n            }\n\n            readySource = new $TileSource( options );\n            _this.ready = true;\n            /**\n             * Raised when a TileSource is opened and initialized.\n             *\n             * @event ready\n             * @memberof OpenSeadragon.TileSource\n             * @type {object}\n             * @property {OpenSeadragon.TileSource} eventSource - A reference to the TileSource which raised the event.\n             * @property {Object} tileSource\n             * @property {?Object} userData - Arbitrary subscriber-defined object.\n             */\n            _this.raiseEvent( 'ready', { tileSource: readySource } );\n        };\n\n        if( url.match(/\\.js$/) ){\n            //TODO: Its not very flexible to require tile sources to end jsonp\n            //      request for info  with a url that ends with '.js' but for\n            //      now it's the only way I see to distinguish uniformly.\n            callbackName = url.split( '/' ).pop().replace('.js','');\n            $.jsonp({\n                url: url,\n                async: false,\n                callbackName: callbackName,\n                callback: callback\n            });\n        } else {\n            // request info via xhr asynchronously.\n            $.makeAjaxRequest( {\n                url: url,\n                withCredentials: this.ajaxWithCredentials,\n                success: function( xhr ) {\n                    var data = processResponse( xhr );\n                    callback( data );\n                },\n                error: function ( xhr, exc ) {\n                    var msg;\n\n                    /*\n                        IE < 10 will block XHR requests to different origins. Any property access on the request\n                        object will raise an exception which we'll attempt to handle by formatting the original\n                        exception rather than the second one raised when we try to access xhr.status\n                     */\n                    try {\n                        msg = \"HTTP \" + xhr.status + \" attempting to load TileSource\";\n                    } catch ( e ) {\n                        var formattedExc;\n                        if ( typeof( exc ) == \"undefined\" || !exc.toString ) {\n                            formattedExc = \"Unknown error\";\n                        } else {\n                            formattedExc = exc.toString();\n                        }\n\n                        msg = formattedExc + \" attempting to load TileSource\";\n                    }\n\n                    /***\n                     * Raised when an error occurs loading a TileSource.\n                     *\n                     * @event open-failed\n                     * @memberof OpenSeadragon.TileSource\n                     * @type {object}\n                     * @property {OpenSeadragon.TileSource} eventSource - A reference to the TileSource which raised the event.\n                     * @property {String} message\n                     * @property {String} source\n                     * @property {?Object} userData - Arbitrary subscriber-defined object.\n                     */\n                    _this.raiseEvent( 'open-failed', {\n                        message: msg,\n                        source: url\n                    });\n                }\n            });\n        }\n\n    },\n\n    /**\n     * Responsible determining if a the particular TileSource supports the\n     * data format ( and allowed to apply logic against the url the data was\n     * loaded from, if any ). Overriding implementations are expected to do\n     * something smart with data and / or url to determine support.  Also\n     * understand that iteration order of TileSources is not guarunteed so\n     * please make sure your data or url is expressive enough to ensure a simple\n     * and sufficient mechanisim for clear determination.\n     * @function\n     * @param {String|Object|Array|Document} data\n     * @param {String} url - the url the data was loaded\n     *      from if any.\n     * @return {Boolean}\n     */\n    supports: function( data, url ) {\n        return false;\n    },\n\n    /**\n     * Responsible for parsing and configuring the\n     * image metadata pertinent to this TileSources implementation.\n     * This method is not implemented by this class other than to throw an Error\n     * announcing you have to implement it.  Because of the variety of tile\n     * server technologies, and various specifications for building image\n     * pyramids, this method is here to allow easy integration.\n     * @function\n     * @param {String|Object|Array|Document} data\n     * @param {String} url - the url the data was loaded\n     *      from if any.\n     * @return {Object} options - A dictionary of keyword arguments sufficient\n     *      to configure this tile sources constructor.\n     * @throws {Error}\n     */\n    configure: function( data, url ) {\n        throw new Error( \"Method not implemented.\" );\n    },\n\n    /**\n     * Responsible for retriving the url which will return an image for the\n     * region specified by the given x, y, and level components.\n     * This method is not implemented by this class other than to throw an Error\n     * announcing you have to implement it.  Because of the variety of tile\n     * server technologies, and various specifications for building image\n     * pyramids, this method is here to allow easy integration.\n     * @function\n     * @param {Number} level\n     * @param {Number} x\n     * @param {Number} y\n     * @throws {Error}\n     */\n    getTileUrl: function( level, x, y ) {\n        throw new Error( \"Method not implemented.\" );\n    },\n\n    /**\n     * @function\n     * @param {Number} level\n     * @param {Number} x\n     * @param {Number} y\n     */\n    tileExists: function( level, x, y ) {\n        var numTiles = this.getNumTiles( level );\n        return  level >= this.minLevel &&\n                level <= this.maxLevel &&\n                x >= 0 &&\n                y >= 0 &&\n                x < numTiles.x &&\n                y < numTiles.y;\n    }\n};\n\n\n$.extend( true, $.TileSource.prototype, $.EventSource.prototype );\n\n\n/**\n * Decides whether to try to process the response as xml, json, or hand back\n * the text\n * @private\n * @inner\n * @function\n * @param {XMLHttpRequest} xhr - the completed network request\n */\nfunction processResponse( xhr ){\n    var responseText = xhr.responseText,\n        status       = xhr.status,\n        statusText,\n        data;\n\n    if ( !xhr ) {\n        throw new Error( $.getString( \"Errors.Security\" ) );\n    } else if ( xhr.status !== 200 && xhr.status !== 0 ) {\n        status     = xhr.status;\n        statusText = ( status == 404 ) ?\n            \"Not Found\" :\n            xhr.statusText;\n        throw new Error( $.getString( \"Errors.Status\", status, statusText ) );\n    }\n\n    if( responseText.match(/\\s*<.*/) ){\n        try{\n        data = ( xhr.responseXML && xhr.responseXML.documentElement ) ?\n            xhr.responseXML :\n            $.parseXml( responseText );\n        } catch (e){\n            data = xhr.responseText;\n        }\n    }else if( responseText.match(/\\s*[\\{\\[].*/) ){\n        data = $.parseJSON(responseText);\n    }else{\n        data = responseText;\n    }\n    return data;\n}\n\n\n/**\n * Determines the TileSource Implementation by introspection of OpenSeadragon\n * namespace, calling each TileSource implementation of 'isType'\n * @private\n * @inner\n * @function\n * @param {Object|Array|Document} data - the tile source configuration object\n * @param {String} url - the url where the tile source configuration object was\n *      loaded from, if any.\n */\n$.TileSource.determineType = function( tileSource, data, url ){\n    var property;\n    for( property in OpenSeadragon ){\n        if( property.match(/.+TileSource$/) &&\n            $.isFunction( OpenSeadragon[ property ] ) &&\n            $.isFunction( OpenSeadragon[ property ].prototype.supports ) &&\n            OpenSeadragon[ property ].prototype.supports.call( tileSource, data, url )\n        ){\n            return OpenSeadragon[ property ];\n        }\n    }\n\n    $.console.error( \"No TileSource was able to open %s %s\", url, data );\n};\n\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - DziTileSource\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n/**\n * @class DziTileSource\n * @memberof OpenSeadragon\n * @extends OpenSeadragon.TileSource\n * @param {Number|Object} width - the pixel width of the image or the idiomatic\n *      options object which is used instead of positional arguments.\n * @param {Number} height\n * @param {Number} tileSize\n * @param {Number} tileOverlap\n * @param {String} tilesUrl\n * @param {String} fileFormat\n * @param {OpenSeadragon.DisplayRect[]} displayRects\n * @property {String} tilesUrl\n * @property {String} fileFormat\n * @property {OpenSeadragon.DisplayRect[]} displayRects\n */\n$.DziTileSource = function( width, height, tileSize, tileOverlap, tilesUrl, fileFormat, displayRects, minLevel, maxLevel ) {\n    var i,\n        rect,\n        level,\n        options;\n\n    if( $.isPlainObject( width ) ){\n        options = width;\n    }else{\n        options = {\n            width: arguments[ 0 ],\n            height: arguments[ 1 ],\n            tileSize: arguments[ 2 ],\n            tileOverlap: arguments[ 3 ],\n            tilesUrl: arguments[ 4 ],\n            fileFormat: arguments[ 5 ],\n            displayRects: arguments[ 6 ],\n            minLevel: arguments[ 7 ],\n            maxLevel: arguments[ 8 ]\n        };\n    }\n\n    this._levelRects  = {};\n    this.tilesUrl     = options.tilesUrl;\n    this.fileFormat   = options.fileFormat;\n    this.displayRects = options.displayRects;\n\n    if ( this.displayRects ) {\n        for ( i = this.displayRects.length - 1; i >= 0; i-- ) {\n            rect = this.displayRects[ i ];\n            for ( level = rect.minLevel; level <= rect.maxLevel; level++ ) {\n                if ( !this._levelRects[ level ] ) {\n                    this._levelRects[ level ] = [];\n                }\n                this._levelRects[ level ].push( rect );\n            }\n        }\n    }\n\n    $.TileSource.apply( this, [ options ] );\n\n};\n\n$.extend( $.DziTileSource.prototype, $.TileSource.prototype, /** @lends OpenSeadragon.DziTileSource.prototype */{\n\n\n    /**\n     * Determine if the data and/or url imply the image service is supported by\n     * this tile source.\n     * @function\n     * @param {Object|Array} data\n     * @param {String} optional - url\n     */\n    supports: function( data, url ){\n        var ns;\n        if ( data.Image ) {\n            ns = data.Image.xmlns;\n        } else if ( data.documentElement) {\n            if (\"Image\" == data.documentElement.localName || \"Image\" == data.documentElement.tagName) {\n                ns = data.documentElement.namespaceURI;\n            }\n        }\n\n        return ( \"http://schemas.microsoft.com/deepzoom/2008\" == ns ||\n            \"http://schemas.microsoft.com/deepzoom/2009\" == ns );\n    },\n\n    /**\n     *\n     * @function\n     * @param {Object|XMLDocument} data - the raw configuration\n     * @param {String} url - the url the data was retreived from if any.\n     * @return {Object} options - A dictionary of keyword arguments sufficient\n     *      to configure this tile sources constructor.\n     */\n    configure: function( data, url ){\n\n        var options;\n\n        if( !$.isPlainObject(data) ){\n\n            options = configureFromXML( this, data );\n\n        }else{\n\n            options = configureFromObject( this, data );\n        }\n\n        if (url && !options.tilesUrl) {\n            options.tilesUrl = url.replace(\n                    /([^\\/]+?)(\\.(dzi|xml|js))?\\/?(\\?.*)?$/, '$1_files/');\n\n            if (url.search(/\\.(dzi|xml|js)\\?/) != -1) {\n                options.queryParams = url.match(/\\?.*/);\n            }else{\n                options.queryParams = '';\n            }\n        }\n\n        return options;\n    },\n\n\n    /**\n     * @function\n     * @param {Number} level\n     * @param {Number} x\n     * @param {Number} y\n     */\n    getTileUrl: function( level, x, y ) {\n        return [ this.tilesUrl, level, '/', x, '_', y, '.', this.fileFormat, this.queryParams ].join( '' );\n    },\n\n\n    /**\n     * @function\n     * @param {Number} level\n     * @param {Number} x\n     * @param {Number} y\n     */\n    tileExists: function( level, x, y ) {\n        var rects = this._levelRects[ level ],\n            rect,\n            scale,\n            xMin,\n            yMin,\n            xMax,\n            yMax,\n            i;\n\n        if ( !rects || !rects.length ) {\n            return true;\n        }\n\n        for ( i = rects.length - 1; i >= 0; i-- ) {\n            rect = rects[ i ];\n\n            if ( level < rect.minLevel || level > rect.maxLevel ) {\n                continue;\n            }\n\n            scale = this.getLevelScale( level );\n            xMin = rect.x * scale;\n            yMin = rect.y * scale;\n            xMax = xMin + rect.width * scale;\n            yMax = yMin + rect.height * scale;\n\n            xMin = Math.floor( xMin / this.tileSize );\n            yMin = Math.floor( yMin / this.tileSize );\n            xMax = Math.ceil( xMax / this.tileSize );\n            yMax = Math.ceil( yMax / this.tileSize );\n\n            if ( xMin <= x && x < xMax && yMin <= y && y < yMax ) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n});\n\n\n/**\n * @private\n * @inner\n * @function\n */\nfunction configureFromXML( tileSource, xmlDoc ){\n\n    if ( !xmlDoc || !xmlDoc.documentElement ) {\n        throw new Error( $.getString( \"Errors.Xml\" ) );\n    }\n\n    var root           = xmlDoc.documentElement,\n        rootName       = root.localName || root.tagName,\n        ns             = xmlDoc.documentElement.namespaceURI,\n        configuration  = null,\n        displayRects   = [],\n        dispRectNodes,\n        dispRectNode,\n        rectNode,\n        sizeNode,\n        i;\n\n    if ( rootName == \"Image\" ) {\n\n        try {\n            sizeNode = root.getElementsByTagName(\"Size\" )[ 0 ];\n            if (sizeNode === undefined) {\n                sizeNode = root.getElementsByTagNameNS(ns, \"Size\" )[ 0 ];\n            }\n\n            configuration = {\n                Image: {\n                    xmlns:       \"http://schemas.microsoft.com/deepzoom/2008\",\n                    Url:         root.getAttribute( \"Url\" ),\n                    Format:      root.getAttribute( \"Format\" ),\n                    DisplayRect: null,\n                    Overlap:     parseInt( root.getAttribute( \"Overlap\" ), 10 ),\n                    TileSize:    parseInt( root.getAttribute( \"TileSize\" ), 10 ),\n                    Size: {\n                        Height: parseInt( sizeNode.getAttribute( \"Height\" ), 10 ),\n                        Width:  parseInt( sizeNode.getAttribute( \"Width\" ), 10 )\n                    }\n                }\n            };\n\n            if ( !$.imageFormatSupported( configuration.Image.Format ) ) {\n                throw new Error(\n                    $.getString( \"Errors.ImageFormat\", configuration.Image.Format.toUpperCase() )\n                );\n            }\n\n            dispRectNodes = root.getElementsByTagName(\"DisplayRect\" );\n            if (dispRectNodes === undefined) {\n                dispRectNodes = root.getElementsByTagNameNS(ns, \"DisplayRect\" )[ 0 ];\n            }\n\n            for ( i = 0; i < dispRectNodes.length; i++ ) {\n                dispRectNode = dispRectNodes[ i ];\n                rectNode     = dispRectNode.getElementsByTagName(\"Rect\" )[ 0 ];\n                if (rectNode === undefined) {\n                    rectNode = dispRectNode.getElementsByTagNameNS(ns, \"Rect\" )[ 0 ];\n                }\n\n                displayRects.push({\n                    Rect: {\n                        X: parseInt( rectNode.getAttribute( \"X\" ), 10 ),\n                        Y: parseInt( rectNode.getAttribute( \"Y\" ), 10 ),\n                        Width: parseInt( rectNode.getAttribute( \"Width\" ), 10 ),\n                        Height: parseInt( rectNode.getAttribute( \"Height\" ), 10 ),\n                        MinLevel: parseInt( dispRectNode.getAttribute( \"MinLevel\" ), 10 ),\n                        MaxLevel: parseInt( dispRectNode.getAttribute( \"MaxLevel\" ), 10 )\n                    }\n                });\n            }\n\n            if( displayRects.length ){\n                configuration.Image.DisplayRect = displayRects;\n            }\n\n            return configureFromObject( tileSource, configuration );\n\n        } catch ( e ) {\n            throw (e instanceof Error) ?\n                e :\n                new Error( $.getString(\"Errors.Dzi\") );\n        }\n    } else if ( rootName == \"Collection\" ) {\n        throw new Error( $.getString( \"Errors.Dzc\" ) );\n    } else if ( rootName == \"Error\" ) {\n        var messageNode = root.getElementsByTagName(\"Message\")[0];\n        var message = messageNode.firstChild.nodeValue;\n        throw new Error(message);\n    }\n\n    throw new Error( $.getString( \"Errors.Dzi\" ) );\n}\n\n/**\n * @private\n * @inner\n * @function\n */\nfunction configureFromObject( tileSource, configuration ){\n    var imageData     = configuration.Image,\n        tilesUrl      = imageData.Url,\n        fileFormat    = imageData.Format,\n        sizeData      = imageData.Size,\n        dispRectData  = imageData.DisplayRect || [],\n        width         = parseInt( sizeData.Width, 10 ),\n        height        = parseInt( sizeData.Height, 10 ),\n        tileSize      = parseInt( imageData.TileSize, 10 ),\n        tileOverlap   = parseInt( imageData.Overlap, 10 ),\n        displayRects  = [],\n        rectData,\n        i;\n\n    //TODO: need to figure out out to better handle image format compatibility\n    //      which actually includes additional file formats like xml and pdf\n    //      and plain text for various tilesource implementations to avoid low\n    //      level errors.\n    //\n    //      For now, just don't perform the check.\n    //\n    /*if ( !imageFormatSupported( fileFormat ) ) {\n        throw new Error(\n            $.getString( \"Errors.ImageFormat\", fileFormat.toUpperCase() )\n        );\n    }*/\n\n    for ( i = 0; i < dispRectData.length; i++ ) {\n        rectData = dispRectData[ i ].Rect;\n\n        displayRects.push( new $.DisplayRect(\n            parseInt( rectData.X, 10 ),\n            parseInt( rectData.Y, 10 ),\n            parseInt( rectData.Width, 10 ),\n            parseInt( rectData.Height, 10 ),\n            parseInt( rectData.MinLevel, 10 ),\n            parseInt( rectData.MaxLevel, 10 )\n        ));\n    }\n\n    return $.extend(true, {\n        width: width, /* width *required */\n        height: height, /* height *required */\n        tileSize: tileSize, /* tileSize *required */\n        tileOverlap: tileOverlap, /* tileOverlap *required */\n        minLevel: null, /* minLevel */\n        maxLevel: null, /* maxLevel */\n        tilesUrl: tilesUrl, /* tilesUrl */\n        fileFormat: fileFormat, /* fileFormat */\n        displayRects: displayRects /* displayRects */\n    }, configuration );\n\n}\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - IIIFTileSource\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n/**\n * @class IIIFTileSource\n * @classdesc A client implementation of the International Image Interoperability Framework\n * Format: Image API 1.0 - 2.1\n *\n * @memberof OpenSeadragon\n * @extends OpenSeadragon.TileSource\n * @see http://iiif.io/api/image/\n */\n$.IIIFTileSource = function( options ){\n\n\n    $.extend( true, this, options );\n\n    if ( !( this.height && this.width && this['@id'] ) ) {\n        throw new Error( 'IIIF required parameters not provided.' );\n    }\n\n    options.tileSizePerScaleFactor = {};\n\n    // N.B. 2.0 renamed scale_factors to scaleFactors\n    if ( this.tile_width && this.tile_height ) {\n        options.tileWidth = this.tile_width;\n        options.tileHeight = this.tile_height;\n    } else if ( this.tile_width ) {\n        options.tileSize = this.tile_width;\n    } else if ( this.tile_height ) {\n        options.tileSize = this.tile_height;\n    } else if ( this.tiles ) {\n        // Version 2.0 forwards\n        if ( this.tiles.length == 1 ) {\n            options.tileWidth  = this.tiles[0].width;\n            // Use height if provided, otherwise assume square tiles and use width.\n            options.tileHeight = this.tiles[0].height || this.tiles[0].width;\n            this.scale_factors = this.tiles[0].scaleFactors;\n        } else {\n            // Multiple tile sizes at different levels\n            this.scale_factors = [];\n            for (var t = 0; t < this.tiles.length; t++ ) {\n                for (var sf = 0; sf < this.tiles[t].scaleFactors.length; sf++) {\n                    var scaleFactor = this.tiles[t].scaleFactors[sf];\n                    this.scale_factors.push(scaleFactor);\n                    options.tileSizePerScaleFactor[scaleFactor] = {\n                        width: this.tiles[t].width,\n                        height: this.tiles[t].height || this.tiles[t].width\n                    };\n                }\n            }\n        }\n    } else if ( canBeTiled(options.profile) ) {\n        // use the largest of tileOptions that is smaller than the short dimension\n        var shortDim = Math.min( this.height, this.width ),\n            tileOptions = [256,512,1024],\n            smallerTiles = [];\n\n        for ( var c = 0; c < tileOptions.length; c++ ) {\n            if ( tileOptions[c] <= shortDim ) {\n                smallerTiles.push( tileOptions[c] );\n            }\n        }\n\n        if ( smallerTiles.length > 0 ) {\n            options.tileSize = Math.max.apply( null, smallerTiles );\n        } else {\n            // If we're smaller than 256, just use the short side.\n            options.tileSize = shortDim;\n        }\n    } else if (this.sizes && this.sizes.length > 0) {\n        // This info.json can't be tiled, but we can still construct a legacy pyramid from the sizes array. \n        // In this mode, IIIFTileSource will call functions from the abstract baseTileSource or the \n        // LegacyTileSource instead of performing IIIF tiling.      \n        this.emulateLegacyImagePyramid = true;\n        \n        options.levels = constructLevels( this );\n        // use the largest available size to define tiles\n        $.extend( true, options, {\n            width: options.levels[ options.levels.length - 1 ].width,\n            height: options.levels[ options.levels.length - 1 ].height,\n            tileSize: Math.max( options.height, options.width ),\n            tileOverlap: 0,\n            minLevel: 0,\n            maxLevel: options.levels.length - 1\n        });\n        this.levels = options.levels;\n    } else {\n        $.console.error(\"Nothing in the info.json to construct image pyramids from\");\n    }\n\n    if (!options.maxLevel && !this.emulateLegacyImagePyramid) {\n        if (!this.scale_factors) {\n            options.maxLevel = Number(Math.ceil(Math.log(Math.max(this.width, this.height), 2)));\n        } else {\n            options.maxLevel = Math.floor(Math.pow(Math.max.apply(null, this.scale_factors), 0.5));\n        }\n    }\n\n    $.TileSource.apply( this, [ options ] );\n};\n\n$.extend( $.IIIFTileSource.prototype, $.TileSource.prototype, /** @lends OpenSeadragon.IIIFTileSource.prototype */{\n    /**\n     * Determine if the data and/or url imply the image service is supported by\n     * this tile source.\n     * @function\n     * @param {Object|Array} data\n     * @param {String} optional - url\n     */\n     \n    supports: function( data, url ) {\n        // Version 2.0 and forwards\n        if (data.protocol && data.protocol == 'http://iiif.io/api/image') {\n            return true;\n        // Version 1.1\n        } else if ( data['@context'] && (\n            data['@context'] == \"http://library.stanford.edu/iiif/image-api/1.1/context.json\" ||\n            data['@context'] == \"http://iiif.io/api/image/1/context.json\") ) {\n            // N.B. the iiif.io context is wrong, but where the representation lives so likely to be used\n            return true;\n\n        // Version 1.0\n        } else if ( data.profile &&\n            data.profile.indexOf(\"http://library.stanford.edu/iiif/image-api/compliance.html\") === 0) {\n            return true;\n        } else if ( data.identifier && data.width && data.height ) {\n            return true;\n        } else if ( data.documentElement &&\n            \"info\" == data.documentElement.tagName &&\n            \"http://library.stanford.edu/iiif/image-api/ns/\" ==\n                data.documentElement.namespaceURI) {\n            return true;\n\n        // Not IIIF\n        } else {\n            return false;\n        }\n    },\n\n    /**\n     *\n     * @function\n     * @param {Object} data - the raw configuration\n     * @example <caption>IIIF 1.1 Info Looks like this</caption>\n     * {\n     *   \"@context\" : \"http://library.stanford.edu/iiif/image-api/1.1/context.json\",\n     *   \"@id\" : \"http://iiif.example.com/prefix/1E34750D-38DB-4825-A38A-B60A345E591C\",\n     *   \"width\" : 6000,\n     *   \"height\" : 4000,\n     *   \"scale_factors\" : [ 1, 2, 4 ],\n     *   \"tile_width\" : 1024,\n     *   \"tile_height\" : 1024,\n     *   \"formats\" : [ \"jpg\", \"png\" ],\n     *   \"qualities\" : [ \"native\", \"grey\" ],\n     *   \"profile\" : \"http://library.stanford.edu/iiif/image-api/1.1/compliance.html#level0\"\n     * }\n     */\n    configure: function( data, url ){\n        // Try to deduce our version and fake it upwards if needed\n        if ( !$.isPlainObject(data) ) {\n            var options = configureFromXml10( data );\n            options['@context'] = \"http://iiif.io/api/image/1.0/context.json\";\n            options['@id'] = url.replace('/info.xml', '');\n            return options;\n        } else if ( !data['@context'] ) {\n            data['@context'] = 'http://iiif.io/api/image/1.0/context.json';\n            data['@id'] = url.replace('/info.json', '');\n            return data;\n        } else {\n            return data;\n        }\n    },\n\n    /**\n     * Return the tileWidth for the given level.\n     * @function\n     * @param {Number} level\n     */\n    getTileWidth: function( level ) {\n\n        if(this.emulateLegacyImagePyramid) {\n            return $.TileSource.prototype.getTileWidth.call(this, level);\n        }\n\n        var scaleFactor = Math.pow(2, this.maxLevel - level);\n\n        if (this.tileSizePerScaleFactor && this.tileSizePerScaleFactor[scaleFactor]) {\n            return this.tileSizePerScaleFactor[scaleFactor].width;\n        }\n        return this._tileWidth;\n    },\n\n    /**\n     * Return the tileHeight for the given level.\n     * @function\n     * @param {Number} level\n     */\n    getTileHeight: function( level ) {\n\n        if(this.emulateLegacyImagePyramid) {\n            return $.TileSource.prototype.getTileHeight.call(this, level);\n        }\n\n        var scaleFactor = Math.pow(2, this.maxLevel - level);\n\n        if (this.tileSizePerScaleFactor && this.tileSizePerScaleFactor[scaleFactor]) {\n            return this.tileSizePerScaleFactor[scaleFactor].height;\n        }\n        return this._tileHeight;\n    },\n\n    /**\n     * @function\n     * @param {Number} level\n     */\n    getLevelScale: function ( level ) {\n\n        if(this.emulateLegacyImagePyramid) {\n            var levelScale = NaN;\n            if (this.levels.length > 0 && level >= this.minLevel && level <= this.maxLevel) {\n                levelScale =\n                    this.levels[level].width /\n                    this.levels[this.maxLevel].width;\n            }\n            return levelScale;\n        }\n\n        return $.TileSource.prototype.getLevelScale.call(this, level);\n    },\n\n    /**\n     * @function\n     * @param {Number} level\n     */\n    getNumTiles: function( level ) {\n\n        if(this.emulateLegacyImagePyramid) {\n            var scale = this.getLevelScale(level);\n            if (scale) {\n                return new $.Point(1, 1);\n            } else {\n                return new $.Point(0, 0);\n            }\n        }\n\n        return $.TileSource.prototype.getNumTiles.call(this, level);\n    },\n\n\n    /**\n     * @function\n     * @param {Number} level\n     * @param {OpenSeadragon.Point} point\n     */\n    getTileAtPoint: function( level, point ) {\n\n        if(this.emulateLegacyImagePyramid) {\n            return new $.Point(0, 0);\n        }\n\n        return $.TileSource.prototype.getTileAtPoint.call(this, level, point);\n    },\n\n\n    /**\n     * Responsible for retrieving the url which will return an image for the\n     * region specified by the given x, y, and level components.\n     * @function\n     * @param {Number} level - z index\n     * @param {Number} x\n     * @param {Number} y\n     * @throws {Error}\n     */\n    getTileUrl: function( level, x, y ){\n\n        if(this.emulateLegacyImagePyramid) {\n            var url = null;\n            if ( this.levels.length > 0 && level >= this.minLevel && level <= this.maxLevel ) {\n                url = this.levels[ level ].url;\n            }\n            return url;\n        }\n\n        //# constants\n        var IIIF_ROTATION = '0',\n            //## get the scale (level as a decimal)\n            scale = Math.pow( 0.5, this.maxLevel - level ),\n\n            //# image dimensions at this level\n            levelWidth = Math.ceil( this.width * scale ),\n            levelHeight = Math.ceil( this.height * scale ),\n\n            //## iiif region\n            tileWidth,\n            tileHeight,\n            iiifTileSizeWidth,\n            iiifTileSizeHeight,\n            iiifRegion,\n            iiifTileX,\n            iiifTileY,\n            iiifTileW,\n            iiifTileH,\n            iiifSize,\n            iiifQuality,\n            uri;\n\n        tileWidth = this.getTileWidth(level);\n        tileHeight = this.getTileHeight(level);\n        iiifTileSizeWidth = Math.ceil( tileWidth / scale );\n        iiifTileSizeHeight = Math.ceil( tileHeight / scale );\n\n        if ( this['@context'].indexOf('/1.0/context.json') > -1 ||\n             this['@context'].indexOf('/1.1/context.json') > -1 ||\n             this['@context'].indexOf('/1/context.json') > -1 ) {\n            iiifQuality = \"native.jpg\";\n        } else {\n            iiifQuality = \"default.jpg\";\n        }\n\n        if ( levelWidth < tileWidth && levelHeight < tileHeight ){\n            iiifSize = levelWidth + \",\";\n            iiifRegion = 'full';\n        } else {\n            iiifTileX = x * iiifTileSizeWidth;\n            iiifTileY = y * iiifTileSizeHeight;\n            iiifTileW = Math.min( iiifTileSizeWidth, this.width - iiifTileX );\n            iiifTileH = Math.min( iiifTileSizeHeight, this.height - iiifTileY );\n            iiifSize = Math.ceil( iiifTileW * scale ) + \",\";\n            iiifRegion = [ iiifTileX, iiifTileY, iiifTileW, iiifTileH ].join( ',' );\n        }\n        uri = [ this['@id'], iiifRegion, iiifSize, IIIF_ROTATION, iiifQuality ].join( '/' );\n\n        return uri;\n    }\n\n  });\n\n    /**\n     * Determine whether arbitrary tile requests can be made against a service with the given profile\n     * @function\n     * @param {object} profile - IIIF profile object\n     * @throws {Error}\n     */\n    function canBeTiled (profile ) {\n        var level0Profiles = [\n            \"http://library.stanford.edu/iiif/image-api/compliance.html#level0\",\n            \"http://library.stanford.edu/iiif/image-api/1.1/compliance.html#level0\",\n            \"http://iiif.io/api/image/2/level0.json\"\n        ];\n        var isLevel0 = (level0Profiles.indexOf(profile[0]) != -1);\n        return !isLevel0 || (profile.indexOf(\"sizeByW\") != -1);\n    }\n\n    /**\n     * Build the legacy pyramid URLs (one tile per level)\n     * @function\n     * @param {object} options - infoJson\n     * @throws {Error}\n     */\n    function constructLevels(options) {\n        var levels = [];\n        for(var i=0; i<options.sizes.length; i++) {\n            levels.push({\n                url: options['@id'] + '/full/' + options.sizes[i].width + ',/0/default.jpg',\n                width: options.sizes[i].width,\n                height: options.sizes[i].height\n            });\n        }\n        return levels.sort(function(a,b){return a.width - b.width;});\n    }\n\n\n    function configureFromXml10(xmlDoc) {\n        //parse the xml\n        if ( !xmlDoc || !xmlDoc.documentElement ) {\n            throw new Error( $.getString( \"Errors.Xml\" ) );\n        }\n\n        var root            = xmlDoc.documentElement,\n            rootName        = root.tagName,\n            configuration   = null;\n\n        if ( rootName == \"info\" ) {\n            try {\n                configuration = {};\n                parseXML10( root, configuration );\n                return configuration;\n\n            } catch ( e ) {\n                throw (e instanceof Error) ?\n                    e :\n                    new Error( $.getString(\"Errors.IIIF\") );\n            }\n        }\n        throw new Error( $.getString( \"Errors.IIIF\" ) );\n    }\n\n    function parseXML10( node, configuration, property ) {\n        var i,\n            value;\n        if ( node.nodeType == 3 && property ) {//text node\n            value = node.nodeValue.trim();\n            if( value.match(/^\\d*$/)){\n                value = Number( value );\n            }\n            if( !configuration[ property ] ){\n                configuration[ property ] = value;\n            }else{\n                if( !$.isArray( configuration[ property ] ) ){\n                    configuration[ property ] = [ configuration[ property ] ];\n                }\n                configuration[ property ].push( value );\n            }\n        } else if( node.nodeType == 1 ){\n            for( i = 0; i < node.childNodes.length; i++ ){\n                parseXML10( node.childNodes[ i ], configuration, node.nodeName );\n            }\n        }\n    }\n\n\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - OsmTileSource\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/*\n * Derived from the OSM tile source in Rainer Simon's seajax-utils project\n * <http://github.com/rsimon/seajax-utils>.  Rainer Simon has contributed\n * the included code to the OpenSeadragon project under the New BSD license;\n * see <https://github.com/openseadragon/openseadragon/issues/58>.\n */\n\n\n(function( $ ){\n\n/**\n * @class OsmTileSource\n * @classdesc A tilesource implementation for OpenStreetMap.<br><br>\n *\n * Note 1. Zoomlevels. Deep Zoom and OSM define zoom levels differently. In  Deep\n * Zoom, level 0 equals an image of 1x1 pixels. In OSM, level 0 equals an image of\n * 256x256 levels (see http://gasi.ch/blog/inside-deep-zoom-2). I.e. there is a\n * difference of log2(256)=8 levels.<br><br>\n *\n * Note 2. Image dimension. According to the OSM Wiki\n * (http://wiki.openstreetmap.org/wiki/Slippy_map_tilenames#Zoom_levels)\n * the highest Mapnik zoom level has 256.144x256.144 tiles, with a 256x256\n * pixel size. I.e. the Deep Zoom image dimension is 65.572.864x65.572.864\n * pixels.\n *\n * @memberof OpenSeadragon\n * @extends OpenSeadragon.TileSource\n * @param {Number|Object} width - the pixel width of the image or the idiomatic\n *      options object which is used instead of positional arguments.\n * @param {Number} height\n * @param {Number} tileSize\n * @param {Number} tileOverlap\n * @param {String} tilesUrl\n */\n$.OsmTileSource = function( width, height, tileSize, tileOverlap, tilesUrl ) {\n    var options;\n\n    if( $.isPlainObject( width ) ){\n        options = width;\n    }else{\n        options = {\n            width: arguments[0],\n            height: arguments[1],\n            tileSize: arguments[2],\n            tileOverlap: arguments[3],\n            tilesUrl: arguments[4]\n        };\n    }\n    //apply default setting for standard public OpenStreatMaps service\n    //but allow them to be specified so fliks can host there own instance\n    //or apply against other services supportting the same standard\n    if( !options.width || !options.height ){\n        options.width = 65572864;\n        options.height = 65572864;\n    }\n    if( !options.tileSize ){\n        options.tileSize = 256;\n        options.tileOverlap = 0;\n    }\n    if( !options.tilesUrl ){\n        options.tilesUrl = \"http://tile.openstreetmap.org/\";\n    }\n    options.minLevel = 8;\n\n    $.TileSource.apply( this, [ options ] );\n\n};\n\n$.extend( $.OsmTileSource.prototype, $.TileSource.prototype, /** @lends OpenSeadragon.OsmTileSource.prototype */{\n\n\n    /**\n     * Determine if the data and/or url imply the image service is supported by\n     * this tile source.\n     * @function\n     * @param {Object|Array} data\n     * @param {String} optional - url\n     */\n    supports: function( data, url ){\n        return (\n            data.type &&\n            \"openstreetmaps\" == data.type\n        );\n    },\n\n    /**\n     *\n     * @function\n     * @param {Object} data - the raw configuration\n     * @param {String} url - the url the data was retreived from if any.\n     * @return {Object} options - A dictionary of keyword arguments sufficient\n     *      to configure this tile sources constructor.\n     */\n    configure: function( data, url ){\n        return data;\n    },\n\n\n    /**\n     * @function\n     * @param {Number} level\n     * @param {Number} x\n     * @param {Number} y\n     */\n    getTileUrl: function( level, x, y ) {\n        return this.tilesUrl + (level - 8) + \"/\" + x + \"/\" + y + \".png\";\n    }\n});\n\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - TmsTileSource\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/*\n * Derived from the TMS tile source in Rainer Simon's seajax-utils project\n * <http://github.com/rsimon/seajax-utils>.  Rainer Simon has contributed\n * the included code to the OpenSeadragon project under the New BSD license;\n * see <https://github.com/openseadragon/openseadragon/issues/58>.\n */\n\n\n(function( $ ){\n\n/**\n * @class TmsTileSource\n * @classdesc A tilesource implementation for Tiled Map Services (TMS).\n * TMS tile scheme ( [ as supported by OpenLayers ] is described here\n * ( http://openlayers.org/dev/examples/tms.html ).\n *\n * @memberof OpenSeadragon\n * @extends OpenSeadragon.TileSource\n * @param {Number|Object} width - the pixel width of the image or the idiomatic\n *      options object which is used instead of positional arguments.\n * @param {Number} height\n * @param {Number} tileSize\n * @param {Number} tileOverlap\n * @param {String} tilesUrl\n */\n$.TmsTileSource = function( width, height, tileSize, tileOverlap, tilesUrl ) {\n    var options;\n\n    if( $.isPlainObject( width ) ){\n        options = width;\n    }else{\n        options = {\n            width: arguments[0],\n            height: arguments[1],\n            tileSize: arguments[2],\n            tileOverlap: arguments[3],\n            tilesUrl: arguments[4]\n        };\n    }\n    // TMS has integer multiples of 256 for width/height and adds buffer\n    // if necessary -> account for this!\n    var bufferedWidth = Math.ceil(options.width / 256) * 256,\n        bufferedHeight = Math.ceil(options.height / 256) * 256,\n        max;\n\n    // Compute number of zoomlevels in this tileset\n    if (bufferedWidth > bufferedHeight) {\n        max = bufferedWidth / 256;\n    } else {\n        max = bufferedHeight / 256;\n    }\n    options.maxLevel = Math.ceil(Math.log(max)/Math.log(2)) - 1;\n    options.tileSize = 256;\n    options.width = bufferedWidth;\n    options.height = bufferedHeight;\n\n    $.TileSource.apply( this, [ options ] );\n\n};\n\n$.extend( $.TmsTileSource.prototype, $.TileSource.prototype, /** @lends OpenSeadragon.TmsTileSource.prototype */{\n\n\n    /**\n     * Determine if the data and/or url imply the image service is supported by\n     * this tile source.\n     * @function\n     * @param {Object|Array} data\n     * @param {String} optional - url\n     */\n    supports: function( data, url ){\n        return ( data.type && \"tiledmapservice\" == data.type );\n    },\n\n    /**\n     *\n     * @function\n     * @param {Object} data - the raw configuration\n     * @param {String} url - the url the data was retreived from if any.\n     * @return {Object} options - A dictionary of keyword arguments sufficient\n     *      to configure this tile sources constructor.\n     */\n    configure: function( data, url ){\n        return data;\n    },\n\n\n    /**\n     * @function\n     * @param {Number} level\n     * @param {Number} x\n     * @param {Number} y\n     */\n    getTileUrl: function( level, x, y ) {\n        // Convert from Deep Zoom definition to TMS zoom definition\n        var yTiles = this.getNumTiles( level ).y - 1;\n\n        return this.tilesUrl + level + \"/\" + x + \"/\" +  (yTiles - y) + \".png\";\n    }\n});\n\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - LegacyTileSource\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n/**\n * @class LegacyTileSource\n * @classdesc The LegacyTileSource allows simple, traditional image pyramids to be loaded\n * into an OpenSeadragon Viewer.  Basically, this translates to the historically\n * common practice of starting with a 'master' image, maybe a tiff for example,\n * and generating a set of 'service' images like one or more thumbnails, a medium\n * resolution image and a high resolution image in standard web formats like\n * png or jpg.\n *\n * @memberof OpenSeadragon\n * @extends OpenSeadragon.TileSource\n * @param {Array} levels An array of file descriptions, each is an object with\n *      a 'url', a 'width', and a 'height'.  Overriding classes can expect more\n *      properties but these properties are sufficient for this implementation.\n *      Additionally, the levels are required to be listed in order from\n *      smallest to largest.\n * @property {Number} aspectRatio\n * @property {Number} dimensions\n * @property {Number} tileSize\n * @property {Number} tileOverlap\n * @property {Number} minLevel\n * @property {Number} maxLevel\n * @property {Array}  levels\n */\n$.LegacyTileSource = function( levels ) {\n\n    var options,\n        width,\n        height;\n\n    if( $.isArray( levels ) ){\n        options = {\n            type: 'legacy-image-pyramid',\n            levels: levels\n        };\n    }\n\n    //clean up the levels to make sure we support all formats\n    options.levels = filterFiles( options.levels );\n\n    if ( options.levels.length > 0 ) {\n        width = options.levels[ options.levels.length - 1 ].width;\n        height = options.levels[ options.levels.length - 1 ].height;\n    }\n    else {\n        width = 0;\n        height = 0;\n        $.console.error( \"No supported image formats found\" );\n    }\n\n    $.extend( true, options, {\n        width: width,\n        height: height,\n        tileSize: Math.max( height, width ),\n        tileOverlap: 0,\n        minLevel: 0,\n        maxLevel: options.levels.length > 0 ? options.levels.length - 1 : 0\n    } );\n\n    $.TileSource.apply( this, [ options ] );\n\n    this.levels = options.levels;\n};\n\n$.extend( $.LegacyTileSource.prototype, $.TileSource.prototype, /** @lends OpenSeadragon.LegacyTileSource.prototype */{\n    /**\n     * Determine if the data and/or url imply the image service is supported by\n     * this tile source.\n     * @function\n     * @param {Object|Array} data\n     * @param {String} optional - url\n     */\n    supports: function( data, url ){\n        return (\n            data.type &&\n            \"legacy-image-pyramid\" == data.type\n        ) || (\n            data.documentElement &&\n            \"legacy-image-pyramid\" == data.documentElement.getAttribute('type')\n        );\n    },\n\n\n    /**\n     *\n     * @function\n     * @param {Object|XMLDocument} configuration - the raw configuration\n     * @param {String} dataUrl - the url the data was retreived from if any.\n     * @return {Object} options - A dictionary of keyword arguments sufficient\n     *      to configure this tile sources constructor.\n     */\n    configure: function( configuration, dataUrl ){\n\n        var options;\n\n        if( !$.isPlainObject(configuration) ){\n\n            options = configureFromXML( this, configuration );\n\n        }else{\n\n            options = configureFromObject( this, configuration );\n        }\n\n        return options;\n\n    },\n\n    /**\n     * @function\n     * @param {Number} level\n     */\n    getLevelScale: function ( level ) {\n        var levelScale = NaN;\n        if ( this.levels.length > 0 && level >= this.minLevel && level <= this.maxLevel ) {\n            levelScale =\n                this.levels[ level ].width /\n                this.levels[ this.maxLevel ].width;\n        }\n        return levelScale;\n    },\n\n    /**\n     * @function\n     * @param {Number} level\n     */\n    getNumTiles: function( level ) {\n        var scale = this.getLevelScale( level );\n        if ( scale ){\n            return new $.Point( 1, 1 );\n        } else {\n            return new $.Point( 0, 0 );\n        }\n    },\n\n    /**\n     * @function\n     * @param {Number} level\n     * @param {OpenSeadragon.Point} point\n     */\n    getTileAtPoint: function( level, point ) {\n        return new $.Point( 0, 0 );\n    },\n\n\n    /**\n     * This method is not implemented by this class other than to throw an Error\n     * announcing you have to implement it.  Because of the variety of tile\n     * server technologies, and various specifications for building image\n     * pyramids, this method is here to allow easy integration.\n     * @function\n     * @param {Number} level\n     * @param {Number} x\n     * @param {Number} y\n     * @throws {Error}\n     */\n    getTileUrl: function ( level, x, y ) {\n        var url = null;\n        if ( this.levels.length > 0 && level >= this.minLevel && level <= this.maxLevel ) {\n            url = this.levels[ level ].url;\n        }\n        return url;\n    }\n} );\n\n/**\n * This method removes any files from the Array which dont conform to our\n * basic requirements for a 'level' in the LegacyTileSource.\n * @private\n * @inner\n * @function\n */\nfunction filterFiles( files ){\n    var filtered = [],\n        file,\n        i;\n    for( i = 0; i < files.length; i++ ){\n        file = files[ i ];\n        if( file.height &&\n            file.width &&\n            file.url && (\n                file.url.toLowerCase().match(/^.*\\.(png|jpg|jpeg|gif)(?:\\?.*)?$/) || (\n                    file.mimetype &&\n                    file.mimetype.toLowerCase().match(/^.*\\/(png|jpg|jpeg|gif)$/)\n                )\n            ) ){\n            //This is sufficient to serve as a level\n            filtered.push({\n                url: file.url,\n                width: Number( file.width ),\n                height: Number( file.height )\n            });\n        }\n        else {\n            $.console.error( 'Unsupported image format: %s', file.url ? file.url : '<no URL>' );\n        }\n    }\n\n    return filtered.sort(function(a,b){\n        return a.height - b.height;\n    });\n\n}\n\n/**\n * @private\n * @inner\n * @function\n */\nfunction configureFromXML( tileSource, xmlDoc ){\n\n    if ( !xmlDoc || !xmlDoc.documentElement ) {\n        throw new Error( $.getString( \"Errors.Xml\" ) );\n    }\n\n    var root         = xmlDoc.documentElement,\n        rootName     = root.tagName,\n        conf         = null,\n        levels       = [],\n        level,\n        i;\n\n    if ( rootName == \"image\" ) {\n\n        try {\n            conf = {\n                type:        root.getAttribute( \"type\" ),\n                levels:      []\n            };\n\n            levels = root.getElementsByTagName( \"level\" );\n            for ( i = 0; i < levels.length; i++ ) {\n                level = levels[ i ];\n\n                conf.levels .push({\n                    url:    level.getAttribute( \"url\" ),\n                    width:  parseInt( level.getAttribute( \"width\" ), 10 ),\n                    height: parseInt( level.getAttribute( \"height\" ), 10 )\n                });\n            }\n\n            return configureFromObject( tileSource, conf );\n\n        } catch ( e ) {\n            throw (e instanceof Error) ?\n                e :\n                new Error( 'Unknown error parsing Legacy Image Pyramid XML.' );\n        }\n    } else if ( rootName == \"collection\" ) {\n        throw new Error( 'Legacy Image Pyramid Collections not yet supported.' );\n    } else if ( rootName == \"error\" ) {\n        throw new Error( 'Error: ' + xmlDoc );\n    }\n\n    throw new Error( 'Unknown element ' + rootName );\n}\n\n/**\n * @private\n * @inner\n * @function\n */\nfunction configureFromObject( tileSource, configuration ){\n\n    return configuration.levels;\n\n}\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - ImageTileSource\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function ($) {\n\n    /**\n     * @class ImageTileSource\n     * @classdesc The ImageTileSource allows a simple image to be loaded\n     * into an OpenSeadragon Viewer.\n     * There are 2 ways to open an ImageTileSource:\n     * 1. viewer.open({type: 'image', url: fooUrl});\n     * 2. viewer.open(new OpenSeadragon.ImageTileSource({url: fooUrl}));\n     *\n     * With the first syntax, the crossOriginPolicy, ajaxWithCredentials and\n     * useCanvas options are inherited from the viewer if they are not\n     * specified directly in the options object.\n     *\n     * @memberof OpenSeadragon\n     * @extends OpenSeadragon.TileSource\n     * @param {Object} options Options object.\n     * @param {String} options.url URL of the image\n     * @param {Boolean} [options.buildPyramid=true] If set to true (default), a\n     * pyramid will be built internally to provide a better downsampling.\n     * @param {String|Boolean} [options.crossOriginPolicy=false] Valid values are\n     * 'Anonymous', 'use-credentials', and false. If false, image requests will\n     * not use CORS preventing internal pyramid building for images from other\n     * domains.\n     * @param {String|Boolean} [options.ajaxWithCredentials=false] Whether to set\n     * the withCredentials XHR flag for AJAX requests (when loading tile sources).\n     * @param {Boolean} [options.useCanvas=true] Set to false to prevent any use\n     * of the canvas API.\n     */\n    $.ImageTileSource = function (options) {\n\n        options = $.extend({\n            buildPyramid: true,\n            crossOriginPolicy: false,\n            ajaxWithCredentials: false,\n            useCanvas: true\n        }, options);\n        $.TileSource.apply(this, [options]);\n\n    };\n\n    $.extend($.ImageTileSource.prototype, $.TileSource.prototype, /** @lends OpenSeadragon.ImageTileSource.prototype */{\n        /**\n         * Determine if the data and/or url imply the image service is supported by\n         * this tile source.\n         * @function\n         * @param {Object|Array} data\n         * @param {String} optional - url\n         */\n        supports: function (data, url) {\n            return data.type && data.type === \"image\";\n        },\n        /**\n         *\n         * @function\n         * @param {Object} options - the options\n         * @param {String} dataUrl - the url the image was retreived from, if any.\n         * @return {Object} options - A dictionary of keyword arguments sufficient\n         *      to configure this tile sources constructor.\n         */\n        configure: function (options, dataUrl) {\n            return options;\n        },\n        /**\n         * Responsible for retrieving, and caching the\n         * image metadata pertinent to this TileSources implementation.\n         * @function\n         * @param {String} url\n         * @throws {Error}\n         */\n        getImageInfo: function (url) {\n            var image = this._image = new Image();\n            var _this = this;\n\n            if (this.crossOriginPolicy) {\n                image.crossOrigin = this.crossOriginPolicy;\n            }\n            if (this.ajaxWithCredentials) {\n                image.useCredentials = this.ajaxWithCredentials;\n            }\n\n            $.addEvent(image, 'load', function () {\n                _this.width = image.naturalWidth;\n                _this.height = image.naturalHeight;\n                _this.aspectRatio = _this.width / _this.height;\n                _this.dimensions = new $.Point(_this.width, _this.height);\n                _this._tileWidth = _this.width;\n                _this._tileHeight = _this.height;\n                _this.tileOverlap = 0;\n                _this.minLevel = 0;\n                _this.levels = _this._buildLevels();\n                _this.maxLevel = _this.levels.length - 1;\n\n                _this.ready = true;\n\n                // Note: this event is documented elsewhere, in TileSource\n                _this.raiseEvent('ready', {tileSource: _this});\n            });\n\n            $.addEvent(image, 'error', function () {\n                // Note: this event is documented elsewhere, in TileSource\n                _this.raiseEvent('open-failed', {\n                    message: \"Error loading image at \" + url,\n                    source: url\n                });\n            });\n\n            image.src = url;\n        },\n        /**\n         * @function\n         * @param {Number} level\n         */\n        getLevelScale: function (level) {\n            var levelScale = NaN;\n            if (level >= this.minLevel && level <= this.maxLevel) {\n                levelScale =\n                        this.levels[level].width /\n                        this.levels[this.maxLevel].width;\n            }\n            return levelScale;\n        },\n        /**\n         * @function\n         * @param {Number} level\n         */\n        getNumTiles: function (level) {\n            var scale = this.getLevelScale(level);\n            if (scale) {\n                return new $.Point(1, 1);\n            } else {\n                return new $.Point(0, 0);\n            }\n        },\n        /**\n         * @function\n         * @param {Number} level\n         * @param {OpenSeadragon.Point} point\n         */\n        getTileAtPoint: function (level, point) {\n            return new $.Point(0, 0);\n        },\n        /**\n         * Retrieves a tile url\n         * @function\n         * @param {Number} level Level of the tile\n         * @param {Number} x x coordinate of the tile\n         * @param {Number} y y coordinate of the tile\n         */\n        getTileUrl: function (level, x, y) {\n            var url = null;\n            if (level >= this.minLevel && level <= this.maxLevel) {\n                url = this.levels[level].url;\n            }\n            return url;\n        },\n        /**\n         * Retrieves a tile context 2D\n         * @function\n         * @param {Number} level Level of the tile\n         * @param {Number} x x coordinate of the tile\n         * @param {Number} y y coordinate of the tile\n         */\n        getContext2D: function (level, x, y) {\n            var context = null;\n            if (level >= this.minLevel && level <= this.maxLevel) {\n                context = this.levels[level].context2D;\n            }\n            return context;\n        },\n\n        // private\n        //\n        // Builds the differents levels of the pyramid if possible\n        // (i.e. if canvas API enabled and no canvas tainting issue).\n        _buildLevels: function () {\n            var levels = [{\n                    url: this._image.src,\n                    width: this._image.naturalWidth,\n                    height: this._image.naturalHeight\n                }];\n\n            if (!this.buildPyramid || !$.supportsCanvas || !this.useCanvas) {\n                // We don't need the image anymore. Allows it to be GC.\n                delete this._image;\n                return levels;\n            }\n\n            var currentWidth = this._image.naturalWidth;\n            var currentHeight = this._image.naturalHeight;\n\n            var bigCanvas = document.createElement(\"canvas\");\n            var bigContext = bigCanvas.getContext(\"2d\");\n\n            bigCanvas.width = currentWidth;\n            bigCanvas.height = currentHeight;\n            bigContext.drawImage(this._image, 0, 0, currentWidth, currentHeight);\n            // We cache the context of the highest level because the browser\n            // is a lot faster at downsampling something it already has\n            // downsampled before.\n            levels[0].context2D = bigContext;\n            // We don't need the image anymore. Allows it to be GC.\n            delete this._image;\n\n            if ($.isCanvasTainted(bigCanvas)) {\n                // If the canvas is tainted, we can't compute the pyramid.\n                return levels;\n            }\n\n            // We build smaller levels until either width or height becomes\n            // 1 pixel wide.\n            while (currentWidth >= 2 && currentHeight >= 2) {\n                currentWidth = Math.floor(currentWidth / 2);\n                currentHeight = Math.floor(currentHeight / 2);\n                var smallCanvas = document.createElement(\"canvas\");\n                var smallContext = smallCanvas.getContext(\"2d\");\n                smallCanvas.width = currentWidth;\n                smallCanvas.height = currentHeight;\n                smallContext.drawImage(bigCanvas, 0, 0, currentWidth, currentHeight);\n\n                levels.splice(0, 0, {\n                    context2D: smallContext,\n                    width: currentWidth,\n                    height: currentHeight\n                });\n\n                bigCanvas = smallCanvas;\n                bigContext = smallContext;\n            }\n            return levels;\n        }\n    });\n\n}(OpenSeadragon));\n\n/*\n * OpenSeadragon - TileSourceCollection\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n// deprecated\n$.TileSourceCollection = function( tileSize, tileSources, rows, layout  ) {\n    $.console.error('TileSourceCollection is deprecated; use World instead');\n};\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - Button\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n/**\n * An enumeration of button states\n * @member ButtonState\n * @memberof OpenSeadragon\n * @static\n * @type {Object}\n * @property {Number} REST\n * @property {Number} GROUP\n * @property {Number} HOVER\n * @property {Number} DOWN\n */\n$.ButtonState = {\n    REST:   0,\n    GROUP:  1,\n    HOVER:  2,\n    DOWN:   3\n};\n\n/**\n * @class Button\n * @classdesc Manages events, hover states for individual buttons, tool-tips, as well\n * as fading the buttons out when the user has not interacted with them\n * for a specified period.\n *\n * @memberof OpenSeadragon\n * @extends OpenSeadragon.EventSource\n * @param {Object} options\n * @param {Element} [options.element=null] Element to use as the button. If not specified, an HTML &lt;button&gt; element is created.\n * @param {String} [options.tooltip=null] Provides context help for the button when the\n *  user hovers over it.\n * @param {String} [options.srcRest=null] URL of image to use in 'rest' state.\n * @param {String} [options.srcGroup=null] URL of image to use in 'up' state.\n * @param {String} [options.srcHover=null] URL of image to use in 'hover' state.\n * @param {String} [options.srcDown=null] URL of image to use in 'down' state.\n * @param {Number} [options.fadeDelay=0] How long to wait before fading.\n * @param {Number} [options.fadeLength=2000] How long should it take to fade the button.\n * @param {OpenSeadragon.EventHandler} [options.onPress=null] Event handler callback for {@link OpenSeadragon.Button.event:press}.\n * @param {OpenSeadragon.EventHandler} [options.onRelease=null] Event handler callback for {@link OpenSeadragon.Button.event:release}.\n * @param {OpenSeadragon.EventHandler} [options.onClick=null] Event handler callback for {@link OpenSeadragon.Button.event:click}.\n * @param {OpenSeadragon.EventHandler} [options.onEnter=null] Event handler callback for {@link OpenSeadragon.Button.event:enter}.\n * @param {OpenSeadragon.EventHandler} [options.onExit=null] Event handler callback for {@link OpenSeadragon.Button.event:exit}.\n * @param {OpenSeadragon.EventHandler} [options.onFocus=null] Event handler callback for {@link OpenSeadragon.Button.event:focus}.\n * @param {OpenSeadragon.EventHandler} [options.onBlur=null] Event handler callback for {@link OpenSeadragon.Button.event:blur}.\n */\n$.Button = function( options ) {\n\n    var _this = this;\n\n    $.EventSource.call( this );\n\n    $.extend( true, this, {\n\n        tooltip:            null,\n        srcRest:            null,\n        srcGroup:           null,\n        srcHover:           null,\n        srcDown:            null,\n        clickTimeThreshold: $.DEFAULT_SETTINGS.clickTimeThreshold,\n        clickDistThreshold: $.DEFAULT_SETTINGS.clickDistThreshold,\n        /**\n         * How long to wait before fading.\n         * @member {Number} fadeDelay\n         * @memberof OpenSeadragon.Button#\n         */\n        fadeDelay:          0,\n        /**\n         * How long should it take to fade the button.\n         * @member {Number} fadeLength\n         * @memberof OpenSeadragon.Button#\n         */\n        fadeLength:         2000,\n        onPress:            null,\n        onRelease:          null,\n        onClick:            null,\n        onEnter:            null,\n        onExit:             null,\n        onFocus:            null,\n        onBlur:             null\n\n    }, options );\n\n    /**\n     * The button element.\n     * @member {Element} element\n     * @memberof OpenSeadragon.Button#\n     */\n    this.element        = options.element   || $.makeNeutralElement( \"div\" );\n\n    //if the user has specified the element to bind the control to explicitly\n    //then do not add the default control images\n    if ( !options.element ) {\n        this.imgRest      = $.makeTransparentImage( this.srcRest );\n        this.imgGroup     = $.makeTransparentImage( this.srcGroup );\n        this.imgHover     = $.makeTransparentImage( this.srcHover );\n        this.imgDown      = $.makeTransparentImage( this.srcDown );\n\n        this.imgRest.alt  =\n        this.imgGroup.alt =\n        this.imgHover.alt =\n        this.imgDown.alt  =\n            this.tooltip;\n\n        this.element.style.position = \"relative\";\n        $.setElementTouchActionNone( this.element );\n\n        this.imgGroup.style.position =\n        this.imgHover.style.position =\n        this.imgDown.style.position  =\n            \"absolute\";\n\n        this.imgGroup.style.top =\n        this.imgHover.style.top =\n        this.imgDown.style.top  =\n            \"0px\";\n\n        this.imgGroup.style.left =\n        this.imgHover.style.left =\n        this.imgDown.style.left  =\n            \"0px\";\n\n        this.imgHover.style.visibility =\n        this.imgDown.style.visibility  =\n            \"hidden\";\n\n        if ( $.Browser.vendor == $.BROWSERS.FIREFOX  && $.Browser.version < 3 ){\n            this.imgGroup.style.top =\n            this.imgHover.style.top =\n            this.imgDown.style.top  =\n                \"\";\n        }\n\n        this.element.appendChild( this.imgRest );\n        this.element.appendChild( this.imgGroup );\n        this.element.appendChild( this.imgHover );\n        this.element.appendChild( this.imgDown );\n    }\n\n\n    this.addHandler( \"press\",     this.onPress );\n    this.addHandler( \"release\",   this.onRelease );\n    this.addHandler( \"click\",     this.onClick );\n    this.addHandler( \"enter\",     this.onEnter );\n    this.addHandler( \"exit\",      this.onExit );\n    this.addHandler( \"focus\",     this.onFocus );\n    this.addHandler( \"blur\",      this.onBlur );\n\n    /**\n     * The button's current state.\n     * @member {OpenSeadragon.ButtonState} currentState\n     * @memberof OpenSeadragon.Button#\n     */\n    this.currentState = $.ButtonState.GROUP;\n\n    // When the button last began to fade.\n    this.fadeBeginTime  = null;\n    // Whether this button should fade after user stops interacting with the viewport.\n    this.shouldFade     = false;\n\n    this.element.style.display  = \"inline-block\";\n    this.element.style.position = \"relative\";\n    this.element.title          = this.tooltip;\n\n    /**\n     * Tracks mouse/touch/key events on the button.\n     * @member {OpenSeadragon.MouseTracker} tracker\n     * @memberof OpenSeadragon.Button#\n     */\n    this.tracker = new $.MouseTracker({\n\n        element:            this.element,\n        clickTimeThreshold: this.clickTimeThreshold,\n        clickDistThreshold: this.clickDistThreshold,\n\n        enterHandler: function( event ) {\n            if ( event.insideElementPressed ) {\n                inTo( _this, $.ButtonState.DOWN );\n                /**\n                 * Raised when the cursor enters the Button element.\n                 *\n                 * @event enter\n                 * @memberof OpenSeadragon.Button\n                 * @type {object}\n                 * @property {OpenSeadragon.Button} eventSource - A reference to the Button which raised the event.\n                 * @property {Object} originalEvent - The original DOM event.\n                 * @property {?Object} userData - Arbitrary subscriber-defined object.\n                 */\n                _this.raiseEvent( \"enter\", { originalEvent: event.originalEvent } );\n            } else if ( !event.buttonDownAny ) {\n                inTo( _this, $.ButtonState.HOVER );\n            }\n        },\n\n        focusHandler: function ( event ) {\n            this.enterHandler( event );\n            /**\n             * Raised when the Button element receives focus.\n             *\n             * @event focus\n             * @memberof OpenSeadragon.Button\n             * @type {object}\n             * @property {OpenSeadragon.Button} eventSource - A reference to the Button which raised the event.\n             * @property {Object} originalEvent - The original DOM event.\n             * @property {?Object} userData - Arbitrary subscriber-defined object.\n             */\n            _this.raiseEvent( \"focus\", { originalEvent: event.originalEvent } );\n        },\n\n        exitHandler: function( event ) {\n            outTo( _this, $.ButtonState.GROUP );\n            if ( event.insideElementPressed ) {\n                /**\n                 * Raised when the cursor leaves the Button element.\n                 *\n                 * @event exit\n                 * @memberof OpenSeadragon.Button\n                 * @type {object}\n                 * @property {OpenSeadragon.Button} eventSource - A reference to the Button which raised the event.\n                 * @property {Object} originalEvent - The original DOM event.\n                 * @property {?Object} userData - Arbitrary subscriber-defined object.\n                 */\n                _this.raiseEvent( \"exit\", { originalEvent: event.originalEvent } );\n            }\n        },\n\n        blurHandler: function ( event ) {\n            this.exitHandler( event );\n            /**\n             * Raised when the Button element loses focus.\n             *\n             * @event blur\n             * @memberof OpenSeadragon.Button\n             * @type {object}\n             * @property {OpenSeadragon.Button} eventSource - A reference to the Button which raised the event.\n             * @property {Object} originalEvent - The original DOM event.\n             * @property {?Object} userData - Arbitrary subscriber-defined object.\n             */\n            _this.raiseEvent( \"blur\", { originalEvent: event.originalEvent } );\n        },\n\n        pressHandler: function ( event ) {\n            inTo( _this, $.ButtonState.DOWN );\n            /**\n             * Raised when a mouse button is pressed or touch occurs in the Button element.\n             *\n             * @event press\n             * @memberof OpenSeadragon.Button\n             * @type {object}\n             * @property {OpenSeadragon.Button} eventSource - A reference to the Button which raised the event.\n             * @property {Object} originalEvent - The original DOM event.\n             * @property {?Object} userData - Arbitrary subscriber-defined object.\n             */\n            _this.raiseEvent( \"press\", { originalEvent: event.originalEvent } );\n        },\n\n        releaseHandler: function( event ) {\n            if ( event.insideElementPressed && event.insideElementReleased ) {\n                outTo( _this, $.ButtonState.HOVER );\n                /**\n                 * Raised when the mouse button is released or touch ends in the Button element.\n                 *\n                 * @event release\n                 * @memberof OpenSeadragon.Button\n                 * @type {object}\n                 * @property {OpenSeadragon.Button} eventSource - A reference to the Button which raised the event.\n                 * @property {Object} originalEvent - The original DOM event.\n                 * @property {?Object} userData - Arbitrary subscriber-defined object.\n                 */\n                _this.raiseEvent( \"release\", { originalEvent: event.originalEvent } );\n            } else if ( event.insideElementPressed ) {\n                outTo( _this, $.ButtonState.GROUP );\n            } else {\n                inTo( _this, $.ButtonState.HOVER );\n            }\n        },\n\n        clickHandler: function( event ) {\n            if ( event.quick ) {\n                /**\n                 * Raised when a mouse button is pressed and released or touch is initiated and ended in the Button element within the time and distance threshold.\n                 *\n                 * @event click\n                 * @memberof OpenSeadragon.Button\n                 * @type {object}\n                 * @property {OpenSeadragon.Button} eventSource - A reference to the Button which raised the event.\n                 * @property {Object} originalEvent - The original DOM event.\n                 * @property {?Object} userData - Arbitrary subscriber-defined object.\n                 */\n                _this.raiseEvent(\"click\", { originalEvent: event.originalEvent });\n            }\n        },\n\n        keyHandler: function( event ){\n            //console.log( \"%s : handling key %s!\", _this.tooltip, event.keyCode);\n            if( 13 === event.keyCode ){\n                /***\n                 * Raised when a mouse button is pressed and released or touch is initiated and ended in the Button element within the time and distance threshold.\n                 *\n                 * @event click\n                 * @memberof OpenSeadragon.Button\n                 * @type {object}\n                 * @property {OpenSeadragon.Button} eventSource - A reference to the Button which raised the event.\n                 * @property {Object} originalEvent - The original DOM event.\n                 * @property {?Object} userData - Arbitrary subscriber-defined object.\n                 */\n                _this.raiseEvent( \"click\", { originalEvent: event.originalEvent } );\n                /***\n                 * Raised when the mouse button is released or touch ends in the Button element.\n                 *\n                 * @event release\n                 * @memberof OpenSeadragon.Button\n                 * @type {object}\n                 * @property {OpenSeadragon.Button} eventSource - A reference to the Button which raised the event.\n                 * @property {Object} originalEvent - The original DOM event.\n                 * @property {?Object} userData - Arbitrary subscriber-defined object.\n                 */\n                _this.raiseEvent( \"release\", { originalEvent: event.originalEvent } );\n                return false;\n            }\n            return true;\n        }\n\n    });\n\n    outTo( this, $.ButtonState.REST );\n};\n\n$.extend( $.Button.prototype, $.EventSource.prototype, /** @lends OpenSeadragon.Button.prototype */{\n\n    /**\n     * TODO: Determine what this function is intended to do and if it's actually\n     * useful as an API point.\n     * @function\n     */\n    notifyGroupEnter: function() {\n        inTo( this, $.ButtonState.GROUP );\n    },\n\n    /**\n     * TODO: Determine what this function is intended to do and if it's actually\n     * useful as an API point.\n     * @function\n     */\n    notifyGroupExit: function() {\n        outTo( this, $.ButtonState.REST );\n    },\n\n    /**\n     * @function\n     */\n    disable: function(){\n        this.notifyGroupExit();\n        this.element.disabled = true;\n        $.setElementOpacity( this.element, 0.2, true );\n    },\n\n    /**\n     * @function\n     */\n    enable: function(){\n        this.element.disabled = false;\n        $.setElementOpacity( this.element, 1.0, true );\n        this.notifyGroupEnter();\n    }\n\n});\n\n\nfunction scheduleFade( button ) {\n    $.requestAnimationFrame(function(){\n        updateFade( button );\n    });\n}\n\nfunction updateFade( button ) {\n    var currentTime,\n        deltaTime,\n        opacity;\n\n    if ( button.shouldFade ) {\n        currentTime = $.now();\n        deltaTime   = currentTime - button.fadeBeginTime;\n        opacity     = 1.0 - deltaTime / button.fadeLength;\n        opacity     = Math.min( 1.0, opacity );\n        opacity     = Math.max( 0.0, opacity );\n\n        if( button.imgGroup ){\n            $.setElementOpacity( button.imgGroup, opacity, true );\n        }\n        if ( opacity > 0 ) {\n            // fade again\n            scheduleFade( button );\n        }\n    }\n}\n\nfunction beginFading( button ) {\n    button.shouldFade = true;\n    button.fadeBeginTime = $.now() + button.fadeDelay;\n    window.setTimeout( function(){\n        scheduleFade( button );\n    }, button.fadeDelay );\n}\n\nfunction stopFading( button ) {\n    button.shouldFade = false;\n    if( button.imgGroup ){\n        $.setElementOpacity( button.imgGroup, 1.0, true );\n    }\n}\n\nfunction inTo( button, newState ) {\n\n    if( button.element.disabled ){\n        return;\n    }\n\n    if ( newState >= $.ButtonState.GROUP &&\n         button.currentState == $.ButtonState.REST ) {\n        stopFading( button );\n        button.currentState = $.ButtonState.GROUP;\n    }\n\n    if ( newState >= $.ButtonState.HOVER &&\n         button.currentState == $.ButtonState.GROUP ) {\n        if( button.imgHover ){\n            button.imgHover.style.visibility = \"\";\n        }\n        button.currentState = $.ButtonState.HOVER;\n    }\n\n    if ( newState >= $.ButtonState.DOWN &&\n         button.currentState == $.ButtonState.HOVER ) {\n        if( button.imgDown ){\n            button.imgDown.style.visibility = \"\";\n        }\n        button.currentState = $.ButtonState.DOWN;\n    }\n}\n\n\nfunction outTo( button, newState ) {\n\n    if( button.element.disabled ){\n        return;\n    }\n\n    if ( newState <= $.ButtonState.HOVER &&\n         button.currentState == $.ButtonState.DOWN ) {\n        if( button.imgDown ){\n            button.imgDown.style.visibility = \"hidden\";\n        }\n        button.currentState = $.ButtonState.HOVER;\n    }\n\n    if ( newState <= $.ButtonState.GROUP &&\n         button.currentState == $.ButtonState.HOVER ) {\n        if( button.imgHover ){\n            button.imgHover.style.visibility = \"hidden\";\n        }\n        button.currentState = $.ButtonState.GROUP;\n    }\n\n    if ( newState <= $.ButtonState.REST &&\n         button.currentState == $.ButtonState.GROUP ) {\n        beginFading( button );\n        button.currentState = $.ButtonState.REST;\n    }\n}\n\n\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - ButtonGroup\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n/**\n * @class ButtonGroup\n * @classdesc Manages events on groups of buttons.\n *\n * @memberof OpenSeadragon\n * @param {Object} options - A dictionary of settings applied against the entire group of buttons.\n * @param {Array} options.buttons Array of buttons\n * @param {Element} [options.element] Element to use as the container\n **/\n$.ButtonGroup = function( options ) {\n\n    $.extend( true, this, {\n        /**\n         * An array containing the buttons themselves.\n         * @member {Array} buttons\n         * @memberof OpenSeadragon.ButtonGroup#\n         */\n        buttons:            [],\n        clickTimeThreshold: $.DEFAULT_SETTINGS.clickTimeThreshold,\n        clickDistThreshold: $.DEFAULT_SETTINGS.clickDistThreshold,\n        labelText:          \"\"\n    }, options );\n\n    // copy the button elements  TODO: Why?\n    var buttons = this.buttons.concat([]),\n        _this = this,\n        i;\n\n    /**\n     * The shared container for the buttons.\n     * @member {Element} element\n     * @memberof OpenSeadragon.ButtonGroup#\n     */\n    this.element = options.element || $.makeNeutralElement( \"div\" );\n\n    // TODO What if there IS an options.group specified?\n    if( !options.group ){\n        this.label   = $.makeNeutralElement( \"label\" );\n        //TODO: support labels for ButtonGroups\n        //this.label.innerHTML = this.labelText;\n        this.element.style.display = \"inline-block\";\n        this.element.appendChild( this.label );\n        for ( i = 0; i < buttons.length; i++ ) {\n            this.element.appendChild( buttons[ i ].element );\n        }\n    }\n\n    $.setElementTouchActionNone( this.element );\n\n    /**\n     * Tracks mouse/touch/key events accross the group of buttons.\n     * @member {OpenSeadragon.MouseTracker} tracker\n     * @memberof OpenSeadragon.ButtonGroup#\n     */\n    this.tracker = new $.MouseTracker({\n        element:            this.element,\n        clickTimeThreshold: this.clickTimeThreshold,\n        clickDistThreshold: this.clickDistThreshold,\n        enterHandler: function ( event ) {\n            var i;\n            for ( i = 0; i < _this.buttons.length; i++ ) {\n                _this.buttons[ i ].notifyGroupEnter();\n            }\n        },\n        exitHandler: function ( event ) {\n            var i;\n            if ( !event.insideElementPressed ) {\n                for ( i = 0; i < _this.buttons.length; i++ ) {\n                    _this.buttons[ i ].notifyGroupExit();\n                }\n            }\n        },\n    });\n};\n\n/** @lends OpenSeadragon.ButtonGroup.prototype */\n$.ButtonGroup.prototype = {\n\n    /**\n     * TODO: Figure out why this is used on the public API and if a more useful\n     * api can be created.\n     * @function\n     * @private\n     */\n    emulateEnter: function() {\n        this.tracker.enterHandler( { eventSource: this.tracker } );\n    },\n\n    /**\n     * TODO: Figure out why this is used on the public API and if a more useful\n     * api can be created.\n     * @function\n     * @private\n     */\n    emulateExit: function() {\n        this.tracker.exitHandler( { eventSource: this.tracker } );\n    }\n};\n\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - Rect\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function($) {\n\n/**\n * @class Rect\n * @classdesc A Rectangle is described by it top left coordinates (x, y), width,\n * height and degrees of rotation around (x, y).\n * Note that the coordinate system used is the one commonly used with images:\n * x increases when going to the right\n * y increases when going to the bottom\n * degrees increases clockwise with 0 being the horizontal\n *\n * The constructor normalizes the rectangle to always have 0 <= degrees < 90\n *\n * @memberof OpenSeadragon\n * @param {Number} [x=0] The vector component 'x'.\n * @param {Number} [y=0] The vector component 'y'.\n * @param {Number} [width=0] The vector component 'width'.\n * @param {Number} [height=0] The vector component 'height'.\n * @param {Number} [degrees=0] Rotation of the rectangle around (x,y) in degrees.\n */\n$.Rect = function(x, y, width, height, degrees) {\n    /**\n     * The vector component 'x'.\n     * @member {Number} x\n     * @memberof OpenSeadragon.Rect#\n     */\n    this.x = typeof(x) === \"number\" ? x : 0;\n    /**\n     * The vector component 'y'.\n     * @member {Number} y\n     * @memberof OpenSeadragon.Rect#\n     */\n    this.y = typeof(y) === \"number\" ? y : 0;\n    /**\n     * The vector component 'width'.\n     * @member {Number} width\n     * @memberof OpenSeadragon.Rect#\n     */\n    this.width  = typeof(width) === \"number\" ? width : 0;\n    /**\n     * The vector component 'height'.\n     * @member {Number} height\n     * @memberof OpenSeadragon.Rect#\n     */\n    this.height = typeof(height) === \"number\" ? height : 0;\n\n    this.degrees = typeof(degrees) === \"number\" ? degrees : 0;\n\n    // Normalizes the rectangle.\n    this.degrees = this.degrees % 360;\n    if (this.degrees < 0) {\n        this.degrees += 360;\n    }\n    var newTopLeft, newWidth;\n    if (this.degrees >= 270) {\n        newTopLeft = this.getTopRight();\n        this.x = newTopLeft.x;\n        this.y = newTopLeft.y;\n        newWidth = this.height;\n        this.height = this.width;\n        this.width = newWidth;\n        this.degrees -= 270;\n    } else if (this.degrees >= 180) {\n        newTopLeft = this.getBottomRight();\n        this.x = newTopLeft.x;\n        this.y = newTopLeft.y;\n        this.degrees -= 180;\n    } else if (this.degrees >= 90) {\n        newTopLeft = this.getBottomLeft();\n        this.x = newTopLeft.x;\n        this.y = newTopLeft.y;\n        newWidth = this.height;\n        this.height = this.width;\n        this.width = newWidth;\n        this.degrees -= 90;\n    }\n};\n\n/**\n * Builds a rectangle having the 3 specified points as summits.\n * @static\n * @memberof OpenSeadragon.Rect\n * @param {OpenSeadragon.Point} topLeft\n * @param {OpenSeadragon.Point} topRight\n * @param {OpenSeadragon.Point} bottomLeft\n * @returns {OpenSeadragon.Rect}\n */\n$.Rect.fromSummits = function(topLeft, topRight, bottomLeft) {\n    var width = topLeft.distanceTo(topRight);\n    var height = topLeft.distanceTo(bottomLeft);\n    var diff = topRight.minus(topLeft);\n    var radians = Math.atan(diff.y / diff.x);\n    if (diff.x < 0) {\n        radians += Math.PI;\n    } else if (diff.y < 0) {\n        radians += 2 * Math.PI;\n    }\n    return new $.Rect(\n        topLeft.x,\n        topLeft.y,\n        width,\n        height,\n        radians / Math.PI * 180);\n};\n\n/** @lends OpenSeadragon.Rect.prototype */\n$.Rect.prototype = {\n    /**\n     * @function\n     * @returns {OpenSeadragon.Rect} a duplicate of this Rect\n     */\n    clone: function() {\n        return new $.Rect(\n            this.x,\n            this.y,\n            this.width,\n            this.height,\n            this.degrees);\n    },\n\n    /**\n     * The aspect ratio is simply the ratio of width to height.\n     * @function\n     * @returns {Number} The ratio of width to height.\n     */\n    getAspectRatio: function() {\n        return this.width / this.height;\n    },\n\n    /**\n     * Provides the coordinates of the upper-left corner of the rectangle as a\n     * point.\n     * @function\n     * @returns {OpenSeadragon.Point} The coordinate of the upper-left corner of\n     *  the rectangle.\n     */\n    getTopLeft: function() {\n        return new $.Point(\n            this.x,\n            this.y\n        );\n    },\n\n    /**\n     * Provides the coordinates of the bottom-right corner of the rectangle as a\n     * point.\n     * @function\n     * @returns {OpenSeadragon.Point} The coordinate of the bottom-right corner of\n     *  the rectangle.\n     */\n    getBottomRight: function() {\n        return new $.Point(this.x + this.width, this.y + this.height)\n            .rotate(this.degrees, this.getTopLeft());\n    },\n\n    /**\n     * Provides the coordinates of the top-right corner of the rectangle as a\n     * point.\n     * @function\n     * @returns {OpenSeadragon.Point} The coordinate of the top-right corner of\n     *  the rectangle.\n     */\n    getTopRight: function() {\n        return new $.Point(this.x + this.width, this.y)\n            .rotate(this.degrees, this.getTopLeft());\n    },\n\n    /**\n     * Provides the coordinates of the bottom-left corner of the rectangle as a\n     * point.\n     * @function\n     * @returns {OpenSeadragon.Point} The coordinate of the bottom-left corner of\n     *  the rectangle.\n     */\n    getBottomLeft: function() {\n        return new $.Point(this.x, this.y + this.height)\n            .rotate(this.degrees, this.getTopLeft());\n    },\n\n    /**\n     * Computes the center of the rectangle.\n     * @function\n     * @returns {OpenSeadragon.Point} The center of the rectangle as represented\n     *  as represented by a 2-dimensional vector (x,y)\n     */\n    getCenter: function() {\n        return new $.Point(\n            this.x + this.width / 2.0,\n            this.y + this.height / 2.0\n        ).rotate(this.degrees, this.getTopLeft());\n    },\n\n    /**\n     * Returns the width and height component as a vector OpenSeadragon.Point\n     * @function\n     * @returns {OpenSeadragon.Point} The 2 dimensional vector representing the\n     *  the width and height of the rectangle.\n     */\n    getSize: function() {\n        return new $.Point(this.width, this.height);\n    },\n\n    /**\n     * Determines if two Rectangles have equivalent components.\n     * @function\n     * @param {OpenSeadragon.Rect} rectangle The Rectangle to compare to.\n     * @return {Boolean} 'true' if all components are equal, otherwise 'false'.\n     */\n    equals: function(other) {\n        return (other instanceof $.Rect) &&\n            this.x === other.x &&\n            this.y === other.y &&\n            this.width === other.width &&\n            this.height === other.height &&\n            this.degrees === other.degrees;\n    },\n\n    /**\n    * Multiply all dimensions (except degrees) in this Rect by a factor and\n    * return a new Rect.\n    * @function\n    * @param {Number} factor The factor to multiply vector components.\n    * @returns {OpenSeadragon.Rect} A new rect representing the multiplication\n    *  of the vector components by the factor\n    */\n    times: function(factor) {\n        return new $.Rect(\n            this.x * factor,\n            this.y * factor,\n            this.width * factor,\n            this.height * factor,\n            this.degrees);\n    },\n\n    /**\n    * Translate/move this Rect by a vector and return new Rect.\n    * @function\n    * @param {OpenSeadragon.Point} delta The translation vector.\n    * @returns {OpenSeadragon.Rect} A new rect with altered position\n    */\n    translate: function(delta) {\n        return new $.Rect(\n            this.x + delta.x,\n            this.y + delta.y,\n            this.width,\n            this.height,\n            this.degrees);\n    },\n\n    /**\n     * Returns the smallest rectangle that will contain this and the given\n     * rectangle bounding boxes.\n     * @param {OpenSeadragon.Rect} rect\n     * @return {OpenSeadragon.Rect} The new rectangle.\n     */\n    union: function(rect) {\n        var thisBoundingBox = this.getBoundingBox();\n        var otherBoundingBox = rect.getBoundingBox();\n\n        var left = Math.min(thisBoundingBox.x, otherBoundingBox.x);\n        var top = Math.min(thisBoundingBox.y, otherBoundingBox.y);\n        var right = Math.max(\n            thisBoundingBox.x + thisBoundingBox.width,\n            otherBoundingBox.x + otherBoundingBox.width);\n        var bottom = Math.max(\n            thisBoundingBox.y + thisBoundingBox.height,\n            otherBoundingBox.y + otherBoundingBox.height);\n\n        return new $.Rect(\n            left,\n            top,\n            right - left,\n            bottom - top);\n    },\n\n    /**\n     * Returns the bounding box of the intersection of this rectangle with the\n     * given rectangle.\n     * @param {OpenSeadragon.Rect} rect\n     * @return {OpenSeadragon.Rect} the bounding box of the intersection\n     * or null if the rectangles don't intersect.\n     */\n    intersection: function(rect) {\n        // Simplified version of Weiler Atherton clipping algorithm\n        // https://en.wikipedia.org/wiki/Weiler%E2%80%93Atherton_clipping_algorithm\n        // Because we just want the bounding box of the intersection,\n        // we can just compute the bounding box of:\n        // 1. all the summits of this which are inside rect\n        // 2. all the summits of rect which are inside this\n        // 3. all the intersections of rect and this\n        var EPSILON = 0.0000000001;\n\n        var intersectionPoints = [];\n\n        var thisTopLeft = this.getTopLeft();\n        if (rect.containsPoint(thisTopLeft, EPSILON)) {\n            intersectionPoints.push(thisTopLeft);\n        }\n        var thisTopRight = this.getTopRight();\n        if (rect.containsPoint(thisTopRight, EPSILON)) {\n            intersectionPoints.push(thisTopRight);\n        }\n        var thisBottomLeft = this.getBottomLeft();\n        if (rect.containsPoint(thisBottomLeft, EPSILON)) {\n            intersectionPoints.push(thisBottomLeft);\n        }\n        var thisBottomRight = this.getBottomRight();\n        if (rect.containsPoint(thisBottomRight, EPSILON)) {\n            intersectionPoints.push(thisBottomRight);\n        }\n\n        var rectTopLeft = rect.getTopLeft();\n        if (this.containsPoint(rectTopLeft, EPSILON)) {\n            intersectionPoints.push(rectTopLeft);\n        }\n        var rectTopRight = rect.getTopRight();\n        if (this.containsPoint(rectTopRight, EPSILON)) {\n            intersectionPoints.push(rectTopRight);\n        }\n        var rectBottomLeft = rect.getBottomLeft();\n        if (this.containsPoint(rectBottomLeft, EPSILON)) {\n            intersectionPoints.push(rectBottomLeft);\n        }\n        var rectBottomRight = rect.getBottomRight();\n        if (this.containsPoint(rectBottomRight, EPSILON)) {\n            intersectionPoints.push(rectBottomRight);\n        }\n\n        var thisSegments = this._getSegments();\n        var rectSegments = rect._getSegments();\n        for (var i = 0; i < thisSegments.length; i++) {\n            var thisSegment = thisSegments[i];\n            for (var j = 0; j < rectSegments.length; j++) {\n                var rectSegment = rectSegments[j];\n                var intersect = getIntersection(thisSegment[0], thisSegment[1],\n                    rectSegment[0], rectSegment[1]);\n                if (intersect) {\n                    intersectionPoints.push(intersect);\n                }\n            }\n        }\n\n        // Get intersection point of segments [a,b] and [c,d]\n        function getIntersection(a, b, c, d) {\n            // http://stackoverflow.com/a/1968345/1440403\n            var abVector = b.minus(a);\n            var cdVector = d.minus(c);\n\n            var denom = -cdVector.x * abVector.y + abVector.x * cdVector.y;\n            if (denom === 0) {\n                return null;\n            }\n\n            var s = (abVector.x * (a.y - c.y) - abVector.y * (a.x - c.x)) / denom;\n            var t = (cdVector.x * (a.y - c.y) - cdVector.y * (a.x - c.x)) / denom;\n\n            if (-EPSILON <= s && s <= 1 - EPSILON &&\n                -EPSILON <= t && t <= 1 - EPSILON) {\n                return new $.Point(a.x + t * abVector.x, a.y + t * abVector.y);\n            }\n            return null;\n        }\n\n        if (intersectionPoints.length === 0) {\n            return null;\n        }\n\n        var minX = intersectionPoints[0].x;\n        var maxX = intersectionPoints[0].x;\n        var minY = intersectionPoints[0].y;\n        var maxY = intersectionPoints[0].y;\n        for (var k = 1; k < intersectionPoints.length; k++) {\n            var point = intersectionPoints[k];\n            if (point.x < minX) {\n                minX = point.x;\n            }\n            if (point.x > maxX) {\n                maxX = point.x;\n            }\n            if (point.y < minY) {\n                minY = point.y;\n            }\n            if (point.y > maxY) {\n                maxY = point.y;\n            }\n        }\n        return new $.Rect(minX, minY, maxX - minX, maxY - minY);\n    },\n\n    // private\n    _getSegments: function() {\n        var topLeft = this.getTopLeft();\n        var topRight = this.getTopRight();\n        var bottomLeft = this.getBottomLeft();\n        var bottomRight = this.getBottomRight();\n        return [[topLeft, topRight],\n            [topRight, bottomRight],\n            [bottomRight, bottomLeft],\n            [bottomLeft, topLeft]];\n    },\n\n    /**\n     * Rotates a rectangle around a point.\n     * @function\n     * @param {Number} degrees The angle in degrees to rotate.\n     * @param {OpenSeadragon.Point} [pivot] The point about which to rotate.\n     * Defaults to the center of the rectangle.\n     * @return {OpenSeadragon.Rect}\n     */\n    rotate: function(degrees, pivot) {\n        degrees = degrees % 360;\n        if (degrees === 0) {\n            return this.clone();\n        }\n        if (degrees < 0) {\n            degrees += 360;\n        }\n\n        pivot = pivot || this.getCenter();\n        var newTopLeft = this.getTopLeft().rotate(degrees, pivot);\n        var newTopRight = this.getTopRight().rotate(degrees, pivot);\n\n        var diff = newTopRight.minus(newTopLeft);\n        var radians = Math.atan(diff.y / diff.x);\n        if (diff.x < 0) {\n            radians += Math.PI;\n        } else if (diff.y < 0) {\n            radians += 2 * Math.PI;\n        }\n        return new $.Rect(\n            newTopLeft.x,\n            newTopLeft.y,\n            this.width,\n            this.height,\n            radians / Math.PI * 180);\n    },\n\n    /**\n     * Retrieves the smallest horizontal (degrees=0) rectangle which contains\n     * this rectangle.\n     * @returns {OpenSeadragon.Rect}\n     */\n    getBoundingBox: function() {\n        if (this.degrees === 0) {\n            return this.clone();\n        }\n        var topLeft = this.getTopLeft();\n        var topRight = this.getTopRight();\n        var bottomLeft = this.getBottomLeft();\n        var bottomRight = this.getBottomRight();\n        var minX = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n        var maxX = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n        var minY = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n        var maxY = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n        return new $.Rect(\n            minX,\n            minY,\n            maxX - minX,\n            maxY - minY);\n    },\n\n    /**\n     * Retrieves the smallest horizontal (degrees=0) rectangle which contains\n     * this rectangle and has integers x, y, width and height\n     * @returns {OpenSeadragon.Rect}\n     */\n    getIntegerBoundingBox: function() {\n        var boundingBox = this.getBoundingBox();\n        var x = Math.floor(boundingBox.x);\n        var y = Math.floor(boundingBox.y);\n        var width = Math.ceil(boundingBox.width + boundingBox.x - x);\n        var height = Math.ceil(boundingBox.height + boundingBox.y - y);\n        return new $.Rect(x, y, width, height);\n    },\n\n    /**\n     * Determines whether a point is inside this rectangle (edge included).\n     * @function\n     * @param {OpenSeadragon.Point} point\n     * @param {Number} [epsilon=0] the margin of error allowed\n     * @returns {Boolean} true if the point is inside this rectangle, false\n     * otherwise.\n     */\n    containsPoint: function(point, epsilon) {\n        epsilon = epsilon || 0;\n\n        // See http://stackoverflow.com/a/2752754/1440403 for explanation\n        var topLeft = this.getTopLeft();\n        var topRight = this.getTopRight();\n        var bottomLeft = this.getBottomLeft();\n        var topDiff = topRight.minus(topLeft);\n        var leftDiff = bottomLeft.minus(topLeft);\n\n        return ((point.x - topLeft.x) * topDiff.x +\n            (point.y - topLeft.y) * topDiff.y >= -epsilon) &&\n\n            ((point.x - topRight.x) * topDiff.x +\n            (point.y - topRight.y) * topDiff.y <= epsilon) &&\n\n            ((point.x - topLeft.x) * leftDiff.x +\n            (point.y - topLeft.y) * leftDiff.y >= -epsilon) &&\n\n            ((point.x - bottomLeft.x) * leftDiff.x +\n            (point.y - bottomLeft.y) * leftDiff.y <= epsilon);\n    },\n\n    /**\n     * Provides a string representation of the rectangle which is useful for\n     * debugging.\n     * @function\n     * @returns {String} A string representation of the rectangle.\n     */\n    toString: function() {\n        return \"[\" +\n            (Math.round(this.x * 100) / 100) + \", \" +\n            (Math.round(this.y * 100) / 100) + \", \" +\n            (Math.round(this.width * 100) / 100) + \"x\" +\n            (Math.round(this.height * 100) / 100) + \", \" +\n            (Math.round(this.degrees * 100) / 100) + \"deg\" +\n            \"]\";\n    }\n};\n\n\n}(OpenSeadragon));\n\n/*\n * OpenSeadragon - ReferenceStrip\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function ( $ ) {\n\n// dictionary from id to private properties\nvar THIS = {};\n\n/**\n *  The CollectionDrawer is a reimplementation if the Drawer API that\n *  focuses on allowing a viewport to be redefined as a collection\n *  of smaller viewports, defined by a clear number of rows and / or\n *  columns of which each item in the matrix of viewports has its own\n *  source.\n *\n *  This idea is a reexpression of the idea of dzi collections\n *  which allows a clearer algorithm to reuse the tile sources already\n *  supported by OpenSeadragon, in heterogenious or homogenious\n *  sequences just like mixed groups already supported by the viewer\n *  for the purpose of image sequnces.\n *\n *  TODO:   The difficult part of this feature is figuring out how to express\n *          this functionality as a combination of the functionality already\n *          provided by Drawer, Viewport, TileSource, and Navigator.  It may\n *          require better abstraction at those points in order to effeciently\n *          reuse those paradigms.\n */\n/**\n * @class ReferenceStrip\n * @memberof OpenSeadragon\n * @param {Object} options\n */\n$.ReferenceStrip = function ( options ) {\n\n    var _this       = this,\n        viewer      = options.viewer,\n        viewerSize  = $.getElementSize( viewer.element ),\n        element,\n        style,\n        i;\n\n    //We may need to create a new element and id if they did not\n    //provide the id for the existing element\n    if ( !options.id ) {\n        options.id              = 'referencestrip-' + $.now();\n        this.element            = $.makeNeutralElement( \"div\" );\n        this.element.id         = options.id;\n        this.element.className  = 'referencestrip';\n    }\n\n    options = $.extend( true, {\n        sizeRatio:  $.DEFAULT_SETTINGS.referenceStripSizeRatio,\n        position:   $.DEFAULT_SETTINGS.referenceStripPosition,\n        scroll:     $.DEFAULT_SETTINGS.referenceStripScroll,\n        clickTimeThreshold:  $.DEFAULT_SETTINGS.clickTimeThreshold\n    }, options, {\n        //required overrides\n        element:                this.element,\n        //These need to be overridden to prevent recursion since\n        //the navigator is a viewer and a viewer has a navigator\n        showNavigator:          false,\n        mouseNavEnabled:        false,\n        showNavigationControl:  false,\n        showSequenceControl:    false\n    } );\n\n    $.extend( this, options );\n    //Private state properties\n    THIS[this.id] = {\n        \"animating\":           false\n    };\n\n    this.minPixelRatio = this.viewer.minPixelRatio;\n\n    style = this.element.style;\n    style.marginTop     = '0px';\n    style.marginRight   = '0px';\n    style.marginBottom  = '0px';\n    style.marginLeft    = '0px';\n    style.left          = '0px';\n    style.bottom        = '0px';\n    style.border        = '0px';\n    style.background    = '#000';\n    style.position      = 'relative';\n\n    $.setElementTouchActionNone( this.element );\n\n    $.setElementOpacity( this.element, 0.8 );\n\n    this.viewer = viewer;\n    this.innerTracker = new $.MouseTracker( {\n        element:        this.element,\n        dragHandler:    $.delegate( this, onStripDrag ),\n        scrollHandler:  $.delegate( this, onStripScroll ),\n        enterHandler:   $.delegate( this, onStripEnter ),\n        exitHandler:    $.delegate( this, onStripExit ),\n        keyDownHandler: $.delegate( this, onKeyDown ),\n        keyHandler:     $.delegate( this, onKeyPress )\n    } );\n\n    //Controls the position and orientation of the reference strip and sets the\n    //appropriate width and height\n    if ( options.width && options.height ) {\n        this.element.style.width  = options.width + 'px';\n        this.element.style.height = options.height + 'px';\n        viewer.addControl(\n            this.element,\n            { anchor: $.ControlAnchor.BOTTOM_LEFT }\n        );\n    } else {\n        if ( \"horizontal\" == options.scroll ) {\n            this.element.style.width = (\n                viewerSize.x *\n                options.sizeRatio *\n                viewer.tileSources.length\n            ) + ( 12 * viewer.tileSources.length ) + 'px';\n\n            this.element.style.height = (\n                viewerSize.y *\n                options.sizeRatio\n            ) + 'px';\n\n            viewer.addControl(\n                this.element,\n                { anchor: $.ControlAnchor.BOTTOM_LEFT }\n            );\n        } else {\n            this.element.style.height = (\n                viewerSize.y *\n                options.sizeRatio *\n                viewer.tileSources.length\n            ) + ( 12 * viewer.tileSources.length ) + 'px';\n\n            this.element.style.width = (\n                viewerSize.x *\n                options.sizeRatio\n            ) + 'px';\n\n            viewer.addControl(\n                this.element,\n                { anchor: $.ControlAnchor.TOP_LEFT }\n            );\n\n        }\n    }\n\n    this.panelWidth = ( viewerSize.x * this.sizeRatio ) + 8;\n    this.panelHeight = ( viewerSize.y * this.sizeRatio ) + 8;\n    this.panels = [];\n\n    /*jshint loopfunc:true*/\n    for ( i = 0; i < viewer.tileSources.length; i++ ) {\n\n        element = $.makeNeutralElement( 'div' );\n        element.id = this.element.id + \"-\" + i;\n\n        element.style.width         = _this.panelWidth + 'px';\n        element.style.height        = _this.panelHeight + 'px';\n        element.style.display       = 'inline';\n        element.style.float         = 'left'; //Webkit\n        element.style.cssFloat      = 'left'; //Firefox\n        element.style.styleFloat    = 'left'; //IE\n        element.style.padding       = '2px';\n        $.setElementTouchActionNone( element );\n\n        element.innerTracker = new $.MouseTracker( {\n            element:            element,\n            clickTimeThreshold: this.clickTimeThreshold,\n            clickDistThreshold: this.clickDistThreshold,\n            pressHandler: function ( event ) {\n                event.eventSource.dragging = $.now();\n            },\n            releaseHandler: function ( event ) {\n                var tracker = event.eventSource,\n                    id      = tracker.element.id,\n                    page    = Number( id.split( '-' )[2] ),\n                    now     = $.now();\n\n                if ( event.insideElementPressed &&\n                     event.insideElementReleased &&\n                     tracker.dragging &&\n                     ( now - tracker.dragging ) < tracker.clickTimeThreshold ) {\n                    tracker.dragging = null;\n                    viewer.goToPage( page );\n                }\n            }\n        } );\n\n        this.element.appendChild( element );\n\n        element.activePanel = false;\n\n        this.panels.push( element );\n\n    }\n    loadPanels( this, this.scroll == 'vertical' ? viewerSize.y : viewerSize.x, 0 );\n    this.setFocus( 0 );\n\n};\n\n$.extend( $.ReferenceStrip.prototype, $.EventSource.prototype, $.Viewer.prototype, /** @lends OpenSeadragon.ReferenceStrip.prototype */{\n\n    /**\n     * @function\n     */\n    setFocus: function ( page ) {\n        var element      = $.getElement( this.element.id + '-' + page ),\n            viewerSize   = $.getElementSize( this.viewer.canvas ),\n            scrollWidth  = Number( this.element.style.width.replace( 'px', '' ) ),\n            scrollHeight = Number( this.element.style.height.replace( 'px', '' ) ),\n            offsetLeft   = -Number( this.element.style.marginLeft.replace( 'px', '' ) ),\n            offsetTop    = -Number( this.element.style.marginTop.replace( 'px', '' ) ),\n            offset;\n\n        if ( this.currentSelected !== element ) {\n            if ( this.currentSelected ) {\n                this.currentSelected.style.background = '#000';\n            }\n            this.currentSelected = element;\n            this.currentSelected.style.background = '#999';\n\n            if ( 'horizontal' == this.scroll ) {\n                //right left\n                offset = ( Number( page ) ) * ( this.panelWidth + 3 );\n                if ( offset > offsetLeft + viewerSize.x - this.panelWidth ) {\n                    offset = Math.min( offset, ( scrollWidth - viewerSize.x ) );\n                    this.element.style.marginLeft = -offset + 'px';\n                    loadPanels( this, viewerSize.x, -offset );\n                } else if ( offset < offsetLeft ) {\n                    offset = Math.max( 0, offset - viewerSize.x / 2 );\n                    this.element.style.marginLeft = -offset + 'px';\n                    loadPanels( this, viewerSize.x, -offset );\n                }\n            } else {\n                offset = ( Number( page ) ) * ( this.panelHeight + 3 );\n                if ( offset > offsetTop + viewerSize.y - this.panelHeight ) {\n                    offset = Math.min( offset, ( scrollHeight - viewerSize.y ) );\n                    this.element.style.marginTop = -offset + 'px';\n                    loadPanels( this, viewerSize.y, -offset );\n                } else if ( offset < offsetTop ) {\n                    offset = Math.max( 0, offset - viewerSize.y / 2 );\n                    this.element.style.marginTop = -offset + 'px';\n                    loadPanels( this, viewerSize.y, -offset );\n                }\n            }\n\n            this.currentPage = page;\n            onStripEnter.call( this, { eventSource: this.innerTracker } );\n        }\n    },\n\n    /**\n     * @function\n     */\n    update: function () {\n        if ( THIS[this.id].animating ) {\n            $.console.log( 'image reference strip update' );\n            return true;\n        }\n        return false;\n    },\n\n    // Overrides Viewer.destroy\n    destroy: function() {\n        if (this.element) {\n            this.element.parentNode.removeChild(this.element);\n        }\n    }\n\n} );\n\n\n\n\n/**\n * @private\n * @inner\n * @function\n */\nfunction onStripDrag( event ) {\n\n    var offsetLeft   = Number( this.element.style.marginLeft.replace( 'px', '' ) ),\n        offsetTop    = Number( this.element.style.marginTop.replace( 'px', '' ) ),\n        scrollWidth  = Number( this.element.style.width.replace( 'px', '' ) ),\n        scrollHeight = Number( this.element.style.height.replace( 'px', '' ) ),\n        viewerSize   = $.getElementSize( this.viewer.canvas );\n    this.dragging = true;\n    if ( this.element ) {\n        if ( 'horizontal' == this.scroll ) {\n            if ( -event.delta.x > 0 ) {\n                //forward\n                if ( offsetLeft > -( scrollWidth - viewerSize.x ) ) {\n                    this.element.style.marginLeft = ( offsetLeft + ( event.delta.x * 2 ) ) + 'px';\n                    loadPanels( this, viewerSize.x, offsetLeft + ( event.delta.x * 2 ) );\n                }\n            } else if ( -event.delta.x < 0 ) {\n                //reverse\n                if ( offsetLeft < 0 ) {\n                    this.element.style.marginLeft = ( offsetLeft + ( event.delta.x * 2 ) ) + 'px';\n                    loadPanels( this, viewerSize.x, offsetLeft + ( event.delta.x * 2 ) );\n                }\n            }\n        } else {\n            if ( -event.delta.y > 0 ) {\n                //forward\n                if ( offsetTop > -( scrollHeight - viewerSize.y ) ) {\n                    this.element.style.marginTop = ( offsetTop + ( event.delta.y * 2 ) ) + 'px';\n                    loadPanels( this, viewerSize.y, offsetTop + ( event.delta.y * 2 ) );\n                }\n            } else if ( -event.delta.y < 0 ) {\n                //reverse\n                if ( offsetTop < 0 ) {\n                    this.element.style.marginTop = ( offsetTop + ( event.delta.y * 2 ) ) + 'px';\n                    loadPanels( this, viewerSize.y, offsetTop + ( event.delta.y * 2 ) );\n                }\n            }\n        }\n    }\n    return false;\n\n}\n\n\n\n/**\n * @private\n * @inner\n * @function\n */\nfunction onStripScroll( event ) {\n    var offsetLeft   = Number( this.element.style.marginLeft.replace( 'px', '' ) ),\n        offsetTop    = Number( this.element.style.marginTop.replace( 'px', '' ) ),\n        scrollWidth  = Number( this.element.style.width.replace( 'px', '' ) ),\n        scrollHeight = Number( this.element.style.height.replace( 'px', '' ) ),\n        viewerSize   = $.getElementSize( this.viewer.canvas );\n    if ( this.element ) {\n        if ( 'horizontal' == this.scroll ) {\n            if ( event.scroll > 0 ) {\n                //forward\n                if ( offsetLeft > -( scrollWidth - viewerSize.x ) ) {\n                    this.element.style.marginLeft = ( offsetLeft - ( event.scroll * 60 ) ) + 'px';\n                    loadPanels( this, viewerSize.x, offsetLeft - ( event.scroll * 60 ) );\n                }\n            } else if ( event.scroll < 0 ) {\n                //reverse\n                if ( offsetLeft < 0 ) {\n                    this.element.style.marginLeft = ( offsetLeft - ( event.scroll * 60 ) ) + 'px';\n                    loadPanels( this, viewerSize.x, offsetLeft - ( event.scroll * 60 ) );\n                }\n            }\n        } else {\n            if ( event.scroll < 0 ) {\n                //scroll up\n                if ( offsetTop > viewerSize.y - scrollHeight ) {\n                    this.element.style.marginTop = ( offsetTop + ( event.scroll * 60 ) ) + 'px';\n                    loadPanels( this, viewerSize.y, offsetTop + ( event.scroll * 60 ) );\n                }\n            } else if ( event.scroll > 0 ) {\n                //scroll dowm\n                if ( offsetTop < 0 ) {\n                    this.element.style.marginTop = ( offsetTop + ( event.scroll * 60 ) ) + 'px';\n                    loadPanels( this, viewerSize.y, offsetTop + ( event.scroll * 60 ) );\n                }\n            }\n        }\n    }\n    //cancels event\n    return false;\n}\n\n\nfunction loadPanels( strip, viewerSize, scroll ) {\n    var panelSize,\n        activePanelsStart,\n        activePanelsEnd,\n        miniViewer,\n        style,\n        i,\n        element;\n    if ( 'horizontal' == strip.scroll ) {\n        panelSize = strip.panelWidth;\n    } else {\n        panelSize = strip.panelHeight;\n    }\n    activePanelsStart = Math.ceil( viewerSize / panelSize ) + 5;\n    activePanelsEnd = Math.ceil( ( Math.abs( scroll ) + viewerSize ) / panelSize ) + 1;\n    activePanelsStart = activePanelsEnd - activePanelsStart;\n    activePanelsStart = activePanelsStart < 0 ? 0 : activePanelsStart;\n\n    for ( i = activePanelsStart; i < activePanelsEnd && i < strip.panels.length; i++ ) {\n        element = strip.panels[i];\n        if ( !element.activePanel ) {\n            miniViewer = new $.Viewer( {\n                id:                     element.id,\n                tileSources:            [strip.viewer.tileSources[i]],\n                element:                element,\n                navigatorSizeRatio:     strip.sizeRatio,\n                showNavigator:          false,\n                mouseNavEnabled:        false,\n                showNavigationControl:  false,\n                showSequenceControl:    false,\n                immediateRender:        true,\n                blendTime:              0,\n                animationTime:          0\n            } );\n\n            miniViewer.displayRegion           = $.makeNeutralElement( \"div\" );\n            miniViewer.displayRegion.id        = element.id + '-displayregion';\n            miniViewer.displayRegion.className = 'displayregion';\n\n            style               = miniViewer.displayRegion.style;\n            style.position      = 'relative';\n            style.top           = '0px';\n            style.left          = '0px';\n            style.fontSize      = '0px';\n            style.overflow      = 'hidden';\n            style.float         = 'left'; //Webkit\n            style.cssFloat      = 'left'; //Firefox\n            style.styleFloat    = 'left'; //IE\n            style.zIndex        = 999999999;\n            style.cursor        = 'default';\n            style.width         = ( strip.panelWidth - 4 ) + 'px';\n            style.height        = ( strip.panelHeight - 4 ) + 'px';\n\n            // TODO: What is this for? Future keyboard navigation support?\n            miniViewer.displayRegion.innerTracker = new $.MouseTracker( {\n                element: miniViewer.displayRegion,\n                startDisabled: true\n            } );\n\n            element.getElementsByTagName( 'div' )[0].appendChild(\n                miniViewer.displayRegion\n            );\n\n            element.activePanel = true;\n        }\n    }\n}\n\n\n/**\n * @private\n * @inner\n * @function\n */\nfunction onStripEnter( event ) {\n    var element = event.eventSource.element;\n\n    //$.setElementOpacity(element, 0.8);\n\n    //element.style.border = '1px solid #555';\n    //element.style.background = '#000';\n\n    if ( 'horizontal' == this.scroll ) {\n\n        //element.style.paddingTop = \"0px\";\n        element.style.marginBottom = \"0px\";\n\n    } else {\n\n        //element.style.paddingRight = \"0px\";\n        element.style.marginLeft = \"0px\";\n\n    }\n    return false;\n}\n\n\n/**\n * @private\n * @inner\n * @function\n */\nfunction onStripExit( event ) {\n    var element = event.eventSource.element;\n\n    if ( 'horizontal' == this.scroll ) {\n\n        //element.style.paddingTop = \"10px\";\n        element.style.marginBottom = \"-\" + ( $.getElementSize( element ).y / 2 ) + \"px\";\n\n    } else {\n\n        //element.style.paddingRight = \"10px\";\n        element.style.marginLeft = \"-\" + ( $.getElementSize( element ).x / 2 ) + \"px\";\n\n    }\n    return false;\n}\n\n\n/**\n * @private\n * @inner\n * @function\n */\nfunction onKeyDown( event ) {\n    //console.log( event.keyCode );\n\n    if ( !event.preventDefaultAction && !event.ctrl && !event.alt && !event.meta ) {\n        switch ( event.keyCode ) {\n            case 38: //up arrow\n                onStripScroll.call( this, { eventSource: this.tracker, position: null, scroll: 1, shift: null } );\n                return false;\n            case 40: //down arrow\n                onStripScroll.call( this, { eventSource: this.tracker, position: null, scroll: -1, shift: null } );\n                return false;\n            case 37: //left arrow\n                onStripScroll.call( this, { eventSource: this.tracker, position: null, scroll: -1, shift: null } );\n                return false;\n            case 39: //right arrow\n                onStripScroll.call( this, { eventSource: this.tracker, position: null, scroll: 1, shift: null } );\n                return false;\n            default:\n                //console.log( 'navigator keycode %s', event.keyCode );\n                return true;\n        }\n    } else {\n        return true;\n    }\n}\n\n\n/**\n * @private\n * @inner\n * @function\n */\nfunction onKeyPress( event ) {\n    //console.log( event.keyCode );\n\n    if ( !event.preventDefaultAction && !event.ctrl && !event.alt && !event.meta ) {\n        switch ( event.keyCode ) {\n            case 61: //=|+\n                onStripScroll.call( this, { eventSource: this.tracker, position: null, scroll: 1, shift: null } );\n                return false;\n            case 45: //-|_\n                onStripScroll.call( this, { eventSource: this.tracker, position: null, scroll: -1, shift: null } );\n                return false;\n            case 48: //0|)\n            case 119: //w\n            case 87: //W\n                onStripScroll.call( this, { eventSource: this.tracker, position: null, scroll: 1, shift: null } );\n                return false;\n            case 115: //s\n            case 83: //S\n                onStripScroll.call( this, { eventSource: this.tracker, position: null, scroll: -1, shift: null } );\n                return false;\n            case 97: //a\n                onStripScroll.call( this, { eventSource: this.tracker, position: null, scroll: -1, shift: null } );\n                return false;\n            case 100: //d\n                onStripScroll.call( this, { eventSource: this.tracker, position: null, scroll: 1, shift: null } );\n                return false;\n            default:\n                //console.log( 'navigator keycode %s', event.keyCode );\n                return true;\n        }\n    } else {\n        return true;\n    }\n}\n\n\n\n} ( OpenSeadragon ) );\n\n/*\n * OpenSeadragon - DisplayRect\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n/**\n * @class DisplayRect\n * @classdesc A display rectangle is very similar to {@link OpenSeadragon.Rect} but adds two\n * fields, 'minLevel' and 'maxLevel' which denote the supported zoom levels\n * for this rectangle.\n *\n * @memberof OpenSeadragon\n * @extends OpenSeadragon.Rect\n * @param {Number} x The vector component 'x'.\n * @param {Number} y The vector component 'y'.\n * @param {Number} width The vector component 'height'.\n * @param {Number} height The vector component 'width'.\n * @param {Number} minLevel The lowest zoom level supported.\n * @param {Number} maxLevel The highest zoom level supported.\n */\n$.DisplayRect = function( x, y, width, height, minLevel, maxLevel ) {\n    $.Rect.apply( this, [ x, y, width, height ] );\n\n    /**\n     * The lowest zoom level supported.\n     * @member {Number} minLevel\n     * @memberof OpenSeadragon.DisplayRect#\n     */\n    this.minLevel = minLevel;\n    /**\n     * The highest zoom level supported.\n     * @member {Number} maxLevel\n     * @memberof OpenSeadragon.DisplayRect#\n     */\n    this.maxLevel = maxLevel;\n};\n\n$.extend( $.DisplayRect.prototype, $.Rect.prototype );\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - Spring\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n/**\n * @class Spring\n * @memberof OpenSeadragon\n * @param {Object} options - Spring configuration settings.\n * @param {Number} options.springStiffness - Spring stiffness. Must be greater than zero.\n * The closer to zero, the closer to linear animation.\n * @param {Number} options.animationTime - Animation duration per spring, in seconds.\n * Must be zero or greater.\n * @param {Number} [options.initial=0] - Initial value of spring.\n * @param {Boolean} [options.exponential=false] - Whether this spring represents\n * an exponential scale (such as zoom) and should be animated accordingly. Note that\n * exponential springs must have non-zero values.\n */\n$.Spring = function( options ) {\n    var args = arguments;\n\n    if( typeof( options ) != 'object' ){\n        //allows backward compatible use of ( initialValue, config ) as\n        //constructor parameters\n        options = {\n            initial: args.length && typeof ( args[ 0 ] ) == \"number\" ?\n                args[ 0 ] :\n                undefined,\n            /**\n             * Spring stiffness.\n             * @member {Number} springStiffness\n             * @memberof OpenSeadragon.Spring#\n             */\n            springStiffness: args.length > 1 ?\n                args[ 1 ].springStiffness :\n                5.0,\n            /**\n             * Animation duration per spring.\n             * @member {Number} animationTime\n             * @memberof OpenSeadragon.Spring#\n             */\n            animationTime: args.length > 1 ?\n                args[ 1 ].animationTime :\n                1.5\n        };\n    }\n\n    $.console.assert(typeof options.springStiffness === \"number\" && options.springStiffness !== 0,\n        \"[OpenSeadragon.Spring] options.springStiffness must be a non-zero number\");\n\n    $.console.assert(typeof options.animationTime === \"number\" && options.animationTime >= 0,\n        \"[OpenSeadragon.Spring] options.animationTime must be a number greater than or equal to 0\");\n\n    if (options.exponential) {\n        this._exponential = true;\n        delete options.exponential;\n    }\n\n    $.extend( true, this, options);\n\n    /**\n     * @member {Object} current\n     * @memberof OpenSeadragon.Spring#\n     * @property {Number} value\n     * @property {Number} time\n     */\n    this.current = {\n        value: typeof ( this.initial ) == \"number\" ?\n            this.initial :\n            (this._exponential ? 0 : 1),\n        time:  $.now() // always work in milliseconds\n    };\n\n    $.console.assert(!this._exponential || this.current.value !== 0,\n        \"[OpenSeadragon.Spring] value must be non-zero for exponential springs\");\n\n    /**\n     * @member {Object} start\n     * @memberof OpenSeadragon.Spring#\n     * @property {Number} value\n     * @property {Number} time\n     */\n    this.start = {\n        value: this.current.value,\n        time:  this.current.time\n    };\n\n    /**\n     * @member {Object} target\n     * @memberof OpenSeadragon.Spring#\n     * @property {Number} value\n     * @property {Number} time\n     */\n    this.target = {\n        value: this.current.value,\n        time:  this.current.time\n    };\n\n    if (this._exponential) {\n        this.start._logValue = Math.log(this.start.value);\n        this.target._logValue = Math.log(this.target.value);\n        this.current._logValue = Math.log(this.current.value);\n    }\n};\n\n/** @lends OpenSeadragon.Spring.prototype */\n$.Spring.prototype = {\n\n    /**\n     * @function\n     * @param {Number} target\n     */\n    resetTo: function( target ) {\n        $.console.assert(!this._exponential || target !== 0,\n            \"[OpenSeadragon.Spring.resetTo] target must be non-zero for exponential springs\");\n\n        this.start.value = this.target.value = this.current.value = target;\n        this.start.time = this.target.time = this.current.time = $.now();\n\n        if (this._exponential) {\n            this.start._logValue = Math.log(this.start.value);\n            this.target._logValue = Math.log(this.target.value);\n            this.current._logValue = Math.log(this.current.value);\n        }\n    },\n\n    /**\n     * @function\n     * @param {Number} target\n     */\n    springTo: function( target ) {\n        $.console.assert(!this._exponential || target !== 0,\n            \"[OpenSeadragon.Spring.springTo] target must be non-zero for exponential springs\");\n\n        this.start.value  = this.current.value;\n        this.start.time   = this.current.time;\n        this.target.value = target;\n        this.target.time  = this.start.time + 1000 * this.animationTime;\n\n        if (this._exponential) {\n            this.start._logValue = Math.log(this.start.value);\n            this.target._logValue = Math.log(this.target.value);\n        }\n    },\n\n    /**\n     * @function\n     * @param {Number} delta\n     */\n    shiftBy: function( delta ) {\n        this.start.value  += delta;\n        this.target.value += delta;\n\n        if (this._exponential) {\n            $.console.assert(this.target.value !== 0 && this.start.value !== 0,\n                \"[OpenSeadragon.Spring.shiftBy] spring value must be non-zero for exponential springs\");\n\n            this.start._logValue = Math.log(this.start.value);\n            this.target._logValue = Math.log(this.target.value);\n        }\n    },\n\n    setExponential: function(value) {\n        this._exponential = value;\n\n        if (this._exponential) {\n            $.console.assert(this.current.value !== 0 && this.target.value !== 0 && this.start.value !== 0,\n                \"[OpenSeadragon.Spring.setExponential] spring value must be non-zero for exponential springs\");\n\n            this.start._logValue = Math.log(this.start.value);\n            this.target._logValue = Math.log(this.target.value);\n            this.current._logValue = Math.log(this.current.value);\n        }\n    },\n\n    /**\n     * @function\n     */\n    update: function() {\n        this.current.time  = $.now();\n\n        var startValue, targetValue;\n        if (this._exponential) {\n            startValue = this.start._logValue;\n            targetValue = this.target._logValue;\n        } else {\n            startValue = this.start.value;\n            targetValue = this.target.value;\n        }\n\n        var currentValue = (this.current.time >= this.target.time) ?\n            targetValue :\n            startValue +\n                ( targetValue - startValue ) *\n                transform(\n                    this.springStiffness,\n                    ( this.current.time - this.start.time ) /\n                    ( this.target.time  - this.start.time )\n                );\n\n        if (this._exponential) {\n            this.current.value = Math.exp(currentValue);\n        } else {\n            this.current.value = currentValue;\n        }\n    },\n\n    /**\n     * Returns whether the spring is at the target value\n     * @function\n     * @returns {Boolean} True if at target value, false otherwise\n     */\n    isAtTargetValue: function() {\n        return this.current.value === this.target.value;\n    }\n};\n\n/**\n * @private\n */\nfunction transform( stiffness, x ) {\n    return ( 1.0 - Math.exp( stiffness * -x ) ) /\n        ( 1.0 - Math.exp( -stiffness ) );\n}\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - ImageLoader\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n// private class\nfunction ImageJob ( options ) {\n\n    $.extend( true, this, {\n        timeout:        $.DEFAULT_SETTINGS.timeout,\n        jobId:          null\n    }, options );\n\n    /**\n     * Image object which will contain downloaded image.\n     * @member {Image} image\n     * @memberof OpenSeadragon.ImageJob#\n     */\n    this.image = null;\n}\n\nImageJob.prototype = {\n    errorMsg: null,\n    start: function(){\n        var _this = this;\n\n        this.image = new Image();\n\n        if ( this.crossOriginPolicy !== false ) {\n            this.image.crossOrigin = this.crossOriginPolicy;\n        }\n\n        this.image.onload = function(){\n            _this.finish( true );\n        };\n        this.image.onabort = this.image.onerror = function(){\n            _this.errorMsg = \"Image load aborted\";\n            _this.finish( false );\n        };\n\n        this.jobId = window.setTimeout( function(){\n            _this.errorMsg = \"Image load exceeded timeout\";\n            _this.finish( false );\n        }, this.timeout);\n\n        this.image.src = this.src;\n    },\n\n    finish: function( successful ) {\n        this.image.onload = this.image.onerror = this.image.onabort = null;\n        if (!successful) {\n            this.image = null;\n        }\n\n        if ( this.jobId ) {\n            window.clearTimeout( this.jobId );\n        }\n\n        this.callback( this );\n    }\n\n};\n\n/**\n * @class ImageLoader\n * @memberof OpenSeadragon\n * @classdesc Handles downloading of a set of images using asynchronous queue pattern.\n * You generally won't have to interact with the ImageLoader directly.\n * @param {Object} options - Options for this ImageLoader.\n * @param {Number} [options.jobLimit] - The number of concurrent image requests. See imageLoaderLimit in {@link OpenSeadragon.Options} for details.\n */\n$.ImageLoader = function( options ) {\n\n    $.extend( true, this, {\n        jobLimit:       $.DEFAULT_SETTINGS.imageLoaderLimit,\n        jobQueue:       [],\n        jobsInProgress: 0\n    }, options );\n\n};\n\n/** @lends OpenSeadragon.ImageLoader.prototype */\n$.ImageLoader.prototype = {\n\n    /**\n     * Add an unloaded image to the loader queue.\n     * @method\n     * @param {String} src - URL of image to download.\n     * @param {String} crossOriginPolicy - CORS policy to use for downloads\n     * @param {Function} callback - Called once image has been downloaded.\n     */\n    addJob: function( options ) {\n        var _this = this,\n            complete = function( job ) {\n                completeJob( _this, job, options.callback );\n            },\n            jobOptions = {\n                src: options.src,\n                crossOriginPolicy: options.crossOriginPolicy,\n                callback: complete,\n                abort: options.abort\n            },\n            newJob = new ImageJob( jobOptions );\n\n        if ( !this.jobLimit || this.jobsInProgress < this.jobLimit ) {\n            newJob.start();\n            this.jobsInProgress++;\n        }\n        else {\n            this.jobQueue.push( newJob );\n        }\n    },\n\n    /**\n     * Clear any unstarted image loading jobs from the queue.\n     * @method\n     */\n    clear: function() {\n        for( var i = 0; i < this.jobQueue.length; i++ ) {\n            var job = this.jobQueue[i];\n            if ( typeof job.abort === \"function\" ) {\n                job.abort();\n            }\n        }\n\n        this.jobQueue = [];\n    }\n};\n\n/**\n * Cleans up ImageJob once completed.\n * @method\n * @private\n * @param loader - ImageLoader used to start job.\n * @param job - The ImageJob that has completed.\n * @param callback - Called once cleanup is finished.\n */\nfunction completeJob( loader, job, callback ) {\n    var nextJob;\n\n    loader.jobsInProgress--;\n\n    if ( (!loader.jobLimit || loader.jobsInProgress < loader.jobLimit) && loader.jobQueue.length > 0) {\n        nextJob = loader.jobQueue.shift();\n        nextJob.start();\n        loader.jobsInProgress++;\n    }\n\n    callback( job.image, job.errorMsg );\n}\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - Tile\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n/**\n * @class Tile\n * @memberof OpenSeadragon\n * @param {Number} level The zoom level this tile belongs to.\n * @param {Number} x The vector component 'x'.\n * @param {Number} y The vector component 'y'.\n * @param {OpenSeadragon.Point} bounds Where this tile fits, in normalized\n *      coordinates.\n * @param {Boolean} exists Is this tile a part of a sparse image? ( Also has\n *      this tile failed to load? )\n * @param {String} url The URL of this tile's image.\n * @param {CanvasRenderingContext2D} context2D The context2D of this tile if it\n * is provided directly by the tile source.\n */\n$.Tile = function(level, x, y, bounds, exists, url, context2D) {\n    /**\n     * The zoom level this tile belongs to.\n     * @member {Number} level\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.level   = level;\n    /**\n     * The vector component 'x'.\n     * @member {Number} x\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.x       = x;\n    /**\n     * The vector component 'y'.\n     * @member {Number} y\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.y       = y;\n    /**\n     * Where this tile fits, in normalized coordinates\n     * @member {OpenSeadragon.Rect} bounds\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.bounds  = bounds;\n    /**\n     * Is this tile a part of a sparse image? Also has this tile failed to load?\n     * @member {Boolean} exists\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.exists  = exists;\n    /**\n     * The URL of this tile's image.\n     * @member {String} url\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.url     = url;\n    /**\n     * The context2D of this tile if it is provided directly by the tile source.\n     * @member {CanvasRenderingContext2D} context2D\n     * @memberOf OpenSeadragon.Tile#\n     */\n    this.context2D = context2D;\n    /**\n     * Is this tile loaded?\n     * @member {Boolean} loaded\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.loaded  = false;\n    /**\n     * Is this tile loading?\n     * @member {Boolean} loading\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.loading = false;\n\n    /**\n     * The HTML div element for this tile\n     * @member {Element} element\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.element    = null;\n    /**\n     * The HTML img element for this tile.\n     * @member {Element} imgElement\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.imgElement = null;\n    /**\n     * The Image object for this tile.\n     * @member {Object} image\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.image      = null;\n\n    /**\n     * The alias of this.element.style.\n     * @member {String} style\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.style      = null;\n    /**\n     * This tile's position on screen, in pixels.\n     * @member {OpenSeadragon.Point} position\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.position   = null;\n    /**\n     * This tile's size on screen, in pixels.\n     * @member {OpenSeadragon.Point} size\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.size       = null;\n    /**\n     * The start time of this tile's blending.\n     * @member {Number} blendStart\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.blendStart = null;\n    /**\n     * The current opacity this tile should be.\n     * @member {Number} opacity\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.opacity    = null;\n    /**\n     * The distance of this tile to the viewport center.\n     * @member {Number} distance\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.distance   = null;\n    /**\n     * The visibility score of this tile.\n     * @member {Number} visibility\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.visibility = null;\n\n    /**\n     * Whether this tile is currently being drawn.\n     * @member {Boolean} beingDrawn\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.beingDrawn     = false;\n    /**\n     * Timestamp the tile was last touched.\n     * @member {Number} lastTouchTime\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.lastTouchTime  = 0;\n};\n\n/** @lends OpenSeadragon.Tile.prototype */\n$.Tile.prototype = {\n\n    /**\n     * Provides a string representation of this tiles level and (x,y)\n     * components.\n     * @function\n     * @returns {String}\n     */\n    toString: function() {\n        return this.level + \"/\" + this.x + \"_\" + this.y;\n    },\n\n    // private\n    _hasTransparencyChannel: function() {\n        return !!this.context2D || this.url.match('.png');\n    },\n\n    /**\n     * Renders the tile in an html container.\n     * @function\n     * @param {Element} container\n     */\n    drawHTML: function( container ) {\n        if (!this.cacheImageRecord) {\n            $.console.warn(\n                '[Tile.drawHTML] attempting to draw tile %s when it\\'s not cached',\n                this.toString());\n            return;\n        }\n\n        if ( !this.loaded ) {\n            $.console.warn(\n                \"Attempting to draw tile %s when it's not yet loaded.\",\n                this.toString()\n            );\n            return;\n        }\n\n        //EXPERIMENTAL - trying to figure out how to scale the container\n        //               content during animation of the container size.\n\n        if ( !this.element ) {\n            this.element                              = $.makeNeutralElement( \"div\" );\n            this.imgElement                           = this.cacheImageRecord.getImage().cloneNode();\n            this.imgElement.style.msInterpolationMode = \"nearest-neighbor\";\n            this.imgElement.style.width               = \"100%\";\n            this.imgElement.style.height              = \"100%\";\n\n            this.style                     = this.element.style;\n            this.style.position            = \"absolute\";\n        }\n        if ( this.element.parentNode != container ) {\n            container.appendChild( this.element );\n        }\n        if ( this.imgElement.parentNode != this.element ) {\n            this.element.appendChild( this.imgElement );\n        }\n\n        this.style.top     = this.position.y + \"px\";\n        this.style.left    = this.position.x + \"px\";\n        this.style.height  = this.size.y + \"px\";\n        this.style.width   = this.size.x + \"px\";\n\n        $.setElementOpacity( this.element, this.opacity );\n    },\n\n    /**\n     * Renders the tile in a canvas-based context.\n     * @function\n     * @param {Canvas} context\n     * @param {Function} drawingHandler - Method for firing the drawing event.\n     * drawingHandler({context, tile, rendered})\n     * where <code>rendered</code> is the context with the pre-drawn image.\n     * @param {Number} [scale=1] - Apply a scale to position and size\n     * @param {OpenSeadragon.Point} [translate] - A translation vector\n     */\n    drawCanvas: function( context, drawingHandler, scale, translate ) {\n\n        var position = this.position.times($.pixelDensityRatio),\n            size     = this.size.times($.pixelDensityRatio),\n            rendered;\n\n        if (!this.context2D && !this.cacheImageRecord) {\n            $.console.warn(\n                '[Tile.drawCanvas] attempting to draw tile %s when it\\'s not cached',\n                this.toString());\n            return;\n        }\n\n        rendered = this.context2D || this.cacheImageRecord.getRenderedContext();\n\n        if ( !this.loaded || !rendered ){\n            $.console.warn(\n                \"Attempting to draw tile %s when it's not yet loaded.\",\n                this.toString()\n            );\n\n            return;\n        }\n\n        context.save();\n\n        context.globalAlpha = this.opacity;\n\n        if (typeof scale === 'number' && scale !== 1) {\n            // draw tile at a different scale\n            position = position.times(scale);\n            size = size.times(scale);\n        }\n\n        if (translate instanceof $.Point) {\n            // shift tile position slightly\n            position = position.plus(translate);\n        }\n\n        //if we are supposed to be rendering fully opaque rectangle,\n        //ie its done fading or fading is turned off, and if we are drawing\n        //an image with an alpha channel, then the only way\n        //to avoid seeing the tile underneath is to clear the rectangle\n        if (context.globalAlpha === 1 && this._hasTransparencyChannel()) {\n            //clearing only the inside of the rectangle occupied\n            //by the png prevents edge flikering\n            context.clearRect(\n                position.x + 1,\n                position.y + 1,\n                size.x - 2,\n                size.y - 2\n            );\n        }\n\n        // This gives the application a chance to make image manipulation\n        // changes as we are rendering the image\n        drawingHandler({context: context, tile: this, rendered: rendered});\n\n        context.drawImage(\n            rendered.canvas,\n            0,\n            0,\n            rendered.canvas.width,\n            rendered.canvas.height,\n            position.x,\n            position.y,\n            size.x,\n            size.y\n        );\n\n        context.restore();\n    },\n\n    /**\n     * Get the ratio between current and original size.\n     * @function\n     * @return {Float}\n     */\n    getScaleForEdgeSmoothing: function() {\n        var context;\n        if (this.cacheImageRecord) {\n            context = this.cacheImageRecord.getRenderedContext();\n        } else if (this.context2D) {\n            context = this.context2D;\n        } else {\n            $.console.warn(\n                '[Tile.drawCanvas] attempting to get tile scale %s when tile\\'s not cached',\n                this.toString());\n            return 1;\n        }\n        return context.canvas.width / (this.size.x * $.pixelDensityRatio);\n    },\n\n    /**\n     * Get a translation vector that when applied to the tile position produces integer coordinates.\n     * Needed to avoid swimming and twitching.\n     * @function\n     * @param {Number} [scale=1] - Scale to be applied to position.\n     * @return {OpenSeadragon.Point}\n     */\n    getTranslationForEdgeSmoothing: function(scale, canvasSize, sketchCanvasSize) {\n        // The translation vector must have positive values, otherwise the image goes a bit off\n        // the sketch canvas to the top and left and we must use negative coordinates to repaint it\n        // to the main canvas. In that case, some browsers throw:\n        // INDEX_SIZE_ERR: DOM Exception 1: Index or size was negative, or greater than the allowed value.\n        var x = Math.max(1, Math.ceil((sketchCanvasSize.x - canvasSize.x) / 2));\n        var y = Math.max(1, Math.ceil((sketchCanvasSize.y - canvasSize.y) / 2));\n        return new $.Point(x, y).minus(\n            this.position\n                .times($.pixelDensityRatio)\n                .times(scale || 1)\n                .apply(function(x) {\n                    return x % 1;\n                })\n        );\n    },\n\n    /**\n     * Removes tile from its container.\n     * @function\n     */\n    unload: function() {\n        if ( this.imgElement && this.imgElement.parentNode ) {\n            this.imgElement.parentNode.removeChild( this.imgElement );\n        }\n        if ( this.element && this.element.parentNode ) {\n            this.element.parentNode.removeChild( this.element );\n        }\n\n        this.element    = null;\n        this.imgElement = null;\n        this.loaded     = false;\n        this.loading    = false;\n    }\n};\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - Overlay\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function($) {\n\n    /**\n     * An enumeration of positions that an overlay may be assigned relative to\n     * the viewport.\n     * It is identical to OpenSeadragon.Placement but is kept for backward\n     * compatibility.\n     * @member OverlayPlacement\n     * @memberof OpenSeadragon\n     * @static\n     * @readonly\n     * @type {Object}\n     * @property {Number} CENTER\n     * @property {Number} TOP_LEFT\n     * @property {Number} TOP\n     * @property {Number} TOP_RIGHT\n     * @property {Number} RIGHT\n     * @property {Number} BOTTOM_RIGHT\n     * @property {Number} BOTTOM\n     * @property {Number} BOTTOM_LEFT\n     * @property {Number} LEFT\n     */\n    $.OverlayPlacement = $.Placement;\n\n    /**\n     * An enumeration of possible ways to handle overlays rotation\n     * @member OverlayRotationMode\n     * @memberOf OpenSeadragon\n     * @static\n     * @readonly\n     * @property {Number} NO_ROTATION The overlay ignore the viewport rotation.\n     * @property {Number} EXACT The overlay use CSS 3 transforms to rotate with\n     * the viewport. If the overlay contains text, it will get rotated as well.\n     * @property {Number} BOUNDING_BOX The overlay adjusts for rotation by\n     * taking the size of the bounding box of the rotated bounds.\n     * Only valid for overlays with Rect location and scalable in both directions.\n     */\n    $.OverlayRotationMode = $.freezeObject({\n        NO_ROTATION: 1,\n        EXACT: 2,\n        BOUNDING_BOX: 3\n    });\n\n    /**\n     * @class Overlay\n     * @classdesc Provides a way to float an HTML element on top of the viewer element.\n     *\n     * @memberof OpenSeadragon\n     * @param {Object} options\n     * @param {Element} options.element\n     * @param {OpenSeadragon.Point|OpenSeadragon.Rect} options.location - The\n     * location of the overlay on the image. If a {@link OpenSeadragon.Point}\n     * is specified, the overlay will be located at this location with respect\n     * to the placement option. If a {@link OpenSeadragon.Rect} is specified,\n     * the overlay will be placed at this location with the corresponding width\n     * and height and placement TOP_LEFT.\n     * @param {OpenSeadragon.Placement} [options.placement=OpenSeadragon.Placement.TOP_LEFT]\n     * Defines what part of the overlay should be at the specified options.location\n     * @param {OpenSeadragon.Overlay.OnDrawCallback} [options.onDraw]\n     * @param {Boolean} [options.checkResize=true] Set to false to avoid to\n     * check the size of the overlay everytime it is drawn in the directions\n     * which are not scaled. It will improve performances but will cause a\n     * misalignment if the overlay size changes.\n     * @param {Number} [options.width] The width of the overlay in viewport\n     * coordinates. If specified, the width of the overlay will be adjusted when\n     * the zoom changes.\n     * @param {Number} [options.height] The height of the overlay in viewport\n     * coordinates. If specified, the height of the overlay will be adjusted when\n     * the zoom changes.\n     * @param {Boolean} [options.rotationMode=OpenSeadragon.OverlayRotationMode.EXACT]\n     * How to handle the rotation of the viewport.\n     */\n    $.Overlay = function(element, location, placement) {\n\n        /**\n         * onDraw callback signature used by {@link OpenSeadragon.Overlay}.\n         *\n         * @callback OnDrawCallback\n         * @memberof OpenSeadragon.Overlay\n         * @param {OpenSeadragon.Point} position\n         * @param {OpenSeadragon.Point} size\n         * @param {Element} element\n         */\n\n        var options;\n        if ($.isPlainObject(element)) {\n            options = element;\n        } else {\n            options = {\n                element: element,\n                location: location,\n                placement: placement\n            };\n        }\n\n        this.element = options.element;\n        this.style = options.element.style;\n        this._init(options);\n    };\n\n    /** @lends OpenSeadragon.Overlay.prototype */\n    $.Overlay.prototype = {\n\n        // private\n        _init: function(options) {\n            this.location = options.location;\n            this.placement = options.placement === undefined ?\n                $.Placement.TOP_LEFT : options.placement;\n            this.onDraw = options.onDraw;\n            this.checkResize = options.checkResize === undefined ?\n                true : options.checkResize;\n\n            // When this.width is not null, the overlay get scaled horizontally\n            this.width = options.width === undefined ? null : options.width;\n\n            // When this.height is not null, the overlay get scaled vertically\n            this.height = options.height === undefined ? null : options.height;\n\n            this.rotationMode = options.rotationMode || $.OverlayRotationMode.EXACT;\n\n            // Having a rect as location is a syntactic sugar\n            if (this.location instanceof $.Rect) {\n                this.width = this.location.width;\n                this.height = this.location.height;\n                this.location = this.location.getTopLeft();\n                this.placement = $.Placement.TOP_LEFT;\n            }\n\n            // Deprecated properties kept for backward compatibility.\n            this.scales = this.width !== null && this.height !== null;\n            this.bounds = new $.Rect(\n                this.location.x, this.location.y, this.width, this.height);\n            this.position = this.location;\n        },\n\n        /**\n         * Internal function to adjust the position of an overlay\n         * depending on it size and placement.\n         * @function\n         * @param {OpenSeadragon.Point} position\n         * @param {OpenSeadragon.Point} size\n         */\n        adjust: function(position, size) {\n            var properties = $.Placement.properties[this.placement];\n            if (!properties) {\n                return;\n            }\n            if (properties.isHorizontallyCentered) {\n                position.x -= size.x / 2;\n            } else if (properties.isRight) {\n                position.x -= size.x;\n            }\n            if (properties.isVerticallyCentered) {\n                position.y -= size.y / 2;\n            } else if (properties.isBottom) {\n                position.y -= size.y;\n            }\n        },\n\n        /**\n         * @function\n         */\n        destroy: function() {\n            var element = this.element;\n            var style = this.style;\n\n            if (element.parentNode) {\n                element.parentNode.removeChild(element);\n                //this should allow us to preserve overlays when required between\n                //pages\n                if (element.prevElementParent) {\n                    style.display = 'none';\n                    //element.prevElementParent.insertBefore(\n                    //    element,\n                    //    element.prevNextSibling\n                    //);\n                    document.body.appendChild(element);\n                }\n            }\n\n            // clear the onDraw callback\n            this.onDraw = null;\n\n            style.top = \"\";\n            style.left = \"\";\n            style.position = \"\";\n\n            if (this.width !== null) {\n                style.width = \"\";\n            }\n            if (this.height !== null) {\n                style.height = \"\";\n            }\n            var transformOriginProp = $.getCssPropertyWithVendorPrefix(\n                'transformOrigin');\n            var transformProp = $.getCssPropertyWithVendorPrefix(\n                'transform');\n            if (transformOriginProp && transformProp) {\n                style[transformOriginProp] = \"\";\n                style[transformProp] = \"\";\n            }\n        },\n\n        /**\n         * @function\n         * @param {Element} container\n         */\n        drawHTML: function(container, viewport) {\n            var element = this.element;\n            if (element.parentNode !== container) {\n                //save the source parent for later if we need it\n                element.prevElementParent = element.parentNode;\n                element.prevNextSibling = element.nextSibling;\n                container.appendChild(element);\n\n                // this.size is used by overlays which don't get scaled in at\n                // least one direction when this.checkResize is set to false.\n                this.size = $.getElementSize(element);\n            }\n\n            var positionAndSize = this._getOverlayPositionAndSize(viewport);\n\n            var position = positionAndSize.position;\n            var size = this.size = positionAndSize.size;\n            var rotate = positionAndSize.rotate;\n\n            // call the onDraw callback if it exists to allow one to overwrite\n            // the drawing/positioning/sizing of the overlay\n            if (this.onDraw) {\n                this.onDraw(position, size, this.element);\n            } else {\n                var style = this.style;\n                style.left = position.x + \"px\";\n                style.top = position.y + \"px\";\n                if (this.width !== null) {\n                    style.width = size.x + \"px\";\n                }\n                if (this.height !== null) {\n                    style.height = size.y + \"px\";\n                }\n                var transformOriginProp = $.getCssPropertyWithVendorPrefix(\n                    'transformOrigin');\n                var transformProp = $.getCssPropertyWithVendorPrefix(\n                    'transform');\n                if (transformOriginProp && transformProp) {\n                    if (rotate) {\n                        style[transformOriginProp] = this._getTransformOrigin();\n                        style[transformProp] = \"rotate(\" + rotate + \"deg)\";\n                    } else {\n                        style[transformOriginProp] = \"\";\n                        style[transformProp] = \"\";\n                    }\n                }\n                style.position = \"absolute\";\n\n                if (style.display !== 'none') {\n                    style.display = 'block';\n                }\n            }\n        },\n\n        // private\n        _getOverlayPositionAndSize: function(viewport) {\n            var position = viewport.pixelFromPoint(this.location, true);\n            var size = this._getSizeInPixels(viewport);\n            this.adjust(position, size);\n\n            var rotate = 0;\n            if (viewport.degrees &&\n                this.rotationMode !== $.OverlayRotationMode.NO_ROTATION) {\n                // BOUNDING_BOX is only valid if both directions get scaled.\n                // Get replaced by EXACT otherwise.\n                if (this.rotationMode === $.OverlayRotationMode.BOUNDING_BOX &&\n                    this.width !== null && this.height !== null) {\n                    var rect = new $.Rect(position.x, position.y, size.x, size.y);\n                    var boundingBox = this._getBoundingBox(rect, viewport.degrees);\n                    position = boundingBox.getTopLeft();\n                    size = boundingBox.getSize();\n                } else {\n                    rotate = viewport.degrees;\n                }\n            }\n\n            return {\n                position: position,\n                size: size,\n                rotate: rotate\n            };\n        },\n\n        // private\n        _getSizeInPixels: function(viewport) {\n            var width = this.size.x;\n            var height = this.size.y;\n            if (this.width !== null || this.height !== null) {\n                var scaledSize = viewport.deltaPixelsFromPointsNoRotate(\n                    new $.Point(this.width || 0, this.height || 0), true);\n                if (this.width !== null) {\n                    width = scaledSize.x;\n                }\n                if (this.height !== null) {\n                    height = scaledSize.y;\n                }\n            }\n            if (this.checkResize &&\n                (this.width === null || this.height === null)) {\n                var eltSize = this.size = $.getElementSize(this.element);\n                if (this.width === null) {\n                    width = eltSize.x;\n                }\n                if (this.height === null) {\n                    height = eltSize.y;\n                }\n            }\n            return new $.Point(width, height);\n        },\n\n        // private\n        _getBoundingBox: function(rect, degrees) {\n            var refPoint = this._getPlacementPoint(rect);\n            return rect.rotate(degrees, refPoint).getBoundingBox();\n        },\n\n        // private\n        _getPlacementPoint: function(rect) {\n            var result = new $.Point(rect.x, rect.y);\n            var properties = $.Placement.properties[this.placement];\n            if (properties) {\n                if (properties.isHorizontallyCentered) {\n                    result.x += rect.width / 2;\n                } else if (properties.isRight) {\n                    result.x += rect.width;\n                }\n                if (properties.isVerticallyCentered) {\n                    result.y += rect.height / 2;\n                } else if (properties.isBottom) {\n                    result.y += rect.height;\n                }\n            }\n            return result;\n        },\n\n        // private\n        _getTransformOrigin: function() {\n            var result = \"\";\n            var properties = $.Placement.properties[this.placement];\n            if (!properties) {\n                return result;\n            }\n            if (properties.isLeft) {\n                result = \"left\";\n            } else if (properties.isRight) {\n                result = \"right\";\n            }\n            if (properties.isTop) {\n                result += \" top\";\n            } else if (properties.isBottom) {\n                result += \" bottom\";\n            }\n            return result;\n        },\n\n        /**\n         * Changes the overlay settings.\n         * @function\n         * @param {OpenSeadragon.Point|OpenSeadragon.Rect|Object} location\n         * If an object is specified, the options are the same than the constructor\n         * except for the element which can not be changed.\n         * @param {OpenSeadragon.Placement} position\n         */\n        update: function(location, placement) {\n            var options = $.isPlainObject(location) ? location : {\n                location: location,\n                placement: placement\n            };\n            this._init({\n                location: options.location || this.location,\n                placement: options.placement !== undefined ?\n                    options.placement : this.placement,\n                onDraw: options.onDraw || this.onDraw,\n                checkResize: options.checkResize || this.checkResize,\n                width: options.width !== undefined ? options.width : this.width,\n                height: options.height !== undefined ? options.height : this.height,\n                rotationMode: options.rotationMode || this.rotationMode\n            });\n        },\n\n        /**\n         * Returns the current bounds of the overlay in viewport coordinates\n         * @function\n         * @param {OpenSeadragon.Viewport} viewport the viewport\n         * @returns {OpenSeadragon.Rect} overlay bounds\n         */\n        getBounds: function(viewport) {\n            $.console.assert(viewport,\n                'A viewport must now be passed to Overlay.getBounds.');\n            var width = this.width;\n            var height = this.height;\n            if (width === null || height === null) {\n                var size = viewport.deltaPointsFromPixelsNoRotate(this.size, true);\n                if (width === null) {\n                    width = size.x;\n                }\n                if (height === null) {\n                    height = size.y;\n                }\n            }\n            var location = this.location.clone();\n            this.adjust(location, new $.Point(width, height));\n            return this._adjustBoundsForRotation(\n                viewport, new $.Rect(location.x, location.y, width, height));\n        },\n\n        // private\n        _adjustBoundsForRotation: function(viewport, bounds) {\n            if (!viewport ||\n                viewport.degrees === 0 ||\n                this.rotationMode === $.OverlayRotationMode.EXACT) {\n                return bounds;\n            }\n            if (this.rotationMode === $.OverlayRotationMode.BOUNDING_BOX) {\n                // If overlay not fully scalable, BOUNDING_BOX falls back to EXACT\n                if (this.width === null || this.height === null) {\n                    return bounds;\n                }\n                // It is easier to just compute the position and size and\n                // convert to viewport coordinates.\n                var positionAndSize = this._getOverlayPositionAndSize(viewport);\n                return viewport.viewerElementToViewportRectangle(new $.Rect(\n                    positionAndSize.position.x,\n                    positionAndSize.position.y,\n                    positionAndSize.size.x,\n                    positionAndSize.size.y));\n            }\n\n            // NO_ROTATION case\n            return bounds.rotate(-viewport.degrees,\n                this._getPlacementPoint(bounds));\n        }\n    };\n\n}(OpenSeadragon));\n\n/*\n * OpenSeadragon - Drawer\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n/**\n * @class Drawer\n * @memberof OpenSeadragon\n * @classdesc Handles rendering of tiles for an {@link OpenSeadragon.Viewer}.\n * @param {Object} options - Options for this Drawer.\n * @param {OpenSeadragon.Viewer} options.viewer - The Viewer that owns this Drawer.\n * @param {OpenSeadragon.Viewport} options.viewport - Reference to Viewer viewport.\n * @param {Element} options.element - Parent element.\n * @param {Number} [options.debugGridColor] - See debugGridColor in {@link OpenSeadragon.Options} for details.\n */\n$.Drawer = function( options ) {\n\n    $.console.assert( options.viewer, \"[Drawer] options.viewer is required\" );\n\n    //backward compatibility for positional args while prefering more\n    //idiomatic javascript options object as the only argument\n    var args  = arguments;\n\n    if( !$.isPlainObject( options ) ){\n        options = {\n            source:     args[ 0 ], // Reference to Viewer tile source.\n            viewport:   args[ 1 ], // Reference to Viewer viewport.\n            element:    args[ 2 ]  // Parent element.\n        };\n    }\n\n    $.console.assert( options.viewport, \"[Drawer] options.viewport is required\" );\n    $.console.assert( options.element, \"[Drawer] options.element is required\" );\n\n    if ( options.source ) {\n        $.console.error( \"[Drawer] options.source is no longer accepted; use TiledImage instead\" );\n    }\n\n    this.viewer = options.viewer;\n    this.viewport = options.viewport;\n    this.debugGridColor = options.debugGridColor || $.DEFAULT_SETTINGS.debugGridColor;\n    if (options.opacity) {\n        $.console.error( \"[Drawer] options.opacity is no longer accepted; set the opacity on the TiledImage instead\" );\n    }\n\n    this.useCanvas  = $.supportsCanvas && ( this.viewer ? this.viewer.useCanvas : true );\n    /**\n     * The parent element of this Drawer instance, passed in when the Drawer was created.\n     * The parent of {@link OpenSeadragon.Drawer#canvas}.\n     * @member {Element} container\n     * @memberof OpenSeadragon.Drawer#\n     */\n    this.container  = $.getElement( options.element );\n    /**\n     * A &lt;canvas&gt; element if the browser supports them, otherwise a &lt;div&gt; element.\n     * Child element of {@link OpenSeadragon.Drawer#container}.\n     * @member {Element} canvas\n     * @memberof OpenSeadragon.Drawer#\n     */\n    this.canvas     = $.makeNeutralElement( this.useCanvas ? \"canvas\" : \"div\" );\n    /**\n     * 2d drawing context for {@link OpenSeadragon.Drawer#canvas} if it's a &lt;canvas&gt; element, otherwise null.\n     * @member {Object} context\n     * @memberof OpenSeadragon.Drawer#\n     */\n    this.context    = this.useCanvas ? this.canvas.getContext( \"2d\" ) : null;\n\n    /**\n     * Sketch canvas used to temporarily draw tiles which cannot be drawn directly\n     * to the main canvas due to opacity. Lazily initialized.\n     */\n    this.sketchCanvas = null;\n    this.sketchContext = null;\n\n    /**\n     * @member {Element} element\n     * @memberof OpenSeadragon.Drawer#\n     * @deprecated Alias for {@link OpenSeadragon.Drawer#container}.\n     */\n    this.element    = this.container;\n\n    // We force our container to ltr because our drawing math doesn't work in rtl.\n    // This issue only affects our canvas renderer, but we do it always for consistency.\n    // Note that this means overlays you want to be rtl need to be explicitly set to rtl.\n    this.container.dir = 'ltr';\n\n    // check canvas available width and height, set canvas width and height such that the canvas backing store is set to the proper pixel density\n    if (this.useCanvas) {\n        var viewportSize = this._calculateCanvasSize();\n        this.canvas.width = viewportSize.x;\n        this.canvas.height = viewportSize.y;\n    }\n\n    this.canvas.style.width     = \"100%\";\n    this.canvas.style.height    = \"100%\";\n    this.canvas.style.position  = \"absolute\";\n    $.setElementOpacity( this.canvas, this.opacity, true );\n\n    // explicit left-align\n    this.container.style.textAlign = \"left\";\n    this.container.appendChild( this.canvas );\n};\n\n/** @lends OpenSeadragon.Drawer.prototype */\n$.Drawer.prototype = {\n    // deprecated\n    addOverlay: function( element, location, placement, onDraw ) {\n        $.console.error(\"drawer.addOverlay is deprecated. Use viewer.addOverlay instead.\");\n        this.viewer.addOverlay( element, location, placement, onDraw );\n        return this;\n    },\n\n    // deprecated\n    updateOverlay: function( element, location, placement ) {\n        $.console.error(\"drawer.updateOverlay is deprecated. Use viewer.updateOverlay instead.\");\n        this.viewer.updateOverlay( element, location, placement );\n        return this;\n    },\n\n    // deprecated\n    removeOverlay: function( element ) {\n        $.console.error(\"drawer.removeOverlay is deprecated. Use viewer.removeOverlay instead.\");\n        this.viewer.removeOverlay( element );\n        return this;\n    },\n\n    // deprecated\n    clearOverlays: function() {\n        $.console.error(\"drawer.clearOverlays is deprecated. Use viewer.clearOverlays instead.\");\n        this.viewer.clearOverlays();\n        return this;\n    },\n\n    /**\n     * Set the opacity of the drawer.\n     * @param {Number} opacity\n     * @return {OpenSeadragon.Drawer} Chainable.\n     */\n    setOpacity: function( opacity ) {\n        $.console.error(\"drawer.setOpacity is deprecated. Use tiledImage.setOpacity instead.\");\n        var world = this.viewer.world;\n        for (var i = 0; i < world.getItemCount(); i++) {\n            world.getItemAt( i ).setOpacity( opacity );\n        }\n        return this;\n    },\n\n    /**\n     * Get the opacity of the drawer.\n     * @returns {Number}\n     */\n    getOpacity: function() {\n        $.console.error(\"drawer.getOpacity is deprecated. Use tiledImage.getOpacity instead.\");\n        var world = this.viewer.world;\n        var maxOpacity = 0;\n        for (var i = 0; i < world.getItemCount(); i++) {\n            var opacity = world.getItemAt( i ).getOpacity();\n            if ( opacity > maxOpacity ) {\n                maxOpacity = opacity;\n            }\n        }\n        return maxOpacity;\n    },\n\n    // deprecated\n    needsUpdate: function() {\n        $.console.error( \"[Drawer.needsUpdate] this function is deprecated. Use World.needsDraw instead.\" );\n        return this.viewer.world.needsDraw();\n    },\n\n    // deprecated\n    numTilesLoaded: function() {\n        $.console.error( \"[Drawer.numTilesLoaded] this function is deprecated. Use TileCache.numTilesLoaded instead.\" );\n        return this.viewer.tileCache.numTilesLoaded();\n    },\n\n    // deprecated\n    reset: function() {\n        $.console.error( \"[Drawer.reset] this function is deprecated. Use World.resetItems instead.\" );\n        this.viewer.world.resetItems();\n        return this;\n    },\n\n    // deprecated\n    update: function() {\n        $.console.error( \"[Drawer.update] this function is deprecated. Use Drawer.clear and World.draw instead.\" );\n        this.clear();\n        this.viewer.world.draw();\n        return this;\n    },\n\n    /**\n     * @return {Boolean} True if rotation is supported.\n     */\n    canRotate: function() {\n        return this.useCanvas;\n    },\n\n    /**\n     * Destroy the drawer (unload current loaded tiles)\n     */\n    destroy: function() {\n        //force unloading of current canvas (1x1 will be gc later, trick not necessarily needed)\n        this.canvas.width  = 1;\n        this.canvas.height = 1;\n        this.sketchCanvas = null;\n        this.sketchContext = null;\n    },\n\n    /**\n     * Clears the Drawer so it's ready to draw another frame.\n     */\n    clear: function() {\n        this.canvas.innerHTML = \"\";\n        if ( this.useCanvas ) {\n            var viewportSize = this._calculateCanvasSize();\n            if( this.canvas.width != viewportSize.x ||\n                this.canvas.height != viewportSize.y ) {\n                this.canvas.width = viewportSize.x;\n                this.canvas.height = viewportSize.y;\n                if ( this.sketchCanvas !== null ) {\n                    var sketchCanvasSize = this._calculateSketchCanvasSize();\n                    this.sketchCanvas.width = sketchCanvasSize.x;\n                    this.sketchCanvas.height = sketchCanvasSize.y;\n                }\n            }\n            this._clear();\n        }\n    },\n\n    _clear: function (useSketch, bounds) {\n        if (!this.useCanvas) {\n            return;\n        }\n        var context = this._getContext(useSketch);\n        if (bounds) {\n            context.clearRect(bounds.x, bounds.y, bounds.width, bounds.height);\n        } else {\n            var canvas = context.canvas;\n            context.clearRect(0, 0, canvas.width, canvas.height);\n        }\n    },\n\n    /**\n     * Scale from OpenSeadragon viewer rectangle to drawer rectangle\n     * (ignoring rotation)\n     * @param {OpenSeadragon.Rect} rectangle - The rectangle in viewport coordinate system.\n     * @return {OpenSeadragon.Rect} Rectangle in drawer coordinate system.\n     */\n    viewportToDrawerRectangle: function(rectangle) {\n        var topLeft = this.viewport.pixelFromPointNoRotate(rectangle.getTopLeft(), true);\n        var size = this.viewport.deltaPixelsFromPointsNoRotate(rectangle.getSize(), true);\n\n        return new $.Rect(\n            topLeft.x * $.pixelDensityRatio,\n            topLeft.y * $.pixelDensityRatio,\n            size.x    * $.pixelDensityRatio,\n            size.y    * $.pixelDensityRatio\n        );\n    },\n\n    /**\n     * Draws the given tile.\n     * @param {OpenSeadragon.Tile} tile - The tile to draw.\n     * @param {Function} drawingHandler - Method for firing the drawing event if using canvas.\n     * drawingHandler({context, tile, rendered})\n     * @param {Boolean} useSketch - Whether to use the sketch canvas or not.\n     * where <code>rendered</code> is the context with the pre-drawn image.\n     * @param {Float} [scale=1] - Apply a scale to tile position and size. Defaults to 1.\n     * @param {OpenSeadragon.Point} [translate] A translation vector to offset tile position\n     */\n    drawTile: function(tile, drawingHandler, useSketch, scale, translate) {\n        $.console.assert(tile, '[Drawer.drawTile] tile is required');\n        $.console.assert(drawingHandler, '[Drawer.drawTile] drawingHandler is required');\n\n        if (this.useCanvas) {\n            var context = this._getContext(useSketch);\n            scale = scale || 1;\n            tile.drawCanvas(context, drawingHandler, scale, translate);\n        } else {\n            tile.drawHTML( this.canvas );\n        }\n    },\n\n    _getContext: function( useSketch ) {\n        var context = this.context;\n        if ( useSketch ) {\n            if (this.sketchCanvas === null) {\n                this.sketchCanvas = document.createElement( \"canvas\" );\n                var sketchCanvasSize = this._calculateSketchCanvasSize();\n                this.sketchCanvas.width = sketchCanvasSize.x;\n                this.sketchCanvas.height = sketchCanvasSize.y;\n                this.sketchContext = this.sketchCanvas.getContext( \"2d\" );\n\n                // If the viewport is not currently rotated, the sketchCanvas\n                // will have the same size as the main canvas. However, if\n                // the viewport get rotated later on, we will need to resize it.\n                if (this.viewport.getRotation() === 0) {\n                    var self = this;\n                    this.viewer.addHandler('rotate', function resizeSketchCanvas() {\n                        self.viewer.removeHandler('rotate', resizeSketchCanvas);\n                        var sketchCanvasSize = self._calculateSketchCanvasSize();\n                        self.sketchCanvas.width = sketchCanvasSize.x;\n                        self.sketchCanvas.height = sketchCanvasSize.y;\n                    });\n                }\n            }\n            context = this.sketchContext;\n        }\n        return context;\n    },\n\n    // private\n    saveContext: function( useSketch ) {\n        if (!this.useCanvas) {\n            return;\n        }\n\n        this._getContext( useSketch ).save();\n    },\n\n    // private\n    restoreContext: function( useSketch ) {\n        if (!this.useCanvas) {\n            return;\n        }\n\n        this._getContext( useSketch ).restore();\n    },\n\n    // private\n    setClip: function(rect, useSketch) {\n        if (!this.useCanvas) {\n            return;\n        }\n\n        var context = this._getContext( useSketch );\n        context.beginPath();\n        context.rect(rect.x, rect.y, rect.width, rect.height);\n        context.clip();\n    },\n\n    // private\n    drawRectangle: function(rect, fillStyle, useSketch) {\n        if (!this.useCanvas) {\n            return;\n        }\n\n        var context = this._getContext( useSketch );\n        context.save();\n        context.fillStyle = fillStyle;\n        context.fillRect(rect.x, rect.y, rect.width, rect.height);\n        context.restore();\n    },\n\n    /**\n     * Blends the sketch canvas in the main canvas.\n     * @param {Object} options The options\n     * @param {Float} options.opacity The opacity of the blending.\n     * @param {Float} [options.scale=1] The scale at which tiles were drawn on\n     * the sketch. Default is 1.\n     * Use scale to draw at a lower scale and then enlarge onto the main canvas.\n     * @param {OpenSeadragon.Point} [options.translate] A translation vector\n     * that was used to draw the tiles\n     * @param {String} [options.compositeOperation] - How the image is\n     * composited onto other images; see compositeOperation in\n     * {@link OpenSeadragon.Options} for possible values.\n     * @param {OpenSeadragon.Rect} [options.bounds] The part of the sketch\n     * canvas to blend in the main canvas. If specified, options.scale and\n     * options.translate get ignored.\n     */\n    blendSketch: function(opacity, scale, translate, compositeOperation) {\n        var options = opacity;\n        if (!$.isPlainObject(options)) {\n            options = {\n                opacity: opacity,\n                scale: scale,\n                translate: translate,\n                compositeOperation: compositeOperation\n            };\n        }\n        if (!this.useCanvas || !this.sketchCanvas) {\n            return;\n        }\n        opacity = options.opacity;\n        compositeOperation = options.compositeOperation;\n        var bounds = options.bounds;\n\n        this.context.save();\n        this.context.globalAlpha = opacity;\n        if (compositeOperation) {\n            this.context.globalCompositeOperation = compositeOperation;\n        }\n        if (bounds) {\n            this.context.drawImage(\n                this.sketchCanvas,\n                bounds.x,\n                bounds.y,\n                bounds.width,\n                bounds.height,\n                bounds.x,\n                bounds.y,\n                bounds.width,\n                bounds.height\n            );\n        } else {\n            scale = options.scale || 1;\n            translate = options.translate;\n            var position = translate instanceof $.Point ?\n                translate : new $.Point(0, 0);\n\n            var widthExt = 0;\n            var heightExt = 0;\n            if (translate) {\n                var widthDiff = this.sketchCanvas.width - this.canvas.width;\n                var heightDiff = this.sketchCanvas.height - this.canvas.height;\n                widthExt = Math.round(widthDiff / 2);\n                heightExt = Math.round(heightDiff / 2);\n            }\n            this.context.drawImage(\n                this.sketchCanvas,\n                position.x - widthExt * scale,\n                position.y - heightExt * scale,\n                (this.canvas.width + 2 * widthExt) * scale,\n                (this.canvas.height  + 2 * heightExt) * scale,\n                -widthExt,\n                -heightExt,\n                this.canvas.width + 2 * widthExt,\n                this.canvas.height + 2 * heightExt\n            );\n        }\n        this.context.restore();\n    },\n\n    // private\n    drawDebugInfo: function( tile, count, i ){\n        if ( !this.useCanvas ) {\n            return;\n        }\n\n        var context = this.context;\n        context.save();\n        context.lineWidth = 2 * $.pixelDensityRatio;\n        context.font = 'small-caps bold ' + (13 * $.pixelDensityRatio) + 'px arial';\n        context.strokeStyle = this.debugGridColor;\n        context.fillStyle = this.debugGridColor;\n\n        if ( this.viewport.degrees !== 0 ) {\n            this._offsetForRotation(this.viewport.degrees);\n        }\n\n        context.strokeRect(\n            tile.position.x * $.pixelDensityRatio,\n            tile.position.y * $.pixelDensityRatio,\n            tile.size.x * $.pixelDensityRatio,\n            tile.size.y * $.pixelDensityRatio\n        );\n\n        var tileCenterX = (tile.position.x + (tile.size.x / 2)) * $.pixelDensityRatio;\n        var tileCenterY = (tile.position.y + (tile.size.y / 2)) * $.pixelDensityRatio;\n\n        // Rotate the text the right way around.\n        context.translate( tileCenterX, tileCenterY );\n        context.rotate( Math.PI / 180 * -this.viewport.degrees );\n        context.translate( -tileCenterX, -tileCenterY );\n\n        if( tile.x === 0 && tile.y === 0 ){\n            context.fillText(\n                \"Zoom: \" + this.viewport.getZoom(),\n                tile.position.x * $.pixelDensityRatio,\n                (tile.position.y - 30) * $.pixelDensityRatio\n            );\n            context.fillText(\n                \"Pan: \" + this.viewport.getBounds().toString(),\n                tile.position.x * $.pixelDensityRatio,\n                (tile.position.y - 20) * $.pixelDensityRatio\n            );\n        }\n        context.fillText(\n            \"Level: \" + tile.level,\n            (tile.position.x + 10) * $.pixelDensityRatio,\n            (tile.position.y + 20) * $.pixelDensityRatio\n        );\n        context.fillText(\n            \"Column: \" + tile.x,\n            (tile.position.x + 10) * $.pixelDensityRatio,\n            (tile.position.y + 30) * $.pixelDensityRatio\n        );\n        context.fillText(\n            \"Row: \" + tile.y,\n            (tile.position.x + 10) * $.pixelDensityRatio,\n            (tile.position.y + 40) * $.pixelDensityRatio\n        );\n        context.fillText(\n            \"Order: \" + i + \" of \" + count,\n            (tile.position.x + 10) * $.pixelDensityRatio,\n            (tile.position.y + 50) * $.pixelDensityRatio\n        );\n        context.fillText(\n            \"Size: \" + tile.size.toString(),\n            (tile.position.x + 10) * $.pixelDensityRatio,\n            (tile.position.y + 60) * $.pixelDensityRatio\n        );\n        context.fillText(\n            \"Position: \" + tile.position.toString(),\n            (tile.position.x + 10) * $.pixelDensityRatio,\n            (tile.position.y + 70) * $.pixelDensityRatio\n        );\n\n        if ( this.viewport.degrees !== 0 ) {\n            this._restoreRotationChanges();\n        }\n        context.restore();\n    },\n\n    // private\n    debugRect: function(rect) {\n        if ( this.useCanvas ) {\n            var context = this.context;\n            context.save();\n            context.lineWidth = 2 * $.pixelDensityRatio;\n            context.strokeStyle = this.debugGridColor;\n            context.fillStyle = this.debugGridColor;\n\n            context.strokeRect(\n                rect.x * $.pixelDensityRatio,\n                rect.y * $.pixelDensityRatio,\n                rect.width * $.pixelDensityRatio,\n                rect.height * $.pixelDensityRatio\n            );\n\n            context.restore();\n        }\n    },\n\n    /**\n     * Get the canvas size\n     * @param {Boolean} sketch If set to true return the size of the sketch canvas\n     * @returns {OpenSeadragon.Point} The size of the canvas\n     */\n    getCanvasSize: function(sketch) {\n        var canvas = this._getContext(sketch).canvas;\n        return new $.Point(canvas.width, canvas.height);\n    },\n\n    // private\n    _offsetForRotation: function(degrees, useSketch) {\n        var cx = this.canvas.width / 2;\n        var cy = this.canvas.height / 2;\n\n        var context = this._getContext(useSketch);\n        context.save();\n\n        context.translate(cx, cy);\n        context.rotate(Math.PI / 180 * degrees);\n        context.translate(-cx, -cy);\n    },\n\n    // private\n    _restoreRotationChanges: function(useSketch) {\n        var context = this._getContext(useSketch);\n        context.restore();\n    },\n\n    // private\n    _calculateCanvasSize: function() {\n        var pixelDensityRatio = $.pixelDensityRatio;\n        var viewportSize = this.viewport.getContainerSize();\n        return {\n            x: viewportSize.x * pixelDensityRatio,\n            y: viewportSize.y * pixelDensityRatio\n        };\n    },\n\n    // private\n    _calculateSketchCanvasSize: function() {\n        var canvasSize = this._calculateCanvasSize();\n        if (this.viewport.getRotation() === 0) {\n            return canvasSize;\n        }\n        // If the viewport is rotated, we need a larger sketch canvas in order\n        // to support edge smoothing.\n        var sketchCanvasSize = Math.ceil(Math.sqrt(\n            canvasSize.x * canvasSize.x +\n            canvasSize.y * canvasSize.y));\n        return {\n            x: sketchCanvasSize,\n            y: sketchCanvasSize\n        };\n    }\n};\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - Viewport\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n\n/**\n * @class Viewport\n * @memberof OpenSeadragon\n * @classdesc Handles coordinate-related functionality (zoom, pan, rotation, etc.)\n * for an {@link OpenSeadragon.Viewer}.\n * @param {Object} options - Options for this Viewport.\n * @param {Object} [options.margins] - See viewportMargins in {@link OpenSeadragon.Options}.\n * @param {Number} [options.springStiffness] - See springStiffness in {@link OpenSeadragon.Options}.\n * @param {Number} [options.animationTime] - See animationTime in {@link OpenSeadragon.Options}.\n * @param {Number} [options.minZoomImageRatio] - See minZoomImageRatio in {@link OpenSeadragon.Options}.\n * @param {Number} [options.maxZoomPixelRatio] - See maxZoomPixelRatio in {@link OpenSeadragon.Options}.\n * @param {Number} [options.visibilityRatio] - See visibilityRatio in {@link OpenSeadragon.Options}.\n * @param {Boolean} [options.wrapHorizontal] - See wrapHorizontal in {@link OpenSeadragon.Options}.\n * @param {Boolean} [options.wrapVertical] - See wrapVertical in {@link OpenSeadragon.Options}.\n * @param {Number} [options.defaultZoomLevel] - See defaultZoomLevel in {@link OpenSeadragon.Options}.\n * @param {Number} [options.minZoomLevel] - See minZoomLevel in {@link OpenSeadragon.Options}.\n * @param {Number} [options.maxZoomLevel] - See maxZoomLevel in {@link OpenSeadragon.Options}.\n * @param {Number} [options.degrees] - See degrees in {@link OpenSeadragon.Options}.\n * @param {Boolean} [options.homeFillsViewer] - See homeFillsViewer in {@link OpenSeadragon.Options}.\n */\n$.Viewport = function( options ) {\n\n    //backward compatibility for positional args while prefering more\n    //idiomatic javascript options object as the only argument\n    var args = arguments;\n    if(  args.length && args[ 0 ] instanceof $.Point ){\n        options = {\n            containerSize:  args[ 0 ],\n            contentSize:    args[ 1 ],\n            config:         args[ 2 ]\n        };\n    }\n\n    //options.config and the general config argument are deprecated\n    //in favor of the more direct specification of optional settings\n    //being passed directly on the options object\n    if ( options.config ){\n        $.extend( true, options, options.config );\n        delete options.config;\n    }\n\n    this._margins = $.extend({\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n    }, options.margins || {});\n\n    delete options.margins;\n\n    $.extend( true, this, {\n\n        //required settings\n        containerSize:      null,\n        contentSize:        null,\n\n        //internal state properties\n        zoomPoint:          null,\n        viewer:           null,\n\n        //configurable options\n        springStiffness:    $.DEFAULT_SETTINGS.springStiffness,\n        animationTime:      $.DEFAULT_SETTINGS.animationTime,\n        minZoomImageRatio:  $.DEFAULT_SETTINGS.minZoomImageRatio,\n        maxZoomPixelRatio:  $.DEFAULT_SETTINGS.maxZoomPixelRatio,\n        visibilityRatio:    $.DEFAULT_SETTINGS.visibilityRatio,\n        wrapHorizontal:     $.DEFAULT_SETTINGS.wrapHorizontal,\n        wrapVertical:       $.DEFAULT_SETTINGS.wrapVertical,\n        defaultZoomLevel:   $.DEFAULT_SETTINGS.defaultZoomLevel,\n        minZoomLevel:       $.DEFAULT_SETTINGS.minZoomLevel,\n        maxZoomLevel:       $.DEFAULT_SETTINGS.maxZoomLevel,\n        degrees:            $.DEFAULT_SETTINGS.degrees,\n        homeFillsViewer:    $.DEFAULT_SETTINGS.homeFillsViewer\n\n    }, options );\n\n    this._updateContainerInnerSize();\n\n    this.centerSpringX = new $.Spring({\n        initial: 0,\n        springStiffness: this.springStiffness,\n        animationTime:   this.animationTime\n    });\n    this.centerSpringY = new $.Spring({\n        initial: 0,\n        springStiffness: this.springStiffness,\n        animationTime:   this.animationTime\n    });\n    this.zoomSpring    = new $.Spring({\n        exponential: true,\n        initial: 1,\n        springStiffness: this.springStiffness,\n        animationTime:   this.animationTime\n    });\n\n    this._oldCenterX = this.centerSpringX.current.value;\n    this._oldCenterY = this.centerSpringY.current.value;\n    this._oldZoom    = this.zoomSpring.current.value;\n\n    this._setContentBounds(new $.Rect(0, 0, 1, 1), 1);\n\n    this.goHome(true);\n    this.update();\n};\n\n/** @lends OpenSeadragon.Viewport.prototype */\n$.Viewport.prototype = {\n    /**\n     * Updates the viewport's home bounds and constraints for the given content size.\n     * @function\n     * @param {OpenSeadragon.Point} contentSize - size of the content in content units\n     * @return {OpenSeadragon.Viewport} Chainable.\n     * @fires OpenSeadragon.Viewer.event:reset-size\n     */\n    resetContentSize: function(contentSize) {\n        $.console.assert(contentSize, \"[Viewport.resetContentSize] contentSize is required\");\n        $.console.assert(contentSize instanceof $.Point, \"[Viewport.resetContentSize] contentSize must be an OpenSeadragon.Point\");\n        $.console.assert(contentSize.x > 0, \"[Viewport.resetContentSize] contentSize.x must be greater than 0\");\n        $.console.assert(contentSize.y > 0, \"[Viewport.resetContentSize] contentSize.y must be greater than 0\");\n\n        this._setContentBounds(new $.Rect(0, 0, 1, contentSize.y / contentSize.x), contentSize.x);\n        return this;\n    },\n\n    // deprecated\n    setHomeBounds: function(bounds, contentFactor) {\n        $.console.error(\"[Viewport.setHomeBounds] this function is deprecated; The content bounds should not be set manually.\");\n        this._setContentBounds(bounds, contentFactor);\n    },\n\n    // Set the viewport's content bounds\n    // @param {OpenSeadragon.Rect} bounds - the new bounds in viewport coordinates\n    // without rotation\n    // @param {Number} contentFactor - how many content units per viewport unit\n    // @fires OpenSeadragon.Viewer.event:reset-size\n    // @private\n    _setContentBounds: function(bounds, contentFactor) {\n        $.console.assert(bounds, \"[Viewport._setContentBounds] bounds is required\");\n        $.console.assert(bounds instanceof $.Rect, \"[Viewport._setContentBounds] bounds must be an OpenSeadragon.Rect\");\n        $.console.assert(bounds.width > 0, \"[Viewport._setContentBounds] bounds.width must be greater than 0\");\n        $.console.assert(bounds.height > 0, \"[Viewport._setContentBounds] bounds.height must be greater than 0\");\n\n        this._contentBoundsNoRotate = bounds.clone();\n        this._contentSizeNoRotate = this._contentBoundsNoRotate.getSize().times(\n            contentFactor);\n\n        this._contentBounds = bounds.rotate(this.degrees).getBoundingBox();\n        this._contentSize = this._contentBounds.getSize().times(contentFactor);\n        this._contentAspectRatio = this._contentSize.x / this._contentSize.y;\n\n        if (this.viewer) {\n            /**\n             * Raised when the viewer's content size or home bounds are reset\n             * (see {@link OpenSeadragon.Viewport#resetContentSize}).\n             *\n             * @event reset-size\n             * @memberof OpenSeadragon.Viewer\n             * @type {object}\n             * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n             * @property {OpenSeadragon.Point} contentSize\n             * @property {OpenSeadragon.Rect} contentBounds - Content bounds.\n             * @property {OpenSeadragon.Rect} homeBounds - Content bounds.\n             * Deprecated use contentBounds instead.\n             * @property {Number} contentFactor\n             * @property {?Object} userData - Arbitrary subscriber-defined object.\n             */\n            this.viewer.raiseEvent('reset-size', {\n                contentSize: this._contentSizeNoRotate.clone(),\n                contentFactor: contentFactor,\n                homeBounds: this._contentBoundsNoRotate.clone(),\n                contentBounds: this._contentBounds.clone()\n            });\n        }\n    },\n\n    /**\n     * Returns the home zoom in \"viewport zoom\" value.\n     * @function\n     * @returns {Number} The home zoom in \"viewport zoom\".\n     */\n    getHomeZoom: function() {\n        if (this.defaultZoomLevel) {\n            return this.defaultZoomLevel;\n        }\n\n        var aspectFactor = this._contentAspectRatio / this.getAspectRatio();\n        var output;\n        if (this.homeFillsViewer) { // fill the viewer and clip the image\n            output = aspectFactor >= 1 ? aspectFactor : 1;\n        } else {\n            output = aspectFactor >= 1 ? 1 : aspectFactor;\n        }\n\n        return output / this._contentBounds.width;\n    },\n\n    /**\n     * Returns the home bounds in viewport coordinates.\n     * @function\n     * @returns {OpenSeadragon.Rect} The home bounds in vewport coordinates.\n     */\n    getHomeBounds: function() {\n        return this.getHomeBoundsNoRotate().rotate(-this.getRotation());\n    },\n\n    /**\n     * Returns the home bounds in viewport coordinates.\n     * This method ignores the viewport rotation. Use\n     * {@link OpenSeadragon.Viewport#getHomeBounds} to take it into account.\n     * @function\n     * @returns {OpenSeadragon.Rect} The home bounds in vewport coordinates.\n     */\n    getHomeBoundsNoRotate: function() {\n        var center = this._contentBounds.getCenter();\n        var width  = 1.0 / this.getHomeZoom();\n        var height = width / this.getAspectRatio();\n\n        return new $.Rect(\n            center.x - (width / 2.0),\n            center.y - (height / 2.0),\n            width,\n            height\n        );\n    },\n\n    /**\n     * @function\n     * @param {Boolean} immediately\n     * @fires OpenSeadragon.Viewer.event:home\n     */\n    goHome: function(immediately) {\n        if (this.viewer) {\n            /**\n             * Raised when the \"home\" operation occurs (see {@link OpenSeadragon.Viewport#goHome}).\n             *\n             * @event home\n             * @memberof OpenSeadragon.Viewer\n             * @type {object}\n             * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n             * @property {Boolean} immediately\n             * @property {?Object} userData - Arbitrary subscriber-defined object.\n             */\n            this.viewer.raiseEvent('home', {\n                immediately: immediately\n            });\n        }\n        return this.fitBounds(this.getHomeBounds(), immediately);\n    },\n\n    /**\n     * @function\n     */\n    getMinZoom: function() {\n        var homeZoom = this.getHomeZoom(),\n            zoom = this.minZoomLevel ?\n            this.minZoomLevel :\n                this.minZoomImageRatio * homeZoom;\n\n        return zoom;\n    },\n\n    /**\n     * @function\n     */\n    getMaxZoom: function() {\n        var zoom = this.maxZoomLevel;\n        if (!zoom) {\n            zoom = this._contentSize.x * this.maxZoomPixelRatio / this._containerInnerSize.x;\n            zoom /= this._contentBounds.width;\n        }\n\n        return Math.max( zoom, this.getHomeZoom() );\n    },\n\n    /**\n     * @function\n     */\n    getAspectRatio: function() {\n        return this._containerInnerSize.x / this._containerInnerSize.y;\n    },\n\n    /**\n     * @function\n     * @returns {OpenSeadragon.Point} The size of the container, in screen coordinates.\n     */\n    getContainerSize: function() {\n        return new $.Point(\n            this.containerSize.x,\n            this.containerSize.y\n        );\n    },\n\n    /**\n     * The margins push the \"home\" region in from the sides by the specified amounts.\n     * @function\n     * @returns {Object} Properties (Numbers, in screen coordinates): left, top, right, bottom.\n     */\n    getMargins: function() {\n        return $.extend({}, this._margins); // Make a copy so we are not returning our original\n    },\n\n    /**\n     * The margins push the \"home\" region in from the sides by the specified amounts.\n     * @function\n     * @param {Object} margins - Properties (Numbers, in screen coordinates): left, top, right, bottom.\n     */\n    setMargins: function(margins) {\n        $.console.assert($.type(margins) === 'object', '[Viewport.setMargins] margins must be an object');\n\n        this._margins = $.extend({\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        }, margins);\n\n        this._updateContainerInnerSize();\n        if (this.viewer) {\n            this.viewer.forceRedraw();\n        }\n    },\n\n    /**\n     * Returns the bounds of the visible area in viewport coordinates.\n     * @function\n     * @param {Boolean} current - Pass true for the current location; defaults to false (target location).\n     * @returns {OpenSeadragon.Rect} The location you are zoomed/panned to, in viewport coordinates.\n     */\n    getBounds: function(current) {\n        return this.getBoundsNoRotate(current).rotate(-this.getRotation());\n    },\n\n    /**\n     * Returns the bounds of the visible area in viewport coordinates.\n     * This method ignores the viewport rotation. Use\n     * {@link OpenSeadragon.Viewport#getBounds} to take it into account.\n     * @function\n     * @param {Boolean} current - Pass true for the current location; defaults to false (target location).\n     * @returns {OpenSeadragon.Rect} The location you are zoomed/panned to, in viewport coordinates.\n     */\n    getBoundsNoRotate: function(current) {\n        var center = this.getCenter(current);\n        var width  = 1.0 / this.getZoom(current);\n        var height = width / this.getAspectRatio();\n\n        return new $.Rect(\n            center.x - (width / 2.0),\n            center.y - (height / 2.0),\n            width,\n            height\n        );\n    },\n\n    /**\n     * @function\n     * @param {Boolean} current - Pass true for the current location; defaults to false (target location).\n     * @returns {OpenSeadragon.Rect} The location you are zoomed/panned to,\n     * including the space taken by margins, in viewport coordinates.\n     */\n    getBoundsWithMargins: function(current) {\n        return this.getBoundsNoRotateWithMargins(current).rotate(\n            -this.getRotation(), this.getCenter(current));\n    },\n\n    /**\n     * @function\n     * @param {Boolean} current - Pass true for the current location; defaults to false (target location).\n     * @returns {OpenSeadragon.Rect} The location you are zoomed/panned to,\n     * including the space taken by margins, in viewport coordinates.\n     */\n    getBoundsNoRotateWithMargins: function(current) {\n        var bounds = this.getBoundsNoRotate(current);\n        var factor = this._containerInnerSize.x * this.getZoom(current);\n        bounds.x -= this._margins.left / factor;\n        bounds.y -= this._margins.top / factor;\n        bounds.width += (this._margins.left + this._margins.right) / factor;\n        bounds.height += (this._margins.top + this._margins.bottom) / factor;\n        return bounds;\n    },\n\n    /**\n     * @function\n     * @param {Boolean} current - Pass true for the current location; defaults to false (target location).\n     */\n    getCenter: function( current ) {\n        var centerCurrent = new $.Point(\n                this.centerSpringX.current.value,\n                this.centerSpringY.current.value\n            ),\n            centerTarget = new $.Point(\n                this.centerSpringX.target.value,\n                this.centerSpringY.target.value\n            ),\n            oldZoomPixel,\n            zoom,\n            width,\n            height,\n            bounds,\n            newZoomPixel,\n            deltaZoomPixels,\n            deltaZoomPoints;\n\n        if ( current ) {\n            return centerCurrent;\n        } else if ( !this.zoomPoint ) {\n            return centerTarget;\n        }\n\n        oldZoomPixel = this.pixelFromPoint(this.zoomPoint, true);\n\n        zoom    = this.getZoom();\n        width   = 1.0 / zoom;\n        height  = width / this.getAspectRatio();\n        bounds  = new $.Rect(\n            centerCurrent.x - width / 2.0,\n            centerCurrent.y - height / 2.0,\n            width,\n            height\n        );\n\n        newZoomPixel = this._pixelFromPoint(this.zoomPoint, bounds);\n        deltaZoomPixels = newZoomPixel.minus( oldZoomPixel );\n        deltaZoomPoints = deltaZoomPixels.divide( this._containerInnerSize.x * zoom );\n\n        return centerTarget.plus( deltaZoomPoints );\n    },\n\n    /**\n     * @function\n     * @param {Boolean} current - Pass true for the current location; defaults to false (target location).\n     */\n    getZoom: function( current ) {\n        if ( current ) {\n            return this.zoomSpring.current.value;\n        } else {\n            return this.zoomSpring.target.value;\n        }\n    },\n\n    // private\n    _applyZoomConstraints: function(zoom) {\n        return Math.max(\n            Math.min(zoom, this.getMaxZoom()),\n            this.getMinZoom());\n    },\n\n    /**\n     * @function\n     * @private\n     * @param {OpenSeadragon.Rect} bounds\n     * @param {Boolean} immediately\n     * @return {OpenSeadragon.Rect} constrained bounds.\n     */\n    _applyBoundaryConstraints: function(bounds, immediately) {\n        var newBounds = new $.Rect(\n                bounds.x,\n                bounds.y,\n                bounds.width,\n                bounds.height);\n\n        if (this.wrapHorizontal) {\n            //do nothing\n        } else {\n            var horizontalThreshold = this.visibilityRatio * newBounds.width;\n            var boundsRight = newBounds.x + newBounds.width;\n            var contentRight = this._contentBoundsNoRotate.x + this._contentBoundsNoRotate.width;\n            var leftDx = this._contentBoundsNoRotate.x - boundsRight + horizontalThreshold;\n            var rightDx = contentRight - newBounds.x - horizontalThreshold;\n\n            if (horizontalThreshold > this._contentBoundsNoRotate.width) {\n                newBounds.x += (leftDx + rightDx) / 2;\n            } else if (rightDx < 0) {\n                newBounds.x += rightDx;\n            } else if (leftDx > 0) {\n                newBounds.x += leftDx;\n            }\n        }\n\n        if (this.wrapVertical) {\n            //do nothing\n        } else {\n            var verticalThreshold   = this.visibilityRatio * newBounds.height;\n            var boundsBottom = newBounds.y + newBounds.height;\n            var contentBottom = this._contentBoundsNoRotate.y + this._contentBoundsNoRotate.height;\n            var topDy = this._contentBoundsNoRotate.y - boundsBottom + verticalThreshold;\n            var bottomDy = contentBottom - newBounds.y - verticalThreshold;\n\n            if (verticalThreshold > this._contentBoundsNoRotate.height) {\n                newBounds.y += (topDy + bottomDy) / 2;\n            } else if (bottomDy < 0) {\n                newBounds.y += bottomDy;\n            } else if (topDy > 0) {\n                newBounds.y += topDy;\n            }\n        }\n\n        if (this.viewer) {\n            /**\n             * Raised when the viewport constraints are applied (see {@link OpenSeadragon.Viewport#applyConstraints}).\n             *\n             * @event constrain\n             * @memberof OpenSeadragon.Viewer\n             * @type {object}\n             * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n             * @property {Boolean} immediately\n             * @property {?Object} userData - Arbitrary subscriber-defined object.\n             */\n            this.viewer.raiseEvent( 'constrain', {\n                immediately: immediately\n            });\n        }\n\n        return newBounds;\n    },\n\n    /**\n     * Enforces the minZoom, maxZoom and visibilityRatio constraints by\n     * zooming and panning to the closest acceptable zoom and location.\n     * @function\n     * @param {Boolean} [immediately=false]\n     * @return {OpenSeadragon.Viewport} Chainable.\n     * @fires OpenSeadragon.Viewer.event:constrain\n     */\n    applyConstraints: function(immediately) {\n        var actualZoom = this.getZoom();\n        var constrainedZoom = this._applyZoomConstraints(actualZoom);\n\n        if (actualZoom !== constrainedZoom) {\n            this.zoomTo(constrainedZoom, this.zoomPoint, immediately);\n        }\n\n        var bounds = this.getBoundsNoRotate();\n        var constrainedBounds = this._applyBoundaryConstraints(\n            bounds, immediately);\n\n        if (bounds.x !== constrainedBounds.x ||\n            bounds.y !== constrainedBounds.y ||\n            immediately) {\n            this.fitBounds(\n                constrainedBounds.rotate(-this.getRotation()),\n                immediately);\n        }\n        return this;\n    },\n\n    /**\n     * Equivalent to {@link OpenSeadragon.Viewport#applyConstraints}\n     * @function\n     * @param {Boolean} [immediately=false]\n     * @return {OpenSeadragon.Viewport} Chainable.\n     * @fires OpenSeadragon.Viewer.event:constrain\n     */\n    ensureVisible: function(immediately) {\n        return this.applyConstraints(immediately);\n    },\n\n    /**\n     * @function\n     * @private\n     * @param {OpenSeadragon.Rect} bounds\n     * @param {Object} options (immediately=false, constraints=false)\n     * @return {OpenSeadragon.Viewport} Chainable.\n     */\n    _fitBounds: function(bounds, options) {\n        options = options || {};\n        var immediately = options.immediately || false;\n        var constraints = options.constraints || false;\n\n        var aspect = this.getAspectRatio();\n        var center = bounds.getCenter();\n\n        // Compute width and height of bounding box.\n        var newBounds = new $.Rect(\n            bounds.x,\n            bounds.y,\n            bounds.width,\n            bounds.height,\n            bounds.degrees + this.getRotation())\n            .getBoundingBox();\n\n        if (newBounds.getAspectRatio() >= aspect) {\n            newBounds.height = newBounds.width / aspect;\n        } else {\n            newBounds.width = newBounds.height * aspect;\n        }\n\n        // Compute x and y from width, height and center position\n        newBounds.x = center.x - newBounds.width / 2;\n        newBounds.y = center.y - newBounds.height / 2;\n        var newZoom = 1.0 / newBounds.width;\n\n        if (constraints) {\n            var newBoundsAspectRatio = newBounds.getAspectRatio();\n            var newConstrainedZoom = this._applyZoomConstraints(newZoom);\n\n            if (newZoom !== newConstrainedZoom) {\n                newZoom = newConstrainedZoom;\n                newBounds.width = 1.0 / newZoom;\n                newBounds.x = center.x - newBounds.width / 2;\n                newBounds.height = newBounds.width / newBoundsAspectRatio;\n                newBounds.y = center.y - newBounds.height / 2;\n            }\n\n            newBounds = this._applyBoundaryConstraints(newBounds, immediately);\n            center = newBounds.getCenter();\n        }\n\n        if (immediately) {\n            this.panTo(center, true);\n            return this.zoomTo(newZoom, null, true);\n        }\n\n        this.panTo(this.getCenter(true), true);\n        this.zoomTo(this.getZoom(true), null, true);\n\n        var oldBounds = this.getBounds();\n        var oldZoom   = this.getZoom();\n\n        if (oldZoom === 0 || Math.abs(newZoom / oldZoom - 1) < 0.00000001) {\n            this.zoomTo(newZoom, true);\n            return this.panTo(center, immediately);\n        }\n\n        newBounds = newBounds.rotate(-this.getRotation());\n        var referencePoint = newBounds.getTopLeft().times(newZoom)\n            .minus(oldBounds.getTopLeft().times(oldZoom))\n            .divide(newZoom - oldZoom);\n\n        return this.zoomTo(newZoom, referencePoint, immediately);\n    },\n\n    /**\n     * Makes the viewport zoom and pan so that the specified bounds take\n     * as much space as possible in the viewport.\n     * Note: this method ignores the constraints (minZoom, maxZoom and\n     * visibilityRatio).\n     * Use {@link OpenSeadragon.Viewport#fitBoundsWithConstraints} to enforce\n     * them.\n     * @function\n     * @param {OpenSeadragon.Rect} bounds\n     * @param {Boolean} [immediately=false]\n     * @return {OpenSeadragon.Viewport} Chainable.\n     */\n    fitBounds: function(bounds, immediately) {\n        return this._fitBounds(bounds, {\n            immediately: immediately,\n            constraints: false\n        });\n    },\n\n    /**\n     * Makes the viewport zoom and pan so that the specified bounds take\n     * as much space as possible in the viewport while enforcing the constraints\n     * (minZoom, maxZoom and visibilityRatio).\n     * Note: because this method enforces the constraints, part of the\n     * provided bounds may end up outside of the viewport.\n     * Use {@link OpenSeadragon.Viewport#fitBounds} to ignore them.\n     * @function\n     * @param {OpenSeadragon.Rect} bounds\n     * @param {Boolean} [immediately=false]\n     * @return {OpenSeadragon.Viewport} Chainable.\n     */\n    fitBoundsWithConstraints: function(bounds, immediately) {\n        return this._fitBounds(bounds, {\n            immediately: immediately,\n            constraints: true\n        });\n    },\n\n    /**\n     * Zooms so the image just fills the viewer vertically.\n     * @param {Boolean} immediately\n     * @return {OpenSeadragon.Viewport} Chainable.\n     */\n    fitVertically: function(immediately) {\n        var box = new $.Rect(\n            this._contentBounds.x + (this._contentBounds.width / 2),\n            this._contentBounds.y,\n            0,\n            this._contentBounds.height);\n        return this.fitBounds(box, immediately);\n    },\n\n    /**\n     * Zooms so the image just fills the viewer horizontally.\n     * @param {Boolean} immediately\n     * @return {OpenSeadragon.Viewport} Chainable.\n     */\n    fitHorizontally: function(immediately) {\n        var box = new $.Rect(\n            this._contentBounds.x,\n            this._contentBounds.y + (this._contentBounds.height / 2),\n            this._contentBounds.width,\n            0);\n        return this.fitBounds(box, immediately);\n    },\n\n\n    /**\n     * @function\n     * @param {OpenSeadragon.Point} delta\n     * @param {Boolean} immediately\n     * @return {OpenSeadragon.Viewport} Chainable.\n     * @fires OpenSeadragon.Viewer.event:pan\n     */\n    panBy: function( delta, immediately ) {\n        var center = new $.Point(\n            this.centerSpringX.target.value,\n            this.centerSpringY.target.value\n        );\n        return this.panTo( center.plus( delta ), immediately );\n    },\n\n    /**\n     * @function\n     * @param {OpenSeadragon.Point} center\n     * @param {Boolean} immediately\n     * @return {OpenSeadragon.Viewport} Chainable.\n     * @fires OpenSeadragon.Viewer.event:pan\n     */\n    panTo: function( center, immediately ) {\n        if ( immediately ) {\n            this.centerSpringX.resetTo( center.x );\n            this.centerSpringY.resetTo( center.y );\n        } else {\n            this.centerSpringX.springTo( center.x );\n            this.centerSpringY.springTo( center.y );\n        }\n\n        if( this.viewer ){\n            /**\n             * Raised when the viewport is panned (see {@link OpenSeadragon.Viewport#panBy} and {@link OpenSeadragon.Viewport#panTo}).\n             *\n             * @event pan\n             * @memberof OpenSeadragon.Viewer\n             * @type {object}\n             * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n             * @property {OpenSeadragon.Point} center\n             * @property {Boolean} immediately\n             * @property {?Object} userData - Arbitrary subscriber-defined object.\n             */\n            this.viewer.raiseEvent( 'pan', {\n                center: center,\n                immediately: immediately\n            });\n        }\n\n        return this;\n    },\n\n    /**\n     * @function\n     * @return {OpenSeadragon.Viewport} Chainable.\n     * @fires OpenSeadragon.Viewer.event:zoom\n     */\n    zoomBy: function(factor, refPoint, immediately) {\n        return this.zoomTo(\n            this.zoomSpring.target.value * factor, refPoint, immediately);\n    },\n\n    /**\n     * Zooms to the specified zoom level\n     * @function\n     * @param {Number} zoom The zoom level to zoom to.\n     * @param {OpenSeadragon.Point} [refPoint] The point which will stay at\n     * the same screen location. Defaults to the viewport center.\n     * @param {Boolean} [immediately=false]\n     * @return {OpenSeadragon.Viewport} Chainable.\n     * @fires OpenSeadragon.Viewer.event:zoom\n     */\n    zoomTo: function( zoom, refPoint, immediately ) {\n\n        this.zoomPoint = refPoint instanceof $.Point &&\n            !isNaN(refPoint.x) &&\n            !isNaN(refPoint.y) ?\n            refPoint :\n            null;\n\n        if ( immediately ) {\n            this.zoomSpring.resetTo( zoom );\n        } else {\n            this.zoomSpring.springTo( zoom );\n        }\n\n        if( this.viewer ){\n            /**\n             * Raised when the viewport zoom level changes (see {@link OpenSeadragon.Viewport#zoomBy} and {@link OpenSeadragon.Viewport#zoomTo}).\n             *\n             * @event zoom\n             * @memberof OpenSeadragon.Viewer\n             * @type {object}\n             * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n             * @property {Number} zoom\n             * @property {OpenSeadragon.Point} refPoint\n             * @property {Boolean} immediately\n             * @property {?Object} userData - Arbitrary subscriber-defined object.\n             */\n            this.viewer.raiseEvent( 'zoom', {\n                zoom: zoom,\n                refPoint: refPoint,\n                immediately: immediately\n            });\n        }\n\n        return this;\n    },\n\n    /**\n     * Rotates this viewport to the angle specified.\n     * @function\n     * @return {OpenSeadragon.Viewport} Chainable.\n     */\n    setRotation: function(degrees) {\n        if (!this.viewer || !this.viewer.drawer.canRotate()) {\n            return this;\n        }\n\n        degrees = degrees % 360;\n        if (degrees < 0) {\n            degrees += 360;\n        }\n        this.degrees = degrees;\n        this._setContentBounds(\n            this.viewer.world.getHomeBounds(),\n            this.viewer.world.getContentFactor());\n        this.viewer.forceRedraw();\n\n        /**\n         * Raised when rotation has been changed.\n         *\n         * @event rotate\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n         * @property {Number} degrees - The number of degrees the rotation was set to.\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        this.viewer.raiseEvent('rotate', {\"degrees\": degrees});\n        return this;\n    },\n\n    /**\n     * Gets the current rotation in degrees.\n     * @function\n     * @return {Number} The current rotation in degrees.\n     */\n    getRotation: function() {\n        return this.degrees;\n    },\n\n    /**\n     * @function\n     * @return {OpenSeadragon.Viewport} Chainable.\n     * @fires OpenSeadragon.Viewer.event:resize\n     */\n    resize: function( newContainerSize, maintain ) {\n        var oldBounds = this.getBoundsNoRotate(),\n            newBounds = oldBounds,\n            widthDeltaFactor;\n\n        this.containerSize.x = newContainerSize.x;\n        this.containerSize.y = newContainerSize.y;\n\n        this._updateContainerInnerSize();\n\n        if ( maintain ) {\n            // TODO: widthDeltaFactor will always be 1; probably not what's intended\n            widthDeltaFactor = newContainerSize.x / this.containerSize.x;\n            newBounds.width  = oldBounds.width * widthDeltaFactor;\n            newBounds.height = newBounds.width / this.getAspectRatio();\n        }\n\n        if( this.viewer ){\n            /**\n             * Raised when the viewer is resized (see {@link OpenSeadragon.Viewport#resize}).\n             *\n             * @event resize\n             * @memberof OpenSeadragon.Viewer\n             * @type {object}\n             * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n             * @property {OpenSeadragon.Point} newContainerSize\n             * @property {Boolean} maintain\n             * @property {?Object} userData - Arbitrary subscriber-defined object.\n             */\n            this.viewer.raiseEvent( 'resize', {\n                newContainerSize: newContainerSize,\n                maintain: maintain\n            });\n        }\n\n        return this.fitBounds( newBounds, true );\n    },\n\n    // private\n    _updateContainerInnerSize: function() {\n        this._containerInnerSize = new $.Point(\n            Math.max(1, this.containerSize.x - (this._margins.left + this._margins.right)),\n            Math.max(1, this.containerSize.y - (this._margins.top + this._margins.bottom))\n        );\n    },\n\n    /**\n     * Update the zoom and center (X and Y) springs.\n     * @function\n     * @returns {Boolean} True if any change has been made, false otherwise.\n     */\n    update: function() {\n\n        if (this.zoomPoint) {\n            var oldZoomPixel = this.pixelFromPoint(this.zoomPoint, true);\n            this.zoomSpring.update();\n            var newZoomPixel = this.pixelFromPoint(this.zoomPoint, true);\n\n            var deltaZoomPixels = newZoomPixel.minus(oldZoomPixel);\n            var deltaZoomPoints = this.deltaPointsFromPixels(\n                deltaZoomPixels, true);\n\n            this.centerSpringX.shiftBy(deltaZoomPoints.x);\n            this.centerSpringY.shiftBy(deltaZoomPoints.y);\n\n            if (this.zoomSpring.isAtTargetValue()) {\n                this.zoomPoint = null;\n            }\n        } else {\n            this.zoomSpring.update();\n        }\n\n        this.centerSpringX.update();\n        this.centerSpringY.update();\n\n        var changed = this.centerSpringX.current.value !== this._oldCenterX ||\n            this.centerSpringY.current.value !== this._oldCenterY ||\n            this.zoomSpring.current.value !== this._oldZoom;\n\n        this._oldCenterX = this.centerSpringX.current.value;\n        this._oldCenterY = this.centerSpringY.current.value;\n        this._oldZoom    = this.zoomSpring.current.value;\n\n        return changed;\n    },\n\n    /**\n     * Convert a delta (translation vector) from viewport coordinates to pixels\n     * coordinates. This method does not take rotation into account.\n     * Consider using deltaPixelsFromPoints if you need to account for rotation.\n     * @param {OpenSeadragon.Point} deltaPoints - The translation vector to convert.\n     * @param {Boolean} [current=false] - Pass true for the current location;\n     * defaults to false (target location).\n     * @returns {OpenSeadragon.Point}\n     */\n    deltaPixelsFromPointsNoRotate: function(deltaPoints, current) {\n        return deltaPoints.times(\n            this._containerInnerSize.x * this.getZoom(current)\n        );\n    },\n\n    /**\n     * Convert a delta (translation vector) from viewport coordinates to pixels\n     * coordinates.\n     * @param {OpenSeadragon.Point} deltaPoints - The translation vector to convert.\n     * @param {Boolean} [current=false] - Pass true for the current location;\n     * defaults to false (target location).\n     * @returns {OpenSeadragon.Point}\n     */\n    deltaPixelsFromPoints: function(deltaPoints, current) {\n        return this.deltaPixelsFromPointsNoRotate(\n            deltaPoints.rotate(this.getRotation()),\n            current);\n    },\n\n    /**\n     * Convert a delta (translation vector) from pixels coordinates to viewport\n     * coordinates. This method does not take rotation into account.\n     * Consider using deltaPointsFromPixels if you need to account for rotation.\n     * @param {OpenSeadragon.Point} deltaPixels - The translation vector to convert.\n     * @param {Boolean} [current=false] - Pass true for the current location;\n     * defaults to false (target location).\n     * @returns {OpenSeadragon.Point}\n     */\n    deltaPointsFromPixelsNoRotate: function(deltaPixels, current) {\n        return deltaPixels.divide(\n            this._containerInnerSize.x * this.getZoom(current)\n        );\n    },\n\n    /**\n     * Convert a delta (translation vector) from pixels coordinates to viewport\n     * coordinates.\n     * @param {OpenSeadragon.Point} deltaPixels - The translation vector to convert.\n     * @param {Boolean} [current=false] - Pass true for the current location;\n     * defaults to false (target location).\n     * @returns {OpenSeadragon.Point}\n     */\n    deltaPointsFromPixels: function(deltaPixels, current) {\n        return this.deltaPointsFromPixelsNoRotate(deltaPixels, current)\n            .rotate(-this.getRotation());\n    },\n\n    /**\n     * Convert viewport coordinates to pixels coordinates.\n     * This method does not take rotation into account.\n     * Consider using pixelFromPoint if you need to account for rotation.\n     * @param {OpenSeadragon.Point} point the viewport coordinates\n     * @param {Boolean} [current=false] - Pass true for the current location;\n     * defaults to false (target location).\n     * @returns {OpenSeadragon.Point}\n     */\n    pixelFromPointNoRotate: function(point, current) {\n        return this._pixelFromPointNoRotate(\n            point, this.getBoundsNoRotate(current));\n    },\n\n    /**\n     * Convert viewport coordinates to pixel coordinates.\n     * @param {OpenSeadragon.Point} point the viewport coordinates\n     * @param {Boolean} [current=false] - Pass true for the current location;\n     * defaults to false (target location).\n     * @returns {OpenSeadragon.Point}\n     */\n    pixelFromPoint: function(point, current) {\n        return this._pixelFromPoint(point, this.getBoundsNoRotate(current));\n    },\n\n    // private\n    _pixelFromPointNoRotate: function(point, bounds) {\n        return point.minus(\n            bounds.getTopLeft()\n        ).times(\n            this._containerInnerSize.x / bounds.width\n        ).plus(\n            new $.Point(this._margins.left, this._margins.top)\n        );\n    },\n\n    // private\n    _pixelFromPoint: function(point, bounds) {\n        return this._pixelFromPointNoRotate(\n            point.rotate(this.getRotation(), this.getCenter(true)),\n            bounds);\n    },\n\n    /**\n     * Convert pixel coordinates to viewport coordinates.\n     * This method does not take rotation into account.\n     * Consider using pointFromPixel if you need to account for rotation.\n     * @param {OpenSeadragon.Point} pixel Pixel coordinates\n     * @param {Boolean} [current=false] - Pass true for the current location;\n     * defaults to false (target location).\n     * @returns {OpenSeadragon.Point}\n     */\n    pointFromPixelNoRotate: function(pixel, current) {\n        var bounds = this.getBoundsNoRotate(current);\n        return pixel.minus(\n            new $.Point(this._margins.left, this._margins.top)\n        ).divide(\n            this._containerInnerSize.x / bounds.width\n        ).plus(\n            bounds.getTopLeft()\n        );\n    },\n\n    /**\n     * Convert pixel coordinates to viewport coordinates.\n     * @param {OpenSeadragon.Point} pixel Pixel coordinates\n     * @param {Boolean} [current=false] - Pass true for the current location;\n     * defaults to false (target location).\n     * @returns {OpenSeadragon.Point}\n     */\n    pointFromPixel: function(pixel, current) {\n        return this.pointFromPixelNoRotate(pixel, current).rotate(\n            -this.getRotation(),\n            this.getCenter(true)\n        );\n    },\n\n    // private\n    _viewportToImageDelta: function( viewerX, viewerY ) {\n        var scale = this._contentBoundsNoRotate.width;\n        return new $.Point(\n            viewerX * this._contentSizeNoRotate.x / scale,\n            viewerY * this._contentSizeNoRotate.x / scale);\n    },\n\n    /**\n     * Translates from OpenSeadragon viewer coordinate system to image coordinate system.\n     * This method can be called either by passing X,Y coordinates or an\n     * OpenSeadragon.Point\n     * Note: not accurate with multi-image; use TiledImage.viewportToImageCoordinates instead.\n     * @function\n     * @param {(OpenSeadragon.Point|Number)} viewerX either a point or the X\n     * coordinate in viewport coordinate system.\n     * @param {Number} [viewerY] Y coordinate in viewport coordinate system.\n     * @return {OpenSeadragon.Point} a point representing the coordinates in the image.\n     */\n    viewportToImageCoordinates: function(viewerX, viewerY) {\n        if (viewerX instanceof $.Point) {\n            //they passed a point instead of individual components\n            return this.viewportToImageCoordinates(viewerX.x, viewerX.y);\n        }\n\n        if (this.viewer) {\n            var count = this.viewer.world.getItemCount();\n            if (count > 1) {\n                $.console.error('[Viewport.viewportToImageCoordinates] is not accurate ' +\n                    'with multi-image; use TiledImage.viewportToImageCoordinates instead.');\n            } else if (count === 1) {\n                // It is better to use TiledImage.viewportToImageCoordinates\n                // because this._contentBoundsNoRotate can not be relied on\n                // with clipping.\n                var item = this.viewer.world.getItemAt(0);\n                return item.viewportToImageCoordinates(viewerX, viewerY, true);\n            }\n        }\n\n        return this._viewportToImageDelta(\n            viewerX - this._contentBoundsNoRotate.x,\n            viewerY - this._contentBoundsNoRotate.y);\n    },\n\n    // private\n    _imageToViewportDelta: function( imageX, imageY ) {\n        var scale = this._contentBoundsNoRotate.width;\n        return new $.Point(\n            imageX / this._contentSizeNoRotate.x * scale,\n            imageY / this._contentSizeNoRotate.x * scale);\n    },\n\n    /**\n     * Translates from image coordinate system to OpenSeadragon viewer coordinate system\n     * This method can be called either by passing X,Y coordinates or an\n     * OpenSeadragon.Point\n     * Note: not accurate with multi-image; use TiledImage.imageToViewportCoordinates instead.\n     * @function\n     * @param {(OpenSeadragon.Point | Number)} imageX the point or the\n     * X coordinate in image coordinate system.\n     * @param {Number} [imageY] Y coordinate in image coordinate system.\n     * @return {OpenSeadragon.Point} a point representing the coordinates in the viewport.\n     */\n    imageToViewportCoordinates: function(imageX, imageY) {\n        if (imageX instanceof $.Point) {\n            //they passed a point instead of individual components\n            return this.imageToViewportCoordinates(imageX.x, imageX.y);\n        }\n\n        if (this.viewer) {\n            var count = this.viewer.world.getItemCount();\n            if (count > 1) {\n                $.console.error('[Viewport.imageToViewportCoordinates] is not accurate ' +\n                    'with multi-image; use TiledImage.imageToViewportCoordinates instead.');\n            } else if (count === 1) {\n                // It is better to use TiledImage.viewportToImageCoordinates\n                // because this._contentBoundsNoRotate can not be relied on\n                // with clipping.\n                var item = this.viewer.world.getItemAt(0);\n                return item.imageToViewportCoordinates(imageX, imageY, true);\n            }\n        }\n\n        var point = this._imageToViewportDelta(imageX, imageY);\n        point.x += this._contentBoundsNoRotate.x;\n        point.y += this._contentBoundsNoRotate.y;\n        return point;\n    },\n\n    /**\n     * Translates from a rectangle which describes a portion of the image in\n     * pixel coordinates to OpenSeadragon viewport rectangle coordinates.\n     * This method can be called either by passing X,Y,width,height or an\n     * OpenSeadragon.Rect\n     * Note: not accurate with multi-image; use TiledImage.imageToViewportRectangle instead.\n     * @function\n     * @param {(OpenSeadragon.Rect | Number)} imageX the rectangle or the X\n     * coordinate of the top left corner of the rectangle in image coordinate system.\n     * @param {Number} [imageY] the Y coordinate of the top left corner of the rectangle\n     * in image coordinate system.\n     * @param {Number} [pixelWidth] the width in pixel of the rectangle.\n     * @param {Number} [pixelHeight] the height in pixel of the rectangle.\n     */\n    imageToViewportRectangle: function(imageX, imageY, pixelWidth, pixelHeight) {\n        var rect = imageX;\n        if (!(rect instanceof $.Rect)) {\n            //they passed individual components instead of a rectangle\n            rect = new $.Rect(imageX, imageY, pixelWidth, pixelHeight);\n        }\n\n        if (this.viewer) {\n            var count = this.viewer.world.getItemCount();\n            if (count > 1) {\n                $.console.error('[Viewport.imageToViewportRectangle] is not accurate ' +\n                    'with multi-image; use TiledImage.imageToViewportRectangle instead.');\n            } else if (count === 1) {\n                // It is better to use TiledImage.imageToViewportRectangle\n                // because this._contentBoundsNoRotate can not be relied on\n                // with clipping.\n                var item = this.viewer.world.getItemAt(0);\n                return item.imageToViewportRectangle(\n                    imageX, imageY, pixelWidth, pixelHeight, true);\n            }\n        }\n\n        var coordA = this.imageToViewportCoordinates(rect.x, rect.y);\n        var coordB = this._imageToViewportDelta(rect.width, rect.height);\n        return new $.Rect(\n            coordA.x,\n            coordA.y,\n            coordB.x,\n            coordB.y,\n            rect.degrees\n        );\n    },\n\n    /**\n     * Translates from a rectangle which describes a portion of\n     * the viewport in point coordinates to image rectangle coordinates.\n     * This method can be called either by passing X,Y,width,height or an\n     * OpenSeadragon.Rect\n     * Note: not accurate with multi-image; use TiledImage.viewportToImageRectangle instead.\n     * @function\n     * @param {(OpenSeadragon.Rect | Number)} viewerX either a rectangle or\n     * the X coordinate of the top left corner of the rectangle in viewport\n     * coordinate system.\n     * @param {Number} [viewerY] the Y coordinate of the top left corner of the rectangle\n     * in viewport coordinate system.\n     * @param {Number} [pointWidth] the width of the rectangle in viewport coordinate system.\n     * @param {Number} [pointHeight] the height of the rectangle in viewport coordinate system.\n     */\n    viewportToImageRectangle: function(viewerX, viewerY, pointWidth, pointHeight) {\n        var rect = viewerX;\n        if (!(rect instanceof $.Rect)) {\n            //they passed individual components instead of a rectangle\n            rect = new $.Rect(viewerX, viewerY, pointWidth, pointHeight);\n        }\n\n        if (this.viewer) {\n            var count = this.viewer.world.getItemCount();\n            if (count > 1) {\n                $.console.error('[Viewport.viewportToImageRectangle] is not accurate ' +\n                    'with multi-image; use TiledImage.viewportToImageRectangle instead.');\n            } else if (count === 1) {\n                // It is better to use TiledImage.viewportToImageCoordinates\n                // because this._contentBoundsNoRotate can not be relied on\n                // with clipping.\n                var item = this.viewer.world.getItemAt(0);\n                return item.viewportToImageRectangle(\n                    viewerX, viewerY, pointWidth, pointHeight, true);\n            }\n        }\n\n        var coordA = this.viewportToImageCoordinates(rect.x, rect.y);\n        var coordB = this._viewportToImageDelta(rect.width, rect.height);\n        return new $.Rect(\n            coordA.x,\n            coordA.y,\n            coordB.x,\n            coordB.y,\n            rect.degrees\n        );\n    },\n\n    /**\n     * Convert pixel coordinates relative to the viewer element to image\n     * coordinates.\n     * Note: not accurate with multi-image.\n     * @param {OpenSeadragon.Point} pixel\n     * @returns {OpenSeadragon.Point}\n     */\n    viewerElementToImageCoordinates: function( pixel ) {\n        var point = this.pointFromPixel( pixel, true );\n        return this.viewportToImageCoordinates( point );\n    },\n\n    /**\n     * Convert pixel coordinates relative to the image to\n     * viewer element coordinates.\n     * Note: not accurate with multi-image.\n     * @param {OpenSeadragon.Point} pixel\n     * @returns {OpenSeadragon.Point}\n     */\n    imageToViewerElementCoordinates: function( pixel ) {\n        var point = this.imageToViewportCoordinates( pixel );\n        return this.pixelFromPoint( point, true );\n    },\n\n    /**\n     * Convert pixel coordinates relative to the window to image coordinates.\n     * Note: not accurate with multi-image.\n     * @param {OpenSeadragon.Point} pixel\n     * @returns {OpenSeadragon.Point}\n     */\n    windowToImageCoordinates: function(pixel) {\n        $.console.assert(this.viewer,\n            \"[Viewport.windowToImageCoordinates] the viewport must have a viewer.\");\n        var viewerCoordinates = pixel.minus(\n                $.getElementPosition(this.viewer.element));\n        return this.viewerElementToImageCoordinates(viewerCoordinates);\n    },\n\n    /**\n     * Convert image coordinates to pixel coordinates relative to the window.\n     * Note: not accurate with multi-image.\n     * @param {OpenSeadragon.Point} pixel\n     * @returns {OpenSeadragon.Point}\n     */\n    imageToWindowCoordinates: function(pixel) {\n        $.console.assert(this.viewer,\n            \"[Viewport.imageToWindowCoordinates] the viewport must have a viewer.\");\n        var viewerCoordinates = this.imageToViewerElementCoordinates(pixel);\n        return viewerCoordinates.plus(\n                $.getElementPosition(this.viewer.element));\n    },\n\n    /**\n     * Convert pixel coordinates relative to the viewer element to viewport\n     * coordinates.\n     * @param {OpenSeadragon.Point} pixel\n     * @returns {OpenSeadragon.Point}\n     */\n    viewerElementToViewportCoordinates: function( pixel ) {\n        return this.pointFromPixel( pixel, true );\n    },\n\n    /**\n     * Convert viewport coordinates to pixel coordinates relative to the\n     * viewer element.\n     * @param {OpenSeadragon.Point} point\n     * @returns {OpenSeadragon.Point}\n     */\n    viewportToViewerElementCoordinates: function( point ) {\n        return this.pixelFromPoint( point, true );\n    },\n\n    /**\n     * Convert a rectangle in pixel coordinates relative to the viewer element\n     * to viewport coordinates.\n     * @param {OpenSeadragon.Rect} rectangle the rectangle to convert\n     * @returns {OpenSeadragon.Rect} the converted rectangle\n     */\n    viewerElementToViewportRectangle: function(rectangle) {\n        return $.Rect.fromSummits(\n            this.pointFromPixel(rectangle.getTopLeft(), true),\n            this.pointFromPixel(rectangle.getTopRight(), true),\n            this.pointFromPixel(rectangle.getBottomLeft(), true)\n        );\n    },\n\n    /**\n     * Convert a rectangle in viewport coordinates to pixel coordinates relative\n     * to the viewer element.\n     * @param {OpenSeadragon.Rect} rectangle the rectangle to convert\n     * @returns {OpenSeadragon.Rect} the converted rectangle\n     */\n    viewportToViewerElementRectangle: function(rectangle) {\n        return $.Rect.fromSummits(\n            this.pixelFromPoint(rectangle.getTopLeft(), true),\n            this.pixelFromPoint(rectangle.getTopRight(), true),\n            this.pixelFromPoint(rectangle.getBottomLeft(), true)\n        );\n    },\n\n    /**\n     * Convert pixel coordinates relative to the window to viewport coordinates.\n     * @param {OpenSeadragon.Point} pixel\n     * @returns {OpenSeadragon.Point}\n     */\n    windowToViewportCoordinates: function(pixel) {\n        $.console.assert(this.viewer,\n            \"[Viewport.windowToViewportCoordinates] the viewport must have a viewer.\");\n        var viewerCoordinates = pixel.minus(\n                $.getElementPosition(this.viewer.element));\n        return this.viewerElementToViewportCoordinates(viewerCoordinates);\n    },\n\n    /**\n     * Convert viewport coordinates to pixel coordinates relative to the window.\n     * @param {OpenSeadragon.Point} point\n     * @returns {OpenSeadragon.Point}\n     */\n    viewportToWindowCoordinates: function(point) {\n        $.console.assert(this.viewer,\n            \"[Viewport.viewportToWindowCoordinates] the viewport must have a viewer.\");\n        var viewerCoordinates = this.viewportToViewerElementCoordinates(point);\n        return viewerCoordinates.plus(\n                $.getElementPosition(this.viewer.element));\n    },\n\n    /**\n     * Convert a viewport zoom to an image zoom.\n     * Image zoom: ratio of the original image size to displayed image size.\n     * 1 means original image size, 0.5 half size...\n     * Viewport zoom: ratio of the displayed image's width to viewport's width.\n     * 1 means identical width, 2 means image's width is twice the viewport's width...\n     * Note: not accurate with multi-image.\n     * @function\n     * @param {Number} viewportZoom The viewport zoom\n     * target zoom.\n     * @returns {Number} imageZoom The image zoom\n     */\n    viewportToImageZoom: function(viewportZoom) {\n        if (this.viewer) {\n            var count = this.viewer.world.getItemCount();\n            if (count > 1) {\n                $.console.error('[Viewport.viewportToImageZoom] is not ' +\n                    'accurate with multi-image.');\n            } else if (count === 1) {\n                // It is better to use TiledImage.viewportToImageZoom\n                // because this._contentBoundsNoRotate can not be relied on\n                // with clipping.\n                var item = this.viewer.world.getItemAt(0);\n                return item.viewportToImageZoom(viewportZoom);\n            }\n        }\n\n        var imageWidth = this._contentSizeNoRotate.x;\n        var containerWidth = this._containerInnerSize.x;\n        var scale = this._contentBoundsNoRotate.width;\n        var viewportToImageZoomRatio = (containerWidth / imageWidth) * scale;\n        return viewportZoom * viewportToImageZoomRatio;\n    },\n\n    /**\n     * Convert an image zoom to a viewport zoom.\n     * Image zoom: ratio of the original image size to displayed image size.\n     * 1 means original image size, 0.5 half size...\n     * Viewport zoom: ratio of the displayed image's width to viewport's width.\n     * 1 means identical width, 2 means image's width is twice the viewport's width...\n     * Note: not accurate with multi-image.\n     * @function\n     * @param {Number} imageZoom The image zoom\n     * target zoom.\n     * @returns {Number} viewportZoom The viewport zoom\n     */\n    imageToViewportZoom: function(imageZoom) {\n        if (this.viewer) {\n            var count = this.viewer.world.getItemCount();\n            if (count > 1) {\n                $.console.error('[Viewport.imageToViewportZoom] is not accurate ' +\n                    'with multi-image.');\n            } else if (count === 1) {\n                // It is better to use TiledImage.imageToViewportZoom\n                // because this._contentBoundsNoRotate can not be relied on\n                // with clipping.\n                var item = this.viewer.world.getItemAt(0);\n                return item.imageToViewportZoom(imageZoom);\n            }\n        }\n\n        var imageWidth = this._contentSizeNoRotate.x;\n        var containerWidth = this._containerInnerSize.x;\n        var scale = this._contentBoundsNoRotate.width;\n        var viewportToImageZoomRatio = (imageWidth / containerWidth) / scale;\n        return imageZoom * viewportToImageZoomRatio;\n    }\n};\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - TiledImage\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n/**\n * You shouldn't have to create a TiledImage directly; use {@link OpenSeadragon.Viewer#open}\n * or {@link OpenSeadragon.Viewer#addTiledImage} instead.\n * @class TiledImage\n * @memberof OpenSeadragon\n * @extends OpenSeadragon.EventSource\n * @classdesc Handles rendering of tiles for an {@link OpenSeadragon.Viewer}.\n * A new instance is created for each TileSource opened.\n * @param {Object} options - Configuration for this TiledImage.\n * @param {OpenSeadragon.TileSource} options.source - The TileSource that defines this TiledImage.\n * @param {OpenSeadragon.Viewer} options.viewer - The Viewer that owns this TiledImage.\n * @param {OpenSeadragon.TileCache} options.tileCache - The TileCache for this TiledImage to use.\n * @param {OpenSeadragon.Drawer} options.drawer - The Drawer for this TiledImage to draw onto.\n * @param {OpenSeadragon.ImageLoader} options.imageLoader - The ImageLoader for this TiledImage to use.\n * @param {Number} [options.x=0] - Left position, in viewport coordinates.\n * @param {Number} [options.y=0] - Top position, in viewport coordinates.\n * @param {Number} [options.width=1] - Width, in viewport coordinates.\n * @param {Number} [options.height] - Height, in viewport coordinates.\n * @param {OpenSeadragon.Rect} [options.fitBounds] The bounds in viewport coordinates\n * to fit the image into. If specified, x, y, width and height get ignored.\n * @param {OpenSeadragon.Placement} [options.fitBoundsPlacement=OpenSeadragon.Placement.CENTER]\n * How to anchor the image in the bounds if options.fitBounds is set.\n * @param {OpenSeadragon.Rect} [options.clip] - An area, in image pixels, to clip to\n * (portions of the image outside of this area will not be visible). Only works on\n * browsers that support the HTML5 canvas.\n * @param {Number} [options.springStiffness] - See {@link OpenSeadragon.Options}.\n * @param {Boolean} [options.animationTime] - See {@link OpenSeadragon.Options}.\n * @param {Number} [options.minZoomImageRatio] - See {@link OpenSeadragon.Options}.\n * @param {Boolean} [options.wrapHorizontal] - See {@link OpenSeadragon.Options}.\n * @param {Boolean} [options.wrapVertical] - See {@link OpenSeadragon.Options}.\n * @param {Boolean} [options.immediateRender] - See {@link OpenSeadragon.Options}.\n * @param {Number} [options.blendTime] - See {@link OpenSeadragon.Options}.\n * @param {Boolean} [options.alwaysBlend] - See {@link OpenSeadragon.Options}.\n * @param {Number} [options.minPixelRatio] - See {@link OpenSeadragon.Options}.\n * @param {Number} [options.smoothTileEdgesMinZoom] - See {@link OpenSeadragon.Options}.\n * @param {Boolean} [options.iOSDevice] - See {@link OpenSeadragon.Options}.\n * @param {Number} [options.opacity=1] - Opacity the tiled image should be drawn at.\n * @param {String} [options.compositeOperation] - How the image is composited onto other images; see compositeOperation in {@link OpenSeadragon.Options} for possible values.\n * @param {Boolean} [options.debugMode] - See {@link OpenSeadragon.Options}.\n * @param {String|CanvasGradient|CanvasPattern|Function} [options.placeholderFillStyle] - See {@link OpenSeadragon.Options}.\n * @param {String|Boolean} [options.crossOriginPolicy] - See {@link OpenSeadragon.Options}.\n */\n$.TiledImage = function( options ) {\n    var _this = this;\n\n    $.console.assert( options.tileCache, \"[TiledImage] options.tileCache is required\" );\n    $.console.assert( options.drawer, \"[TiledImage] options.drawer is required\" );\n    $.console.assert( options.viewer, \"[TiledImage] options.viewer is required\" );\n    $.console.assert( options.imageLoader, \"[TiledImage] options.imageLoader is required\" );\n    $.console.assert( options.source, \"[TiledImage] options.source is required\" );\n    $.console.assert(!options.clip || options.clip instanceof $.Rect,\n        \"[TiledImage] options.clip must be an OpenSeadragon.Rect if present\");\n\n    $.EventSource.call( this );\n\n    this._tileCache = options.tileCache;\n    delete options.tileCache;\n\n    this._drawer = options.drawer;\n    delete options.drawer;\n\n    this._imageLoader = options.imageLoader;\n    delete options.imageLoader;\n\n    if (options.clip instanceof $.Rect) {\n        this._clip = options.clip.clone();\n    }\n\n    delete options.clip;\n\n    var x = options.x || 0;\n    delete options.x;\n    var y = options.y || 0;\n    delete options.y;\n\n    // Ratio of zoomable image height to width.\n    this.normHeight = options.source.dimensions.y / options.source.dimensions.x;\n    this.contentAspectX = options.source.dimensions.x / options.source.dimensions.y;\n\n    var scale = 1;\n    if ( options.width ) {\n        scale = options.width;\n        delete options.width;\n\n        if ( options.height ) {\n            $.console.error( \"specifying both width and height to a tiledImage is not supported\" );\n            delete options.height;\n        }\n    } else if ( options.height ) {\n        scale = options.height / this.normHeight;\n        delete options.height;\n    }\n\n    var fitBounds = options.fitBounds;\n    delete options.fitBounds;\n    var fitBoundsPlacement = options.fitBoundsPlacement || OpenSeadragon.Placement.CENTER;\n    delete options.fitBoundsPlacement;\n\n    $.extend( true, this, {\n\n        //internal state properties\n        viewer:         null,\n        tilesMatrix:    {},    // A '3d' dictionary [level][x][y] --> Tile.\n        coverage:       {},    // A '3d' dictionary [level][x][y] --> Boolean.\n        lastDrawn:      [],    // An unordered list of Tiles drawn last frame.\n        lastResetTime:  0,     // Last time for which the tiledImage was reset.\n        _midDraw:       false, // Is the tiledImage currently updating the viewport?\n        _needsDraw:     true,  // Does the tiledImage need to update the viewport again?\n        _hasOpaqueTile: false,  // Do we have even one fully opaque tile?\n        //configurable settings\n        springStiffness:        $.DEFAULT_SETTINGS.springStiffness,\n        animationTime:          $.DEFAULT_SETTINGS.animationTime,\n        minZoomImageRatio:      $.DEFAULT_SETTINGS.minZoomImageRatio,\n        wrapHorizontal:         $.DEFAULT_SETTINGS.wrapHorizontal,\n        wrapVertical:           $.DEFAULT_SETTINGS.wrapVertical,\n        immediateRender:        $.DEFAULT_SETTINGS.immediateRender,\n        blendTime:              $.DEFAULT_SETTINGS.blendTime,\n        alwaysBlend:            $.DEFAULT_SETTINGS.alwaysBlend,\n        minPixelRatio:          $.DEFAULT_SETTINGS.minPixelRatio,\n        smoothTileEdgesMinZoom: $.DEFAULT_SETTINGS.smoothTileEdgesMinZoom,\n        iOSDevice:              $.DEFAULT_SETTINGS.iOSDevice,\n        debugMode:              $.DEFAULT_SETTINGS.debugMode,\n        crossOriginPolicy:      $.DEFAULT_SETTINGS.crossOriginPolicy,\n        placeholderFillStyle:   $.DEFAULT_SETTINGS.placeholderFillStyle,\n        opacity:                $.DEFAULT_SETTINGS.opacity,\n        compositeOperation:     $.DEFAULT_SETTINGS.compositeOperation\n\n    }, options );\n\n    this._xSpring = new $.Spring({\n        initial: x,\n        springStiffness: this.springStiffness,\n        animationTime: this.animationTime\n    });\n\n    this._ySpring = new $.Spring({\n        initial: y,\n        springStiffness: this.springStiffness,\n        animationTime: this.animationTime\n    });\n\n    this._scaleSpring = new $.Spring({\n        initial: scale,\n        springStiffness: this.springStiffness,\n        animationTime: this.animationTime\n    });\n\n    this._updateForScale();\n\n    if (fitBounds) {\n        this.fitBounds(fitBounds, fitBoundsPlacement, true);\n    }\n\n    // We need a callback to give image manipulation a chance to happen\n    this._drawingHandler = function(args) {\n      /**\n       * This event is fired just before the tile is drawn giving the application a chance to alter the image.\n       *\n       * NOTE: This event is only fired when the drawer is using a &lt;canvas&gt;.\n       *\n       * @event tile-drawing\n       * @memberof OpenSeadragon.Viewer\n       * @type {object}\n       * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n       * @property {OpenSeadragon.Tile} tile - The Tile being drawn.\n       * @property {OpenSeadragon.TiledImage} tiledImage - Which TiledImage is being drawn.\n       * @property {OpenSeadragon.Tile} context - The HTML canvas context being drawn into.\n       * @property {OpenSeadragon.Tile} rendered - The HTML canvas context containing the tile imagery.\n       * @property {?Object} userData - Arbitrary subscriber-defined object.\n       */\n        _this.viewer.raiseEvent('tile-drawing', $.extend({\n            tiledImage: _this\n        }, args));\n    };\n};\n\n$.extend($.TiledImage.prototype, $.EventSource.prototype, /** @lends OpenSeadragon.TiledImage.prototype */{\n    /**\n     * @returns {Boolean} Whether the TiledImage needs to be drawn.\n     */\n    needsDraw: function() {\n        return this._needsDraw;\n    },\n\n    /**\n     * Clears all tiles and triggers an update on the next call to\n     * {@link OpenSeadragon.TiledImage#update}.\n     */\n    reset: function() {\n        this._tileCache.clearTilesFor(this);\n        this.lastResetTime = $.now();\n        this._needsDraw = true;\n    },\n\n    /**\n     * Updates the TiledImage's bounds, animating if needed.\n     * @returns {Boolean} Whether the TiledImage animated.\n     */\n    update: function() {\n        var oldX = this._xSpring.current.value;\n        var oldY = this._ySpring.current.value;\n        var oldScale = this._scaleSpring.current.value;\n\n        this._xSpring.update();\n        this._ySpring.update();\n        this._scaleSpring.update();\n\n        if (this._xSpring.current.value !== oldX || this._ySpring.current.value !== oldY ||\n                this._scaleSpring.current.value !== oldScale) {\n            this._updateForScale();\n            this._needsDraw = true;\n            return true;\n        }\n\n        return false;\n    },\n\n    /**\n     * Draws the TiledImage to its Drawer.\n     */\n    draw: function() {\n        if (this.opacity !== 0) {\n            this._midDraw = true;\n            updateViewport(this);\n            this._midDraw = false;\n        }\n    },\n\n    /**\n     * Destroy the TiledImage (unload current loaded tiles).\n     */\n    destroy: function() {\n        this.reset();\n    },\n\n    /**\n     * @returns {OpenSeadragon.Rect} This TiledImage's bounds in viewport coordinates.\n     * @param {Boolean} [current=false] - Pass true for the current location; false for target location.\n     */\n    getBounds: function(current) {\n        if (current) {\n            return new $.Rect( this._xSpring.current.value, this._ySpring.current.value,\n                this._worldWidthCurrent, this._worldHeightCurrent );\n        }\n\n        return new $.Rect( this._xSpring.target.value, this._ySpring.target.value,\n            this._worldWidthTarget, this._worldHeightTarget );\n    },\n\n    // deprecated\n    getWorldBounds: function() {\n        $.console.error('[TiledImage.getWorldBounds] is deprecated; use TiledImage.getBounds instead');\n        return this.getBounds();\n    },\n\n    /**\n     * Get the bounds of the displayed part of the tiled image.\n     * @param {Boolean} [current=false] Pass true for the current location,\n     * false for the target location.\n     * @returns {$.Rect} The clipped bounds in viewport coordinates.\n     */\n    getClippedBounds: function(current) {\n        var bounds = this.getBounds(current);\n        if (this._clip) {\n            var ratio = this._worldWidthCurrent / this.source.dimensions.x;\n            var clip = this._clip.times(ratio);\n            bounds = new $.Rect(\n                bounds.x + clip.x,\n                bounds.y + clip.y,\n                clip.width,\n                clip.height);\n        }\n        return bounds;\n    },\n\n    /**\n     * @returns {OpenSeadragon.Point} This TiledImage's content size, in original pixels.\n     */\n    getContentSize: function() {\n        return new $.Point(this.source.dimensions.x, this.source.dimensions.y);\n    },\n\n    // private\n    _viewportToImageDelta: function( viewerX, viewerY, current ) {\n        var scale = (current ? this._scaleSpring.current.value : this._scaleSpring.target.value);\n        return new $.Point(viewerX * (this.source.dimensions.x / scale),\n            viewerY * ((this.source.dimensions.y * this.contentAspectX) / scale));\n    },\n\n    /**\n     * Translates from OpenSeadragon viewer coordinate system to image coordinate system.\n     * This method can be called either by passing X,Y coordinates or an {@link OpenSeadragon.Point}.\n     * @param {Number|OpenSeadragon.Point} viewerX - The X coordinate or point in viewport coordinate system.\n     * @param {Number} [viewerY] - The Y coordinate in viewport coordinate system.\n     * @param {Boolean} [current=false] - Pass true to use the current location; false for target location.\n     * @return {OpenSeadragon.Point} A point representing the coordinates in the image.\n     */\n    viewportToImageCoordinates: function( viewerX, viewerY, current ) {\n        if (viewerX instanceof $.Point) {\n            //they passed a point instead of individual components\n            current = viewerY;\n            viewerY = viewerX.y;\n            viewerX = viewerX.x;\n        }\n\n        if (current) {\n            return this._viewportToImageDelta(viewerX - this._xSpring.current.value,\n                viewerY - this._ySpring.current.value);\n        }\n\n        return this._viewportToImageDelta(viewerX - this._xSpring.target.value,\n            viewerY - this._ySpring.target.value);\n    },\n\n    // private\n    _imageToViewportDelta: function( imageX, imageY, current ) {\n        var scale = (current ? this._scaleSpring.current.value : this._scaleSpring.target.value);\n        return new $.Point((imageX / this.source.dimensions.x) * scale,\n            (imageY / this.source.dimensions.y / this.contentAspectX) * scale);\n    },\n\n    /**\n     * Translates from image coordinate system to OpenSeadragon viewer coordinate system\n     * This method can be called either by passing X,Y coordinates or an {@link OpenSeadragon.Point}.\n     * @param {Number|OpenSeadragon.Point} imageX - The X coordinate or point in image coordinate system.\n     * @param {Number} [imageY] - The Y coordinate in image coordinate system.\n     * @param {Boolean} [current=false] - Pass true to use the current location; false for target location.\n     * @return {OpenSeadragon.Point} A point representing the coordinates in the viewport.\n     */\n    imageToViewportCoordinates: function( imageX, imageY, current ) {\n        if (imageX instanceof $.Point) {\n            //they passed a point instead of individual components\n            current = imageY;\n            imageY = imageX.y;\n            imageX = imageX.x;\n        }\n\n        var point = this._imageToViewportDelta(imageX, imageY);\n        if (current) {\n            point.x += this._xSpring.current.value;\n            point.y += this._ySpring.current.value;\n        } else {\n            point.x += this._xSpring.target.value;\n            point.y += this._ySpring.target.value;\n        }\n\n        return point;\n    },\n\n    /**\n     * Translates from a rectangle which describes a portion of the image in\n     * pixel coordinates to OpenSeadragon viewport rectangle coordinates.\n     * This method can be called either by passing X,Y,width,height or an {@link OpenSeadragon.Rect}.\n     * @param {Number|OpenSeadragon.Rect} imageX - The left coordinate or rectangle in image coordinate system.\n     * @param {Number} [imageY] - The top coordinate in image coordinate system.\n     * @param {Number} [pixelWidth] - The width in pixel of the rectangle.\n     * @param {Number} [pixelHeight] - The height in pixel of the rectangle.\n     * @param {Boolean} [current=false] - Pass true to use the current location; false for target location.\n     * @return {OpenSeadragon.Rect} A rect representing the coordinates in the viewport.\n     */\n    imageToViewportRectangle: function( imageX, imageY, pixelWidth, pixelHeight, current ) {\n        var rect = imageX;\n        if (rect instanceof $.Rect) {\n            //they passed a rect instead of individual components\n            current = imageY;\n        } else {\n            rect = new $.Rect(imageX, imageY, pixelWidth, pixelHeight);\n        }\n\n        var coordA = this.imageToViewportCoordinates(rect.getTopLeft(), current);\n        var coordB = this._imageToViewportDelta(rect.width, rect.height, current);\n\n        return new $.Rect(\n            coordA.x,\n            coordA.y,\n            coordB.x,\n            coordB.y,\n            rect.degrees\n        );\n    },\n\n    /**\n     * Translates from a rectangle which describes a portion of\n     * the viewport in point coordinates to image rectangle coordinates.\n     * This method can be called either by passing X,Y,width,height or an {@link OpenSeadragon.Rect}.\n     * @param {Number|OpenSeadragon.Rect} viewerX - The left coordinate or rectangle in viewport coordinate system.\n     * @param {Number} [viewerY] - The top coordinate in viewport coordinate system.\n     * @param {Number} [pointWidth] - The width in viewport coordinate system.\n     * @param {Number} [pointHeight] - The height in viewport coordinate system.\n     * @param {Boolean} [current=false] - Pass true to use the current location; false for target location.\n     * @return {OpenSeadragon.Rect} A rect representing the coordinates in the image.\n     */\n    viewportToImageRectangle: function( viewerX, viewerY, pointWidth, pointHeight, current ) {\n        var rect = viewerX;\n        if (viewerX instanceof $.Rect) {\n            //they passed a rect instead of individual components\n            current = viewerY;\n        } else {\n            rect = new $.Rect(viewerX, viewerY, pointWidth, pointHeight);\n        }\n\n        var coordA = this.viewportToImageCoordinates(rect.getTopLeft(), current);\n        var coordB = this._viewportToImageDelta(rect.width, rect.height, current);\n\n        return new $.Rect(\n            coordA.x,\n            coordA.y,\n            coordB.x,\n            coordB.y,\n            rect.degrees\n        );\n    },\n\n    /**\n     * Convert pixel coordinates relative to the viewer element to image\n     * coordinates.\n     * @param {OpenSeadragon.Point} pixel\n     * @returns {OpenSeadragon.Point}\n     */\n    viewerElementToImageCoordinates: function( pixel ) {\n        var point = this.viewport.pointFromPixel( pixel, true );\n        return this.viewportToImageCoordinates( point );\n    },\n\n    /**\n     * Convert pixel coordinates relative to the image to\n     * viewer element coordinates.\n     * @param {OpenSeadragon.Point} pixel\n     * @returns {OpenSeadragon.Point}\n     */\n    imageToViewerElementCoordinates: function( pixel ) {\n        var point = this.imageToViewportCoordinates( pixel );\n        return this.viewport.pixelFromPoint( point, true );\n    },\n\n    /**\n     * Convert pixel coordinates relative to the window to image coordinates.\n     * @param {OpenSeadragon.Point} pixel\n     * @returns {OpenSeadragon.Point}\n     */\n    windowToImageCoordinates: function( pixel ) {\n        var viewerCoordinates = pixel.minus(\n                OpenSeadragon.getElementPosition( this.viewer.element ));\n        return this.viewerElementToImageCoordinates( viewerCoordinates );\n    },\n\n    /**\n     * Convert image coordinates to pixel coordinates relative to the window.\n     * @param {OpenSeadragon.Point} pixel\n     * @returns {OpenSeadragon.Point}\n     */\n    imageToWindowCoordinates: function( pixel ) {\n        var viewerCoordinates = this.imageToViewerElementCoordinates( pixel );\n        return viewerCoordinates.plus(\n                OpenSeadragon.getElementPosition( this.viewer.element ));\n    },\n\n    /**\n     * Convert a viewport zoom to an image zoom.\n     * Image zoom: ratio of the original image size to displayed image size.\n     * 1 means original image size, 0.5 half size...\n     * Viewport zoom: ratio of the displayed image's width to viewport's width.\n     * 1 means identical width, 2 means image's width is twice the viewport's width...\n     * @function\n     * @param {Number} viewportZoom The viewport zoom\n     * @returns {Number} imageZoom The image zoom\n     */\n    viewportToImageZoom: function( viewportZoom ) {\n        var ratio = this._scaleSpring.current.value *\n                this.viewport._containerInnerSize.x / this.source.dimensions.x;\n        return ratio * viewportZoom ;\n    },\n\n    /**\n     * Convert an image zoom to a viewport zoom.\n     * Image zoom: ratio of the original image size to displayed image size.\n     * 1 means original image size, 0.5 half size...\n     * Viewport zoom: ratio of the displayed image's width to viewport's width.\n     * 1 means identical width, 2 means image's width is twice the viewport's width...\n     * Note: not accurate with multi-image.\n     * @function\n     * @param {Number} imageZoom The image zoom\n     * @returns {Number} viewportZoom The viewport zoom\n     */\n    imageToViewportZoom: function( imageZoom ) {\n        var ratio = this._scaleSpring.current.value *\n                this.viewport._containerInnerSize.x / this.source.dimensions.x;\n        return imageZoom / ratio;\n    },\n\n    /**\n     * Sets the TiledImage's position in the world.\n     * @param {OpenSeadragon.Point} position - The new position, in viewport coordinates.\n     * @param {Boolean} [immediately=false] - Whether to animate to the new position or snap immediately.\n     * @fires OpenSeadragon.TiledImage.event:bounds-change\n     */\n    setPosition: function(position, immediately) {\n        var sameTarget = (this._xSpring.target.value === position.x &&\n            this._ySpring.target.value === position.y);\n\n        if (immediately) {\n            if (sameTarget && this._xSpring.current.value === position.x &&\n                    this._ySpring.current.value === position.y) {\n                return;\n            }\n\n            this._xSpring.resetTo(position.x);\n            this._ySpring.resetTo(position.y);\n            this._needsDraw = true;\n        } else {\n            if (sameTarget) {\n                return;\n            }\n\n            this._xSpring.springTo(position.x);\n            this._ySpring.springTo(position.y);\n            this._needsDraw = true;\n        }\n\n        if (!sameTarget) {\n            this._raiseBoundsChange();\n        }\n    },\n\n    /**\n     * Sets the TiledImage's width in the world, adjusting the height to match based on aspect ratio.\n     * @param {Number} width - The new width, in viewport coordinates.\n     * @param {Boolean} [immediately=false] - Whether to animate to the new size or snap immediately.\n     * @fires OpenSeadragon.TiledImage.event:bounds-change\n     */\n    setWidth: function(width, immediately) {\n        this._setScale(width, immediately);\n    },\n\n    /**\n     * Sets the TiledImage's height in the world, adjusting the width to match based on aspect ratio.\n     * @param {Number} height - The new height, in viewport coordinates.\n     * @param {Boolean} [immediately=false] - Whether to animate to the new size or snap immediately.\n     * @fires OpenSeadragon.TiledImage.event:bounds-change\n     */\n    setHeight: function(height, immediately) {\n        this._setScale(height / this.normHeight, immediately);\n    },\n\n    /**\n     * Positions and scales the TiledImage to fit in the specified bounds.\n     * Note: this method fires OpenSeadragon.TiledImage.event:bounds-change\n     * twice\n     * @param {OpenSeadragon.Rect} bounds The bounds to fit the image into.\n     * @param {OpenSeadragon.Placement} [anchor=OpenSeadragon.Placement.CENTER]\n     * How to anchor the image in the bounds.\n     * @param {Boolean} [immediately=false] Whether to animate to the new size\n     * or snap immediately.\n     * @fires OpenSeadragon.TiledImage.event:bounds-change\n     */\n    fitBounds: function(bounds, anchor, immediately) {\n        anchor = anchor || $.Placement.CENTER;\n        var anchorProperties = $.Placement.properties[anchor];\n        var aspectRatio = this.contentAspectX;\n        var xOffset = 0;\n        var yOffset = 0;\n        var displayedWidthRatio = 1;\n        var displayedHeightRatio = 1;\n        if (this._clip) {\n            aspectRatio = this._clip.getAspectRatio();\n            displayedWidthRatio = this._clip.width / this.source.dimensions.x;\n            displayedHeightRatio = this._clip.height / this.source.dimensions.y;\n            if (bounds.getAspectRatio() > aspectRatio) {\n                xOffset = this._clip.x / this._clip.height * bounds.height;\n                yOffset = this._clip.y / this._clip.height * bounds.height;\n            } else {\n                xOffset = this._clip.x / this._clip.width * bounds.width;\n                yOffset = this._clip.y / this._clip.width * bounds.width;\n            }\n        }\n\n        if (bounds.getAspectRatio() > aspectRatio) {\n            // We will have margins on the X axis\n            var height = bounds.height / displayedHeightRatio;\n            var marginLeft = 0;\n            if (anchorProperties.isHorizontallyCentered) {\n                marginLeft = (bounds.width - bounds.height * aspectRatio) / 2;\n            } else if (anchorProperties.isRight) {\n                marginLeft = bounds.width - bounds.height * aspectRatio;\n            }\n            this.setPosition(\n                new $.Point(bounds.x - xOffset + marginLeft, bounds.y - yOffset),\n                immediately);\n            this.setHeight(height, immediately);\n        } else {\n            // We will have margins on the Y axis\n            var width = bounds.width / displayedWidthRatio;\n            var marginTop = 0;\n            if (anchorProperties.isVerticallyCentered) {\n                marginTop = (bounds.height - bounds.width / aspectRatio) / 2;\n            } else if (anchorProperties.isBottom) {\n                marginTop = bounds.height - bounds.width / aspectRatio;\n            }\n            this.setPosition(\n                new $.Point(bounds.x - xOffset, bounds.y - yOffset + marginTop),\n                immediately);\n            this.setWidth(width, immediately);\n        }\n    },\n\n    /**\n     * @returns {OpenSeadragon.Rect|null} The TiledImage's current clip rectangle,\n     * in image pixels, or null if none.\n     */\n    getClip: function() {\n        if (this._clip) {\n            return this._clip.clone();\n        }\n\n        return null;\n    },\n\n    /**\n     * @param {OpenSeadragon.Rect|null} newClip - An area, in image pixels, to clip to\n     * (portions of the image outside of this area will not be visible). Only works on\n     * browsers that support the HTML5 canvas.\n     */\n    setClip: function(newClip) {\n        $.console.assert(!newClip || newClip instanceof $.Rect,\n            \"[TiledImage.setClip] newClip must be an OpenSeadragon.Rect or null\");\n\n        if (newClip instanceof $.Rect) {\n            this._clip = newClip.clone();\n        } else {\n            this._clip = null;\n        }\n\n        this._needsDraw = true;\n    },\n\n    /**\n     * @returns {Number} The TiledImage's current opacity.\n     */\n    getOpacity: function() {\n        return this.opacity;\n    },\n\n    /**\n     * @param {Number} opacity Opacity the tiled image should be drawn at.\n     */\n    setOpacity: function(opacity) {\n        this.opacity = opacity;\n        this._needsDraw = true;\n    },\n\n    /**\n     * @returns {String} The TiledImage's current compositeOperation.\n     */\n    getCompositeOperation: function() {\n        return this.compositeOperation;\n    },\n\n    /**\n     * @param {String} compositeOperation the tiled image should be drawn with this globalCompositeOperation.\n     */\n    setCompositeOperation: function(compositeOperation) {\n        this.compositeOperation = compositeOperation;\n        this._needsDraw = true;\n    },\n\n    // private\n    _setScale: function(scale, immediately) {\n        var sameTarget = (this._scaleSpring.target.value === scale);\n        if (immediately) {\n            if (sameTarget && this._scaleSpring.current.value === scale) {\n                return;\n            }\n\n            this._scaleSpring.resetTo(scale);\n            this._updateForScale();\n            this._needsDraw = true;\n        } else {\n            if (sameTarget) {\n                return;\n            }\n\n            this._scaleSpring.springTo(scale);\n            this._updateForScale();\n            this._needsDraw = true;\n        }\n\n        if (!sameTarget) {\n            this._raiseBoundsChange();\n        }\n    },\n\n    // private\n    _updateForScale: function() {\n        this._worldWidthTarget = this._scaleSpring.target.value;\n        this._worldHeightTarget = this.normHeight * this._scaleSpring.target.value;\n        this._worldWidthCurrent = this._scaleSpring.current.value;\n        this._worldHeightCurrent = this.normHeight * this._scaleSpring.current.value;\n    },\n\n    // private\n    _raiseBoundsChange: function() {\n        /**\n         * Raised when the TiledImage's bounds are changed.\n         * Note that this event is triggered only when the animation target is changed;\n         * not for every frame of animation.\n         * @event bounds-change\n         * @memberOf OpenSeadragon.TiledImage\n         * @type {object}\n         * @property {OpenSeadragon.World} eventSource - A reference to the TiledImage which raised the event.\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        this.raiseEvent('bounds-change');\n    },\n\n    // private\n    _isBottomItem: function() {\n        return this.viewer.world.getItemAt(0) === this;\n    }\n});\n\n/**\n * @private\n * @inner\n * Pretty much every other line in this needs to be documented so it's clear\n * how each piece of this routine contributes to the drawing process.  That's\n * why there are so many TODO's inside this function.\n */\nfunction updateViewport( tiledImage ) {\n\n    tiledImage._needsDraw = false;\n\n    var tile,\n        level,\n        best            = null,\n        haveDrawn       = false,\n        currentTime     = $.now(),\n        viewportBounds  = tiledImage.viewport.getBoundsWithMargins( true ),\n        zeroRatioC      = tiledImage.viewport.deltaPixelsFromPointsNoRotate(\n            tiledImage.source.getPixelRatio( 0 ),\n            true\n        ).x * tiledImage._scaleSpring.current.value,\n        lowestLevel     = Math.max(\n            tiledImage.source.minLevel,\n            Math.floor(\n                Math.log( tiledImage.minZoomImageRatio ) /\n                Math.log( 2 )\n            )\n        ),\n        highestLevel    = Math.min(\n            Math.abs(tiledImage.source.maxLevel),\n            Math.abs(Math.floor(\n                Math.log( zeroRatioC / tiledImage.minPixelRatio ) /\n                Math.log( 2 )\n            ))\n        ),\n        renderPixelRatioC,\n        renderPixelRatioT,\n        zeroRatioT,\n        optimalRatio,\n        levelOpacity,\n        levelVisibility;\n\n    // Reset tile's internal drawn state\n    while (tiledImage.lastDrawn.length > 0) {\n        tile = tiledImage.lastDrawn.pop();\n        tile.beingDrawn = false;\n    }\n\n    if (!tiledImage.wrapHorizontal && !tiledImage.wrapVertical) {\n        var tiledImageBounds = tiledImage.getClippedBounds(true);\n        var intersection = viewportBounds.intersection(tiledImageBounds);\n        if (intersection === null) {\n            return;\n        }\n        viewportBounds = intersection;\n    }\n    viewportBounds = viewportBounds.getBoundingBox();\n    viewportBounds.x -= tiledImage._xSpring.current.value;\n    viewportBounds.y -= tiledImage._ySpring.current.value;\n\n    var viewportTL = viewportBounds.getTopLeft();\n    var viewportBR = viewportBounds.getBottomRight();\n\n    //Don't draw if completely outside of the viewport\n    if  ( !tiledImage.wrapHorizontal && (viewportBR.x < 0 || viewportTL.x > tiledImage._worldWidthCurrent ) ) {\n        return;\n    }\n\n    if ( !tiledImage.wrapVertical && ( viewportBR.y < 0 || viewportTL.y > tiledImage._worldHeightCurrent ) ) {\n        return;\n    }\n\n    // Calculate viewport rect / bounds\n    if ( !tiledImage.wrapHorizontal ) {\n        viewportTL.x = Math.max( viewportTL.x, 0 );\n        viewportBR.x = Math.min( viewportBR.x, tiledImage._worldWidthCurrent );\n    }\n\n    if ( !tiledImage.wrapVertical ) {\n        viewportTL.y = Math.max( viewportTL.y, 0 );\n        viewportBR.y = Math.min( viewportBR.y, tiledImage._worldHeightCurrent );\n    }\n\n    // Calculations for the interval of levels to draw\n    // (above in initial var statement)\n    // can return invalid intervals; fix that here if necessary\n    lowestLevel = Math.min( lowestLevel, highestLevel );\n\n    // Update any level that will be drawn\n    var drawLevel; // FIXME: drawLevel should have a more explanatory name\n    for ( level = highestLevel; level >= lowestLevel; level-- ) {\n        drawLevel = false;\n\n        //Avoid calculations for draw if we have already drawn this\n        renderPixelRatioC = tiledImage.viewport.deltaPixelsFromPointsNoRotate(\n            tiledImage.source.getPixelRatio( level ),\n            true\n        ).x * tiledImage._scaleSpring.current.value;\n\n        if ( ( !haveDrawn && renderPixelRatioC >= tiledImage.minPixelRatio ) ||\n             ( level == lowestLevel ) ) {\n            drawLevel = true;\n            haveDrawn = true;\n        } else if ( !haveDrawn ) {\n            continue;\n        }\n\n        //Perform calculations for draw if we haven't drawn this\n        renderPixelRatioT = tiledImage.viewport.deltaPixelsFromPointsNoRotate(\n            tiledImage.source.getPixelRatio( level ),\n            false\n        ).x * tiledImage._scaleSpring.current.value;\n\n        zeroRatioT      = tiledImage.viewport.deltaPixelsFromPointsNoRotate(\n            tiledImage.source.getPixelRatio(\n                Math.max(\n                    tiledImage.source.getClosestLevel( tiledImage.viewport.containerSize ) - 1,\n                    0\n                )\n            ),\n            false\n        ).x * tiledImage._scaleSpring.current.value;\n\n        optimalRatio    = tiledImage.immediateRender ?\n            1 :\n            zeroRatioT;\n\n        levelOpacity    = Math.min( 1, ( renderPixelRatioC - 0.5 ) / 0.5 );\n\n        levelVisibility = optimalRatio / Math.abs(\n            optimalRatio - renderPixelRatioT\n        );\n\n        // Update the level and keep track of 'best' tile to load\n        best = updateLevel(\n            tiledImage,\n            haveDrawn,\n            drawLevel,\n            level,\n            levelOpacity,\n            levelVisibility,\n            viewportTL,\n            viewportBR,\n            currentTime,\n            best\n        );\n\n        // Stop the loop if lower-res tiles would all be covered by\n        // already drawn tiles\n        if (  providesCoverage( tiledImage.coverage, level ) ) {\n            break;\n        }\n    }\n\n    // Perform the actual drawing\n    drawTiles( tiledImage, tiledImage.lastDrawn );\n\n    // Load the new 'best' tile\n    if (best && !best.context2D) {\n        loadTile( tiledImage, best, currentTime );\n    }\n\n}\n\n\nfunction updateLevel( tiledImage, haveDrawn, drawLevel, level, levelOpacity, levelVisibility, viewportTL, viewportBR, currentTime, best ){\n\n    var x, y,\n        tileTL,\n        tileBR,\n        numberOfTiles,\n        viewportCenter  = tiledImage.viewport.pixelFromPoint( tiledImage.viewport.getCenter() );\n\n\n    if( tiledImage.viewer ){\n        /**\n         * <em>- Needs documentation -</em>\n         *\n         * @event update-level\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n         * @property {OpenSeadragon.TiledImage} tiledImage - Which TiledImage is being drawn.\n         * @property {Object} havedrawn\n         * @property {Object} level\n         * @property {Object} opacity\n         * @property {Object} visibility\n         * @property {Object} topleft\n         * @property {Object} bottomright\n         * @property {Object} currenttime\n         * @property {Object} best\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        tiledImage.viewer.raiseEvent( 'update-level', {\n            tiledImage: tiledImage,\n            havedrawn: haveDrawn,\n            level: level,\n            opacity: levelOpacity,\n            visibility: levelVisibility,\n            topleft: viewportTL,\n            bottomright: viewportBR,\n            currenttime: currentTime,\n            best: best\n        });\n    }\n\n    //OK, a new drawing so do your calculations\n    tileTL    = tiledImage.source.getTileAtPoint( level, viewportTL.divide( tiledImage._scaleSpring.current.value ));\n    tileBR    = tiledImage.source.getTileAtPoint( level, viewportBR.divide( tiledImage._scaleSpring.current.value ));\n    numberOfTiles  = tiledImage.source.getNumTiles( level );\n\n    resetCoverage( tiledImage.coverage, level );\n\n    if ( !tiledImage.wrapHorizontal ) {\n        tileBR.x = Math.min( tileBR.x, numberOfTiles.x - 1 );\n    }\n    if ( !tiledImage.wrapVertical ) {\n        tileBR.y = Math.min( tileBR.y, numberOfTiles.y - 1 );\n    }\n\n    for ( x = tileTL.x; x <= tileBR.x; x++ ) {\n        for ( y = tileTL.y; y <= tileBR.y; y++ ) {\n\n            best = updateTile(\n                tiledImage,\n                drawLevel,\n                haveDrawn,\n                x, y,\n                level,\n                levelOpacity,\n                levelVisibility,\n                viewportCenter,\n                numberOfTiles,\n                currentTime,\n                best\n            );\n\n        }\n    }\n\n    return best;\n}\n\nfunction updateTile( tiledImage, drawLevel, haveDrawn, x, y, level, levelOpacity, levelVisibility, viewportCenter, numberOfTiles, currentTime, best){\n\n    var tile = getTile(\n            x, y,\n            level,\n            tiledImage.source,\n            tiledImage.tilesMatrix,\n            currentTime,\n            numberOfTiles,\n            tiledImage._worldWidthCurrent,\n            tiledImage._worldHeightCurrent\n        ),\n        drawTile = drawLevel;\n\n    if( tiledImage.viewer ){\n        /**\n         * <em>- Needs documentation -</em>\n         *\n         * @event update-tile\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n         * @property {OpenSeadragon.TiledImage} tiledImage - Which TiledImage is being drawn.\n         * @property {OpenSeadragon.Tile} tile\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        tiledImage.viewer.raiseEvent( 'update-tile', {\n            tiledImage: tiledImage,\n            tile: tile\n        });\n    }\n\n    setCoverage( tiledImage.coverage, level, x, y, false );\n\n    if ( !tile.exists ) {\n        return best;\n    }\n\n    if ( haveDrawn && !drawTile ) {\n        if ( isCovered( tiledImage.coverage, level, x, y ) ) {\n            setCoverage( tiledImage.coverage, level, x, y, true );\n        } else {\n            drawTile = true;\n        }\n    }\n\n    if ( !drawTile ) {\n        return best;\n    }\n\n    positionTile(\n        tile,\n        tiledImage.source.tileOverlap,\n        tiledImage.viewport,\n        viewportCenter,\n        levelVisibility,\n        tiledImage\n    );\n\n    if (!tile.loaded) {\n        if (tile.context2D) {\n            setTileLoaded(tiledImage, tile);\n        } else {\n            var imageRecord = tiledImage._tileCache.getImageRecord(tile.url);\n            if (imageRecord) {\n                var image = imageRecord.getImage();\n                setTileLoaded(tiledImage, tile, image);\n            }\n        }\n    }\n\n    if ( tile.loaded ) {\n        var needsDraw = blendTile(\n            tiledImage,\n            tile,\n            x, y,\n            level,\n            levelOpacity,\n            currentTime\n        );\n\n        if ( needsDraw ) {\n            tiledImage._needsDraw = true;\n        }\n    } else if ( tile.loading ) {\n        // the tile is already in the download queue\n        // thanks josh1093 for finally translating this typo\n    } else {\n        best = compareTiles( best, tile );\n    }\n\n    return best;\n}\n\nfunction getTile( x, y, level, tileSource, tilesMatrix, time, numTiles, worldWidth, worldHeight ) {\n    var xMod,\n        yMod,\n        bounds,\n        exists,\n        url,\n        context2D,\n        tile;\n\n    if ( !tilesMatrix[ level ] ) {\n        tilesMatrix[ level ] = {};\n    }\n    if ( !tilesMatrix[ level ][ x ] ) {\n        tilesMatrix[ level ][ x ] = {};\n    }\n\n    if ( !tilesMatrix[ level ][ x ][ y ] ) {\n        xMod    = ( numTiles.x + ( x % numTiles.x ) ) % numTiles.x;\n        yMod    = ( numTiles.y + ( y % numTiles.y ) ) % numTiles.y;\n        bounds  = tileSource.getTileBounds( level, xMod, yMod );\n        exists  = tileSource.tileExists( level, xMod, yMod );\n        url     = tileSource.getTileUrl( level, xMod, yMod );\n        context2D = tileSource.getContext2D ?\n            tileSource.getContext2D(level, xMod, yMod) : undefined;\n\n        bounds.x += ( x - xMod ) / numTiles.x;\n        bounds.y += (worldHeight / worldWidth) * (( y - yMod ) / numTiles.y);\n\n        tilesMatrix[ level ][ x ][ y ] = new $.Tile(\n            level,\n            x,\n            y,\n            bounds,\n            exists,\n            url,\n            context2D\n        );\n    }\n\n    tile = tilesMatrix[ level ][ x ][ y ];\n    tile.lastTouchTime = time;\n\n    return tile;\n}\n\nfunction loadTile( tiledImage, tile, time ) {\n    tile.loading = true;\n    tiledImage._imageLoader.addJob({\n        src: tile.url,\n        crossOriginPolicy: tiledImage.crossOriginPolicy,\n        callback: function( image, errorMsg ){\n            onTileLoad( tiledImage, tile, time, image, errorMsg );\n        },\n        abort: function() {\n            tile.loading = false;\n        }\n    });\n}\n\nfunction onTileLoad( tiledImage, tile, time, image, errorMsg ) {\n    if ( !image ) {\n        $.console.log( \"Tile %s failed to load: %s - error: %s\", tile, tile.url, errorMsg );\n        /**\n         * Triggered when a tile fails to load.\n         *\n         * @event tile-load-failed\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {OpenSeadragon.Tile} tile - The tile that failed to load.\n         * @property {OpenSeadragon.TiledImage} tiledImage - The tiled image the tile belongs to.\n         * @property {number} time - The time in milliseconds when the tile load began.\n         * @property {string} message - The error message.\n         */\n        tiledImage.viewer.raiseEvent(\"tile-load-failed\", {tile: tile, tiledImage: tiledImage, time: time, message: errorMsg});\n        tile.loading = false;\n        tile.exists = false;\n        return;\n    }\n\n    if ( time < tiledImage.lastResetTime ) {\n        $.console.log( \"Ignoring tile %s loaded before reset: %s\", tile, tile.url );\n        tile.loading = false;\n        return;\n    }\n\n    var finish = function() {\n        var cutoff = Math.ceil( Math.log(\n            tiledImage.source.getTileWidth(tile.level) ) / Math.log( 2 ) );\n        setTileLoaded(tiledImage, tile, image, cutoff);\n    };\n\n    // Check if we're mid-update; this can happen on IE8 because image load events for\n    // cached images happen immediately there\n    if ( !tiledImage._midDraw ) {\n        finish();\n    } else {\n        // Wait until after the update, in case caching unloads any tiles\n        window.setTimeout( finish, 1);\n    }\n}\n\nfunction setTileLoaded(tiledImage, tile, image, cutoff) {\n    var increment = 0;\n\n    function getCompletionCallback() {\n        increment++;\n        return completionCallback;\n    }\n\n    function completionCallback() {\n        increment--;\n        if (increment === 0) {\n            tile.loading = false;\n            tile.loaded = true;\n            if (!tile.context2D) {\n                tiledImage._tileCache.cacheTile({\n                    image: image,\n                    tile: tile,\n                    cutoff: cutoff,\n                    tiledImage: tiledImage\n                });\n            }\n            tiledImage._needsDraw = true;\n        }\n    }\n\n    /**\n     * Triggered when a tile has just been loaded in memory. That means that the\n     * image has been downloaded and can be modified before being drawn to the canvas.\n     *\n     * @event tile-loaded\n     * @memberof OpenSeadragon.Viewer\n     * @type {object}\n     * @property {Image} image - The image of the tile.\n     * @property {OpenSeadragon.TiledImage} tiledImage - The tiled image of the loaded tile.\n     * @property {OpenSeadragon.Tile} tile - The tile which has been loaded.\n     * @property {function} getCompletionCallback - A function giving a callback to call\n     * when the asynchronous processing of the image is done. The image will be\n     * marked as entirely loaded when the callback has been called once for each\n     * call to getCompletionCallback.\n     */\n    tiledImage.viewer.raiseEvent(\"tile-loaded\", {\n        tile: tile,\n        tiledImage: tiledImage,\n        image: image,\n        getCompletionCallback: getCompletionCallback\n    });\n    // In case the completion callback is never called, we at least force it once.\n    getCompletionCallback()();\n}\n\nfunction positionTile( tile, overlap, viewport, viewportCenter, levelVisibility, tiledImage ){\n    var boundsTL     = tile.bounds.getTopLeft();\n\n    boundsTL.x *= tiledImage._scaleSpring.current.value;\n    boundsTL.y *= tiledImage._scaleSpring.current.value;\n    boundsTL.x += tiledImage._xSpring.current.value;\n    boundsTL.y += tiledImage._ySpring.current.value;\n\n    var boundsSize   = tile.bounds.getSize();\n\n    boundsSize.x *= tiledImage._scaleSpring.current.value;\n    boundsSize.y *= tiledImage._scaleSpring.current.value;\n\n    var positionC    = viewport.pixelFromPointNoRotate(boundsTL, true),\n        positionT    = viewport.pixelFromPointNoRotate(boundsTL, false),\n        sizeC        = viewport.deltaPixelsFromPointsNoRotate(boundsSize, true),\n        sizeT        = viewport.deltaPixelsFromPointsNoRotate(boundsSize, false),\n        tileCenter   = positionT.plus( sizeT.divide( 2 ) ),\n        tileDistance = viewportCenter.distanceTo( tileCenter );\n\n    if ( !overlap ) {\n        sizeC = sizeC.plus( new $.Point( 1, 1 ) );\n    }\n\n    tile.position   = positionC;\n    tile.size       = sizeC;\n    tile.distance   = tileDistance;\n    tile.visibility = levelVisibility;\n}\n\n\nfunction blendTile( tiledImage, tile, x, y, level, levelOpacity, currentTime ){\n    var blendTimeMillis = 1000 * tiledImage.blendTime,\n        deltaTime,\n        opacity;\n\n    if ( !tile.blendStart ) {\n        tile.blendStart = currentTime;\n    }\n\n    deltaTime   = currentTime - tile.blendStart;\n    opacity     = blendTimeMillis ? Math.min( 1, deltaTime / ( blendTimeMillis ) ) : 1;\n\n    if ( tiledImage.alwaysBlend ) {\n        opacity *= levelOpacity;\n    }\n\n    tile.opacity = opacity;\n\n    tiledImage.lastDrawn.push( tile );\n\n    if ( opacity == 1 ) {\n        setCoverage( tiledImage.coverage, level, x, y, true );\n        tiledImage._hasOpaqueTile = true;\n    } else if ( deltaTime < blendTimeMillis ) {\n        return true;\n    }\n\n    return false;\n}\n\n/**\n * @private\n * @inner\n * Returns true if the given tile provides coverage to lower-level tiles of\n * lower resolution representing the same content. If neither x nor y is\n * given, returns true if the entire visible level provides coverage.\n *\n * Note that out-of-bounds tiles provide coverage in this sense, since\n * there's no content that they would need to cover. Tiles at non-existent\n * levels that are within the image bounds, however, do not.\n */\nfunction providesCoverage( coverage, level, x, y ) {\n    var rows,\n        cols,\n        i, j;\n\n    if ( !coverage[ level ] ) {\n        return false;\n    }\n\n    if ( x === undefined || y === undefined ) {\n        rows = coverage[ level ];\n        for ( i in rows ) {\n            if ( rows.hasOwnProperty( i ) ) {\n                cols = rows[ i ];\n                for ( j in cols ) {\n                    if ( cols.hasOwnProperty( j ) && !cols[ j ] ) {\n                        return false;\n                    }\n                }\n            }\n        }\n\n        return true;\n    }\n\n    return (\n        coverage[ level ][ x] === undefined ||\n        coverage[ level ][ x ][ y ] === undefined ||\n        coverage[ level ][ x ][ y ] === true\n    );\n}\n\n/**\n * @private\n * @inner\n * Returns true if the given tile is completely covered by higher-level\n * tiles of higher resolution representing the same content. If neither x\n * nor y is given, returns true if the entire visible level is covered.\n */\nfunction isCovered( coverage, level, x, y ) {\n    if ( x === undefined || y === undefined ) {\n        return providesCoverage( coverage, level + 1 );\n    } else {\n        return (\n             providesCoverage( coverage, level + 1, 2 * x, 2 * y ) &&\n             providesCoverage( coverage, level + 1, 2 * x, 2 * y + 1 ) &&\n             providesCoverage( coverage, level + 1, 2 * x + 1, 2 * y ) &&\n             providesCoverage( coverage, level + 1, 2 * x + 1, 2 * y + 1 )\n        );\n    }\n}\n\n/**\n * @private\n * @inner\n * Sets whether the given tile provides coverage or not.\n */\nfunction setCoverage( coverage, level, x, y, covers ) {\n    if ( !coverage[ level ] ) {\n        $.console.warn(\n            \"Setting coverage for a tile before its level's coverage has been reset: %s\",\n            level\n        );\n        return;\n    }\n\n    if ( !coverage[ level ][ x ] ) {\n        coverage[ level ][ x ] = {};\n    }\n\n    coverage[ level ][ x ][ y ] = covers;\n}\n\n/**\n * @private\n * @inner\n * Resets coverage information for the given level. This should be called\n * after every draw routine. Note that at the beginning of the next draw\n * routine, coverage for every visible tile should be explicitly set.\n */\nfunction resetCoverage( coverage, level ) {\n    coverage[ level ] = {};\n}\n\n/**\n * @private\n * @inner\n * Determines whether the 'last best' tile for the area is better than the\n * tile in question.\n */\nfunction compareTiles( previousBest, tile ) {\n    if ( !previousBest ) {\n        return tile;\n    }\n\n    if ( tile.visibility > previousBest.visibility ) {\n        return tile;\n    } else if ( tile.visibility == previousBest.visibility ) {\n        if ( tile.distance < previousBest.distance ) {\n            return tile;\n        }\n    }\n\n    return previousBest;\n}\n\nfunction drawTiles( tiledImage, lastDrawn ) {\n    if (lastDrawn.length === 0) {\n        return;\n    }\n    var tile = lastDrawn[0];\n\n    var useSketch = tiledImage.opacity < 1 ||\n        (tiledImage.compositeOperation &&\n            tiledImage.compositeOperation !== 'source-over') ||\n        (!tiledImage._isBottomItem() && tile._hasTransparencyChannel());\n\n    var sketchScale;\n    var sketchTranslate;\n\n    var zoom = tiledImage.viewport.getZoom(true);\n    var imageZoom = tiledImage.viewportToImageZoom(zoom);\n    if (imageZoom > tiledImage.smoothTileEdgesMinZoom && !tiledImage.iOSDevice) {\n        // When zoomed in a lot (>100%) the tile edges are visible.\n        // So we have to composite them at ~100% and scale them up together.\n        // Note: Disabled on iOS devices per default as it causes a native crash\n        useSketch = true;\n        sketchScale = tile.getScaleForEdgeSmoothing();\n        sketchTranslate = tile.getTranslationForEdgeSmoothing(sketchScale,\n            tiledImage._drawer.getCanvasSize(false),\n            tiledImage._drawer.getCanvasSize(true));\n    }\n\n    var bounds;\n    if (useSketch) {\n        if (!sketchScale) {\n            // Except when edge smoothing, we only clean the part of the\n            // sketch canvas we are going to use for performance reasons.\n            bounds = tiledImage.viewport.viewportToViewerElementRectangle(\n                tiledImage.getClippedBounds(true))\n                .getIntegerBoundingBox()\n                .times($.pixelDensityRatio);\n        }\n        tiledImage._drawer._clear(true, bounds);\n    }\n\n    // When scaling, we must rotate only when blending the sketch canvas to avoid\n    // interpolation\n    if (tiledImage.viewport.degrees !== 0 && !sketchScale) {\n        tiledImage._drawer._offsetForRotation(tiledImage.viewport.degrees, useSketch);\n    }\n\n    var usedClip = false;\n    if ( tiledImage._clip ) {\n        tiledImage._drawer.saveContext(useSketch);\n\n        var box = tiledImage.imageToViewportRectangle(tiledImage._clip, true);\n        var clipRect = tiledImage._drawer.viewportToDrawerRectangle(box);\n        if (sketchScale) {\n            clipRect = clipRect.times(sketchScale);\n        }\n        if (sketchTranslate) {\n            clipRect = clipRect.translate(sketchTranslate);\n        }\n        tiledImage._drawer.setClip(clipRect, useSketch);\n\n        usedClip = true;\n    }\n\n    if ( tiledImage.placeholderFillStyle && tiledImage._hasOpaqueTile === false ) {\n        var placeholderRect = tiledImage._drawer.viewportToDrawerRectangle(tiledImage.getBounds(true));\n        if (sketchScale) {\n            placeholderRect = placeholderRect.times(sketchScale);\n        }\n        if (sketchTranslate) {\n            placeholderRect = placeholderRect.translate(sketchTranslate);\n        }\n\n        var fillStyle = null;\n        if ( typeof tiledImage.placeholderFillStyle === \"function\" ) {\n            fillStyle = tiledImage.placeholderFillStyle(tiledImage, tiledImage._drawer.context);\n        }\n        else {\n            fillStyle = tiledImage.placeholderFillStyle;\n        }\n\n        tiledImage._drawer.drawRectangle(placeholderRect, fillStyle, useSketch);\n    }\n\n    for (var i = lastDrawn.length - 1; i >= 0; i--) {\n        tile = lastDrawn[ i ];\n        tiledImage._drawer.drawTile( tile, tiledImage._drawingHandler, useSketch, sketchScale, sketchTranslate );\n        tile.beingDrawn = true;\n\n        if( tiledImage.viewer ){\n            /**\n             * <em>- Needs documentation -</em>\n             *\n             * @event tile-drawn\n             * @memberof OpenSeadragon.Viewer\n             * @type {object}\n             * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n             * @property {OpenSeadragon.TiledImage} tiledImage - Which TiledImage is being drawn.\n             * @property {OpenSeadragon.Tile} tile\n             * @property {?Object} userData - Arbitrary subscriber-defined object.\n             */\n            tiledImage.viewer.raiseEvent( 'tile-drawn', {\n                tiledImage: tiledImage,\n                tile: tile\n            });\n        }\n    }\n\n    if ( usedClip ) {\n        tiledImage._drawer.restoreContext( useSketch );\n    }\n\n    if (tiledImage.viewport.degrees !== 0 && !sketchScale) {\n        tiledImage._drawer._restoreRotationChanges(useSketch);\n    }\n\n    if (useSketch) {\n        var offsetForRotation = tiledImage.viewport.degrees !== 0 && sketchScale;\n        if (offsetForRotation) {\n            tiledImage._drawer._offsetForRotation(tiledImage.viewport.degrees, false);\n        }\n        tiledImage._drawer.blendSketch({\n            opacity: tiledImage.opacity,\n            scale: sketchScale,\n            translate: sketchTranslate,\n            compositeOperation: tiledImage.compositeOperation,\n            bounds: bounds\n        });\n        if (offsetForRotation) {\n            tiledImage._drawer._restoreRotationChanges(false);\n        }\n    }\n    drawDebugInfo( tiledImage, lastDrawn );\n}\n\nfunction drawDebugInfo( tiledImage, lastDrawn ) {\n    if( tiledImage.debugMode ) {\n        for ( var i = lastDrawn.length - 1; i >= 0; i-- ) {\n            var tile = lastDrawn[ i ];\n            try {\n                tiledImage._drawer.drawDebugInfo( tile, lastDrawn.length, i );\n            } catch(e) {\n                $.console.error(e);\n            }\n        }\n    }\n}\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - TileCache\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n// private class\nvar TileRecord = function( options ) {\n    $.console.assert( options, \"[TileCache.cacheTile] options is required\" );\n    $.console.assert( options.tile, \"[TileCache.cacheTile] options.tile is required\" );\n    $.console.assert( options.tiledImage, \"[TileCache.cacheTile] options.tiledImage is required\" );\n    this.tile = options.tile;\n    this.tiledImage = options.tiledImage;\n};\n\n// private class\nvar ImageRecord = function(options) {\n    $.console.assert( options, \"[ImageRecord] options is required\" );\n    $.console.assert( options.image, \"[ImageRecord] options.image is required\" );\n    this._image = options.image;\n    this._tiles = [];\n};\n\nImageRecord.prototype = {\n    destroy: function() {\n        this._image = null;\n        this._renderedContext = null;\n        this._tiles = null;\n    },\n\n    getImage: function() {\n        return this._image;\n    },\n\n    getRenderedContext: function() {\n        if (!this._renderedContext) {\n            var canvas = document.createElement( 'canvas' );\n            canvas.width = this._image.width;\n            canvas.height = this._image.height;\n            this._renderedContext = canvas.getContext('2d');\n            this._renderedContext.drawImage( this._image, 0, 0 );\n            //since we are caching the prerendered image on a canvas\n            //allow the image to not be held in memory\n            this._image = null;\n        }\n        return this._renderedContext;\n    },\n\n    setRenderedContext: function(renderedContext) {\n        $.console.error(\"ImageRecord.setRenderedContext is deprecated. \" +\n                \"The rendered context should be created by the ImageRecord \" +\n                \"itself when calling ImageRecord.getRenderedContext.\");\n        this._renderedContext = renderedContext;\n    },\n\n    addTile: function(tile) {\n        $.console.assert(tile, '[ImageRecord.addTile] tile is required');\n        this._tiles.push(tile);\n    },\n\n    removeTile: function(tile) {\n        for (var i = 0; i < this._tiles.length; i++) {\n            if (this._tiles[i] === tile) {\n                this._tiles.splice(i, 1);\n                return;\n            }\n        }\n\n        $.console.warn('[ImageRecord.removeTile] trying to remove unknown tile', tile);\n    },\n\n    getTileCount: function() {\n        return this._tiles.length;\n    }\n};\n\n/**\n * @class TileCache\n * @memberof OpenSeadragon\n * @classdesc Stores all the tiles displayed in a {@link OpenSeadragon.Viewer}.\n * You generally won't have to interact with the TileCache directly.\n * @param {Object} options - Configuration for this TileCache.\n * @param {Number} [options.maxImageCacheCount] - See maxImageCacheCount in\n * {@link OpenSeadragon.Options} for details.\n */\n$.TileCache = function( options ) {\n    options = options || {};\n\n    this._maxImageCacheCount = options.maxImageCacheCount || $.DEFAULT_SETTINGS.maxImageCacheCount;\n    this._tilesLoaded = [];\n    this._imagesLoaded = [];\n    this._imagesLoadedCount = 0;\n};\n\n/** @lends OpenSeadragon.TileCache.prototype */\n$.TileCache.prototype = {\n    /**\n     * @returns {Number} The total number of tiles that have been loaded by\n     * this TileCache.\n     */\n    numTilesLoaded: function() {\n        return this._tilesLoaded.length;\n    },\n\n    /**\n     * Caches the specified tile, removing an old tile if necessary to stay under the\n     * maxImageCacheCount specified on construction. Note that if multiple tiles reference\n     * the same image, there may be more tiles than maxImageCacheCount; the goal is to keep\n     * the number of images below that number. Note, as well, that even the number of images\n     * may temporarily surpass that number, but should eventually come back down to the max specified.\n     * @param {Object} options - Tile info.\n     * @param {OpenSeadragon.Tile} options.tile - The tile to cache.\n     * @param {Image} options.image - The image of the tile to cache.\n     * @param {OpenSeadragon.TiledImage} options.tiledImage - The TiledImage that owns that tile.\n     * @param {Number} [options.cutoff=0] - If adding this tile goes over the cache max count, this\n     * function will release an old tile. The cutoff option specifies a tile level at or below which\n     * tiles will not be released.\n     */\n    cacheTile: function( options ) {\n        $.console.assert( options, \"[TileCache.cacheTile] options is required\" );\n        $.console.assert( options.tile, \"[TileCache.cacheTile] options.tile is required\" );\n        $.console.assert( options.tile.url, \"[TileCache.cacheTile] options.tile.url is required\" );\n        $.console.assert( options.tiledImage, \"[TileCache.cacheTile] options.tiledImage is required\" );\n\n        var cutoff = options.cutoff || 0;\n        var insertionIndex = this._tilesLoaded.length;\n\n        var imageRecord = this._imagesLoaded[options.tile.url];\n        if (!imageRecord) {\n            $.console.assert( options.image, \"[TileCache.cacheTile] options.image is required to create an ImageRecord\" );\n            imageRecord = this._imagesLoaded[options.tile.url] = new ImageRecord({\n                image: options.image\n            });\n\n            this._imagesLoadedCount++;\n        }\n\n        imageRecord.addTile(options.tile);\n        options.tile.cacheImageRecord = imageRecord;\n\n        // Note that just because we're unloading a tile doesn't necessarily mean\n        // we're unloading an image. With repeated calls it should sort itself out, though.\n        if ( this._imagesLoadedCount > this._maxImageCacheCount ) {\n            var worstTile       = null;\n            var worstTileIndex  = -1;\n            var worstTileRecord = null;\n            var prevTile, worstTime, worstLevel, prevTime, prevLevel, prevTileRecord;\n\n            for ( var i = this._tilesLoaded.length - 1; i >= 0; i-- ) {\n                prevTileRecord = this._tilesLoaded[ i ];\n                prevTile = prevTileRecord.tile;\n\n                if ( prevTile.level <= cutoff || prevTile.beingDrawn ) {\n                    continue;\n                } else if ( !worstTile ) {\n                    worstTile       = prevTile;\n                    worstTileIndex  = i;\n                    worstTileRecord = prevTileRecord;\n                    continue;\n                }\n\n                prevTime    = prevTile.lastTouchTime;\n                worstTime   = worstTile.lastTouchTime;\n                prevLevel   = prevTile.level;\n                worstLevel  = worstTile.level;\n\n                if ( prevTime < worstTime ||\n                   ( prevTime == worstTime && prevLevel > worstLevel ) ) {\n                    worstTile       = prevTile;\n                    worstTileIndex  = i;\n                    worstTileRecord = prevTileRecord;\n                }\n            }\n\n            if ( worstTile && worstTileIndex >= 0 ) {\n                this._unloadTile(worstTileRecord);\n                insertionIndex = worstTileIndex;\n            }\n        }\n\n        this._tilesLoaded[ insertionIndex ] = new TileRecord({\n            tile: options.tile,\n            tiledImage: options.tiledImage\n        });\n    },\n\n    /**\n     * Clears all tiles associated with the specified tiledImage.\n     * @param {OpenSeadragon.TiledImage} tiledImage\n     */\n    clearTilesFor: function( tiledImage ) {\n        $.console.assert(tiledImage, '[TileCache.clearTilesFor] tiledImage is required');\n        var tileRecord;\n        for ( var i = 0; i < this._tilesLoaded.length; ++i ) {\n            tileRecord = this._tilesLoaded[ i ];\n            if ( tileRecord.tiledImage === tiledImage ) {\n                this._unloadTile(tileRecord);\n                this._tilesLoaded.splice( i, 1 );\n                i--;\n            }\n        }\n    },\n\n    // private\n    getImageRecord: function(url) {\n        $.console.assert(url, '[TileCache.getImageRecord] url is required');\n        return this._imagesLoaded[url];\n    },\n\n    // private\n    _unloadTile: function(tileRecord) {\n        $.console.assert(tileRecord, '[TileCache._unloadTile] tileRecord is required');\n        var tile = tileRecord.tile;\n        var tiledImage = tileRecord.tiledImage;\n\n        tile.unload();\n        tile.cacheImageRecord = null;\n\n        var imageRecord = this._imagesLoaded[tile.url];\n        imageRecord.removeTile(tile);\n        if (!imageRecord.getTileCount()) {\n            imageRecord.destroy();\n            delete this._imagesLoaded[tile.url];\n            this._imagesLoadedCount--;\n        }\n\n        /**\n         * Triggered when a tile has just been unloaded from memory.\n         *\n         * @event tile-unloaded\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {OpenSeadragon.TiledImage} tiledImage - The tiled image of the unloaded tile.\n         * @property {OpenSeadragon.Tile} tile - The tile which has been unloaded.\n         */\n        tiledImage.viewer.raiseEvent(\"tile-unloaded\", {\n            tile: tile,\n            tiledImage: tiledImage\n        });\n    }\n};\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - World\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n/**\n * @class World\n * @memberof OpenSeadragon\n * @extends OpenSeadragon.EventSource\n * @classdesc Keeps track of all of the tiled images in the scene.\n * @param {Object} options - World options.\n * @param {OpenSeadragon.Viewer} options.viewer - The Viewer that owns this World.\n **/\n$.World = function( options ) {\n    var _this = this;\n\n    $.console.assert( options.viewer, \"[World] options.viewer is required\" );\n\n    $.EventSource.call( this );\n\n    this.viewer = options.viewer;\n    this._items = [];\n    this._needsDraw = false;\n    this._autoRefigureSizes = true;\n    this._needsSizesFigured = false;\n    this._delegatedFigureSizes = function(event) {\n        if (_this._autoRefigureSizes) {\n            _this._figureSizes();\n        } else {\n            _this._needsSizesFigured = true;\n        }\n    };\n\n    this._figureSizes();\n};\n\n$.extend( $.World.prototype, $.EventSource.prototype, /** @lends OpenSeadragon.World.prototype */{\n    /**\n     * Add the specified item.\n     * @param {OpenSeadragon.TiledImage} item - The item to add.\n     * @param {Number} [options.index] - Index for the item. If not specified, goes at the top.\n     * @fires OpenSeadragon.World.event:add-item\n     * @fires OpenSeadragon.World.event:metrics-change\n     */\n    addItem: function( item, options ) {\n        $.console.assert(item, \"[World.addItem] item is required\");\n        $.console.assert(item instanceof $.TiledImage, \"[World.addItem] only TiledImages supported at this time\");\n\n        options = options || {};\n        if (options.index !== undefined) {\n            var index = Math.max(0, Math.min(this._items.length, options.index));\n            this._items.splice(index, 0, item);\n        } else {\n            this._items.push( item );\n        }\n\n        if (this._autoRefigureSizes) {\n            this._figureSizes();\n        } else {\n            this._needsSizesFigured = true;\n        }\n\n        this._needsDraw = true;\n\n        item.addHandler('bounds-change', this._delegatedFigureSizes);\n\n        /**\n         * Raised when an item is added to the World.\n         * @event add-item\n         * @memberOf OpenSeadragon.World\n         * @type {object}\n         * @property {OpenSeadragon.Viewer} eventSource - A reference to the World which raised the event.\n         * @property {OpenSeadragon.TiledImage} item - The item that has been added.\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        this.raiseEvent( 'add-item', {\n            item: item\n        } );\n    },\n\n    /**\n     * Get the item at the specified index.\n     * @param {Number} index - The item's index.\n     * @returns {OpenSeadragon.TiledImage} The item at the specified index.\n     */\n    getItemAt: function( index ) {\n        $.console.assert(index !== undefined, \"[World.getItemAt] index is required\");\n        return this._items[ index ];\n    },\n\n    /**\n     * Get the index of the given item or -1 if not present.\n     * @param {OpenSeadragon.TiledImage} item - The item.\n     * @returns {Number} The index of the item or -1 if not present.\n     */\n    getIndexOfItem: function( item ) {\n        $.console.assert(item, \"[World.getIndexOfItem] item is required\");\n        return $.indexOf( this._items, item );\n    },\n\n    /**\n     * @returns {Number} The number of items used.\n     */\n    getItemCount: function() {\n        return this._items.length;\n    },\n\n    /**\n     * Change the index of a item so that it appears over or under others.\n     * @param {OpenSeadragon.TiledImage} item - The item to move.\n     * @param {Number} index - The new index.\n     * @fires OpenSeadragon.World.event:item-index-change\n     */\n    setItemIndex: function( item, index ) {\n        $.console.assert(item, \"[World.setItemIndex] item is required\");\n        $.console.assert(index !== undefined, \"[World.setItemIndex] index is required\");\n\n        var oldIndex = this.getIndexOfItem( item );\n\n        if ( index >= this._items.length ) {\n            throw new Error( \"Index bigger than number of layers.\" );\n        }\n\n        if ( index === oldIndex || oldIndex === -1 ) {\n            return;\n        }\n\n        this._items.splice( oldIndex, 1 );\n        this._items.splice( index, 0, item );\n        this._needsDraw = true;\n\n        /**\n         * Raised when the order of the indexes has been changed.\n         * @event item-index-change\n         * @memberOf OpenSeadragon.World\n         * @type {object}\n         * @property {OpenSeadragon.World} eventSource - A reference to the World which raised the event.\n         * @property {OpenSeadragon.TiledImage} item - The item whose index has\n         * been changed\n         * @property {Number} previousIndex - The previous index of the item\n         * @property {Number} newIndex - The new index of the item\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        this.raiseEvent( 'item-index-change', {\n            item: item,\n            previousIndex: oldIndex,\n            newIndex: index\n        } );\n    },\n\n    /**\n     * Remove an item.\n     * @param {OpenSeadragon.TiledImage} item - The item to remove.\n     * @fires OpenSeadragon.World.event:remove-item\n     * @fires OpenSeadragon.World.event:metrics-change\n     */\n    removeItem: function( item ) {\n        $.console.assert(item, \"[World.removeItem] item is required\");\n\n        var index = $.indexOf(this._items, item );\n        if ( index === -1 ) {\n            return;\n        }\n\n        item.removeHandler('bounds-change', this._delegatedFigureSizes);\n        item.destroy();\n        this._items.splice( index, 1 );\n        this._figureSizes();\n        this._needsDraw = true;\n        this._raiseRemoveItem(item);\n    },\n\n    /**\n     * Remove all items.\n     * @fires OpenSeadragon.World.event:remove-item\n     * @fires OpenSeadragon.World.event:metrics-change\n     */\n    removeAll: function() {\n        // We need to make sure any pending images are canceled so the world items don't get messed up\n        this.viewer._cancelPendingImages();\n        var item;\n        for (var i = 0; i < this._items.length; i++) {\n            item = this._items[i];\n            item.removeHandler('bounds-change', this._delegatedFigureSizes);\n            item.destroy();\n        }\n\n        var removedItems = this._items;\n        this._items = [];\n        this._figureSizes();\n        this._needsDraw = true;\n\n        for (i = 0; i < removedItems.length; i++) {\n            item = removedItems[i];\n            this._raiseRemoveItem(item);\n        }\n    },\n\n    /**\n     * Clears all tiles and triggers updates for all items.\n     */\n    resetItems: function() {\n        for ( var i = 0; i < this._items.length; i++ ) {\n            this._items[i].reset();\n        }\n    },\n\n    /**\n     * Updates (i.e. animates bounds of) all items.\n     */\n    update: function() {\n        var animated = false;\n        for ( var i = 0; i < this._items.length; i++ ) {\n            animated = this._items[i].update() || animated;\n        }\n\n        return animated;\n    },\n\n    /**\n     * Draws all items.\n     */\n    draw: function() {\n        for ( var i = 0; i < this._items.length; i++ ) {\n            this._items[i].draw();\n        }\n\n        this._needsDraw = false;\n    },\n\n    /**\n     * @returns {Boolean} true if any items need updating.\n     */\n    needsDraw: function() {\n        for ( var i = 0; i < this._items.length; i++ ) {\n            if ( this._items[i].needsDraw() ) {\n                return true;\n            }\n        }\n        return this._needsDraw;\n    },\n\n    /**\n     * @returns {OpenSeadragon.Rect} The smallest rectangle that encloses all items, in viewport coordinates.\n     */\n    getHomeBounds: function() {\n        return this._homeBounds.clone();\n    },\n\n    /**\n     * To facilitate zoom constraints, we keep track of the pixel density of the\n     * densest item in the World (i.e. the item whose content size to viewport size\n     * ratio is the highest) and save it as this \"content factor\".\n     * @returns {Number} the number of content units per viewport unit.\n     */\n    getContentFactor: function() {\n        return this._contentFactor;\n    },\n\n    /**\n     * As a performance optimization, setting this flag to false allows the bounds-change event handler\n     * on tiledImages to skip calculations on the world bounds. If a lot of images are going to be positioned in\n     * rapid succession, this is a good idea. When finished, setAutoRefigureSizes should be called with true\n     * or the system may behave oddly.\n     * @param {Boolean} [value] The value to which to set the flag.\n     */\n    setAutoRefigureSizes: function(value) {\n        this._autoRefigureSizes = value;\n        if (value & this._needsSizesFigured) {\n            this._figureSizes();\n            this._needsSizesFigured = false;\n        }\n    },\n\n    /**\n     * Arranges all of the TiledImages with the specified settings.\n     * @param {Object} options - Specifies how to arrange.\n     * @param {Boolean} [options.immediately=false] - Whether to animate to the new arrangement.\n     * @param {String} [options.layout] - See collectionLayout in {@link OpenSeadragon.Options}.\n     * @param {Number} [options.rows] - See collectionRows in {@link OpenSeadragon.Options}.\n     * @param {Number} [options.columns] - See collectionColumns in {@link OpenSeadragon.Options}.\n     * @param {Number} [options.tileSize] - See collectionTileSize in {@link OpenSeadragon.Options}.\n     * @param {Number} [options.tileMargin] - See collectionTileMargin in {@link OpenSeadragon.Options}.\n     * @fires OpenSeadragon.World.event:metrics-change\n     */\n    arrange: function(options) {\n        options = options || {};\n        var immediately = options.immediately || false;\n        var layout = options.layout || $.DEFAULT_SETTINGS.collectionLayout;\n        var rows = options.rows || $.DEFAULT_SETTINGS.collectionRows;\n        var columns = options.columns || $.DEFAULT_SETTINGS.collectionColumns;\n        var tileSize = options.tileSize || $.DEFAULT_SETTINGS.collectionTileSize;\n        var tileMargin = options.tileMargin || $.DEFAULT_SETTINGS.collectionTileMargin;\n        var increment = tileSize + tileMargin;\n        var wrap;\n        if (!options.rows && columns) {\n            wrap = columns;\n        } else {\n            wrap = Math.ceil(this._items.length / rows);\n        }\n        var x = 0;\n        var y = 0;\n        var item, box, width, height, position;\n\n        this.setAutoRefigureSizes(false);\n        for (var i = 0; i < this._items.length; i++) {\n            if (i && (i % wrap) === 0) {\n                if (layout === 'horizontal') {\n                    y += increment;\n                    x = 0;\n                } else {\n                    x += increment;\n                    y = 0;\n                }\n            }\n\n            item = this._items[i];\n            box = item.getBounds();\n            if (box.width > box.height) {\n                width = tileSize;\n            } else {\n                width = tileSize * (box.width / box.height);\n            }\n\n            height = width * (box.height / box.width);\n            position = new $.Point(x + ((tileSize - width) / 2),\n                y + ((tileSize - height) / 2));\n\n            item.setPosition(position, immediately);\n            item.setWidth(width, immediately);\n\n            if (layout === 'horizontal') {\n                x += increment;\n            } else {\n                y += increment;\n            }\n        }\n        this.setAutoRefigureSizes(true);\n    },\n\n    // private\n    _figureSizes: function() {\n        var oldHomeBounds = this._homeBounds ? this._homeBounds.clone() : null;\n        var oldContentSize = this._contentSize ? this._contentSize.clone() : null;\n        var oldContentFactor = this._contentFactor || 0;\n\n        if (!this._items.length) {\n            this._homeBounds = new $.Rect(0, 0, 1, 1);\n            this._contentSize = new $.Point(1, 1);\n            this._contentFactor = 1;\n        } else {\n            var item = this._items[0];\n            var bounds = item.getBounds();\n            this._contentFactor = item.getContentSize().x / bounds.width;\n            var clippedBounds = item.getClippedBounds();\n            var left = clippedBounds.x;\n            var top = clippedBounds.y;\n            var right = clippedBounds.x + clippedBounds.width;\n            var bottom = clippedBounds.y + clippedBounds.height;\n            for (var i = 1; i < this._items.length; i++) {\n                item = this._items[i];\n                bounds = item.getBounds();\n                this._contentFactor = Math.max(this._contentFactor,\n                    item.getContentSize().x / bounds.width);\n                clippedBounds = item.getClippedBounds();\n                left = Math.min(left, clippedBounds.x);\n                top = Math.min(top, clippedBounds.y);\n                right = Math.max(right, clippedBounds.x + clippedBounds.width);\n                bottom = Math.max(bottom, clippedBounds.y + clippedBounds.height);\n            }\n\n            this._homeBounds = new $.Rect(left, top, right - left, bottom - top);\n            this._contentSize = new $.Point(\n                this._homeBounds.width * this._contentFactor,\n                this._homeBounds.height * this._contentFactor);\n        }\n\n        if (this._contentFactor !== oldContentFactor ||\n            !this._homeBounds.equals(oldHomeBounds) ||\n            !this._contentSize.equals(oldContentSize)) {\n            /**\n             * Raised when the home bounds or content factor change.\n             * @event metrics-change\n             * @memberOf OpenSeadragon.World\n             * @type {object}\n             * @property {OpenSeadragon.World} eventSource - A reference to the World which raised the event.\n             * @property {?Object} userData - Arbitrary subscriber-defined object.\n             */\n            this.raiseEvent('metrics-change', {});\n        }\n    },\n\n    // private\n    _raiseRemoveItem: function(item) {\n        /**\n         * Raised when an item is removed.\n         * @event remove-item\n         * @memberOf OpenSeadragon.World\n         * @type {object}\n         * @property {OpenSeadragon.World} eventSource - A reference to the World which raised the event.\n         * @property {OpenSeadragon.TiledImage} item - The item's underlying item.\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        this.raiseEvent( 'remove-item', { item: item } );\n    }\n});\n\n}( OpenSeadragon ));\n\n//# sourceMappingURL=openseadragon.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/openseadragon/build/openseadragon/openseadragon.js\n// module id = 37\n// module chunks = 0"],"sourceRoot":""}